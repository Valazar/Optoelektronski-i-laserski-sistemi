
Display_and_Touch_Screen.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000161a8  080001c8  080001c8  000101c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001fb8  08016370  08016370  00026370  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08018328  08018328  00030444  2**0
                  CONTENTS
  4 .ARM          00000008  08018328  08018328  00028328  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08018330  08018330  00030444  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08018330  08018330  00028330  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08018334  08018334  00028334  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000444  20000000  08018338  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0001b060  20000444  0801877c  00030444  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2001b4a4  0801877c  0003b4a4  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  00030444  2**0
                  CONTENTS, READONLY
 12 .debug_info   000357cb  00000000  00000000  00030472  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00005350  00000000  00000000  00065c3d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00012d72  00000000  00000000  0006af8d  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 000016f0  00000000  00000000  0007dd00  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001570  00000000  00000000  0007f3f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  0002f5bb  00000000  00000000  00080960  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   0001852f  00000000  00000000  000aff1b  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    0010a35a  00000000  00000000  000c844a  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      000000fd  00000000  00000000  001d27a4  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00004090  00000000  00000000  001d28a4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	; (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	; (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000444 	.word	0x20000444
 80001e4:	00000000 	.word	0x00000000
 80001e8:	08016358 	.word	0x08016358

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	; (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	; (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	; (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000448 	.word	0x20000448
 8000204:	08016358 	.word	0x08016358

08000208 <strlen>:
 8000208:	4603      	mov	r3, r0
 800020a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800020e:	2a00      	cmp	r2, #0
 8000210:	d1fb      	bne.n	800020a <strlen+0x2>
 8000212:	1a18      	subs	r0, r3, r0
 8000214:	3801      	subs	r0, #1
 8000216:	4770      	bx	lr

08000218 <__aeabi_drsub>:
 8000218:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 800021c:	e002      	b.n	8000224 <__adddf3>
 800021e:	bf00      	nop

08000220 <__aeabi_dsub>:
 8000220:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000224 <__adddf3>:
 8000224:	b530      	push	{r4, r5, lr}
 8000226:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800022a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800022e:	ea94 0f05 	teq	r4, r5
 8000232:	bf08      	it	eq
 8000234:	ea90 0f02 	teqeq	r0, r2
 8000238:	bf1f      	itttt	ne
 800023a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800023e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000242:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000246:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800024a:	f000 80e2 	beq.w	8000412 <__adddf3+0x1ee>
 800024e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000252:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000256:	bfb8      	it	lt
 8000258:	426d      	neglt	r5, r5
 800025a:	dd0c      	ble.n	8000276 <__adddf3+0x52>
 800025c:	442c      	add	r4, r5
 800025e:	ea80 0202 	eor.w	r2, r0, r2
 8000262:	ea81 0303 	eor.w	r3, r1, r3
 8000266:	ea82 0000 	eor.w	r0, r2, r0
 800026a:	ea83 0101 	eor.w	r1, r3, r1
 800026e:	ea80 0202 	eor.w	r2, r0, r2
 8000272:	ea81 0303 	eor.w	r3, r1, r3
 8000276:	2d36      	cmp	r5, #54	; 0x36
 8000278:	bf88      	it	hi
 800027a:	bd30      	pophi	{r4, r5, pc}
 800027c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000280:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000284:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000288:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800028c:	d002      	beq.n	8000294 <__adddf3+0x70>
 800028e:	4240      	negs	r0, r0
 8000290:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000294:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000298:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800029c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002a0:	d002      	beq.n	80002a8 <__adddf3+0x84>
 80002a2:	4252      	negs	r2, r2
 80002a4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002a8:	ea94 0f05 	teq	r4, r5
 80002ac:	f000 80a7 	beq.w	80003fe <__adddf3+0x1da>
 80002b0:	f1a4 0401 	sub.w	r4, r4, #1
 80002b4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002b8:	db0d      	blt.n	80002d6 <__adddf3+0xb2>
 80002ba:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002be:	fa22 f205 	lsr.w	r2, r2, r5
 80002c2:	1880      	adds	r0, r0, r2
 80002c4:	f141 0100 	adc.w	r1, r1, #0
 80002c8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002cc:	1880      	adds	r0, r0, r2
 80002ce:	fa43 f305 	asr.w	r3, r3, r5
 80002d2:	4159      	adcs	r1, r3
 80002d4:	e00e      	b.n	80002f4 <__adddf3+0xd0>
 80002d6:	f1a5 0520 	sub.w	r5, r5, #32
 80002da:	f10e 0e20 	add.w	lr, lr, #32
 80002de:	2a01      	cmp	r2, #1
 80002e0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002e4:	bf28      	it	cs
 80002e6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002ea:	fa43 f305 	asr.w	r3, r3, r5
 80002ee:	18c0      	adds	r0, r0, r3
 80002f0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002f4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002f8:	d507      	bpl.n	800030a <__adddf3+0xe6>
 80002fa:	f04f 0e00 	mov.w	lr, #0
 80002fe:	f1dc 0c00 	rsbs	ip, ip, #0
 8000302:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000306:	eb6e 0101 	sbc.w	r1, lr, r1
 800030a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800030e:	d31b      	bcc.n	8000348 <__adddf3+0x124>
 8000310:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000314:	d30c      	bcc.n	8000330 <__adddf3+0x10c>
 8000316:	0849      	lsrs	r1, r1, #1
 8000318:	ea5f 0030 	movs.w	r0, r0, rrx
 800031c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000320:	f104 0401 	add.w	r4, r4, #1
 8000324:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000328:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 800032c:	f080 809a 	bcs.w	8000464 <__adddf3+0x240>
 8000330:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000334:	bf08      	it	eq
 8000336:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800033a:	f150 0000 	adcs.w	r0, r0, #0
 800033e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000342:	ea41 0105 	orr.w	r1, r1, r5
 8000346:	bd30      	pop	{r4, r5, pc}
 8000348:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800034c:	4140      	adcs	r0, r0
 800034e:	eb41 0101 	adc.w	r1, r1, r1
 8000352:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000356:	f1a4 0401 	sub.w	r4, r4, #1
 800035a:	d1e9      	bne.n	8000330 <__adddf3+0x10c>
 800035c:	f091 0f00 	teq	r1, #0
 8000360:	bf04      	itt	eq
 8000362:	4601      	moveq	r1, r0
 8000364:	2000      	moveq	r0, #0
 8000366:	fab1 f381 	clz	r3, r1
 800036a:	bf08      	it	eq
 800036c:	3320      	addeq	r3, #32
 800036e:	f1a3 030b 	sub.w	r3, r3, #11
 8000372:	f1b3 0220 	subs.w	r2, r3, #32
 8000376:	da0c      	bge.n	8000392 <__adddf3+0x16e>
 8000378:	320c      	adds	r2, #12
 800037a:	dd08      	ble.n	800038e <__adddf3+0x16a>
 800037c:	f102 0c14 	add.w	ip, r2, #20
 8000380:	f1c2 020c 	rsb	r2, r2, #12
 8000384:	fa01 f00c 	lsl.w	r0, r1, ip
 8000388:	fa21 f102 	lsr.w	r1, r1, r2
 800038c:	e00c      	b.n	80003a8 <__adddf3+0x184>
 800038e:	f102 0214 	add.w	r2, r2, #20
 8000392:	bfd8      	it	le
 8000394:	f1c2 0c20 	rsble	ip, r2, #32
 8000398:	fa01 f102 	lsl.w	r1, r1, r2
 800039c:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003a0:	bfdc      	itt	le
 80003a2:	ea41 010c 	orrle.w	r1, r1, ip
 80003a6:	4090      	lslle	r0, r2
 80003a8:	1ae4      	subs	r4, r4, r3
 80003aa:	bfa2      	ittt	ge
 80003ac:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003b0:	4329      	orrge	r1, r5
 80003b2:	bd30      	popge	{r4, r5, pc}
 80003b4:	ea6f 0404 	mvn.w	r4, r4
 80003b8:	3c1f      	subs	r4, #31
 80003ba:	da1c      	bge.n	80003f6 <__adddf3+0x1d2>
 80003bc:	340c      	adds	r4, #12
 80003be:	dc0e      	bgt.n	80003de <__adddf3+0x1ba>
 80003c0:	f104 0414 	add.w	r4, r4, #20
 80003c4:	f1c4 0220 	rsb	r2, r4, #32
 80003c8:	fa20 f004 	lsr.w	r0, r0, r4
 80003cc:	fa01 f302 	lsl.w	r3, r1, r2
 80003d0:	ea40 0003 	orr.w	r0, r0, r3
 80003d4:	fa21 f304 	lsr.w	r3, r1, r4
 80003d8:	ea45 0103 	orr.w	r1, r5, r3
 80003dc:	bd30      	pop	{r4, r5, pc}
 80003de:	f1c4 040c 	rsb	r4, r4, #12
 80003e2:	f1c4 0220 	rsb	r2, r4, #32
 80003e6:	fa20 f002 	lsr.w	r0, r0, r2
 80003ea:	fa01 f304 	lsl.w	r3, r1, r4
 80003ee:	ea40 0003 	orr.w	r0, r0, r3
 80003f2:	4629      	mov	r1, r5
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	fa21 f004 	lsr.w	r0, r1, r4
 80003fa:	4629      	mov	r1, r5
 80003fc:	bd30      	pop	{r4, r5, pc}
 80003fe:	f094 0f00 	teq	r4, #0
 8000402:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000406:	bf06      	itte	eq
 8000408:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 800040c:	3401      	addeq	r4, #1
 800040e:	3d01      	subne	r5, #1
 8000410:	e74e      	b.n	80002b0 <__adddf3+0x8c>
 8000412:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000416:	bf18      	it	ne
 8000418:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800041c:	d029      	beq.n	8000472 <__adddf3+0x24e>
 800041e:	ea94 0f05 	teq	r4, r5
 8000422:	bf08      	it	eq
 8000424:	ea90 0f02 	teqeq	r0, r2
 8000428:	d005      	beq.n	8000436 <__adddf3+0x212>
 800042a:	ea54 0c00 	orrs.w	ip, r4, r0
 800042e:	bf04      	itt	eq
 8000430:	4619      	moveq	r1, r3
 8000432:	4610      	moveq	r0, r2
 8000434:	bd30      	pop	{r4, r5, pc}
 8000436:	ea91 0f03 	teq	r1, r3
 800043a:	bf1e      	ittt	ne
 800043c:	2100      	movne	r1, #0
 800043e:	2000      	movne	r0, #0
 8000440:	bd30      	popne	{r4, r5, pc}
 8000442:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000446:	d105      	bne.n	8000454 <__adddf3+0x230>
 8000448:	0040      	lsls	r0, r0, #1
 800044a:	4149      	adcs	r1, r1
 800044c:	bf28      	it	cs
 800044e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000452:	bd30      	pop	{r4, r5, pc}
 8000454:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000458:	bf3c      	itt	cc
 800045a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800045e:	bd30      	popcc	{r4, r5, pc}
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000468:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800046c:	f04f 0000 	mov.w	r0, #0
 8000470:	bd30      	pop	{r4, r5, pc}
 8000472:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000476:	bf1a      	itte	ne
 8000478:	4619      	movne	r1, r3
 800047a:	4610      	movne	r0, r2
 800047c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000480:	bf1c      	itt	ne
 8000482:	460b      	movne	r3, r1
 8000484:	4602      	movne	r2, r0
 8000486:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800048a:	bf06      	itte	eq
 800048c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000490:	ea91 0f03 	teqeq	r1, r3
 8000494:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000498:	bd30      	pop	{r4, r5, pc}
 800049a:	bf00      	nop

0800049c <__aeabi_ui2d>:
 800049c:	f090 0f00 	teq	r0, #0
 80004a0:	bf04      	itt	eq
 80004a2:	2100      	moveq	r1, #0
 80004a4:	4770      	bxeq	lr
 80004a6:	b530      	push	{r4, r5, lr}
 80004a8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004ac:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004b0:	f04f 0500 	mov.w	r5, #0
 80004b4:	f04f 0100 	mov.w	r1, #0
 80004b8:	e750      	b.n	800035c <__adddf3+0x138>
 80004ba:	bf00      	nop

080004bc <__aeabi_i2d>:
 80004bc:	f090 0f00 	teq	r0, #0
 80004c0:	bf04      	itt	eq
 80004c2:	2100      	moveq	r1, #0
 80004c4:	4770      	bxeq	lr
 80004c6:	b530      	push	{r4, r5, lr}
 80004c8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004cc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004d0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004d4:	bf48      	it	mi
 80004d6:	4240      	negmi	r0, r0
 80004d8:	f04f 0100 	mov.w	r1, #0
 80004dc:	e73e      	b.n	800035c <__adddf3+0x138>
 80004de:	bf00      	nop

080004e0 <__aeabi_f2d>:
 80004e0:	0042      	lsls	r2, r0, #1
 80004e2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004e6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004ea:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004ee:	bf1f      	itttt	ne
 80004f0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004f4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004f8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004fc:	4770      	bxne	lr
 80004fe:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8000502:	bf08      	it	eq
 8000504:	4770      	bxeq	lr
 8000506:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 800050a:	bf04      	itt	eq
 800050c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000510:	4770      	bxeq	lr
 8000512:	b530      	push	{r4, r5, lr}
 8000514:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000518:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800051c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000520:	e71c      	b.n	800035c <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_ul2d>:
 8000524:	ea50 0201 	orrs.w	r2, r0, r1
 8000528:	bf08      	it	eq
 800052a:	4770      	bxeq	lr
 800052c:	b530      	push	{r4, r5, lr}
 800052e:	f04f 0500 	mov.w	r5, #0
 8000532:	e00a      	b.n	800054a <__aeabi_l2d+0x16>

08000534 <__aeabi_l2d>:
 8000534:	ea50 0201 	orrs.w	r2, r0, r1
 8000538:	bf08      	it	eq
 800053a:	4770      	bxeq	lr
 800053c:	b530      	push	{r4, r5, lr}
 800053e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000542:	d502      	bpl.n	800054a <__aeabi_l2d+0x16>
 8000544:	4240      	negs	r0, r0
 8000546:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800054a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800054e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000552:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000556:	f43f aed8 	beq.w	800030a <__adddf3+0xe6>
 800055a:	f04f 0203 	mov.w	r2, #3
 800055e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000562:	bf18      	it	ne
 8000564:	3203      	addne	r2, #3
 8000566:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800056a:	bf18      	it	ne
 800056c:	3203      	addne	r2, #3
 800056e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000572:	f1c2 0320 	rsb	r3, r2, #32
 8000576:	fa00 fc03 	lsl.w	ip, r0, r3
 800057a:	fa20 f002 	lsr.w	r0, r0, r2
 800057e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000582:	ea40 000e 	orr.w	r0, r0, lr
 8000586:	fa21 f102 	lsr.w	r1, r1, r2
 800058a:	4414      	add	r4, r2
 800058c:	e6bd      	b.n	800030a <__adddf3+0xe6>
 800058e:	bf00      	nop

08000590 <__aeabi_dmul>:
 8000590:	b570      	push	{r4, r5, r6, lr}
 8000592:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000596:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800059a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800059e:	bf1d      	ittte	ne
 80005a0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005a4:	ea94 0f0c 	teqne	r4, ip
 80005a8:	ea95 0f0c 	teqne	r5, ip
 80005ac:	f000 f8de 	bleq	800076c <__aeabi_dmul+0x1dc>
 80005b0:	442c      	add	r4, r5
 80005b2:	ea81 0603 	eor.w	r6, r1, r3
 80005b6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005ba:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005be:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005c2:	bf18      	it	ne
 80005c4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005cc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005d0:	d038      	beq.n	8000644 <__aeabi_dmul+0xb4>
 80005d2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005de:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005e2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005e6:	f04f 0600 	mov.w	r6, #0
 80005ea:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005ee:	f09c 0f00 	teq	ip, #0
 80005f2:	bf18      	it	ne
 80005f4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005f8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005fc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000600:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000604:	d204      	bcs.n	8000610 <__aeabi_dmul+0x80>
 8000606:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800060a:	416d      	adcs	r5, r5
 800060c:	eb46 0606 	adc.w	r6, r6, r6
 8000610:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000614:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000618:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800061c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000620:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000624:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000628:	bf88      	it	hi
 800062a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800062e:	d81e      	bhi.n	800066e <__aeabi_dmul+0xde>
 8000630:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000634:	bf08      	it	eq
 8000636:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800063a:	f150 0000 	adcs.w	r0, r0, #0
 800063e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000642:	bd70      	pop	{r4, r5, r6, pc}
 8000644:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000648:	ea46 0101 	orr.w	r1, r6, r1
 800064c:	ea40 0002 	orr.w	r0, r0, r2
 8000650:	ea81 0103 	eor.w	r1, r1, r3
 8000654:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000658:	bfc2      	ittt	gt
 800065a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800065e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000662:	bd70      	popgt	{r4, r5, r6, pc}
 8000664:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000668:	f04f 0e00 	mov.w	lr, #0
 800066c:	3c01      	subs	r4, #1
 800066e:	f300 80ab 	bgt.w	80007c8 <__aeabi_dmul+0x238>
 8000672:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000676:	bfde      	ittt	le
 8000678:	2000      	movle	r0, #0
 800067a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800067e:	bd70      	pople	{r4, r5, r6, pc}
 8000680:	f1c4 0400 	rsb	r4, r4, #0
 8000684:	3c20      	subs	r4, #32
 8000686:	da35      	bge.n	80006f4 <__aeabi_dmul+0x164>
 8000688:	340c      	adds	r4, #12
 800068a:	dc1b      	bgt.n	80006c4 <__aeabi_dmul+0x134>
 800068c:	f104 0414 	add.w	r4, r4, #20
 8000690:	f1c4 0520 	rsb	r5, r4, #32
 8000694:	fa00 f305 	lsl.w	r3, r0, r5
 8000698:	fa20 f004 	lsr.w	r0, r0, r4
 800069c:	fa01 f205 	lsl.w	r2, r1, r5
 80006a0:	ea40 0002 	orr.w	r0, r0, r2
 80006a4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006ac:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006b0:	fa21 f604 	lsr.w	r6, r1, r4
 80006b4:	eb42 0106 	adc.w	r1, r2, r6
 80006b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006bc:	bf08      	it	eq
 80006be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006c2:	bd70      	pop	{r4, r5, r6, pc}
 80006c4:	f1c4 040c 	rsb	r4, r4, #12
 80006c8:	f1c4 0520 	rsb	r5, r4, #32
 80006cc:	fa00 f304 	lsl.w	r3, r0, r4
 80006d0:	fa20 f005 	lsr.w	r0, r0, r5
 80006d4:	fa01 f204 	lsl.w	r2, r1, r4
 80006d8:	ea40 0002 	orr.w	r0, r0, r2
 80006dc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006e0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006e4:	f141 0100 	adc.w	r1, r1, #0
 80006e8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ec:	bf08      	it	eq
 80006ee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006f2:	bd70      	pop	{r4, r5, r6, pc}
 80006f4:	f1c4 0520 	rsb	r5, r4, #32
 80006f8:	fa00 f205 	lsl.w	r2, r0, r5
 80006fc:	ea4e 0e02 	orr.w	lr, lr, r2
 8000700:	fa20 f304 	lsr.w	r3, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea43 0302 	orr.w	r3, r3, r2
 800070c:	fa21 f004 	lsr.w	r0, r1, r4
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000714:	fa21 f204 	lsr.w	r2, r1, r4
 8000718:	ea20 0002 	bic.w	r0, r0, r2
 800071c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f094 0f00 	teq	r4, #0
 8000730:	d10f      	bne.n	8000752 <__aeabi_dmul+0x1c2>
 8000732:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000736:	0040      	lsls	r0, r0, #1
 8000738:	eb41 0101 	adc.w	r1, r1, r1
 800073c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000740:	bf08      	it	eq
 8000742:	3c01      	subeq	r4, #1
 8000744:	d0f7      	beq.n	8000736 <__aeabi_dmul+0x1a6>
 8000746:	ea41 0106 	orr.w	r1, r1, r6
 800074a:	f095 0f00 	teq	r5, #0
 800074e:	bf18      	it	ne
 8000750:	4770      	bxne	lr
 8000752:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000756:	0052      	lsls	r2, r2, #1
 8000758:	eb43 0303 	adc.w	r3, r3, r3
 800075c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000760:	bf08      	it	eq
 8000762:	3d01      	subeq	r5, #1
 8000764:	d0f7      	beq.n	8000756 <__aeabi_dmul+0x1c6>
 8000766:	ea43 0306 	orr.w	r3, r3, r6
 800076a:	4770      	bx	lr
 800076c:	ea94 0f0c 	teq	r4, ip
 8000770:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000774:	bf18      	it	ne
 8000776:	ea95 0f0c 	teqne	r5, ip
 800077a:	d00c      	beq.n	8000796 <__aeabi_dmul+0x206>
 800077c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000780:	bf18      	it	ne
 8000782:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000786:	d1d1      	bne.n	800072c <__aeabi_dmul+0x19c>
 8000788:	ea81 0103 	eor.w	r1, r1, r3
 800078c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000790:	f04f 0000 	mov.w	r0, #0
 8000794:	bd70      	pop	{r4, r5, r6, pc}
 8000796:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800079a:	bf06      	itte	eq
 800079c:	4610      	moveq	r0, r2
 800079e:	4619      	moveq	r1, r3
 80007a0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007a4:	d019      	beq.n	80007da <__aeabi_dmul+0x24a>
 80007a6:	ea94 0f0c 	teq	r4, ip
 80007aa:	d102      	bne.n	80007b2 <__aeabi_dmul+0x222>
 80007ac:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007b0:	d113      	bne.n	80007da <__aeabi_dmul+0x24a>
 80007b2:	ea95 0f0c 	teq	r5, ip
 80007b6:	d105      	bne.n	80007c4 <__aeabi_dmul+0x234>
 80007b8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007bc:	bf1c      	itt	ne
 80007be:	4610      	movne	r0, r2
 80007c0:	4619      	movne	r1, r3
 80007c2:	d10a      	bne.n	80007da <__aeabi_dmul+0x24a>
 80007c4:	ea81 0103 	eor.w	r1, r1, r3
 80007c8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007cc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007d4:	f04f 0000 	mov.w	r0, #0
 80007d8:	bd70      	pop	{r4, r5, r6, pc}
 80007da:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007de:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007e2:	bd70      	pop	{r4, r5, r6, pc}

080007e4 <__aeabi_ddiv>:
 80007e4:	b570      	push	{r4, r5, r6, lr}
 80007e6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007ea:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007ee:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007f2:	bf1d      	ittte	ne
 80007f4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007f8:	ea94 0f0c 	teqne	r4, ip
 80007fc:	ea95 0f0c 	teqne	r5, ip
 8000800:	f000 f8a7 	bleq	8000952 <__aeabi_ddiv+0x16e>
 8000804:	eba4 0405 	sub.w	r4, r4, r5
 8000808:	ea81 0e03 	eor.w	lr, r1, r3
 800080c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000810:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000814:	f000 8088 	beq.w	8000928 <__aeabi_ddiv+0x144>
 8000818:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800081c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000820:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000824:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000828:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800082c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000830:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000834:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000838:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 800083c:	429d      	cmp	r5, r3
 800083e:	bf08      	it	eq
 8000840:	4296      	cmpeq	r6, r2
 8000842:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000846:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800084a:	d202      	bcs.n	8000852 <__aeabi_ddiv+0x6e>
 800084c:	085b      	lsrs	r3, r3, #1
 800084e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000852:	1ab6      	subs	r6, r6, r2
 8000854:	eb65 0503 	sbc.w	r5, r5, r3
 8000858:	085b      	lsrs	r3, r3, #1
 800085a:	ea4f 0232 	mov.w	r2, r2, rrx
 800085e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000862:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000866:	ebb6 0e02 	subs.w	lr, r6, r2
 800086a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800086e:	bf22      	ittt	cs
 8000870:	1ab6      	subcs	r6, r6, r2
 8000872:	4675      	movcs	r5, lr
 8000874:	ea40 000c 	orrcs.w	r0, r0, ip
 8000878:	085b      	lsrs	r3, r3, #1
 800087a:	ea4f 0232 	mov.w	r2, r2, rrx
 800087e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000882:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000886:	bf22      	ittt	cs
 8000888:	1ab6      	subcs	r6, r6, r2
 800088a:	4675      	movcs	r5, lr
 800088c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000890:	085b      	lsrs	r3, r3, #1
 8000892:	ea4f 0232 	mov.w	r2, r2, rrx
 8000896:	ebb6 0e02 	subs.w	lr, r6, r2
 800089a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800089e:	bf22      	ittt	cs
 80008a0:	1ab6      	subcs	r6, r6, r2
 80008a2:	4675      	movcs	r5, lr
 80008a4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008a8:	085b      	lsrs	r3, r3, #1
 80008aa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80008b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008b6:	bf22      	ittt	cs
 80008b8:	1ab6      	subcs	r6, r6, r2
 80008ba:	4675      	movcs	r5, lr
 80008bc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008c0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008c4:	d018      	beq.n	80008f8 <__aeabi_ddiv+0x114>
 80008c6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008ca:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008ce:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008d2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008d6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008da:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008de:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008e2:	d1c0      	bne.n	8000866 <__aeabi_ddiv+0x82>
 80008e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008e8:	d10b      	bne.n	8000902 <__aeabi_ddiv+0x11e>
 80008ea:	ea41 0100 	orr.w	r1, r1, r0
 80008ee:	f04f 0000 	mov.w	r0, #0
 80008f2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008f6:	e7b6      	b.n	8000866 <__aeabi_ddiv+0x82>
 80008f8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008fc:	bf04      	itt	eq
 80008fe:	4301      	orreq	r1, r0
 8000900:	2000      	moveq	r0, #0
 8000902:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000906:	bf88      	it	hi
 8000908:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800090c:	f63f aeaf 	bhi.w	800066e <__aeabi_dmul+0xde>
 8000910:	ebb5 0c03 	subs.w	ip, r5, r3
 8000914:	bf04      	itt	eq
 8000916:	ebb6 0c02 	subseq.w	ip, r6, r2
 800091a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800091e:	f150 0000 	adcs.w	r0, r0, #0
 8000922:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000926:	bd70      	pop	{r4, r5, r6, pc}
 8000928:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800092c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000930:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000934:	bfc2      	ittt	gt
 8000936:	ebd4 050c 	rsbsgt	r5, r4, ip
 800093a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800093e:	bd70      	popgt	{r4, r5, r6, pc}
 8000940:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000944:	f04f 0e00 	mov.w	lr, #0
 8000948:	3c01      	subs	r4, #1
 800094a:	e690      	b.n	800066e <__aeabi_dmul+0xde>
 800094c:	ea45 0e06 	orr.w	lr, r5, r6
 8000950:	e68d      	b.n	800066e <__aeabi_dmul+0xde>
 8000952:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000956:	ea94 0f0c 	teq	r4, ip
 800095a:	bf08      	it	eq
 800095c:	ea95 0f0c 	teqeq	r5, ip
 8000960:	f43f af3b 	beq.w	80007da <__aeabi_dmul+0x24a>
 8000964:	ea94 0f0c 	teq	r4, ip
 8000968:	d10a      	bne.n	8000980 <__aeabi_ddiv+0x19c>
 800096a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800096e:	f47f af34 	bne.w	80007da <__aeabi_dmul+0x24a>
 8000972:	ea95 0f0c 	teq	r5, ip
 8000976:	f47f af25 	bne.w	80007c4 <__aeabi_dmul+0x234>
 800097a:	4610      	mov	r0, r2
 800097c:	4619      	mov	r1, r3
 800097e:	e72c      	b.n	80007da <__aeabi_dmul+0x24a>
 8000980:	ea95 0f0c 	teq	r5, ip
 8000984:	d106      	bne.n	8000994 <__aeabi_ddiv+0x1b0>
 8000986:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800098a:	f43f aefd 	beq.w	8000788 <__aeabi_dmul+0x1f8>
 800098e:	4610      	mov	r0, r2
 8000990:	4619      	mov	r1, r3
 8000992:	e722      	b.n	80007da <__aeabi_dmul+0x24a>
 8000994:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000998:	bf18      	it	ne
 800099a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800099e:	f47f aec5 	bne.w	800072c <__aeabi_dmul+0x19c>
 80009a2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009a6:	f47f af0d 	bne.w	80007c4 <__aeabi_dmul+0x234>
 80009aa:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009ae:	f47f aeeb 	bne.w	8000788 <__aeabi_dmul+0x1f8>
 80009b2:	e712      	b.n	80007da <__aeabi_dmul+0x24a>

080009b4 <__aeabi_d2iz>:
 80009b4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80009b8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 80009bc:	d215      	bcs.n	80009ea <__aeabi_d2iz+0x36>
 80009be:	d511      	bpl.n	80009e4 <__aeabi_d2iz+0x30>
 80009c0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 80009c4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 80009c8:	d912      	bls.n	80009f0 <__aeabi_d2iz+0x3c>
 80009ca:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80009ce:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80009d2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 80009d6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80009da:	fa23 f002 	lsr.w	r0, r3, r2
 80009de:	bf18      	it	ne
 80009e0:	4240      	negne	r0, r0
 80009e2:	4770      	bx	lr
 80009e4:	f04f 0000 	mov.w	r0, #0
 80009e8:	4770      	bx	lr
 80009ea:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 80009ee:	d105      	bne.n	80009fc <__aeabi_d2iz+0x48>
 80009f0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 80009f4:	bf08      	it	eq
 80009f6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 80009fa:	4770      	bx	lr
 80009fc:	f04f 0000 	mov.w	r0, #0
 8000a00:	4770      	bx	lr
 8000a02:	bf00      	nop

08000a04 <__aeabi_d2f>:
 8000a04:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a08:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000a0c:	bf24      	itt	cs
 8000a0e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000a12:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000a16:	d90d      	bls.n	8000a34 <__aeabi_d2f+0x30>
 8000a18:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000a1c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000a20:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000a24:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000a28:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000a2c:	bf08      	it	eq
 8000a2e:	f020 0001 	biceq.w	r0, r0, #1
 8000a32:	4770      	bx	lr
 8000a34:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000a38:	d121      	bne.n	8000a7e <__aeabi_d2f+0x7a>
 8000a3a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000a3e:	bfbc      	itt	lt
 8000a40:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000a44:	4770      	bxlt	lr
 8000a46:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a4a:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000a4e:	f1c2 0218 	rsb	r2, r2, #24
 8000a52:	f1c2 0c20 	rsb	ip, r2, #32
 8000a56:	fa10 f30c 	lsls.w	r3, r0, ip
 8000a5a:	fa20 f002 	lsr.w	r0, r0, r2
 8000a5e:	bf18      	it	ne
 8000a60:	f040 0001 	orrne.w	r0, r0, #1
 8000a64:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a68:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000a6c:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000a70:	ea40 000c 	orr.w	r0, r0, ip
 8000a74:	fa23 f302 	lsr.w	r3, r3, r2
 8000a78:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000a7c:	e7cc      	b.n	8000a18 <__aeabi_d2f+0x14>
 8000a7e:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000a82:	d107      	bne.n	8000a94 <__aeabi_d2f+0x90>
 8000a84:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000a88:	bf1e      	ittt	ne
 8000a8a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000a8e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000a92:	4770      	bxne	lr
 8000a94:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000a98:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000a9c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000aa0:	4770      	bx	lr
 8000aa2:	bf00      	nop

08000aa4 <__aeabi_uldivmod>:
 8000aa4:	b953      	cbnz	r3, 8000abc <__aeabi_uldivmod+0x18>
 8000aa6:	b94a      	cbnz	r2, 8000abc <__aeabi_uldivmod+0x18>
 8000aa8:	2900      	cmp	r1, #0
 8000aaa:	bf08      	it	eq
 8000aac:	2800      	cmpeq	r0, #0
 8000aae:	bf1c      	itt	ne
 8000ab0:	f04f 31ff 	movne.w	r1, #4294967295
 8000ab4:	f04f 30ff 	movne.w	r0, #4294967295
 8000ab8:	f000 b972 	b.w	8000da0 <__aeabi_idiv0>
 8000abc:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ac0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ac4:	f000 f806 	bl	8000ad4 <__udivmoddi4>
 8000ac8:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000acc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000ad0:	b004      	add	sp, #16
 8000ad2:	4770      	bx	lr

08000ad4 <__udivmoddi4>:
 8000ad4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ad8:	9e08      	ldr	r6, [sp, #32]
 8000ada:	4604      	mov	r4, r0
 8000adc:	4688      	mov	r8, r1
 8000ade:	2b00      	cmp	r3, #0
 8000ae0:	d14b      	bne.n	8000b7a <__udivmoddi4+0xa6>
 8000ae2:	428a      	cmp	r2, r1
 8000ae4:	4615      	mov	r5, r2
 8000ae6:	d967      	bls.n	8000bb8 <__udivmoddi4+0xe4>
 8000ae8:	fab2 f282 	clz	r2, r2
 8000aec:	b14a      	cbz	r2, 8000b02 <__udivmoddi4+0x2e>
 8000aee:	f1c2 0720 	rsb	r7, r2, #32
 8000af2:	fa01 f302 	lsl.w	r3, r1, r2
 8000af6:	fa20 f707 	lsr.w	r7, r0, r7
 8000afa:	4095      	lsls	r5, r2
 8000afc:	ea47 0803 	orr.w	r8, r7, r3
 8000b00:	4094      	lsls	r4, r2
 8000b02:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000b06:	0c23      	lsrs	r3, r4, #16
 8000b08:	fbb8 f7fe 	udiv	r7, r8, lr
 8000b0c:	fa1f fc85 	uxth.w	ip, r5
 8000b10:	fb0e 8817 	mls	r8, lr, r7, r8
 8000b14:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000b18:	fb07 f10c 	mul.w	r1, r7, ip
 8000b1c:	4299      	cmp	r1, r3
 8000b1e:	d909      	bls.n	8000b34 <__udivmoddi4+0x60>
 8000b20:	18eb      	adds	r3, r5, r3
 8000b22:	f107 30ff 	add.w	r0, r7, #4294967295
 8000b26:	f080 811b 	bcs.w	8000d60 <__udivmoddi4+0x28c>
 8000b2a:	4299      	cmp	r1, r3
 8000b2c:	f240 8118 	bls.w	8000d60 <__udivmoddi4+0x28c>
 8000b30:	3f02      	subs	r7, #2
 8000b32:	442b      	add	r3, r5
 8000b34:	1a5b      	subs	r3, r3, r1
 8000b36:	b2a4      	uxth	r4, r4
 8000b38:	fbb3 f0fe 	udiv	r0, r3, lr
 8000b3c:	fb0e 3310 	mls	r3, lr, r0, r3
 8000b40:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000b44:	fb00 fc0c 	mul.w	ip, r0, ip
 8000b48:	45a4      	cmp	ip, r4
 8000b4a:	d909      	bls.n	8000b60 <__udivmoddi4+0x8c>
 8000b4c:	192c      	adds	r4, r5, r4
 8000b4e:	f100 33ff 	add.w	r3, r0, #4294967295
 8000b52:	f080 8107 	bcs.w	8000d64 <__udivmoddi4+0x290>
 8000b56:	45a4      	cmp	ip, r4
 8000b58:	f240 8104 	bls.w	8000d64 <__udivmoddi4+0x290>
 8000b5c:	3802      	subs	r0, #2
 8000b5e:	442c      	add	r4, r5
 8000b60:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000b64:	eba4 040c 	sub.w	r4, r4, ip
 8000b68:	2700      	movs	r7, #0
 8000b6a:	b11e      	cbz	r6, 8000b74 <__udivmoddi4+0xa0>
 8000b6c:	40d4      	lsrs	r4, r2
 8000b6e:	2300      	movs	r3, #0
 8000b70:	e9c6 4300 	strd	r4, r3, [r6]
 8000b74:	4639      	mov	r1, r7
 8000b76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b7a:	428b      	cmp	r3, r1
 8000b7c:	d909      	bls.n	8000b92 <__udivmoddi4+0xbe>
 8000b7e:	2e00      	cmp	r6, #0
 8000b80:	f000 80eb 	beq.w	8000d5a <__udivmoddi4+0x286>
 8000b84:	2700      	movs	r7, #0
 8000b86:	e9c6 0100 	strd	r0, r1, [r6]
 8000b8a:	4638      	mov	r0, r7
 8000b8c:	4639      	mov	r1, r7
 8000b8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b92:	fab3 f783 	clz	r7, r3
 8000b96:	2f00      	cmp	r7, #0
 8000b98:	d147      	bne.n	8000c2a <__udivmoddi4+0x156>
 8000b9a:	428b      	cmp	r3, r1
 8000b9c:	d302      	bcc.n	8000ba4 <__udivmoddi4+0xd0>
 8000b9e:	4282      	cmp	r2, r0
 8000ba0:	f200 80fa 	bhi.w	8000d98 <__udivmoddi4+0x2c4>
 8000ba4:	1a84      	subs	r4, r0, r2
 8000ba6:	eb61 0303 	sbc.w	r3, r1, r3
 8000baa:	2001      	movs	r0, #1
 8000bac:	4698      	mov	r8, r3
 8000bae:	2e00      	cmp	r6, #0
 8000bb0:	d0e0      	beq.n	8000b74 <__udivmoddi4+0xa0>
 8000bb2:	e9c6 4800 	strd	r4, r8, [r6]
 8000bb6:	e7dd      	b.n	8000b74 <__udivmoddi4+0xa0>
 8000bb8:	b902      	cbnz	r2, 8000bbc <__udivmoddi4+0xe8>
 8000bba:	deff      	udf	#255	; 0xff
 8000bbc:	fab2 f282 	clz	r2, r2
 8000bc0:	2a00      	cmp	r2, #0
 8000bc2:	f040 808f 	bne.w	8000ce4 <__udivmoddi4+0x210>
 8000bc6:	1b49      	subs	r1, r1, r5
 8000bc8:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000bcc:	fa1f f885 	uxth.w	r8, r5
 8000bd0:	2701      	movs	r7, #1
 8000bd2:	fbb1 fcfe 	udiv	ip, r1, lr
 8000bd6:	0c23      	lsrs	r3, r4, #16
 8000bd8:	fb0e 111c 	mls	r1, lr, ip, r1
 8000bdc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000be0:	fb08 f10c 	mul.w	r1, r8, ip
 8000be4:	4299      	cmp	r1, r3
 8000be6:	d907      	bls.n	8000bf8 <__udivmoddi4+0x124>
 8000be8:	18eb      	adds	r3, r5, r3
 8000bea:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000bee:	d202      	bcs.n	8000bf6 <__udivmoddi4+0x122>
 8000bf0:	4299      	cmp	r1, r3
 8000bf2:	f200 80cd 	bhi.w	8000d90 <__udivmoddi4+0x2bc>
 8000bf6:	4684      	mov	ip, r0
 8000bf8:	1a59      	subs	r1, r3, r1
 8000bfa:	b2a3      	uxth	r3, r4
 8000bfc:	fbb1 f0fe 	udiv	r0, r1, lr
 8000c00:	fb0e 1410 	mls	r4, lr, r0, r1
 8000c04:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000c08:	fb08 f800 	mul.w	r8, r8, r0
 8000c0c:	45a0      	cmp	r8, r4
 8000c0e:	d907      	bls.n	8000c20 <__udivmoddi4+0x14c>
 8000c10:	192c      	adds	r4, r5, r4
 8000c12:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c16:	d202      	bcs.n	8000c1e <__udivmoddi4+0x14a>
 8000c18:	45a0      	cmp	r8, r4
 8000c1a:	f200 80b6 	bhi.w	8000d8a <__udivmoddi4+0x2b6>
 8000c1e:	4618      	mov	r0, r3
 8000c20:	eba4 0408 	sub.w	r4, r4, r8
 8000c24:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000c28:	e79f      	b.n	8000b6a <__udivmoddi4+0x96>
 8000c2a:	f1c7 0c20 	rsb	ip, r7, #32
 8000c2e:	40bb      	lsls	r3, r7
 8000c30:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000c34:	ea4e 0e03 	orr.w	lr, lr, r3
 8000c38:	fa01 f407 	lsl.w	r4, r1, r7
 8000c3c:	fa20 f50c 	lsr.w	r5, r0, ip
 8000c40:	fa21 f30c 	lsr.w	r3, r1, ip
 8000c44:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000c48:	4325      	orrs	r5, r4
 8000c4a:	fbb3 f9f8 	udiv	r9, r3, r8
 8000c4e:	0c2c      	lsrs	r4, r5, #16
 8000c50:	fb08 3319 	mls	r3, r8, r9, r3
 8000c54:	fa1f fa8e 	uxth.w	sl, lr
 8000c58:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000c5c:	fb09 f40a 	mul.w	r4, r9, sl
 8000c60:	429c      	cmp	r4, r3
 8000c62:	fa02 f207 	lsl.w	r2, r2, r7
 8000c66:	fa00 f107 	lsl.w	r1, r0, r7
 8000c6a:	d90b      	bls.n	8000c84 <__udivmoddi4+0x1b0>
 8000c6c:	eb1e 0303 	adds.w	r3, lr, r3
 8000c70:	f109 30ff 	add.w	r0, r9, #4294967295
 8000c74:	f080 8087 	bcs.w	8000d86 <__udivmoddi4+0x2b2>
 8000c78:	429c      	cmp	r4, r3
 8000c7a:	f240 8084 	bls.w	8000d86 <__udivmoddi4+0x2b2>
 8000c7e:	f1a9 0902 	sub.w	r9, r9, #2
 8000c82:	4473      	add	r3, lr
 8000c84:	1b1b      	subs	r3, r3, r4
 8000c86:	b2ad      	uxth	r5, r5
 8000c88:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c8c:	fb08 3310 	mls	r3, r8, r0, r3
 8000c90:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000c94:	fb00 fa0a 	mul.w	sl, r0, sl
 8000c98:	45a2      	cmp	sl, r4
 8000c9a:	d908      	bls.n	8000cae <__udivmoddi4+0x1da>
 8000c9c:	eb1e 0404 	adds.w	r4, lr, r4
 8000ca0:	f100 33ff 	add.w	r3, r0, #4294967295
 8000ca4:	d26b      	bcs.n	8000d7e <__udivmoddi4+0x2aa>
 8000ca6:	45a2      	cmp	sl, r4
 8000ca8:	d969      	bls.n	8000d7e <__udivmoddi4+0x2aa>
 8000caa:	3802      	subs	r0, #2
 8000cac:	4474      	add	r4, lr
 8000cae:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000cb2:	fba0 8902 	umull	r8, r9, r0, r2
 8000cb6:	eba4 040a 	sub.w	r4, r4, sl
 8000cba:	454c      	cmp	r4, r9
 8000cbc:	46c2      	mov	sl, r8
 8000cbe:	464b      	mov	r3, r9
 8000cc0:	d354      	bcc.n	8000d6c <__udivmoddi4+0x298>
 8000cc2:	d051      	beq.n	8000d68 <__udivmoddi4+0x294>
 8000cc4:	2e00      	cmp	r6, #0
 8000cc6:	d069      	beq.n	8000d9c <__udivmoddi4+0x2c8>
 8000cc8:	ebb1 050a 	subs.w	r5, r1, sl
 8000ccc:	eb64 0403 	sbc.w	r4, r4, r3
 8000cd0:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000cd4:	40fd      	lsrs	r5, r7
 8000cd6:	40fc      	lsrs	r4, r7
 8000cd8:	ea4c 0505 	orr.w	r5, ip, r5
 8000cdc:	e9c6 5400 	strd	r5, r4, [r6]
 8000ce0:	2700      	movs	r7, #0
 8000ce2:	e747      	b.n	8000b74 <__udivmoddi4+0xa0>
 8000ce4:	f1c2 0320 	rsb	r3, r2, #32
 8000ce8:	fa20 f703 	lsr.w	r7, r0, r3
 8000cec:	4095      	lsls	r5, r2
 8000cee:	fa01 f002 	lsl.w	r0, r1, r2
 8000cf2:	fa21 f303 	lsr.w	r3, r1, r3
 8000cf6:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000cfa:	4338      	orrs	r0, r7
 8000cfc:	0c01      	lsrs	r1, r0, #16
 8000cfe:	fbb3 f7fe 	udiv	r7, r3, lr
 8000d02:	fa1f f885 	uxth.w	r8, r5
 8000d06:	fb0e 3317 	mls	r3, lr, r7, r3
 8000d0a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000d0e:	fb07 f308 	mul.w	r3, r7, r8
 8000d12:	428b      	cmp	r3, r1
 8000d14:	fa04 f402 	lsl.w	r4, r4, r2
 8000d18:	d907      	bls.n	8000d2a <__udivmoddi4+0x256>
 8000d1a:	1869      	adds	r1, r5, r1
 8000d1c:	f107 3cff 	add.w	ip, r7, #4294967295
 8000d20:	d22f      	bcs.n	8000d82 <__udivmoddi4+0x2ae>
 8000d22:	428b      	cmp	r3, r1
 8000d24:	d92d      	bls.n	8000d82 <__udivmoddi4+0x2ae>
 8000d26:	3f02      	subs	r7, #2
 8000d28:	4429      	add	r1, r5
 8000d2a:	1acb      	subs	r3, r1, r3
 8000d2c:	b281      	uxth	r1, r0
 8000d2e:	fbb3 f0fe 	udiv	r0, r3, lr
 8000d32:	fb0e 3310 	mls	r3, lr, r0, r3
 8000d36:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000d3a:	fb00 f308 	mul.w	r3, r0, r8
 8000d3e:	428b      	cmp	r3, r1
 8000d40:	d907      	bls.n	8000d52 <__udivmoddi4+0x27e>
 8000d42:	1869      	adds	r1, r5, r1
 8000d44:	f100 3cff 	add.w	ip, r0, #4294967295
 8000d48:	d217      	bcs.n	8000d7a <__udivmoddi4+0x2a6>
 8000d4a:	428b      	cmp	r3, r1
 8000d4c:	d915      	bls.n	8000d7a <__udivmoddi4+0x2a6>
 8000d4e:	3802      	subs	r0, #2
 8000d50:	4429      	add	r1, r5
 8000d52:	1ac9      	subs	r1, r1, r3
 8000d54:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000d58:	e73b      	b.n	8000bd2 <__udivmoddi4+0xfe>
 8000d5a:	4637      	mov	r7, r6
 8000d5c:	4630      	mov	r0, r6
 8000d5e:	e709      	b.n	8000b74 <__udivmoddi4+0xa0>
 8000d60:	4607      	mov	r7, r0
 8000d62:	e6e7      	b.n	8000b34 <__udivmoddi4+0x60>
 8000d64:	4618      	mov	r0, r3
 8000d66:	e6fb      	b.n	8000b60 <__udivmoddi4+0x8c>
 8000d68:	4541      	cmp	r1, r8
 8000d6a:	d2ab      	bcs.n	8000cc4 <__udivmoddi4+0x1f0>
 8000d6c:	ebb8 0a02 	subs.w	sl, r8, r2
 8000d70:	eb69 020e 	sbc.w	r2, r9, lr
 8000d74:	3801      	subs	r0, #1
 8000d76:	4613      	mov	r3, r2
 8000d78:	e7a4      	b.n	8000cc4 <__udivmoddi4+0x1f0>
 8000d7a:	4660      	mov	r0, ip
 8000d7c:	e7e9      	b.n	8000d52 <__udivmoddi4+0x27e>
 8000d7e:	4618      	mov	r0, r3
 8000d80:	e795      	b.n	8000cae <__udivmoddi4+0x1da>
 8000d82:	4667      	mov	r7, ip
 8000d84:	e7d1      	b.n	8000d2a <__udivmoddi4+0x256>
 8000d86:	4681      	mov	r9, r0
 8000d88:	e77c      	b.n	8000c84 <__udivmoddi4+0x1b0>
 8000d8a:	3802      	subs	r0, #2
 8000d8c:	442c      	add	r4, r5
 8000d8e:	e747      	b.n	8000c20 <__udivmoddi4+0x14c>
 8000d90:	f1ac 0c02 	sub.w	ip, ip, #2
 8000d94:	442b      	add	r3, r5
 8000d96:	e72f      	b.n	8000bf8 <__udivmoddi4+0x124>
 8000d98:	4638      	mov	r0, r7
 8000d9a:	e708      	b.n	8000bae <__udivmoddi4+0xda>
 8000d9c:	4637      	mov	r7, r6
 8000d9e:	e6e9      	b.n	8000b74 <__udivmoddi4+0xa0>

08000da0 <__aeabi_idiv0>:
 8000da0:	4770      	bx	lr
 8000da2:	bf00      	nop

08000da4 <Init_LCD_GPIO>:

//=============================================================================
// GPIO setup 
//=============================================================================
void Init_LCD_GPIO(void)
{
 8000da4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000da8:	b08b      	sub	sp, #44	; 0x2c
	  GPIO_InitTypeDef GPIO_InitStruct;

	  __HAL_RCC_CRC_CLK_ENABLE();
 8000daa:	4b36      	ldr	r3, [pc, #216]	; (8000e84 <Init_LCD_GPIO+0xe0>)
 8000dac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dae:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000db2:	631a      	str	r2, [r3, #48]	; 0x30
 8000db4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000db6:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 8000dba:	9201      	str	r2, [sp, #4]
 8000dbc:	9a01      	ldr	r2, [sp, #4]
	  /* GPIO Ports Clock Enable */
	  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000dbe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dc0:	f042 0210 	orr.w	r2, r2, #16
 8000dc4:	631a      	str	r2, [r3, #48]	; 0x30
 8000dc6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dc8:	f002 0210 	and.w	r2, r2, #16
 8000dcc:	9202      	str	r2, [sp, #8]
 8000dce:	9a02      	ldr	r2, [sp, #8]
	  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000dd0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dd2:	f042 0220 	orr.w	r2, r2, #32
 8000dd6:	631a      	str	r2, [r3, #48]	; 0x30
 8000dd8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dda:	f002 0220 	and.w	r2, r2, #32
 8000dde:	9203      	str	r2, [sp, #12]
 8000de0:	9a03      	ldr	r2, [sp, #12]
	  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000de2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000de4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000de8:	631a      	str	r2, [r3, #48]	; 0x30
 8000dea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000dec:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000df0:	9304      	str	r3, [sp, #16]
 8000df2:	9b04      	ldr	r3, [sp, #16]


	  HAL_GPIO_WritePin(GDISP_CMD_PORT, GCMD, GPIO_PIN_RESET);
 8000df4:	4c24      	ldr	r4, [pc, #144]	; (8000e88 <Init_LCD_GPIO+0xe4>)
 8000df6:	2200      	movs	r2, #0
 8000df8:	f44f 4178 	mov.w	r1, #63488	; 0xf800
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	f000 fe93 	bl	8001b28 <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(GDISP_DATA_LO_PORT, GDATA_LO, GPIO_PIN_RESET);
 8000e02:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8000e8c <Init_LCD_GPIO+0xe8>
 8000e06:	2200      	movs	r2, #0
 8000e08:	21ff      	movs	r1, #255	; 0xff
 8000e0a:	4648      	mov	r0, r9
 8000e0c:	f000 fe8c 	bl	8001b28 <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(GDISP_DATA_HI_PORT, GDATA_HI, GPIO_PIN_RESET);
 8000e10:	f8df 807c 	ldr.w	r8, [pc, #124]	; 8000e90 <Init_LCD_GPIO+0xec>
 8000e14:	2200      	movs	r2, #0
 8000e16:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8000e1a:	4640      	mov	r0, r8
 8000e1c:	f000 fe84 	bl	8001b28 <HAL_GPIO_WritePin>

	  GPIO_InitStruct.Pin = GCMD;
 8000e20:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 8000e24:	9305      	str	r3, [sp, #20]
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e26:	2701      	movs	r7, #1
 8000e28:	9706      	str	r7, [sp, #24]
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e2a:	2600      	movs	r6, #0
 8000e2c:	9607      	str	r6, [sp, #28]
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e2e:	2503      	movs	r5, #3
 8000e30:	9508      	str	r5, [sp, #32]
	  HAL_GPIO_Init(GDISP_CMD_PORT, &GPIO_InitStruct);
 8000e32:	a905      	add	r1, sp, #20
 8000e34:	4620      	mov	r0, r4
 8000e36:	f000 fd83 	bl	8001940 <HAL_GPIO_Init>

	  GPIO_InitStruct.Pin = GDATA_LO;
 8000e3a:	23ff      	movs	r3, #255	; 0xff
 8000e3c:	9305      	str	r3, [sp, #20]
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e3e:	9706      	str	r7, [sp, #24]
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e40:	9607      	str	r6, [sp, #28]
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e42:	9508      	str	r5, [sp, #32]
	  HAL_GPIO_Init(GDISP_DATA_LO_PORT, &GPIO_InitStruct);
 8000e44:	a905      	add	r1, sp, #20
 8000e46:	4648      	mov	r0, r9
 8000e48:	f000 fd7a 	bl	8001940 <HAL_GPIO_Init>

	  GPIO_InitStruct.Pin = GDATA_HI;
 8000e4c:	f44f 437f 	mov.w	r3, #65280	; 0xff00
 8000e50:	9305      	str	r3, [sp, #20]
	  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e52:	9706      	str	r7, [sp, #24]
	  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e54:	9607      	str	r6, [sp, #28]
	  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e56:	9508      	str	r5, [sp, #32]
	  HAL_GPIO_Init(GDISP_DATA_HI_PORT, &GPIO_InitStruct);
 8000e58:	a905      	add	r1, sp, #20
 8000e5a:	4640      	mov	r0, r8
 8000e5c:	f000 fd70 	bl	8001940 <HAL_GPIO_Init>

	  SET_CS; SET_WR; SET_RD; SET_DC; SET_RST;
 8000e60:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000e64:	61a3      	str	r3, [r4, #24]
 8000e66:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000e6a:	61a3      	str	r3, [r4, #24]
 8000e6c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000e70:	61a3      	str	r3, [r4, #24]
 8000e72:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8000e76:	61a3      	str	r3, [r4, #24]
 8000e78:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000e7c:	61a3      	str	r3, [r4, #24]
}
 8000e7e:	b00b      	add	sp, #44	; 0x2c
 8000e80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000e84:	40023800 	.word	0x40023800
 8000e88:	40021400 	.word	0x40021400
 8000e8c:	40021800 	.word	0x40021800
 8000e90:	40021000 	.word	0x40021000

08000e94 <SSD1963_WriteCommand>:
//=============================================================================
// Write command to display
//=============================================================================
void SSD1963_WriteCommand(uint16_t Data)
{
 8000e94:	b410      	push	{r4}
	uint16_t _Data=~Data;
 8000e96:	43c3      	mvns	r3, r0

	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8000e98:	4911      	ldr	r1, [pc, #68]	; (8000ee0 <SSD1963_WriteCommand+0x4c>)
 8000e9a:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8000e9e:	618a      	str	r2, [r1, #24]

	CLR_CS;
 8000ea0:	4a10      	ldr	r2, [pc, #64]	; (8000ee4 <SSD1963_WriteCommand+0x50>)
 8000ea2:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
 8000ea6:	6194      	str	r4, [r2, #24]
	CLR_DC;
 8000ea8:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8000eac:	6194      	str	r4, [r2, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8000eae:	041b      	lsls	r3, r3, #16
 8000eb0:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8000eb4:	b2c4      	uxtb	r4, r0
 8000eb6:	4323      	orrs	r3, r4
 8000eb8:	4c0b      	ldr	r4, [pc, #44]	; (8000ee8 <SSD1963_WriteCommand+0x54>)
 8000eba:	61a3      	str	r3, [r4, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8000ebc:	694b      	ldr	r3, [r1, #20]
 8000ebe:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8000ec2:	4318      	orrs	r0, r3
 8000ec4:	6148      	str	r0, [r1, #20]
	writeStrobe;
 8000ec6:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000eca:	6193      	str	r3, [r2, #24]
 8000ecc:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000ed0:	6193      	str	r3, [r2, #24]
	SET_CS;
 8000ed2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000ed6:	6193      	str	r3, [r2, #24]
}
 8000ed8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000edc:	4770      	bx	lr
 8000ede:	bf00      	nop
 8000ee0:	40021000 	.word	0x40021000
 8000ee4:	40021400 	.word	0x40021400
 8000ee8:	40021800 	.word	0x40021800

08000eec <SSD1963_WriteData>:
//=============================================================================
// Write data to display
//=============================================================================

void SSD1963_WriteData(uint16_t Data)
{
 8000eec:	b410      	push	{r4}
	uint16_t _Data=~Data;
 8000eee:	43c3      	mvns	r3, r0

	GDISP_DATA_HI_PORT->BSRR=(uint32_t)(0xFF00)<<16;
 8000ef0:	4911      	ldr	r1, [pc, #68]	; (8000f38 <SSD1963_WriteData+0x4c>)
 8000ef2:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8000ef6:	618a      	str	r2, [r1, #24]

	CLR_CS;
 8000ef8:	4a10      	ldr	r2, [pc, #64]	; (8000f3c <SSD1963_WriteData+0x50>)
 8000efa:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
 8000efe:	6194      	str	r4, [r2, #24]
	SET_DC;
 8000f00:	f44f 4400 	mov.w	r4, #32768	; 0x8000
 8000f04:	6194      	str	r4, [r2, #24]
	GDISP_DATA_LO_PORT->BSRR=((uint32_t)(_Data & GDATA_LO)<<16)|(Data & GDATA_LO);
 8000f06:	041b      	lsls	r3, r3, #16
 8000f08:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8000f0c:	b2c4      	uxtb	r4, r0
 8000f0e:	4323      	orrs	r3, r4
 8000f10:	4c0b      	ldr	r4, [pc, #44]	; (8000f40 <SSD1963_WriteData+0x54>)
 8000f12:	61a3      	str	r3, [r4, #24]
	GDISP_DATA_HI_PORT->ODR|=(Data & GDATA_HI);
 8000f14:	694b      	ldr	r3, [r1, #20]
 8000f16:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8000f1a:	4318      	orrs	r0, r3
 8000f1c:	6148      	str	r0, [r1, #20]
	writeStrobe;
 8000f1e:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000f22:	6193      	str	r3, [r2, #24]
 8000f24:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000f28:	6193      	str	r3, [r2, #24]
	SET_CS;
 8000f2a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000f2e:	6193      	str	r3, [r2, #24]

}
 8000f30:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000f34:	4770      	bx	lr
 8000f36:	bf00      	nop
 8000f38:	40021000 	.word	0x40021000
 8000f3c:	40021400 	.word	0x40021400
 8000f40:	40021800 	.word	0x40021800

08000f44 <SSD1963_WriteDataMultiple>:
//=============================================================================
// Write multiple data to display
//=============================================================================
void SSD1963_WriteDataMultiple(uint16_t * Data, int NumItems)
{
 8000f44:	b538      	push	{r3, r4, r5, lr}
 8000f46:	4605      	mov	r5, r0
 8000f48:	460c      	mov	r4, r1
  while (NumItems)
 8000f4a:	e004      	b.n	8000f56 <SSD1963_WriteDataMultiple+0x12>
  {
	  SSD1963_WriteData(*Data);
 8000f4c:	f835 0b02 	ldrh.w	r0, [r5], #2
 8000f50:	f7ff ffcc 	bl	8000eec <SSD1963_WriteData>
	  Data++;
	  NumItems--;
 8000f54:	3c01      	subs	r4, #1
  while (NumItems)
 8000f56:	2c00      	cmp	r4, #0
 8000f58:	d1f8      	bne.n	8000f4c <SSD1963_WriteDataMultiple+0x8>
  }
}
 8000f5a:	bd38      	pop	{r3, r4, r5, pc}

08000f5c <SSD1963_Init>:
//=============================================================================
// Display initialization
//=============================================================================

void SSD1963_Init (void)
{
 8000f5c:	b510      	push	{r4, lr}
	CLR_RST;  // reset
 8000f5e:	4c54      	ldr	r4, [pc, #336]	; (80010b0 <SSD1963_Init+0x154>)
 8000f60:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000f64:	61a3      	str	r3, [r4, #24]
	HAL_Delay(500);
 8000f66:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000f6a:	f000 fa53 	bl	8001414 <HAL_Delay>
	SET_RST;
 8000f6e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000f72:	61a3      	str	r3, [r4, #24]
	HAL_Delay(100);
 8000f74:	2064      	movs	r0, #100	; 0x64
 8000f76:	f000 fa4d 	bl	8001414 <HAL_Delay>

	SSD1963_WriteCommand(SSD1963_SOFT_RESET);
 8000f7a:	2001      	movs	r0, #1
 8000f7c:	f7ff ff8a 	bl	8000e94 <SSD1963_WriteCommand>
	HAL_Delay(10);
 8000f80:	200a      	movs	r0, #10
 8000f82:	f000 fa47 	bl	8001414 <HAL_Delay>
	SSD1963_WriteCommand(SSD1963_SET_PLL_MN);
 8000f86:	20e2      	movs	r0, #226	; 0xe2
 8000f88:	f7ff ff84 	bl	8000e94 <SSD1963_WriteCommand>
	SSD1963_WriteData(29);	// PLLclk = REFclk * 30 (300MHz)
 8000f8c:	201d      	movs	r0, #29
 8000f8e:	f7ff ffad 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(2);	// SYSclk = PLLclk / 3  (100MHz)
 8000f92:	2002      	movs	r0, #2
 8000f94:	f7ff ffaa 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(4);  	// dummy
 8000f98:	2004      	movs	r0, #4
 8000f9a:	f7ff ffa7 	bl	8000eec <SSD1963_WriteData>

	SSD1963_WriteCommand(SSD1963_SET_PLL);
 8000f9e:	20e0      	movs	r0, #224	; 0xe0
 8000fa0:	f7ff ff78 	bl	8000e94 <SSD1963_WriteCommand>
	SSD1963_WriteData(0x0001);
 8000fa4:	2001      	movs	r0, #1
 8000fa6:	f7ff ffa1 	bl	8000eec <SSD1963_WriteData>

	HAL_Delay(100);
 8000faa:	2064      	movs	r0, #100	; 0x64
 8000fac:	f000 fa32 	bl	8001414 <HAL_Delay>

	SSD1963_WriteCommand(SSD1963_SET_PLL);
 8000fb0:	20e0      	movs	r0, #224	; 0xe0
 8000fb2:	f7ff ff6f 	bl	8000e94 <SSD1963_WriteCommand>
	SSD1963_WriteData(0x0003);
 8000fb6:	2003      	movs	r0, #3
 8000fb8:	f7ff ff98 	bl	8000eec <SSD1963_WriteData>

	SSD1963_WriteCommand(SSD1963_SET_LCD_MODE);
 8000fbc:	20b0      	movs	r0, #176	; 0xb0
 8000fbe:	f7ff ff69 	bl	8000e94 <SSD1963_WriteCommand>
	SSD1963_WriteData(0x0020);
 8000fc2:	2020      	movs	r0, #32
 8000fc4:	f7ff ff92 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);
 8000fc8:	2000      	movs	r0, #0
 8000fca:	f7ff ff8f 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(mHIGH((TFT_WIDTH-1)));
 8000fce:	2001      	movs	r0, #1
 8000fd0:	f7ff ff8c 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(mLOW((TFT_WIDTH-1)));
 8000fd4:	20df      	movs	r0, #223	; 0xdf
 8000fd6:	f7ff ff89 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(mHIGH((TFT_HEIGHT-1)));
 8000fda:	2001      	movs	r0, #1
 8000fdc:	f7ff ff86 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(mLOW((TFT_HEIGHT-1)));
 8000fe0:	200f      	movs	r0, #15
 8000fe2:	f7ff ff83 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);
 8000fe6:	2000      	movs	r0, #0
 8000fe8:	f7ff ff80 	bl	8000eec <SSD1963_WriteData>

	SSD1963_WriteCommand(SSD1963_SET_PIXEL_DATA_INTERFACE);
 8000fec:	20f0      	movs	r0, #240	; 0xf0
 8000fee:	f7ff ff51 	bl	8000e94 <SSD1963_WriteCommand>
	SSD1963_WriteData(SSD1963_PDI_16BIT565);
 8000ff2:	2003      	movs	r0, #3
 8000ff4:	f7ff ff7a 	bl	8000eec <SSD1963_WriteData>

	SSD1963_WriteCommand(SSD1963_SET_LSHIFT_FREQ);
 8000ff8:	20e6      	movs	r0, #230	; 0xe6
 8000ffa:	f7ff ff4b 	bl	8000e94 <SSD1963_WriteCommand>
	SSD1963_WriteData((LCD_FPR >> 16) & 0x00FF);
 8000ffe:	2001      	movs	r0, #1
 8001000:	f7ff ff74 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData((LCD_FPR >> 8) & 0x00FF);
 8001004:	2075      	movs	r0, #117	; 0x75
 8001006:	f7ff ff71 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(LCD_FPR & 0x00FF);
 800100a:	20ed      	movs	r0, #237	; 0xed
 800100c:	f7ff ff6e 	bl	8000eec <SSD1963_WriteData>

	SSD1963_WriteCommand(SSD1963_SET_HORI_PERIOD);
 8001010:	20b4      	movs	r0, #180	; 0xb4
 8001012:	f7ff ff3f 	bl	8000e94 <SSD1963_WriteCommand>
	SSD1963_WriteData(mHIGH(TFT_HSYNC_PERIOD));
 8001016:	2002      	movs	r0, #2
 8001018:	f7ff ff68 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(mLOW(TFT_HSYNC_PERIOD));
 800101c:	2014      	movs	r0, #20
 800101e:	f7ff ff65 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(mHIGH((TFT_HSYNC_PULSE + TFT_HSYNC_BACK_PORCH)));
 8001022:	2000      	movs	r0, #0
 8001024:	f7ff ff62 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(mLOW((TFT_HSYNC_PULSE + TFT_HSYNC_BACK_PORCH)));
 8001028:	202c      	movs	r0, #44	; 0x2c
 800102a:	f7ff ff5f 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(TFT_HSYNC_PULSE);
 800102e:	2002      	movs	r0, #2
 8001030:	f7ff ff5c 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);
 8001034:	2000      	movs	r0, #0
 8001036:	f7ff ff59 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);
 800103a:	2000      	movs	r0, #0
 800103c:	f7ff ff56 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);
 8001040:	2000      	movs	r0, #0
 8001042:	f7ff ff53 	bl	8000eec <SSD1963_WriteData>

	SSD1963_WriteCommand(SSD1963_SET_VERT_PERIOD);
 8001046:	20b6      	movs	r0, #182	; 0xb6
 8001048:	f7ff ff24 	bl	8000e94 <SSD1963_WriteCommand>
	SSD1963_WriteData(mHIGH(TFT_VSYNC_PERIOD));
 800104c:	2001      	movs	r0, #1
 800104e:	f7ff ff4d 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(mLOW(TFT_VSYNC_PERIOD));
 8001052:	201e      	movs	r0, #30
 8001054:	f7ff ff4a 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(mHIGH((TFT_VSYNC_PULSE + TFT_VSYNC_BACK_PORCH)));
 8001058:	2000      	movs	r0, #0
 800105a:	f7ff ff47 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(mLOW((TFT_VSYNC_PULSE + TFT_VSYNC_BACK_PORCH)));
 800105e:	200c      	movs	r0, #12
 8001060:	f7ff ff44 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(TFT_VSYNC_PULSE);
 8001064:	2006      	movs	r0, #6
 8001066:	f7ff ff41 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);
 800106a:	2000      	movs	r0, #0
 800106c:	f7ff ff3e 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);
 8001070:	2000      	movs	r0, #0
 8001072:	f7ff ff3b 	bl	8000eec <SSD1963_WriteData>

	SSD1963_WriteCommand(SSD1963_SET_DISPLAY_ON);//SET display on
 8001076:	2029      	movs	r0, #41	; 0x29
 8001078:	f7ff ff0c 	bl	8000e94 <SSD1963_WriteCommand>

	HAL_Delay(10);
 800107c:	200a      	movs	r0, #10
 800107e:	f000 f9c9 	bl	8001414 <HAL_Delay>
	SSD1963_WriteCommand(SSD1963_SET_PWM_CONF); //set PWM for Backlight. Manual p.53
 8001082:	20be      	movs	r0, #190	; 0xbe
 8001084:	f7ff ff06 	bl	8000e94 <SSD1963_WriteCommand>
	// 6 parameters to be set
	SSD1963_WriteData(0x0004); 					// PWM Freq =100MHz/(256*(PWMF[7:0]+1))/256  PWMF[7:0]=4 PWM Freq=305Hz
 8001088:	2004      	movs	r0, #4
 800108a:	f7ff ff2f 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(0x00C0); 					// PWM duty cycle(50%)
 800108e:	20c0      	movs	r0, #192	; 0xc0
 8001090:	f7ff ff2c 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(0x0001); 					// PWM controlled by host, PWM enabled
 8001094:	2001      	movs	r0, #1
 8001096:	f7ff ff29 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(0x0040); 					// brightness level 0x00 - 0xFF
 800109a:	2040      	movs	r0, #64	; 0x40
 800109c:	f7ff ff26 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(0x0000); 					// minimum brightness level =  0x00 - 0xFF
 80010a0:	2000      	movs	r0, #0
 80010a2:	f7ff ff23 	bl	8000eec <SSD1963_WriteData>
	SSD1963_WriteData(0x0000);					// brightness prescalar 0x0 - 0xF
 80010a6:	2000      	movs	r0, #0
 80010a8:	f7ff ff20 	bl	8000eec <SSD1963_WriteData>


}
 80010ac:	bd10      	pop	{r4, pc}
 80010ae:	bf00      	nop
 80010b0:	40021400 	.word	0x40021400

080010b4 <Init_TOUCH_GPIO>:

I2C_HandleTypeDef hi2c;


void Init_TOUCH_GPIO(I2C_HandleTypeDef i2c_handle)
{
 80010b4:	b084      	sub	sp, #16
 80010b6:	b508      	push	{r3, lr}
 80010b8:	f10d 0c08 	add.w	ip, sp, #8
 80010bc:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	hi2c=i2c_handle;
 80010c0:	224c      	movs	r2, #76	; 0x4c
 80010c2:	4661      	mov	r1, ip
 80010c4:	4803      	ldr	r0, [pc, #12]	; (80010d4 <Init_TOUCH_GPIO+0x20>)
 80010c6:	f015 f858 	bl	801617a <memcpy>
}
 80010ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80010ce:	b004      	add	sp, #16
 80010d0:	4770      	bx	lr
 80010d2:	bf00      	nop
 80010d4:	20019764 	.word	0x20019764

080010d8 <STMPE610_Write>:
		return FALSE;
}


void STMPE610_Write(uint8_t reg, uint8_t val)
{
 80010d8:	b500      	push	{lr}
 80010da:	b085      	sub	sp, #20
	uint8_t	txbuf[2];

	txbuf[0]=reg;
 80010dc:	f88d 000c 	strb.w	r0, [sp, #12]
	txbuf[1]=val;
 80010e0:	f88d 100d 	strb.w	r1, [sp, #13]

	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, (uint8_t *)txbuf, 2, STMPE610_TIMEOUT)!= HAL_OK);
 80010e4:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80010e8:	9300      	str	r3, [sp, #0]
 80010ea:	2302      	movs	r3, #2
 80010ec:	aa03      	add	r2, sp, #12
 80010ee:	2188      	movs	r1, #136	; 0x88
 80010f0:	4803      	ldr	r0, [pc, #12]	; (8001100 <STMPE610_Write+0x28>)
 80010f2:	f000 ff8d 	bl	8002010 <HAL_I2C_Master_Transmit>
 80010f6:	2800      	cmp	r0, #0
 80010f8:	d1f4      	bne.n	80010e4 <STMPE610_Write+0xc>
}
 80010fa:	b005      	add	sp, #20
 80010fc:	f85d fb04 	ldr.w	pc, [sp], #4
 8001100:	20019764 	.word	0x20019764

08001104 <STMPE610_ReadByte>:

uint8_t STMPE610_ReadByte(uint8_t reg)
{
 8001104:	b500      	push	{lr}
 8001106:	b087      	sub	sp, #28
 8001108:	f88d 000f 	strb.w	r0, [sp, #15]
	uint8_t rxbuf[1];
	rxbuf[0] = 0;
 800110c:	2300      	movs	r3, #0
 800110e:	f88d 3014 	strb.w	r3, [sp, #20]

	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, STMPE610_TIMEOUT)!= HAL_OK);
 8001112:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8001116:	9300      	str	r3, [sp, #0]
 8001118:	2301      	movs	r3, #1
 800111a:	f10d 020f 	add.w	r2, sp, #15
 800111e:	2188      	movs	r1, #136	; 0x88
 8001120:	480a      	ldr	r0, [pc, #40]	; (800114c <STMPE610_ReadByte+0x48>)
 8001122:	f000 ff75 	bl	8002010 <HAL_I2C_Master_Transmit>
 8001126:	2800      	cmp	r0, #0
 8001128:	d1f3      	bne.n	8001112 <STMPE610_ReadByte+0xe>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 1, STMPE610_TIMEOUT) != HAL_OK);
 800112a:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 800112e:	9300      	str	r3, [sp, #0]
 8001130:	2301      	movs	r3, #1
 8001132:	aa05      	add	r2, sp, #20
 8001134:	2188      	movs	r1, #136	; 0x88
 8001136:	4805      	ldr	r0, [pc, #20]	; (800114c <STMPE610_ReadByte+0x48>)
 8001138:	f001 f828 	bl	800218c <HAL_I2C_Master_Receive>
 800113c:	2800      	cmp	r0, #0
 800113e:	d1f4      	bne.n	800112a <STMPE610_ReadByte+0x26>

	return rxbuf[0];
}
 8001140:	f89d 0014 	ldrb.w	r0, [sp, #20]
 8001144:	b007      	add	sp, #28
 8001146:	f85d fb04 	ldr.w	pc, [sp], #4
 800114a:	bf00      	nop
 800114c:	20019764 	.word	0x20019764

08001150 <STMPE610_ReadWord>:

uint16_t STMPE610_ReadWord(uint8_t reg)
{
 8001150:	b500      	push	{lr}
 8001152:	b087      	sub	sp, #28
 8001154:	f88d 000f 	strb.w	r0, [sp, #15]
	uint8_t	rxbuf[2];
	
	rxbuf[0] = 0;
 8001158:	2300      	movs	r3, #0
 800115a:	f88d 3014 	strb.w	r3, [sp, #20]
	rxbuf[1] = 0;
 800115e:	f88d 3015 	strb.w	r3, [sp, #21]

	while(HAL_I2C_Master_Transmit(&hi2c, STMPE610_ADDR, &reg, 1, 10000)!= HAL_OK);
 8001162:	f242 7310 	movw	r3, #10000	; 0x2710
 8001166:	9300      	str	r3, [sp, #0]
 8001168:	2301      	movs	r3, #1
 800116a:	f10d 020f 	add.w	r2, sp, #15
 800116e:	2188      	movs	r1, #136	; 0x88
 8001170:	480c      	ldr	r0, [pc, #48]	; (80011a4 <STMPE610_ReadWord+0x54>)
 8001172:	f000 ff4d 	bl	8002010 <HAL_I2C_Master_Transmit>
 8001176:	2800      	cmp	r0, #0
 8001178:	d1f3      	bne.n	8001162 <STMPE610_ReadWord+0x12>
	while(HAL_I2C_Master_Receive(&hi2c, STMPE610_ADDR, (uint8_t *)rxbuf, 2, 10000) != HAL_OK);
 800117a:	f242 7310 	movw	r3, #10000	; 0x2710
 800117e:	9300      	str	r3, [sp, #0]
 8001180:	2302      	movs	r3, #2
 8001182:	aa05      	add	r2, sp, #20
 8001184:	2188      	movs	r1, #136	; 0x88
 8001186:	4807      	ldr	r0, [pc, #28]	; (80011a4 <STMPE610_ReadWord+0x54>)
 8001188:	f001 f800 	bl	800218c <HAL_I2C_Master_Receive>
 800118c:	2800      	cmp	r0, #0
 800118e:	d1f4      	bne.n	800117a <STMPE610_ReadWord+0x2a>

	return (((uint16_t)rxbuf[0]) << 8) | rxbuf[1];
 8001190:	f89d 0014 	ldrb.w	r0, [sp, #20]
 8001194:	f89d 3015 	ldrb.w	r3, [sp, #21]
}
 8001198:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
 800119c:	b007      	add	sp, #28
 800119e:	f85d fb04 	ldr.w	pc, [sp], #4
 80011a2:	bf00      	nop
 80011a4:	20019764 	.word	0x20019764

080011a8 <STMPE610_Init>:

void STMPE610_Init(void)
{
 80011a8:	b508      	push	{r3, lr}
	STMPE610_Write(STMPE610_REG_SYS_CTRL1, 0x02);		// Software chip reset
 80011aa:	2102      	movs	r1, #2
 80011ac:	2003      	movs	r0, #3
 80011ae:	f7ff ff93 	bl	80010d8 <STMPE610_Write>
	HAL_Delay(10);
 80011b2:	200a      	movs	r0, #10
 80011b4:	f000 f92e 	bl	8001414 <HAL_Delay>
	
	STMPE610_Write(STMPE610_REG_SYS_CTRL2, 0x04);		// Temperature sensor clock off, GPIO clock off, touch clock on, ADC clock on
 80011b8:	2104      	movs	r1, #4
 80011ba:	4608      	mov	r0, r1
 80011bc:	f7ff ff8c 	bl	80010d8 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_INT_EN, 0x03);			// Interrupt on INT pin when there is a sample or a touch transition.
 80011c0:	2103      	movs	r1, #3
 80011c2:	200a      	movs	r0, #10
 80011c4:	f7ff ff88 	bl	80010d8 <STMPE610_Write>
	//STMPE610_write_reg(STMPE610_REG_INT_EN, 0x00);						// Don't Interrupt on INT pin
	STMPE610_Write(STMPE610_REG_ADC_CTRL1, 0x48);		// ADC conversion time = 80 clock ticks, 12-bit ADC, internal voltage refernce
 80011c8:	2148      	movs	r1, #72	; 0x48
 80011ca:	2020      	movs	r0, #32
 80011cc:	f7ff ff84 	bl	80010d8 <STMPE610_Write>
	HAL_Delay(2);
 80011d0:	2002      	movs	r0, #2
 80011d2:	f000 f91f 	bl	8001414 <HAL_Delay>
	
	STMPE610_Write(STMPE610_REG_ADC_CTRL2, 0x01);		// ADC speed 3.25MHz
 80011d6:	2101      	movs	r1, #1
 80011d8:	2021      	movs	r0, #33	; 0x21
 80011da:	f7ff ff7d 	bl	80010d8 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_GPIO_AF, 0x00);			// GPIO alternate function - OFF
 80011de:	2100      	movs	r1, #0
 80011e0:	2017      	movs	r0, #23
 80011e2:	f7ff ff79 	bl	80010d8 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_TSC_CFG, 0xA3);			// Averaging 4, touch detect delay 1ms, panel driver settling time 1ms
 80011e6:	21a3      	movs	r1, #163	; 0xa3
 80011e8:	2041      	movs	r0, #65	; 0x41
 80011ea:	f7ff ff75 	bl	80010d8 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_FIFO_TH, 0x01);			// FIFO threshold = 1
 80011ee:	2101      	movs	r1, #1
 80011f0:	204a      	movs	r0, #74	; 0x4a
 80011f2:	f7ff ff71 	bl	80010d8 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_FIFO_STA, 0x01);			// FIFO reset enable
 80011f6:	2101      	movs	r1, #1
 80011f8:	204b      	movs	r0, #75	; 0x4b
 80011fa:	f7ff ff6d 	bl	80010d8 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_FIFO_STA, 0x00);			// FIFO reset disable
 80011fe:	2100      	movs	r1, #0
 8001200:	204b      	movs	r0, #75	; 0x4b
 8001202:	f7ff ff69 	bl	80010d8 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_TSC_FRACT_XYZ, 0x07);	// Z axis data format
 8001206:	2107      	movs	r1, #7
 8001208:	2056      	movs	r0, #86	; 0x56
 800120a:	f7ff ff65 	bl	80010d8 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_TSC_I_DRIVE, 0x01);		// max 50mA touchscreen line current
 800120e:	2101      	movs	r1, #1
 8001210:	2058      	movs	r0, #88	; 0x58
 8001212:	f7ff ff61 	bl	80010d8 <STMPE610_Write>

	STMPE610_Write(STMPE610_REG_TSC_CTRL, 0x30);			// X&Y&Z, 16 reading window
 8001216:	2130      	movs	r1, #48	; 0x30
 8001218:	2040      	movs	r0, #64	; 0x40
 800121a:	f7ff ff5d 	bl	80010d8 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_TSC_CTRL, 0x31);			// X&Y&Z, 16 reading window, TSC enable
 800121e:	2131      	movs	r1, #49	; 0x31
 8001220:	2040      	movs	r0, #64	; 0x40
 8001222:	f7ff ff59 	bl	80010d8 <STMPE610_Write>
	//STMPE610_write_reg(STMPE610_REG_TSC_CTRL, 0x32);						// X&Y, 16 reading window
	//STMPE610_write_reg(TMPE610_REG_TSC_CTRL, 0x33);						// X&Y, 16 reading window, TSC enable

	STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);		// Clear all interrupts
 8001226:	21ff      	movs	r1, #255	; 0xff
 8001228:	200b      	movs	r0, #11
 800122a:	f7ff ff55 	bl	80010d8 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_INT_CTRL, 0x01);		// Level interrupt, enable interrupts
 800122e:	2101      	movs	r1, #1
 8001230:	2009      	movs	r0, #9
 8001232:	f7ff ff51 	bl	80010d8 <STMPE610_Write>
}
 8001236:	bd08      	pop	{r3, pc}

08001238 <STMPE610_read_xyz>:

uint8_t STMPE610_read_xyz(void)
{
 8001238:	b508      	push	{r3, lr}
	uint8_t	status;

	// Is there something in the fifo
	status = STMPE610_ReadByte(STMPE610_REG_FIFO_STA);
 800123a:	204b      	movs	r0, #75	; 0x4b
 800123c:	f7ff ff62 	bl	8001104 <STMPE610_ReadByte>
	if ((status & 0x20))
 8001240:	f010 0f20 	tst.w	r0, #32
 8001244:	d012      	beq.n	800126c <STMPE610_read_xyz+0x34>
	{
		STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);
 8001246:	21ff      	movs	r1, #255	; 0xff
 8001248:	200b      	movs	r0, #11
 800124a:	f7ff ff45 	bl	80010d8 <STMPE610_Write>
		if (!(STMPE610_ReadByte(STMPE610_REG_TSC_CTRL) & 0x80))
 800124e:	2040      	movs	r0, #64	; 0x40
 8001250:	f7ff ff58 	bl	8001104 <STMPE610_ReadByte>
 8001254:	f010 0f80 	tst.w	r0, #128	; 0x80
 8001258:	d125      	bne.n	80012a6 <STMPE610_read_xyz+0x6e>
		{
			x=0;
 800125a:	2300      	movs	r3, #0
 800125c:	4a13      	ldr	r2, [pc, #76]	; (80012ac <STMPE610_read_xyz+0x74>)
 800125e:	8013      	strh	r3, [r2, #0]
			y=0;
 8001260:	4a13      	ldr	r2, [pc, #76]	; (80012b0 <STMPE610_read_xyz+0x78>)
 8001262:	8013      	strh	r3, [r2, #0]
			z=0;
 8001264:	4a13      	ldr	r2, [pc, #76]	; (80012b4 <STMPE610_read_xyz+0x7c>)
 8001266:	8013      	strh	r3, [r2, #0]
	//		UART8_printf("true");
			return TRUE;
 8001268:	2001      	movs	r0, #1
 800126a:	e01b      	b.n	80012a4 <STMPE610_read_xyz+0x6c>
		return FALSE;

	}

	// Time to get some readings
	x = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_X);
 800126c:	204d      	movs	r0, #77	; 0x4d
 800126e:	f7ff ff6f 	bl	8001150 <STMPE610_ReadWord>
 8001272:	4b0e      	ldr	r3, [pc, #56]	; (80012ac <STMPE610_read_xyz+0x74>)
 8001274:	8018      	strh	r0, [r3, #0]
	y = STMPE610_ReadWord(STMPE610_REG_TSC_DATA_Y);
 8001276:	204f      	movs	r0, #79	; 0x4f
 8001278:	f7ff ff6a 	bl	8001150 <STMPE610_ReadWord>
 800127c:	4b0c      	ldr	r3, [pc, #48]	; (80012b0 <STMPE610_read_xyz+0x78>)
 800127e:	8018      	strh	r0, [r3, #0]
	z = STMPE610_ReadByte(STMPE610_REG_TSC_DATA_Z);
 8001280:	2051      	movs	r0, #81	; 0x51
 8001282:	f7ff ff3f 	bl	8001104 <STMPE610_ReadByte>
 8001286:	4b0b      	ldr	r3, [pc, #44]	; (80012b4 <STMPE610_read_xyz+0x7c>)
 8001288:	8018      	strh	r0, [r3, #0]

//	UART8_printf("%d, %d, %d\n\r", x,y,z );

	STMPE610_Write(STMPE610_REG_FIFO_STA, 0x01);		// FIFO reset enable
 800128a:	2101      	movs	r1, #1
 800128c:	204b      	movs	r0, #75	; 0x4b
 800128e:	f7ff ff23 	bl	80010d8 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_FIFO_STA, 0x00);		// FIFO reset disable
 8001292:	2100      	movs	r1, #0
 8001294:	204b      	movs	r0, #75	; 0x4b
 8001296:	f7ff ff1f 	bl	80010d8 <STMPE610_Write>
	STMPE610_Write(STMPE610_REG_INT_STA, 0xFF);
 800129a:	21ff      	movs	r1, #255	; 0xff
 800129c:	200b      	movs	r0, #11
 800129e:	f7ff ff1b 	bl	80010d8 <STMPE610_Write>


	return TRUE;
 80012a2:	2001      	movs	r0, #1
}
 80012a4:	bd08      	pop	{r3, pc}
		return FALSE;
 80012a6:	2000      	movs	r0, #0
 80012a8:	e7fc      	b.n	80012a4 <STMPE610_read_xyz+0x6c>
 80012aa:	bf00      	nop
 80012ac:	20000460 	.word	0x20000460
 80012b0:	20000462 	.word	0x20000462
 80012b4:	20000464 	.word	0x20000464

080012b8 <STMPE610_GetX_TOUCH>:

uint16_t STMPE610_GetX_TOUCH(void)
{
 80012b8:	b508      	push	{r3, lr}
	float pom=0;

	pom=(float)x;
 80012ba:	4b13      	ldr	r3, [pc, #76]	; (8001308 <STMPE610_GetX_TOUCH+0x50>)
 80012bc:	881b      	ldrh	r3, [r3, #0]
 80012be:	ee07 3a90 	vmov	s15, r3
 80012c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
	pom=480.0*(pom-GUI_TOUCH_AD_LEFT)/(GUI_TOUCH_AD_RIGHT-GUI_TOUCH_AD_LEFT);
 80012c6:	ed9f 7a11 	vldr	s14, [pc, #68]	; 800130c <STMPE610_GetX_TOUCH+0x54>
 80012ca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80012ce:	ee17 0a90 	vmov	r0, s15
 80012d2:	f7ff f905 	bl	80004e0 <__aeabi_f2d>
 80012d6:	2200      	movs	r2, #0
 80012d8:	4b0d      	ldr	r3, [pc, #52]	; (8001310 <STMPE610_GetX_TOUCH+0x58>)
 80012da:	f7ff f959 	bl	8000590 <__aeabi_dmul>
 80012de:	a308      	add	r3, pc, #32	; (adr r3, 8001300 <STMPE610_GetX_TOUCH+0x48>)
 80012e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012e4:	f7ff fa7e 	bl	80007e4 <__aeabi_ddiv>
 80012e8:	f7ff fb8c 	bl	8000a04 <__aeabi_d2f>
	return (uint16_t)pom;
 80012ec:	ee07 0a90 	vmov	s15, r0
 80012f0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
}
 80012f4:	ee17 3a90 	vmov	r3, s15
 80012f8:	b298      	uxth	r0, r3
 80012fa:	bd08      	pop	{r3, pc}
 80012fc:	f3af 8000 	nop.w
 8001300:	00000000 	.word	0x00000000
 8001304:	40adc400 	.word	0x40adc400
 8001308:	20000460 	.word	0x20000460
 800130c:	43120000 	.word	0x43120000
 8001310:	407e0000 	.word	0x407e0000
 8001314:	00000000 	.word	0x00000000

08001318 <STMPE610_GetY_TOUCH>:
uint16_t STMPE610_GetY_TOUCH(void)
{
 8001318:	b508      	push	{r3, lr}
	float pom=0;

	pom=(float)y;
 800131a:	4b13      	ldr	r3, [pc, #76]	; (8001368 <STMPE610_GetY_TOUCH+0x50>)
 800131c:	881b      	ldrh	r3, [r3, #0]
 800131e:	ee07 3a90 	vmov	s15, r3
 8001322:	eef8 7a67 	vcvt.f32.u32	s15, s15
	pom=272.0*(pom-GUI_TOUCH_AD_TOP)/(GUI_TOUCH_AD_BOTTOM-GUI_TOUCH_AD_TOP);
 8001326:	ed9f 7a11 	vldr	s14, [pc, #68]	; 800136c <STMPE610_GetY_TOUCH+0x54>
 800132a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800132e:	ee17 0a90 	vmov	r0, s15
 8001332:	f7ff f8d5 	bl	80004e0 <__aeabi_f2d>
 8001336:	2200      	movs	r2, #0
 8001338:	4b0d      	ldr	r3, [pc, #52]	; (8001370 <STMPE610_GetY_TOUCH+0x58>)
 800133a:	f7ff f929 	bl	8000590 <__aeabi_dmul>
 800133e:	a308      	add	r3, pc, #32	; (adr r3, 8001360 <STMPE610_GetY_TOUCH+0x48>)
 8001340:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001344:	f7ff fa4e 	bl	80007e4 <__aeabi_ddiv>
 8001348:	f7ff fb5c 	bl	8000a04 <__aeabi_d2f>
	return (uint16_t)pom;
 800134c:	ee07 0a90 	vmov	s15, r0
 8001350:	eefc 7ae7 	vcvt.u32.f32	s15, s15
}
 8001354:	ee17 3a90 	vmov	r3, s15
 8001358:	b298      	uxth	r0, r3
 800135a:	bd08      	pop	{r3, pc}
 800135c:	f3af 8000 	nop.w
 8001360:	00000000 	.word	0x00000000
 8001364:	40abea00 	.word	0x40abea00
 8001368:	20000462 	.word	0x20000462
 800136c:	43870000 	.word	0x43870000
 8001370:	40710000 	.word	0x40710000

08001374 <STMPE610_GetX_TOUCH_RAW>:
}

uint16_t STMPE610_GetX_TOUCH_RAW(void)
{
	return x;
}
 8001374:	4b01      	ldr	r3, [pc, #4]	; (800137c <STMPE610_GetX_TOUCH_RAW+0x8>)
 8001376:	8818      	ldrh	r0, [r3, #0]
 8001378:	4770      	bx	lr
 800137a:	bf00      	nop
 800137c:	20000460 	.word	0x20000460

08001380 <STMPE610_GetY_TOUCH_RAW>:
uint16_t STMPE610_GetY_TOUCH_RAW(void)
{
	return y;
}
 8001380:	4b01      	ldr	r3, [pc, #4]	; (8001388 <STMPE610_GetY_TOUCH_RAW+0x8>)
 8001382:	8818      	ldrh	r0, [r3, #0]
 8001384:	4770      	bx	lr
 8001386:	bf00      	nop
 8001388:	20000462 	.word	0x20000462

0800138c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800138c:	b510      	push	{r4, lr}
 800138e:	4604      	mov	r4, r0
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001390:	4b0e      	ldr	r3, [pc, #56]	; (80013cc <HAL_InitTick+0x40>)
 8001392:	7818      	ldrb	r0, [r3, #0]
 8001394:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001398:	fbb3 f3f0 	udiv	r3, r3, r0
 800139c:	4a0c      	ldr	r2, [pc, #48]	; (80013d0 <HAL_InitTick+0x44>)
 800139e:	6810      	ldr	r0, [r2, #0]
 80013a0:	fbb0 f0f3 	udiv	r0, r0, r3
 80013a4:	f000 f89c 	bl	80014e0 <HAL_SYSTICK_Config>
 80013a8:	b968      	cbnz	r0, 80013c6 <HAL_InitTick+0x3a>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80013aa:	2c0f      	cmp	r4, #15
 80013ac:	d901      	bls.n	80013b2 <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 80013ae:	2001      	movs	r0, #1
 80013b0:	e00a      	b.n	80013c8 <HAL_InitTick+0x3c>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80013b2:	2200      	movs	r2, #0
 80013b4:	4621      	mov	r1, r4
 80013b6:	f04f 30ff 	mov.w	r0, #4294967295
 80013ba:	f000 f851 	bl	8001460 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80013be:	4b05      	ldr	r3, [pc, #20]	; (80013d4 <HAL_InitTick+0x48>)
 80013c0:	601c      	str	r4, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80013c2:	2000      	movs	r0, #0
 80013c4:	e000      	b.n	80013c8 <HAL_InitTick+0x3c>
    return HAL_ERROR;
 80013c6:	2001      	movs	r0, #1
}
 80013c8:	bd10      	pop	{r4, pc}
 80013ca:	bf00      	nop
 80013cc:	20000000 	.word	0x20000000
 80013d0:	20000118 	.word	0x20000118
 80013d4:	20000004 	.word	0x20000004

080013d8 <HAL_Init>:
{
 80013d8:	b508      	push	{r3, lr}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80013da:	2003      	movs	r0, #3
 80013dc:	f000 f82e 	bl	800143c <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 80013e0:	2000      	movs	r0, #0
 80013e2:	f7ff ffd3 	bl	800138c <HAL_InitTick>
  HAL_MspInit();
 80013e6:	f006 f845 	bl	8007474 <HAL_MspInit>
}
 80013ea:	2000      	movs	r0, #0
 80013ec:	bd08      	pop	{r3, pc}
	...

080013f0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80013f0:	4a03      	ldr	r2, [pc, #12]	; (8001400 <HAL_IncTick+0x10>)
 80013f2:	6811      	ldr	r1, [r2, #0]
 80013f4:	4b03      	ldr	r3, [pc, #12]	; (8001404 <HAL_IncTick+0x14>)
 80013f6:	781b      	ldrb	r3, [r3, #0]
 80013f8:	440b      	add	r3, r1
 80013fa:	6013      	str	r3, [r2, #0]
}
 80013fc:	4770      	bx	lr
 80013fe:	bf00      	nop
 8001400:	200197b0 	.word	0x200197b0
 8001404:	20000000 	.word	0x20000000

08001408 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8001408:	4b01      	ldr	r3, [pc, #4]	; (8001410 <HAL_GetTick+0x8>)
 800140a:	6818      	ldr	r0, [r3, #0]
}
 800140c:	4770      	bx	lr
 800140e:	bf00      	nop
 8001410:	200197b0 	.word	0x200197b0

08001414 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001414:	b538      	push	{r3, r4, r5, lr}
 8001416:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8001418:	f7ff fff6 	bl	8001408 <HAL_GetTick>
 800141c:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800141e:	f1b4 3fff 	cmp.w	r4, #4294967295
 8001422:	d002      	beq.n	800142a <HAL_Delay+0x16>
  {
    wait += (uint32_t)(uwTickFreq);
 8001424:	4b04      	ldr	r3, [pc, #16]	; (8001438 <HAL_Delay+0x24>)
 8001426:	781b      	ldrb	r3, [r3, #0]
 8001428:	441c      	add	r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 800142a:	f7ff ffed 	bl	8001408 <HAL_GetTick>
 800142e:	1b40      	subs	r0, r0, r5
 8001430:	42a0      	cmp	r0, r4
 8001432:	d3fa      	bcc.n	800142a <HAL_Delay+0x16>
  {
  }
}
 8001434:	bd38      	pop	{r3, r4, r5, pc}
 8001436:	bf00      	nop
 8001438:	20000000 	.word	0x20000000

0800143c <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800143c:	4906      	ldr	r1, [pc, #24]	; (8001458 <HAL_NVIC_SetPriorityGrouping+0x1c>)
 800143e:	68cb      	ldr	r3, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001440:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001444:	041b      	lsls	r3, r3, #16
 8001446:	0c1b      	lsrs	r3, r3, #16
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001448:	0200      	lsls	r0, r0, #8
 800144a:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800144e:	4303      	orrs	r3, r0
  reg_value  =  (reg_value                                   |
 8001450:	4a02      	ldr	r2, [pc, #8]	; (800145c <HAL_NVIC_SetPriorityGrouping+0x20>)
 8001452:	431a      	orrs	r2, r3
  SCB->AIRCR =  reg_value;
 8001454:	60ca      	str	r2, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8001456:	4770      	bx	lr
 8001458:	e000ed00 	.word	0xe000ed00
 800145c:	05fa0000 	.word	0x05fa0000

08001460 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001460:	b430      	push	{r4, r5}
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001462:	4b15      	ldr	r3, [pc, #84]	; (80014b8 <HAL_NVIC_SetPriority+0x58>)
 8001464:	68db      	ldr	r3, [r3, #12]
 8001466:	f3c3 2302 	ubfx	r3, r3, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800146a:	f1c3 0407 	rsb	r4, r3, #7
 800146e:	2c04      	cmp	r4, #4
 8001470:	bf28      	it	cs
 8001472:	2404      	movcs	r4, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001474:	1d1d      	adds	r5, r3, #4
 8001476:	2d06      	cmp	r5, #6
 8001478:	d914      	bls.n	80014a4 <HAL_NVIC_SetPriority+0x44>
 800147a:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800147c:	f04f 35ff 	mov.w	r5, #4294967295
 8001480:	fa05 f404 	lsl.w	r4, r5, r4
 8001484:	ea21 0104 	bic.w	r1, r1, r4
 8001488:	4099      	lsls	r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800148a:	fa05 f303 	lsl.w	r3, r5, r3
 800148e:	ea22 0303 	bic.w	r3, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001492:	4319      	orrs	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8001494:	2800      	cmp	r0, #0
 8001496:	db07      	blt.n	80014a8 <HAL_NVIC_SetPriority+0x48>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001498:	0109      	lsls	r1, r1, #4
 800149a:	b2c9      	uxtb	r1, r1
 800149c:	4b07      	ldr	r3, [pc, #28]	; (80014bc <HAL_NVIC_SetPriority+0x5c>)
 800149e:	5419      	strb	r1, [r3, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80014a0:	bc30      	pop	{r4, r5}
 80014a2:	4770      	bx	lr
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80014a4:	2300      	movs	r3, #0
 80014a6:	e7e9      	b.n	800147c <HAL_NVIC_SetPriority+0x1c>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80014a8:	f000 000f 	and.w	r0, r0, #15
 80014ac:	0109      	lsls	r1, r1, #4
 80014ae:	b2c9      	uxtb	r1, r1
 80014b0:	4b03      	ldr	r3, [pc, #12]	; (80014c0 <HAL_NVIC_SetPriority+0x60>)
 80014b2:	5419      	strb	r1, [r3, r0]
 80014b4:	e7f4      	b.n	80014a0 <HAL_NVIC_SetPriority+0x40>
 80014b6:	bf00      	nop
 80014b8:	e000ed00 	.word	0xe000ed00
 80014bc:	e000e400 	.word	0xe000e400
 80014c0:	e000ed14 	.word	0xe000ed14

080014c4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80014c4:	2800      	cmp	r0, #0
 80014c6:	db07      	blt.n	80014d8 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014c8:	f000 021f 	and.w	r2, r0, #31
 80014cc:	0940      	lsrs	r0, r0, #5
 80014ce:	2301      	movs	r3, #1
 80014d0:	4093      	lsls	r3, r2
 80014d2:	4a02      	ldr	r2, [pc, #8]	; (80014dc <HAL_NVIC_EnableIRQ+0x18>)
 80014d4:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80014d8:	4770      	bx	lr
 80014da:	bf00      	nop
 80014dc:	e000e100 	.word	0xe000e100

080014e0 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80014e0:	3801      	subs	r0, #1
 80014e2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80014e6:	d20a      	bcs.n	80014fe <HAL_SYSTICK_Config+0x1e>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80014e8:	4b06      	ldr	r3, [pc, #24]	; (8001504 <HAL_SYSTICK_Config+0x24>)
 80014ea:	6058      	str	r0, [r3, #4]
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80014ec:	4a06      	ldr	r2, [pc, #24]	; (8001508 <HAL_SYSTICK_Config+0x28>)
 80014ee:	21f0      	movs	r1, #240	; 0xf0
 80014f0:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80014f4:	2000      	movs	r0, #0
 80014f6:	6098      	str	r0, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80014f8:	2207      	movs	r2, #7
 80014fa:	601a      	str	r2, [r3, #0]
 80014fc:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 80014fe:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8001500:	4770      	bx	lr
 8001502:	bf00      	nop
 8001504:	e000e010 	.word	0xe000e010
 8001508:	e000ed00 	.word	0xe000ed00

0800150c <HAL_SYSTICK_IRQHandler>:
/**
  * @brief  This function handles SYSTICK interrupt request.
  * @retval None
  */
void HAL_SYSTICK_IRQHandler(void)
{
 800150c:	b508      	push	{r3, lr}
  HAL_SYSTICK_Callback();
 800150e:	f005 fda5 	bl	800705c <HAL_SYSTICK_Callback>
}
 8001512:	bd08      	pop	{r3, pc}

08001514 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8001514:	6802      	ldr	r2, [r0, #0]
 8001516:	b2d3      	uxtb	r3, r2
 8001518:	3b10      	subs	r3, #16
 800151a:	4909      	ldr	r1, [pc, #36]	; (8001540 <DMA_CalcBaseAndBitshift+0x2c>)
 800151c:	fba1 1303 	umull	r1, r3, r1, r3
 8001520:	091b      	lsrs	r3, r3, #4
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8001522:	4908      	ldr	r1, [pc, #32]	; (8001544 <DMA_CalcBaseAndBitshift+0x30>)
 8001524:	5cc9      	ldrb	r1, [r1, r3]
 8001526:	65c1      	str	r1, [r0, #92]	; 0x5c
  
  if (stream_number > 3U)
 8001528:	2b03      	cmp	r3, #3
 800152a:	d804      	bhi.n	8001536 <DMA_CalcBaseAndBitshift+0x22>
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 800152c:	4b06      	ldr	r3, [pc, #24]	; (8001548 <DMA_CalcBaseAndBitshift+0x34>)
 800152e:	4013      	ands	r3, r2
 8001530:	6583      	str	r3, [r0, #88]	; 0x58
  }
  
  return hdma->StreamBaseAddress;
}
 8001532:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8001534:	4770      	bx	lr
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8001536:	4b04      	ldr	r3, [pc, #16]	; (8001548 <DMA_CalcBaseAndBitshift+0x34>)
 8001538:	4013      	ands	r3, r2
 800153a:	3304      	adds	r3, #4
 800153c:	6583      	str	r3, [r0, #88]	; 0x58
 800153e:	e7f8      	b.n	8001532 <DMA_CalcBaseAndBitshift+0x1e>
 8001540:	aaaaaaab 	.word	0xaaaaaaab
 8001544:	080163b8 	.word	0x080163b8
 8001548:	fffffc00 	.word	0xfffffc00

0800154c <DMA_CheckFifoParam>:
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
 800154c:	6a83      	ldr	r3, [r0, #40]	; 0x28
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800154e:	6982      	ldr	r2, [r0, #24]
 8001550:	b992      	cbnz	r2, 8001578 <DMA_CheckFifoParam+0x2c>
  {
    switch (tmp)
 8001552:	2b01      	cmp	r3, #1
 8001554:	d00a      	beq.n	800156c <DMA_CheckFifoParam+0x20>
 8001556:	b11b      	cbz	r3, 8001560 <DMA_CheckFifoParam+0x14>
 8001558:	2b02      	cmp	r3, #2
 800155a:	d001      	beq.n	8001560 <DMA_CheckFifoParam+0x14>
  HAL_StatusTypeDef status = HAL_OK;
 800155c:	2000      	movs	r0, #0
 800155e:	4770      	bx	lr
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8001560:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001562:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
 8001566:	d12c      	bne.n	80015c2 <DMA_CheckFifoParam+0x76>
  HAL_StatusTypeDef status = HAL_OK;
 8001568:	2000      	movs	r0, #0
 800156a:	4770      	bx	lr
      {
        status = HAL_ERROR;
      }
      break;
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800156c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800156e:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8001572:	d028      	beq.n	80015c6 <DMA_CheckFifoParam+0x7a>
  HAL_StatusTypeDef status = HAL_OK;
 8001574:	2000      	movs	r0, #0
 8001576:	4770      	bx	lr
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8001578:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800157c:	d005      	beq.n	800158a <DMA_CheckFifoParam+0x3e>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 800157e:	2b02      	cmp	r3, #2
 8001580:	d929      	bls.n	80015d6 <DMA_CheckFifoParam+0x8a>
 8001582:	2b03      	cmp	r3, #3
 8001584:	d015      	beq.n	80015b2 <DMA_CheckFifoParam+0x66>
  HAL_StatusTypeDef status = HAL_OK;
 8001586:	2000      	movs	r0, #0
 8001588:	4770      	bx	lr
    switch (tmp)
 800158a:	2b03      	cmp	r3, #3
 800158c:	d803      	bhi.n	8001596 <DMA_CheckFifoParam+0x4a>
 800158e:	e8df f003 	tbb	[pc, r3]
 8001592:	041c      	.short	0x041c
 8001594:	0a1c      	.short	0x0a1c
  HAL_StatusTypeDef status = HAL_OK;
 8001596:	2000      	movs	r0, #0
 8001598:	4770      	bx	lr
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800159a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800159c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
 80015a0:	d115      	bne.n	80015ce <DMA_CheckFifoParam+0x82>
  HAL_StatusTypeDef status = HAL_OK;
 80015a2:	2000      	movs	r0, #0
 80015a4:	4770      	bx	lr
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80015a6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80015a8:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80015ac:	d011      	beq.n	80015d2 <DMA_CheckFifoParam+0x86>
  HAL_StatusTypeDef status = HAL_OK;
 80015ae:	2000      	movs	r0, #0
 80015b0:	4770      	bx	lr
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80015b2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80015b4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
 80015b8:	d001      	beq.n	80015be <DMA_CheckFifoParam+0x72>
      {
        status = HAL_ERROR;
 80015ba:	2001      	movs	r0, #1
      break;
    }
  } 
  
  return status; 
}
 80015bc:	4770      	bx	lr
  HAL_StatusTypeDef status = HAL_OK;
 80015be:	2000      	movs	r0, #0
 80015c0:	4770      	bx	lr
        status = HAL_ERROR;
 80015c2:	2001      	movs	r0, #1
 80015c4:	4770      	bx	lr
        status = HAL_ERROR;
 80015c6:	2001      	movs	r0, #1
 80015c8:	4770      	bx	lr
      status = HAL_ERROR;
 80015ca:	2001      	movs	r0, #1
 80015cc:	4770      	bx	lr
        status = HAL_ERROR;
 80015ce:	2001      	movs	r0, #1
 80015d0:	4770      	bx	lr
        status = HAL_ERROR;
 80015d2:	2001      	movs	r0, #1
 80015d4:	4770      	bx	lr
      status = HAL_ERROR;
 80015d6:	2001      	movs	r0, #1
 80015d8:	4770      	bx	lr
	...

080015dc <HAL_DMA_Init>:
{
 80015dc:	b570      	push	{r4, r5, r6, lr}
 80015de:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80015e0:	f7ff ff12 	bl	8001408 <HAL_GetTick>
  if(hdma == NULL)
 80015e4:	2c00      	cmp	r4, #0
 80015e6:	d05b      	beq.n	80016a0 <HAL_DMA_Init+0xc4>
 80015e8:	4605      	mov	r5, r0
  hdma->State = HAL_DMA_STATE_BUSY;
 80015ea:	2302      	movs	r3, #2
 80015ec:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_UNLOCK(hdma);
 80015f0:	2300      	movs	r3, #0
 80015f2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 80015f6:	6822      	ldr	r2, [r4, #0]
 80015f8:	6813      	ldr	r3, [r2, #0]
 80015fa:	f023 0301 	bic.w	r3, r3, #1
 80015fe:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8001600:	6823      	ldr	r3, [r4, #0]
 8001602:	681a      	ldr	r2, [r3, #0]
 8001604:	f012 0f01 	tst.w	r2, #1
 8001608:	d00a      	beq.n	8001620 <HAL_DMA_Init+0x44>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800160a:	f7ff fefd 	bl	8001408 <HAL_GetTick>
 800160e:	1b40      	subs	r0, r0, r5
 8001610:	2805      	cmp	r0, #5
 8001612:	d9f5      	bls.n	8001600 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8001614:	2320      	movs	r3, #32
 8001616:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8001618:	2003      	movs	r0, #3
 800161a:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 800161e:	bd70      	pop	{r4, r5, r6, pc}
  tmp = hdma->Instance->CR;
 8001620:	681a      	ldr	r2, [r3, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8001622:	4820      	ldr	r0, [pc, #128]	; (80016a4 <HAL_DMA_Init+0xc8>)
 8001624:	4010      	ands	r0, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8001626:	6861      	ldr	r1, [r4, #4]
 8001628:	68a2      	ldr	r2, [r4, #8]
 800162a:	430a      	orrs	r2, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800162c:	68e1      	ldr	r1, [r4, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800162e:	430a      	orrs	r2, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8001630:	6921      	ldr	r1, [r4, #16]
 8001632:	430a      	orrs	r2, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8001634:	6961      	ldr	r1, [r4, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8001636:	430a      	orrs	r2, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8001638:	69a1      	ldr	r1, [r4, #24]
 800163a:	430a      	orrs	r2, r1
          hdma->Init.Mode                | hdma->Init.Priority;
 800163c:	69e1      	ldr	r1, [r4, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800163e:	430a      	orrs	r2, r1
          hdma->Init.Mode                | hdma->Init.Priority;
 8001640:	6a21      	ldr	r1, [r4, #32]
 8001642:	430a      	orrs	r2, r1
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8001644:	4302      	orrs	r2, r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8001646:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8001648:	2904      	cmp	r1, #4
 800164a:	d01e      	beq.n	800168a <HAL_DMA_Init+0xae>
  hdma->Instance->CR = tmp;  
 800164c:	601a      	str	r2, [r3, #0]
  tmp = hdma->Instance->FCR;
 800164e:	6826      	ldr	r6, [r4, #0]
 8001650:	6975      	ldr	r5, [r6, #20]
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8001652:	f025 0507 	bic.w	r5, r5, #7
  tmp |= hdma->Init.FIFOMode;
 8001656:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001658:	431d      	orrs	r5, r3
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800165a:	2b04      	cmp	r3, #4
 800165c:	d107      	bne.n	800166e <HAL_DMA_Init+0x92>
    tmp |= hdma->Init.FIFOThreshold;
 800165e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8001660:	431d      	orrs	r5, r3
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8001662:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001664:	b11b      	cbz	r3, 800166e <HAL_DMA_Init+0x92>
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 8001666:	4620      	mov	r0, r4
 8001668:	f7ff ff70 	bl	800154c <DMA_CheckFifoParam>
 800166c:	b990      	cbnz	r0, 8001694 <HAL_DMA_Init+0xb8>
  hdma->Instance->FCR = tmp;
 800166e:	6175      	str	r5, [r6, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8001670:	4620      	mov	r0, r4
 8001672:	f7ff ff4f 	bl	8001514 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001676:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001678:	233f      	movs	r3, #63	; 0x3f
 800167a:	4093      	lsls	r3, r2
 800167c:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800167e:	2000      	movs	r0, #0
 8001680:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8001682:	2301      	movs	r3, #1
 8001684:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8001688:	e7c9      	b.n	800161e <HAL_DMA_Init+0x42>
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800168a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800168c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800168e:	4301      	orrs	r1, r0
 8001690:	430a      	orrs	r2, r1
 8001692:	e7db      	b.n	800164c <HAL_DMA_Init+0x70>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8001694:	2340      	movs	r3, #64	; 0x40
 8001696:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8001698:	2001      	movs	r0, #1
 800169a:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        return HAL_ERROR; 
 800169e:	e7be      	b.n	800161e <HAL_DMA_Init+0x42>
    return HAL_ERROR;
 80016a0:	2001      	movs	r0, #1
 80016a2:	e7bc      	b.n	800161e <HAL_DMA_Init+0x42>
 80016a4:	f010803f 	.word	0xf010803f

080016a8 <HAL_DMA_Abort>:
{
 80016a8:	b570      	push	{r4, r5, r6, lr}
 80016aa:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80016ac:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 80016ae:	f7ff feab 	bl	8001408 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80016b2:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 80016b6:	b2db      	uxtb	r3, r3
 80016b8:	2b02      	cmp	r3, #2
 80016ba:	d006      	beq.n	80016ca <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80016bc:	2380      	movs	r3, #128	; 0x80
 80016be:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 80016c0:	2300      	movs	r3, #0
 80016c2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 80016c6:	2001      	movs	r0, #1
}
 80016c8:	bd70      	pop	{r4, r5, r6, pc}
 80016ca:	4605      	mov	r5, r0
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80016cc:	6822      	ldr	r2, [r4, #0]
 80016ce:	6813      	ldr	r3, [r2, #0]
 80016d0:	f023 0316 	bic.w	r3, r3, #22
 80016d4:	6013      	str	r3, [r2, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 80016d6:	6822      	ldr	r2, [r4, #0]
 80016d8:	6953      	ldr	r3, [r2, #20]
 80016da:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80016de:	6153      	str	r3, [r2, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80016e0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80016e2:	b1e3      	cbz	r3, 800171e <HAL_DMA_Abort+0x76>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 80016e4:	6822      	ldr	r2, [r4, #0]
 80016e6:	6813      	ldr	r3, [r2, #0]
 80016e8:	f023 0308 	bic.w	r3, r3, #8
 80016ec:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
 80016ee:	6822      	ldr	r2, [r4, #0]
 80016f0:	6813      	ldr	r3, [r2, #0]
 80016f2:	f023 0301 	bic.w	r3, r3, #1
 80016f6:	6013      	str	r3, [r2, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80016f8:	6823      	ldr	r3, [r4, #0]
 80016fa:	681b      	ldr	r3, [r3, #0]
 80016fc:	f013 0f01 	tst.w	r3, #1
 8001700:	d011      	beq.n	8001726 <HAL_DMA_Abort+0x7e>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8001702:	f7ff fe81 	bl	8001408 <HAL_GetTick>
 8001706:	1b40      	subs	r0, r0, r5
 8001708:	2805      	cmp	r0, #5
 800170a:	d9f5      	bls.n	80016f8 <HAL_DMA_Abort+0x50>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800170c:	2320      	movs	r3, #32
 800170e:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8001710:	2003      	movs	r0, #3
 8001712:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8001716:	2300      	movs	r3, #0
 8001718:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 800171c:	e7d4      	b.n	80016c8 <HAL_DMA_Abort+0x20>
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800171e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8001720:	2b00      	cmp	r3, #0
 8001722:	d1df      	bne.n	80016e4 <HAL_DMA_Abort+0x3c>
 8001724:	e7e3      	b.n	80016ee <HAL_DMA_Abort+0x46>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001726:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001728:	233f      	movs	r3, #63	; 0x3f
 800172a:	4093      	lsls	r3, r2
 800172c:	60b3      	str	r3, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800172e:	2301      	movs	r3, #1
 8001730:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8001734:	2000      	movs	r0, #0
 8001736:	f884 0034 	strb.w	r0, [r4, #52]	; 0x34
  return HAL_OK;
 800173a:	e7c5      	b.n	80016c8 <HAL_DMA_Abort+0x20>

0800173c <HAL_DMA_Abort_IT>:
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800173c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8001740:	b2db      	uxtb	r3, r3
 8001742:	2b02      	cmp	r3, #2
 8001744:	d003      	beq.n	800174e <HAL_DMA_Abort_IT+0x12>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8001746:	2380      	movs	r3, #128	; 0x80
 8001748:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800174a:	2001      	movs	r0, #1
 800174c:	4770      	bx	lr
    hdma->State = HAL_DMA_STATE_ABORT;
 800174e:	2305      	movs	r3, #5
 8001750:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8001754:	6802      	ldr	r2, [r0, #0]
 8001756:	6813      	ldr	r3, [r2, #0]
 8001758:	f023 0301 	bic.w	r3, r3, #1
 800175c:	6013      	str	r3, [r2, #0]
  return HAL_OK;
 800175e:	2000      	movs	r0, #0
}
 8001760:	4770      	bx	lr
	...

08001764 <HAL_DMA_IRQHandler>:
{
 8001764:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001766:	b083      	sub	sp, #12
 8001768:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
 800176a:	2300      	movs	r3, #0
 800176c:	9301      	str	r3, [sp, #4]
  uint32_t timeout = SystemCoreClock / 9600;
 800176e:	4b72      	ldr	r3, [pc, #456]	; (8001938 <HAL_DMA_IRQHandler+0x1d4>)
 8001770:	681d      	ldr	r5, [r3, #0]
 8001772:	4b72      	ldr	r3, [pc, #456]	; (800193c <HAL_DMA_IRQHandler+0x1d8>)
 8001774:	fba3 3505 	umull	r3, r5, r3, r5
 8001778:	0aad      	lsrs	r5, r5, #10
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800177a:	6d87      	ldr	r7, [r0, #88]	; 0x58
  tmpisr = regs->ISR;
 800177c:	683e      	ldr	r6, [r7, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800177e:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8001780:	2308      	movs	r3, #8
 8001782:	4093      	lsls	r3, r2
 8001784:	4233      	tst	r3, r6
 8001786:	d010      	beq.n	80017aa <HAL_DMA_IRQHandler+0x46>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8001788:	6803      	ldr	r3, [r0, #0]
 800178a:	681a      	ldr	r2, [r3, #0]
 800178c:	f012 0f04 	tst.w	r2, #4
 8001790:	d00b      	beq.n	80017aa <HAL_DMA_IRQHandler+0x46>
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8001792:	681a      	ldr	r2, [r3, #0]
 8001794:	f022 0204 	bic.w	r2, r2, #4
 8001798:	601a      	str	r2, [r3, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 800179a:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 800179c:	2308      	movs	r3, #8
 800179e:	4093      	lsls	r3, r2
 80017a0:	60bb      	str	r3, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 80017a2:	6d43      	ldr	r3, [r0, #84]	; 0x54
 80017a4:	f043 0301 	orr.w	r3, r3, #1
 80017a8:	6543      	str	r3, [r0, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 80017aa:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80017ac:	2301      	movs	r3, #1
 80017ae:	4093      	lsls	r3, r2
 80017b0:	4233      	tst	r3, r6
 80017b2:	d009      	beq.n	80017c8 <HAL_DMA_IRQHandler+0x64>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 80017b4:	6822      	ldr	r2, [r4, #0]
 80017b6:	6952      	ldr	r2, [r2, #20]
 80017b8:	f012 0f80 	tst.w	r2, #128	; 0x80
 80017bc:	d004      	beq.n	80017c8 <HAL_DMA_IRQHandler+0x64>
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 80017be:	60bb      	str	r3, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 80017c0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80017c2:	f043 0302 	orr.w	r3, r3, #2
 80017c6:	6563      	str	r3, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 80017c8:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80017ca:	2304      	movs	r3, #4
 80017cc:	4093      	lsls	r3, r2
 80017ce:	4233      	tst	r3, r6
 80017d0:	d009      	beq.n	80017e6 <HAL_DMA_IRQHandler+0x82>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 80017d2:	6822      	ldr	r2, [r4, #0]
 80017d4:	6812      	ldr	r2, [r2, #0]
 80017d6:	f012 0f02 	tst.w	r2, #2
 80017da:	d004      	beq.n	80017e6 <HAL_DMA_IRQHandler+0x82>
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 80017dc:	60bb      	str	r3, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 80017de:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80017e0:	f043 0304 	orr.w	r3, r3, #4
 80017e4:	6563      	str	r3, [r4, #84]	; 0x54
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 80017e6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80017e8:	2310      	movs	r3, #16
 80017ea:	4093      	lsls	r3, r2
 80017ec:	4233      	tst	r3, r6
 80017ee:	d024      	beq.n	800183a <HAL_DMA_IRQHandler+0xd6>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 80017f0:	6822      	ldr	r2, [r4, #0]
 80017f2:	6812      	ldr	r2, [r2, #0]
 80017f4:	f012 0f08 	tst.w	r2, #8
 80017f8:	d01f      	beq.n	800183a <HAL_DMA_IRQHandler+0xd6>
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 80017fa:	60bb      	str	r3, [r7, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80017fc:	6823      	ldr	r3, [r4, #0]
 80017fe:	681a      	ldr	r2, [r3, #0]
 8001800:	f412 2f80 	tst.w	r2, #262144	; 0x40000
 8001804:	d00d      	beq.n	8001822 <HAL_DMA_IRQHandler+0xbe>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8001806:	681b      	ldr	r3, [r3, #0]
 8001808:	f413 2f00 	tst.w	r3, #524288	; 0x80000
 800180c:	d104      	bne.n	8001818 <HAL_DMA_IRQHandler+0xb4>
          if(hdma->XferHalfCpltCallback != NULL)
 800180e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001810:	b19b      	cbz	r3, 800183a <HAL_DMA_IRQHandler+0xd6>
            hdma->XferHalfCpltCallback(hdma);
 8001812:	4620      	mov	r0, r4
 8001814:	4798      	blx	r3
 8001816:	e010      	b.n	800183a <HAL_DMA_IRQHandler+0xd6>
          if(hdma->XferM1HalfCpltCallback != NULL)
 8001818:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800181a:	b173      	cbz	r3, 800183a <HAL_DMA_IRQHandler+0xd6>
            hdma->XferM1HalfCpltCallback(hdma);
 800181c:	4620      	mov	r0, r4
 800181e:	4798      	blx	r3
 8001820:	e00b      	b.n	800183a <HAL_DMA_IRQHandler+0xd6>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8001822:	681a      	ldr	r2, [r3, #0]
 8001824:	f412 7f80 	tst.w	r2, #256	; 0x100
 8001828:	d103      	bne.n	8001832 <HAL_DMA_IRQHandler+0xce>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 800182a:	681a      	ldr	r2, [r3, #0]
 800182c:	f022 0208 	bic.w	r2, r2, #8
 8001830:	601a      	str	r2, [r3, #0]
        if(hdma->XferHalfCpltCallback != NULL)
 8001832:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001834:	b10b      	cbz	r3, 800183a <HAL_DMA_IRQHandler+0xd6>
          hdma->XferHalfCpltCallback(hdma);
 8001836:	4620      	mov	r0, r4
 8001838:	4798      	blx	r3
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 800183a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800183c:	2320      	movs	r3, #32
 800183e:	4093      	lsls	r3, r2
 8001840:	4233      	tst	r3, r6
 8001842:	d055      	beq.n	80018f0 <HAL_DMA_IRQHandler+0x18c>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8001844:	6822      	ldr	r2, [r4, #0]
 8001846:	6812      	ldr	r2, [r2, #0]
 8001848:	f012 0f10 	tst.w	r2, #16
 800184c:	d050      	beq.n	80018f0 <HAL_DMA_IRQHandler+0x18c>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 800184e:	60bb      	str	r3, [r7, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8001850:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8001854:	b2db      	uxtb	r3, r3
 8001856:	2b05      	cmp	r3, #5
 8001858:	d00e      	beq.n	8001878 <HAL_DMA_IRQHandler+0x114>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800185a:	6823      	ldr	r3, [r4, #0]
 800185c:	681a      	ldr	r2, [r3, #0]
 800185e:	f412 2f80 	tst.w	r2, #262144	; 0x40000
 8001862:	d033      	beq.n	80018cc <HAL_DMA_IRQHandler+0x168>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8001864:	681b      	ldr	r3, [r3, #0]
 8001866:	f413 2f00 	tst.w	r3, #524288	; 0x80000
 800186a:	d12a      	bne.n	80018c2 <HAL_DMA_IRQHandler+0x15e>
          if(hdma->XferM1CpltCallback != NULL)
 800186c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800186e:	2b00      	cmp	r3, #0
 8001870:	d03e      	beq.n	80018f0 <HAL_DMA_IRQHandler+0x18c>
            hdma->XferM1CpltCallback(hdma);
 8001872:	4620      	mov	r0, r4
 8001874:	4798      	blx	r3
 8001876:	e03b      	b.n	80018f0 <HAL_DMA_IRQHandler+0x18c>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8001878:	6822      	ldr	r2, [r4, #0]
 800187a:	6813      	ldr	r3, [r2, #0]
 800187c:	f023 0316 	bic.w	r3, r3, #22
 8001880:	6013      	str	r3, [r2, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8001882:	6822      	ldr	r2, [r4, #0]
 8001884:	6953      	ldr	r3, [r2, #20]
 8001886:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800188a:	6153      	str	r3, [r2, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800188c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800188e:	b1a3      	cbz	r3, 80018ba <HAL_DMA_IRQHandler+0x156>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8001890:	6822      	ldr	r2, [r4, #0]
 8001892:	6813      	ldr	r3, [r2, #0]
 8001894:	f023 0308 	bic.w	r3, r3, #8
 8001898:	6013      	str	r3, [r2, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 800189a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800189c:	233f      	movs	r3, #63	; 0x3f
 800189e:	4093      	lsls	r3, r2
 80018a0:	60bb      	str	r3, [r7, #8]
        hdma->State = HAL_DMA_STATE_READY;
 80018a2:	2301      	movs	r3, #1
 80018a4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 80018a8:	2300      	movs	r3, #0
 80018aa:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        if(hdma->XferAbortCallback != NULL)
 80018ae:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80018b0:	2b00      	cmp	r3, #0
 80018b2:	d03f      	beq.n	8001934 <HAL_DMA_IRQHandler+0x1d0>
          hdma->XferAbortCallback(hdma);
 80018b4:	4620      	mov	r0, r4
 80018b6:	4798      	blx	r3
 80018b8:	e03c      	b.n	8001934 <HAL_DMA_IRQHandler+0x1d0>
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80018ba:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80018bc:	2b00      	cmp	r3, #0
 80018be:	d1e7      	bne.n	8001890 <HAL_DMA_IRQHandler+0x12c>
 80018c0:	e7eb      	b.n	800189a <HAL_DMA_IRQHandler+0x136>
          if(hdma->XferCpltCallback != NULL)
 80018c2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80018c4:	b1a3      	cbz	r3, 80018f0 <HAL_DMA_IRQHandler+0x18c>
            hdma->XferCpltCallback(hdma);
 80018c6:	4620      	mov	r0, r4
 80018c8:	4798      	blx	r3
 80018ca:	e011      	b.n	80018f0 <HAL_DMA_IRQHandler+0x18c>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 80018cc:	681a      	ldr	r2, [r3, #0]
 80018ce:	f412 7f80 	tst.w	r2, #256	; 0x100
 80018d2:	d109      	bne.n	80018e8 <HAL_DMA_IRQHandler+0x184>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 80018d4:	681a      	ldr	r2, [r3, #0]
 80018d6:	f022 0210 	bic.w	r2, r2, #16
 80018da:	601a      	str	r2, [r3, #0]
          hdma->State = HAL_DMA_STATE_READY;
 80018dc:	2301      	movs	r3, #1
 80018de:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
          __HAL_UNLOCK(hdma);
 80018e2:	2300      	movs	r3, #0
 80018e4:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        if(hdma->XferCpltCallback != NULL)
 80018e8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80018ea:	b10b      	cbz	r3, 80018f0 <HAL_DMA_IRQHandler+0x18c>
          hdma->XferCpltCallback(hdma);
 80018ec:	4620      	mov	r0, r4
 80018ee:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 80018f0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80018f2:	b1fb      	cbz	r3, 8001934 <HAL_DMA_IRQHandler+0x1d0>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 80018f4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80018f6:	f013 0f01 	tst.w	r3, #1
 80018fa:	d017      	beq.n	800192c <HAL_DMA_IRQHandler+0x1c8>
      hdma->State = HAL_DMA_STATE_ABORT;
 80018fc:	2305      	movs	r3, #5
 80018fe:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      __HAL_DMA_DISABLE(hdma);
 8001902:	6822      	ldr	r2, [r4, #0]
 8001904:	6813      	ldr	r3, [r2, #0]
 8001906:	f023 0301 	bic.w	r3, r3, #1
 800190a:	6013      	str	r3, [r2, #0]
        if (++count > timeout)
 800190c:	9b01      	ldr	r3, [sp, #4]
 800190e:	3301      	adds	r3, #1
 8001910:	9301      	str	r3, [sp, #4]
 8001912:	42ab      	cmp	r3, r5
 8001914:	d804      	bhi.n	8001920 <HAL_DMA_IRQHandler+0x1bc>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8001916:	6823      	ldr	r3, [r4, #0]
 8001918:	681b      	ldr	r3, [r3, #0]
 800191a:	f013 0f01 	tst.w	r3, #1
 800191e:	d1f5      	bne.n	800190c <HAL_DMA_IRQHandler+0x1a8>
      hdma->State = HAL_DMA_STATE_READY;
 8001920:	2301      	movs	r3, #1
 8001922:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      __HAL_UNLOCK(hdma);
 8001926:	2300      	movs	r3, #0
 8001928:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    if(hdma->XferErrorCallback != NULL)
 800192c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800192e:	b10b      	cbz	r3, 8001934 <HAL_DMA_IRQHandler+0x1d0>
      hdma->XferErrorCallback(hdma);
 8001930:	4620      	mov	r0, r4
 8001932:	4798      	blx	r3
}
 8001934:	b003      	add	sp, #12
 8001936:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001938:	20000118 	.word	0x20000118
 800193c:	1b4e81b5 	.word	0x1b4e81b5

08001940 <HAL_GPIO_Init>:
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8001940:	2300      	movs	r3, #0
 8001942:	2b0f      	cmp	r3, #15
 8001944:	f200 80e7 	bhi.w	8001b16 <HAL_GPIO_Init+0x1d6>
{
 8001948:	b4f0      	push	{r4, r5, r6, r7}
 800194a:	b082      	sub	sp, #8
 800194c:	e05e      	b.n	8001a0c <HAL_GPIO_Init+0xcc>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 800194e:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8001950:	005f      	lsls	r7, r3, #1
 8001952:	2403      	movs	r4, #3
 8001954:	40bc      	lsls	r4, r7
 8001956:	ea26 0604 	bic.w	r6, r6, r4
        temp |= (GPIO_Init->Speed << (position * 2));
 800195a:	68cc      	ldr	r4, [r1, #12]
 800195c:	40bc      	lsls	r4, r7
 800195e:	4334      	orrs	r4, r6
        GPIOx->OSPEEDR = temp;
 8001960:	6084      	str	r4, [r0, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8001962:	6846      	ldr	r6, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8001964:	ea26 0602 	bic.w	r6, r6, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8001968:	684c      	ldr	r4, [r1, #4]
 800196a:	f3c4 1200 	ubfx	r2, r4, #4, #1
 800196e:	409a      	lsls	r2, r3
 8001970:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
 8001972:	6042      	str	r2, [r0, #4]
 8001974:	e057      	b.n	8001a26 <HAL_GPIO_Init+0xe6>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 8001976:	08dc      	lsrs	r4, r3, #3
 8001978:	3408      	adds	r4, #8
 800197a:	f850 7024 	ldr.w	r7, [r0, r4, lsl #2]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 800197e:	f003 0207 	and.w	r2, r3, #7
 8001982:	0096      	lsls	r6, r2, #2
 8001984:	220f      	movs	r2, #15
 8001986:	40b2      	lsls	r2, r6
 8001988:	ea27 0702 	bic.w	r7, r7, r2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 800198c:	690a      	ldr	r2, [r1, #16]
 800198e:	40b2      	lsls	r2, r6
 8001990:	433a      	orrs	r2, r7
        GPIOx->AFR[position >> 3] = temp;
 8001992:	f840 2024 	str.w	r2, [r0, r4, lsl #2]
 8001996:	e05a      	b.n	8001a4e <HAL_GPIO_Init+0x10e>
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2];
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8001998:	2209      	movs	r2, #9
 800199a:	e000      	b.n	800199e <HAL_GPIO_Init+0x5e>
 800199c:	2200      	movs	r2, #0
 800199e:	40b2      	lsls	r2, r6
 80019a0:	433a      	orrs	r2, r7
        SYSCFG->EXTICR[position >> 2] = temp;
 80019a2:	3402      	adds	r4, #2
 80019a4:	4e5c      	ldr	r6, [pc, #368]	; (8001b18 <HAL_GPIO_Init+0x1d8>)
 80019a6:	f846 2024 	str.w	r2, [r6, r4, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80019aa:	4a5c      	ldr	r2, [pc, #368]	; (8001b1c <HAL_GPIO_Init+0x1dc>)
 80019ac:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80019ae:	43ea      	mvns	r2, r5
 80019b0:	ea02 0604 	and.w	r6, r2, r4
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 80019b4:	684f      	ldr	r7, [r1, #4]
 80019b6:	f417 1f80 	tst.w	r7, #1048576	; 0x100000
 80019ba:	d001      	beq.n	80019c0 <HAL_GPIO_Init+0x80>
        {
          temp |= iocurrent;
 80019bc:	ea45 0604 	orr.w	r6, r5, r4
        }
        EXTI->RTSR = temp;
 80019c0:	4c56      	ldr	r4, [pc, #344]	; (8001b1c <HAL_GPIO_Init+0x1dc>)
 80019c2:	60a6      	str	r6, [r4, #8]

        temp = EXTI->FTSR;
 80019c4:	68e4      	ldr	r4, [r4, #12]
        temp &= ~((uint32_t)iocurrent);
 80019c6:	ea02 0604 	and.w	r6, r2, r4
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80019ca:	684f      	ldr	r7, [r1, #4]
 80019cc:	f417 1f00 	tst.w	r7, #2097152	; 0x200000
 80019d0:	d001      	beq.n	80019d6 <HAL_GPIO_Init+0x96>
        {
          temp |= iocurrent;
 80019d2:	ea45 0604 	orr.w	r6, r5, r4
        }
        EXTI->FTSR = temp;
 80019d6:	4c51      	ldr	r4, [pc, #324]	; (8001b1c <HAL_GPIO_Init+0x1dc>)
 80019d8:	60e6      	str	r6, [r4, #12]

        temp = EXTI->EMR;
 80019da:	6864      	ldr	r4, [r4, #4]
        temp &= ~((uint32_t)iocurrent);
 80019dc:	ea02 0604 	and.w	r6, r2, r4
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80019e0:	684f      	ldr	r7, [r1, #4]
 80019e2:	f417 3f00 	tst.w	r7, #131072	; 0x20000
 80019e6:	d001      	beq.n	80019ec <HAL_GPIO_Init+0xac>
        {
          temp |= iocurrent;
 80019e8:	ea45 0604 	orr.w	r6, r5, r4
        }
        EXTI->EMR = temp;
 80019ec:	4c4b      	ldr	r4, [pc, #300]	; (8001b1c <HAL_GPIO_Init+0x1dc>)
 80019ee:	6066      	str	r6, [r4, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80019f0:	6824      	ldr	r4, [r4, #0]
        temp &= ~((uint32_t)iocurrent);
 80019f2:	4022      	ands	r2, r4
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 80019f4:	684e      	ldr	r6, [r1, #4]
 80019f6:	f416 3f80 	tst.w	r6, #65536	; 0x10000
 80019fa:	d001      	beq.n	8001a00 <HAL_GPIO_Init+0xc0>
        {
          temp |= iocurrent;
 80019fc:	ea45 0204 	orr.w	r2, r5, r4
        }
        EXTI->IMR = temp;
 8001a00:	4c46      	ldr	r4, [pc, #280]	; (8001b1c <HAL_GPIO_Init+0x1dc>)
 8001a02:	6022      	str	r2, [r4, #0]
  for(position = 0; position < GPIO_NUMBER; position++)
 8001a04:	3301      	adds	r3, #1
 8001a06:	2b0f      	cmp	r3, #15
 8001a08:	f200 8082 	bhi.w	8001b10 <HAL_GPIO_Init+0x1d0>
    ioposition = ((uint32_t)0x01) << position;
 8001a0c:	2201      	movs	r2, #1
 8001a0e:	409a      	lsls	r2, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8001a10:	680c      	ldr	r4, [r1, #0]
 8001a12:	ea04 0502 	and.w	r5, r4, r2
    if(iocurrent == ioposition)
 8001a16:	42aa      	cmp	r2, r5
 8001a18:	d1f4      	bne.n	8001a04 <HAL_GPIO_Init+0xc4>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8001a1a:	684c      	ldr	r4, [r1, #4]
 8001a1c:	f004 0403 	and.w	r4, r4, #3
 8001a20:	3c01      	subs	r4, #1
 8001a22:	2c01      	cmp	r4, #1
 8001a24:	d993      	bls.n	800194e <HAL_GPIO_Init+0xe>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8001a26:	684a      	ldr	r2, [r1, #4]
 8001a28:	f002 0203 	and.w	r2, r2, #3
 8001a2c:	2a03      	cmp	r2, #3
 8001a2e:	d009      	beq.n	8001a44 <HAL_GPIO_Init+0x104>
        temp = GPIOx->PUPDR;
 8001a30:	68c4      	ldr	r4, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8001a32:	005e      	lsls	r6, r3, #1
 8001a34:	2203      	movs	r2, #3
 8001a36:	40b2      	lsls	r2, r6
 8001a38:	ea24 0402 	bic.w	r4, r4, r2
        temp |= ((GPIO_Init->Pull) << (position * 2));
 8001a3c:	688a      	ldr	r2, [r1, #8]
 8001a3e:	40b2      	lsls	r2, r6
 8001a40:	4322      	orrs	r2, r4
        GPIOx->PUPDR = temp;
 8001a42:	60c2      	str	r2, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001a44:	684a      	ldr	r2, [r1, #4]
 8001a46:	f002 0203 	and.w	r2, r2, #3
 8001a4a:	2a02      	cmp	r2, #2
 8001a4c:	d093      	beq.n	8001976 <HAL_GPIO_Init+0x36>
      temp = GPIOx->MODER;
 8001a4e:	6804      	ldr	r4, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8001a50:	005e      	lsls	r6, r3, #1
 8001a52:	2203      	movs	r2, #3
 8001a54:	40b2      	lsls	r2, r6
 8001a56:	ea24 0402 	bic.w	r4, r4, r2
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8001a5a:	684a      	ldr	r2, [r1, #4]
 8001a5c:	f002 0203 	and.w	r2, r2, #3
 8001a60:	40b2      	lsls	r2, r6
 8001a62:	4322      	orrs	r2, r4
      GPIOx->MODER = temp;
 8001a64:	6002      	str	r2, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8001a66:	684a      	ldr	r2, [r1, #4]
 8001a68:	f412 3f40 	tst.w	r2, #196608	; 0x30000
 8001a6c:	d0ca      	beq.n	8001a04 <HAL_GPIO_Init+0xc4>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001a6e:	4a2c      	ldr	r2, [pc, #176]	; (8001b20 <HAL_GPIO_Init+0x1e0>)
 8001a70:	6c54      	ldr	r4, [r2, #68]	; 0x44
 8001a72:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8001a76:	6454      	str	r4, [r2, #68]	; 0x44
 8001a78:	6c52      	ldr	r2, [r2, #68]	; 0x44
 8001a7a:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8001a7e:	9201      	str	r2, [sp, #4]
 8001a80:	9a01      	ldr	r2, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2];
 8001a82:	089c      	lsrs	r4, r3, #2
 8001a84:	1ca6      	adds	r6, r4, #2
 8001a86:	4a24      	ldr	r2, [pc, #144]	; (8001b18 <HAL_GPIO_Init+0x1d8>)
 8001a88:	f852 7026 	ldr.w	r7, [r2, r6, lsl #2]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8001a8c:	f003 0203 	and.w	r2, r3, #3
 8001a90:	0096      	lsls	r6, r2, #2
 8001a92:	220f      	movs	r2, #15
 8001a94:	40b2      	lsls	r2, r6
 8001a96:	ea27 0702 	bic.w	r7, r7, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8001a9a:	4a22      	ldr	r2, [pc, #136]	; (8001b24 <HAL_GPIO_Init+0x1e4>)
 8001a9c:	4290      	cmp	r0, r2
 8001a9e:	f43f af7d 	beq.w	800199c <HAL_GPIO_Init+0x5c>
 8001aa2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001aa6:	4290      	cmp	r0, r2
 8001aa8:	d022      	beq.n	8001af0 <HAL_GPIO_Init+0x1b0>
 8001aaa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001aae:	4290      	cmp	r0, r2
 8001ab0:	d020      	beq.n	8001af4 <HAL_GPIO_Init+0x1b4>
 8001ab2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001ab6:	4290      	cmp	r0, r2
 8001ab8:	d01e      	beq.n	8001af8 <HAL_GPIO_Init+0x1b8>
 8001aba:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001abe:	4290      	cmp	r0, r2
 8001ac0:	d01c      	beq.n	8001afc <HAL_GPIO_Init+0x1bc>
 8001ac2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001ac6:	4290      	cmp	r0, r2
 8001ac8:	d01a      	beq.n	8001b00 <HAL_GPIO_Init+0x1c0>
 8001aca:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001ace:	4290      	cmp	r0, r2
 8001ad0:	d018      	beq.n	8001b04 <HAL_GPIO_Init+0x1c4>
 8001ad2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001ad6:	4290      	cmp	r0, r2
 8001ad8:	d016      	beq.n	8001b08 <HAL_GPIO_Init+0x1c8>
 8001ada:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001ade:	4290      	cmp	r0, r2
 8001ae0:	d014      	beq.n	8001b0c <HAL_GPIO_Init+0x1cc>
 8001ae2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001ae6:	4290      	cmp	r0, r2
 8001ae8:	f43f af56 	beq.w	8001998 <HAL_GPIO_Init+0x58>
 8001aec:	220a      	movs	r2, #10
 8001aee:	e756      	b.n	800199e <HAL_GPIO_Init+0x5e>
 8001af0:	2201      	movs	r2, #1
 8001af2:	e754      	b.n	800199e <HAL_GPIO_Init+0x5e>
 8001af4:	2202      	movs	r2, #2
 8001af6:	e752      	b.n	800199e <HAL_GPIO_Init+0x5e>
 8001af8:	2203      	movs	r2, #3
 8001afa:	e750      	b.n	800199e <HAL_GPIO_Init+0x5e>
 8001afc:	2204      	movs	r2, #4
 8001afe:	e74e      	b.n	800199e <HAL_GPIO_Init+0x5e>
 8001b00:	2205      	movs	r2, #5
 8001b02:	e74c      	b.n	800199e <HAL_GPIO_Init+0x5e>
 8001b04:	2206      	movs	r2, #6
 8001b06:	e74a      	b.n	800199e <HAL_GPIO_Init+0x5e>
 8001b08:	2207      	movs	r2, #7
 8001b0a:	e748      	b.n	800199e <HAL_GPIO_Init+0x5e>
 8001b0c:	2208      	movs	r2, #8
 8001b0e:	e746      	b.n	800199e <HAL_GPIO_Init+0x5e>
      }
    }
  }
}
 8001b10:	b002      	add	sp, #8
 8001b12:	bcf0      	pop	{r4, r5, r6, r7}
 8001b14:	4770      	bx	lr
 8001b16:	4770      	bx	lr
 8001b18:	40013800 	.word	0x40013800
 8001b1c:	40013c00 	.word	0x40013c00
 8001b20:	40023800 	.word	0x40023800
 8001b24:	40020000 	.word	0x40020000

08001b28 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8001b28:	b912      	cbnz	r2, 8001b30 <HAL_GPIO_WritePin+0x8>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8001b2a:	0409      	lsls	r1, r1, #16
 8001b2c:	6181      	str	r1, [r0, #24]
  }
}
 8001b2e:	4770      	bx	lr
    GPIOx->BSRR = GPIO_Pin;
 8001b30:	6181      	str	r1, [r0, #24]
 8001b32:	4770      	bx	lr

08001b34 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8001b34:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8001b36:	ea01 0203 	and.w	r2, r1, r3
 8001b3a:	ea21 0103 	bic.w	r1, r1, r3
 8001b3e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8001b42:	6181      	str	r1, [r0, #24]
}
 8001b44:	4770      	bx	lr

08001b46 <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8001b46:	6803      	ldr	r3, [r0, #0]
 8001b48:	699a      	ldr	r2, [r3, #24]
 8001b4a:	f012 0f02 	tst.w	r2, #2
 8001b4e:	d001      	beq.n	8001b54 <I2C_Flush_TXDR+0xe>
  {
    hi2c->Instance->TXDR = 0x00U;
 8001b50:	2200      	movs	r2, #0
 8001b52:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8001b54:	6803      	ldr	r3, [r0, #0]
 8001b56:	699a      	ldr	r2, [r3, #24]
 8001b58:	f012 0f01 	tst.w	r2, #1
 8001b5c:	d103      	bne.n	8001b66 <I2C_Flush_TXDR+0x20>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8001b5e:	699a      	ldr	r2, [r3, #24]
 8001b60:	f042 0201 	orr.w	r2, r2, #1
 8001b64:	619a      	str	r2, [r3, #24]
  }
}
 8001b66:	4770      	bx	lr

08001b68 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8001b68:	b410      	push	{r4}
 8001b6a:	9c01      	ldr	r4, [sp, #4]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8001b6c:	f3c1 0109 	ubfx	r1, r1, #0, #10
 8001b70:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
                            (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 8001b74:	4319      	orrs	r1, r3
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8001b76:	4321      	orrs	r1, r4
 8001b78:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
                              (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8001b7c:	6802      	ldr	r2, [r0, #0]
 8001b7e:	6853      	ldr	r3, [r2, #4]
 8001b80:	0d64      	lsrs	r4, r4, #21
 8001b82:	f404 6480 	and.w	r4, r4, #1024	; 0x400
 8001b86:	f044 747f 	orr.w	r4, r4, #66846720	; 0x3fc0000
 8001b8a:	f444 3458 	orr.w	r4, r4, #221184	; 0x36000
 8001b8e:	f444 747f 	orr.w	r4, r4, #1020	; 0x3fc
 8001b92:	f044 0403 	orr.w	r4, r4, #3
 8001b96:	ea23 0404 	bic.w	r4, r3, r4
 8001b9a:	4321      	orrs	r1, r4
 8001b9c:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
                I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8001b9e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001ba2:	4770      	bx	lr

08001ba4 <I2C_IsErrorOccurred>:
{
 8001ba4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001ba6:	4604      	mov	r4, r0
 8001ba8:	4617      	mov	r7, r2
  uint32_t itflag   = hi2c->Instance->ISR;
 8001baa:	6803      	ldr	r3, [r0, #0]
 8001bac:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8001bae:	f012 0f10 	tst.w	r2, #16
 8001bb2:	d04a      	beq.n	8001c4a <I2C_IsErrorOccurred+0xa6>
 8001bb4:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8001bb6:	2210      	movs	r2, #16
 8001bb8:	61da      	str	r2, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
 8001bba:	2500      	movs	r5, #0
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8001bbc:	6823      	ldr	r3, [r4, #0]
 8001bbe:	699a      	ldr	r2, [r3, #24]
 8001bc0:	f012 0f20 	tst.w	r2, #32
 8001bc4:	d13a      	bne.n	8001c3c <I2C_IsErrorOccurred+0x98>
 8001bc6:	2d00      	cmp	r5, #0
 8001bc8:	d138      	bne.n	8001c3c <I2C_IsErrorOccurred+0x98>
      if (Timeout != HAL_MAX_DELAY)
 8001bca:	f1b6 3fff 	cmp.w	r6, #4294967295
 8001bce:	d0f5      	beq.n	8001bbc <I2C_IsErrorOccurred+0x18>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8001bd0:	f7ff fc1a 	bl	8001408 <HAL_GetTick>
 8001bd4:	1bc0      	subs	r0, r0, r7
 8001bd6:	42b0      	cmp	r0, r6
 8001bd8:	d801      	bhi.n	8001bde <I2C_IsErrorOccurred+0x3a>
 8001bda:	2e00      	cmp	r6, #0
 8001bdc:	d1ee      	bne.n	8001bbc <I2C_IsErrorOccurred+0x18>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8001bde:	6821      	ldr	r1, [r4, #0]
 8001be0:	684a      	ldr	r2, [r1, #4]
 8001be2:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
          tmp2 = hi2c->Mode;
 8001be6:	f894 3042 	ldrb.w	r3, [r4, #66]	; 0x42
 8001bea:	b2db      	uxtb	r3, r3
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8001bec:	6988      	ldr	r0, [r1, #24]
 8001bee:	f410 4f00 	tst.w	r0, #32768	; 0x8000
 8001bf2:	d00b      	beq.n	8001c0c <I2C_IsErrorOccurred+0x68>
              (tmp2 != HAL_I2C_MODE_SLAVE))
 8001bf4:	3b20      	subs	r3, #32
 8001bf6:	bf18      	it	ne
 8001bf8:	2301      	movne	r3, #1
              (tmp1 != I2C_CR2_STOP) && \
 8001bfa:	b93a      	cbnz	r2, 8001c0c <I2C_IsErrorOccurred+0x68>
 8001bfc:	b133      	cbz	r3, 8001c0c <I2C_IsErrorOccurred+0x68>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8001bfe:	684b      	ldr	r3, [r1, #4]
 8001c00:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001c04:	604b      	str	r3, [r1, #4]
            tickstart = HAL_GetTick();
 8001c06:	f7ff fbff 	bl	8001408 <HAL_GetTick>
 8001c0a:	4607      	mov	r7, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001c0c:	6823      	ldr	r3, [r4, #0]
 8001c0e:	699b      	ldr	r3, [r3, #24]
 8001c10:	f013 0f20 	tst.w	r3, #32
 8001c14:	d1d2      	bne.n	8001bbc <I2C_IsErrorOccurred+0x18>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 8001c16:	f7ff fbf7 	bl	8001408 <HAL_GetTick>
 8001c1a:	1bc0      	subs	r0, r0, r7
 8001c1c:	2819      	cmp	r0, #25
 8001c1e:	d9f5      	bls.n	8001c0c <I2C_IsErrorOccurred+0x68>
              hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001c20:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001c22:	f043 0320 	orr.w	r3, r3, #32
 8001c26:	6463      	str	r3, [r4, #68]	; 0x44
              hi2c->State = HAL_I2C_STATE_READY;
 8001c28:	2320      	movs	r3, #32
 8001c2a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
              hi2c->Mode = HAL_I2C_MODE_NONE;
 8001c2e:	2300      	movs	r3, #0
 8001c30:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
              __HAL_UNLOCK(hi2c);
 8001c34:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
              status = HAL_ERROR;
 8001c38:	2501      	movs	r5, #1
 8001c3a:	e7e7      	b.n	8001c0c <I2C_IsErrorOccurred+0x68>
    if (status == HAL_OK)
 8001c3c:	2d00      	cmp	r5, #0
 8001c3e:	d140      	bne.n	8001cc2 <I2C_IsErrorOccurred+0x11e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001c40:	2220      	movs	r2, #32
 8001c42:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
 8001c44:	2604      	movs	r6, #4
    status = HAL_ERROR;
 8001c46:	2501      	movs	r5, #1
 8001c48:	e001      	b.n	8001c4e <I2C_IsErrorOccurred+0xaa>
  uint32_t error_code = 0;
 8001c4a:	2600      	movs	r6, #0
  HAL_StatusTypeDef status = HAL_OK;
 8001c4c:	4635      	mov	r5, r6
  itflag = hi2c->Instance->ISR;
 8001c4e:	6822      	ldr	r2, [r4, #0]
 8001c50:	6993      	ldr	r3, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8001c52:	f413 7f80 	tst.w	r3, #256	; 0x100
 8001c56:	d005      	beq.n	8001c64 <I2C_IsErrorOccurred+0xc0>
    error_code |= HAL_I2C_ERROR_BERR;
 8001c58:	f046 0601 	orr.w	r6, r6, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8001c5c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001c60:	61d1      	str	r1, [r2, #28]
    status = HAL_ERROR;
 8001c62:	2501      	movs	r5, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8001c64:	f413 6f80 	tst.w	r3, #1024	; 0x400
 8001c68:	d006      	beq.n	8001c78 <I2C_IsErrorOccurred+0xd4>
    error_code |= HAL_I2C_ERROR_OVR;
 8001c6a:	f046 0608 	orr.w	r6, r6, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8001c6e:	6822      	ldr	r2, [r4, #0]
 8001c70:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001c74:	61d1      	str	r1, [r2, #28]
    status = HAL_ERROR;
 8001c76:	2501      	movs	r5, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8001c78:	f413 7f00 	tst.w	r3, #512	; 0x200
 8001c7c:	d023      	beq.n	8001cc6 <I2C_IsErrorOccurred+0x122>
    error_code |= HAL_I2C_ERROR_ARLO;
 8001c7e:	f046 0602 	orr.w	r6, r6, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8001c82:	6823      	ldr	r3, [r4, #0]
 8001c84:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001c88:	61da      	str	r2, [r3, #28]
    status = HAL_ERROR;
 8001c8a:	2501      	movs	r5, #1
    I2C_Flush_TXDR(hi2c);
 8001c8c:	4620      	mov	r0, r4
 8001c8e:	f7ff ff5a 	bl	8001b46 <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8001c92:	6822      	ldr	r2, [r4, #0]
 8001c94:	6853      	ldr	r3, [r2, #4]
 8001c96:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
 8001c9a:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
 8001c9e:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 8001ca2:	f023 0301 	bic.w	r3, r3, #1
 8001ca6:	6053      	str	r3, [r2, #4]
    hi2c->ErrorCode |= error_code;
 8001ca8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001caa:	431e      	orrs	r6, r3
 8001cac:	6466      	str	r6, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8001cae:	2320      	movs	r3, #32
 8001cb0:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8001cb4:	2300      	movs	r3, #0
 8001cb6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 8001cba:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8001cbe:	4628      	mov	r0, r5
 8001cc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    error_code |= HAL_I2C_ERROR_AF;
 8001cc2:	2604      	movs	r6, #4
 8001cc4:	e7c3      	b.n	8001c4e <I2C_IsErrorOccurred+0xaa>
  if (status != HAL_OK)
 8001cc6:	2d00      	cmp	r5, #0
 8001cc8:	d1e0      	bne.n	8001c8c <I2C_IsErrorOccurred+0xe8>
 8001cca:	e7f8      	b.n	8001cbe <I2C_IsErrorOccurred+0x11a>

08001ccc <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8001ccc:	b570      	push	{r4, r5, r6, lr}
 8001cce:	4604      	mov	r4, r0
 8001cd0:	460d      	mov	r5, r1
 8001cd2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8001cd4:	6823      	ldr	r3, [r4, #0]
 8001cd6:	699b      	ldr	r3, [r3, #24]
 8001cd8:	f013 0f02 	tst.w	r3, #2
 8001cdc:	d11d      	bne.n	8001d1a <I2C_WaitOnTXISFlagUntilTimeout+0x4e>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8001cde:	4632      	mov	r2, r6
 8001ce0:	4629      	mov	r1, r5
 8001ce2:	4620      	mov	r0, r4
 8001ce4:	f7ff ff5e 	bl	8001ba4 <I2C_IsErrorOccurred>
 8001ce8:	b9c8      	cbnz	r0, 8001d1e <I2C_WaitOnTXISFlagUntilTimeout+0x52>
    if (Timeout != HAL_MAX_DELAY)
 8001cea:	f1b5 3fff 	cmp.w	r5, #4294967295
 8001cee:	d0f1      	beq.n	8001cd4 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001cf0:	f7ff fb8a 	bl	8001408 <HAL_GetTick>
 8001cf4:	1b80      	subs	r0, r0, r6
 8001cf6:	42a8      	cmp	r0, r5
 8001cf8:	d801      	bhi.n	8001cfe <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8001cfa:	2d00      	cmp	r5, #0
 8001cfc:	d1ea      	bne.n	8001cd4 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001cfe:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001d00:	f043 0320 	orr.w	r3, r3, #32
 8001d04:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001d06:	2320      	movs	r3, #32
 8001d08:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001d0c:	2300      	movs	r3, #0
 8001d0e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 8001d12:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8001d16:	2001      	movs	r0, #1
 8001d18:	e000      	b.n	8001d1c <I2C_WaitOnTXISFlagUntilTimeout+0x50>
  return HAL_OK;
 8001d1a:	2000      	movs	r0, #0
}
 8001d1c:	bd70      	pop	{r4, r5, r6, pc}
      return HAL_ERROR;
 8001d1e:	2001      	movs	r0, #1
 8001d20:	e7fc      	b.n	8001d1c <I2C_WaitOnTXISFlagUntilTimeout+0x50>

08001d22 <I2C_WaitOnFlagUntilTimeout>:
{
 8001d22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001d24:	4605      	mov	r5, r0
 8001d26:	460f      	mov	r7, r1
 8001d28:	4616      	mov	r6, r2
 8001d2a:	461c      	mov	r4, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8001d2c:	682b      	ldr	r3, [r5, #0]
 8001d2e:	699b      	ldr	r3, [r3, #24]
 8001d30:	ea37 0303 	bics.w	r3, r7, r3
 8001d34:	bf0c      	ite	eq
 8001d36:	2301      	moveq	r3, #1
 8001d38:	2300      	movne	r3, #0
 8001d3a:	42b3      	cmp	r3, r6
 8001d3c:	d118      	bne.n	8001d70 <I2C_WaitOnFlagUntilTimeout+0x4e>
    if (Timeout != HAL_MAX_DELAY)
 8001d3e:	f1b4 3fff 	cmp.w	r4, #4294967295
 8001d42:	d0f3      	beq.n	8001d2c <I2C_WaitOnFlagUntilTimeout+0xa>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001d44:	f7ff fb60 	bl	8001408 <HAL_GetTick>
 8001d48:	9b06      	ldr	r3, [sp, #24]
 8001d4a:	1ac0      	subs	r0, r0, r3
 8001d4c:	42a0      	cmp	r0, r4
 8001d4e:	d801      	bhi.n	8001d54 <I2C_WaitOnFlagUntilTimeout+0x32>
 8001d50:	2c00      	cmp	r4, #0
 8001d52:	d1eb      	bne.n	8001d2c <I2C_WaitOnFlagUntilTimeout+0xa>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001d54:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8001d56:	f043 0320 	orr.w	r3, r3, #32
 8001d5a:	646b      	str	r3, [r5, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8001d5c:	2320      	movs	r3, #32
 8001d5e:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001d62:	2300      	movs	r3, #0
 8001d64:	f885 3042 	strb.w	r3, [r5, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 8001d68:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        return HAL_ERROR;
 8001d6c:	2001      	movs	r0, #1
 8001d6e:	e000      	b.n	8001d72 <I2C_WaitOnFlagUntilTimeout+0x50>
  return HAL_OK;
 8001d70:	2000      	movs	r0, #0
}
 8001d72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001d74 <I2C_RequestMemoryWrite>:
{
 8001d74:	b570      	push	{r4, r5, r6, lr}
 8001d76:	b082      	sub	sp, #8
 8001d78:	4604      	mov	r4, r0
 8001d7a:	4616      	mov	r6, r2
 8001d7c:	461d      	mov	r5, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8001d7e:	4b18      	ldr	r3, [pc, #96]	; (8001de0 <I2C_RequestMemoryWrite+0x6c>)
 8001d80:	9300      	str	r3, [sp, #0]
 8001d82:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001d86:	b2ea      	uxtb	r2, r5
 8001d88:	f7ff feee 	bl	8001b68 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8001d8c:	9a07      	ldr	r2, [sp, #28]
 8001d8e:	9906      	ldr	r1, [sp, #24]
 8001d90:	4620      	mov	r0, r4
 8001d92:	f7ff ff9b 	bl	8001ccc <I2C_WaitOnTXISFlagUntilTimeout>
 8001d96:	b9e8      	cbnz	r0, 8001dd4 <I2C_RequestMemoryWrite+0x60>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8001d98:	2d01      	cmp	r5, #1
 8001d9a:	d10e      	bne.n	8001dba <I2C_RequestMemoryWrite+0x46>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8001d9c:	6823      	ldr	r3, [r4, #0]
 8001d9e:	b2f6      	uxtb	r6, r6
 8001da0:	629e      	str	r6, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8001da2:	9b07      	ldr	r3, [sp, #28]
 8001da4:	9300      	str	r3, [sp, #0]
 8001da6:	9b06      	ldr	r3, [sp, #24]
 8001da8:	2200      	movs	r2, #0
 8001daa:	2180      	movs	r1, #128	; 0x80
 8001dac:	4620      	mov	r0, r4
 8001dae:	f7ff ffb8 	bl	8001d22 <I2C_WaitOnFlagUntilTimeout>
 8001db2:	4603      	mov	r3, r0
 8001db4:	b178      	cbz	r0, 8001dd6 <I2C_RequestMemoryWrite+0x62>
    return HAL_ERROR;
 8001db6:	2301      	movs	r3, #1
 8001db8:	e00d      	b.n	8001dd6 <I2C_RequestMemoryWrite+0x62>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8001dba:	6823      	ldr	r3, [r4, #0]
 8001dbc:	0a32      	lsrs	r2, r6, #8
 8001dbe:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8001dc0:	9a07      	ldr	r2, [sp, #28]
 8001dc2:	9906      	ldr	r1, [sp, #24]
 8001dc4:	4620      	mov	r0, r4
 8001dc6:	f7ff ff81 	bl	8001ccc <I2C_WaitOnTXISFlagUntilTimeout>
 8001dca:	b938      	cbnz	r0, 8001ddc <I2C_RequestMemoryWrite+0x68>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8001dcc:	6823      	ldr	r3, [r4, #0]
 8001dce:	b2f6      	uxtb	r6, r6
 8001dd0:	629e      	str	r6, [r3, #40]	; 0x28
 8001dd2:	e7e6      	b.n	8001da2 <I2C_RequestMemoryWrite+0x2e>
    return HAL_ERROR;
 8001dd4:	2301      	movs	r3, #1
}
 8001dd6:	4618      	mov	r0, r3
 8001dd8:	b002      	add	sp, #8
 8001dda:	bd70      	pop	{r4, r5, r6, pc}
      return HAL_ERROR;
 8001ddc:	2301      	movs	r3, #1
 8001dde:	e7fa      	b.n	8001dd6 <I2C_RequestMemoryWrite+0x62>
 8001de0:	80002000 	.word	0x80002000

08001de4 <I2C_RequestMemoryRead>:
{
 8001de4:	b570      	push	{r4, r5, r6, lr}
 8001de6:	b082      	sub	sp, #8
 8001de8:	4604      	mov	r4, r0
 8001dea:	4616      	mov	r6, r2
 8001dec:	461d      	mov	r5, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8001dee:	4b18      	ldr	r3, [pc, #96]	; (8001e50 <I2C_RequestMemoryRead+0x6c>)
 8001df0:	9300      	str	r3, [sp, #0]
 8001df2:	2300      	movs	r3, #0
 8001df4:	b2ea      	uxtb	r2, r5
 8001df6:	f7ff feb7 	bl	8001b68 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8001dfa:	9a07      	ldr	r2, [sp, #28]
 8001dfc:	9906      	ldr	r1, [sp, #24]
 8001dfe:	4620      	mov	r0, r4
 8001e00:	f7ff ff64 	bl	8001ccc <I2C_WaitOnTXISFlagUntilTimeout>
 8001e04:	b9e8      	cbnz	r0, 8001e42 <I2C_RequestMemoryRead+0x5e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8001e06:	2d01      	cmp	r5, #1
 8001e08:	d10e      	bne.n	8001e28 <I2C_RequestMemoryRead+0x44>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8001e0a:	6823      	ldr	r3, [r4, #0]
 8001e0c:	b2f6      	uxtb	r6, r6
 8001e0e:	629e      	str	r6, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8001e10:	9b07      	ldr	r3, [sp, #28]
 8001e12:	9300      	str	r3, [sp, #0]
 8001e14:	9b06      	ldr	r3, [sp, #24]
 8001e16:	2200      	movs	r2, #0
 8001e18:	2140      	movs	r1, #64	; 0x40
 8001e1a:	4620      	mov	r0, r4
 8001e1c:	f7ff ff81 	bl	8001d22 <I2C_WaitOnFlagUntilTimeout>
 8001e20:	4603      	mov	r3, r0
 8001e22:	b178      	cbz	r0, 8001e44 <I2C_RequestMemoryRead+0x60>
    return HAL_ERROR;
 8001e24:	2301      	movs	r3, #1
 8001e26:	e00d      	b.n	8001e44 <I2C_RequestMemoryRead+0x60>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8001e28:	6823      	ldr	r3, [r4, #0]
 8001e2a:	0a32      	lsrs	r2, r6, #8
 8001e2c:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8001e2e:	9a07      	ldr	r2, [sp, #28]
 8001e30:	9906      	ldr	r1, [sp, #24]
 8001e32:	4620      	mov	r0, r4
 8001e34:	f7ff ff4a 	bl	8001ccc <I2C_WaitOnTXISFlagUntilTimeout>
 8001e38:	b938      	cbnz	r0, 8001e4a <I2C_RequestMemoryRead+0x66>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8001e3a:	6823      	ldr	r3, [r4, #0]
 8001e3c:	b2f6      	uxtb	r6, r6
 8001e3e:	629e      	str	r6, [r3, #40]	; 0x28
 8001e40:	e7e6      	b.n	8001e10 <I2C_RequestMemoryRead+0x2c>
    return HAL_ERROR;
 8001e42:	2301      	movs	r3, #1
}
 8001e44:	4618      	mov	r0, r3
 8001e46:	b002      	add	sp, #8
 8001e48:	bd70      	pop	{r4, r5, r6, pc}
      return HAL_ERROR;
 8001e4a:	2301      	movs	r3, #1
 8001e4c:	e7fa      	b.n	8001e44 <I2C_RequestMemoryRead+0x60>
 8001e4e:	bf00      	nop
 8001e50:	80002000 	.word	0x80002000

08001e54 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 8001e54:	b570      	push	{r4, r5, r6, lr}
 8001e56:	4605      	mov	r5, r0
 8001e58:	460c      	mov	r4, r1
 8001e5a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8001e5c:	682b      	ldr	r3, [r5, #0]
 8001e5e:	699b      	ldr	r3, [r3, #24]
 8001e60:	f013 0f20 	tst.w	r3, #32
 8001e64:	d11a      	bne.n	8001e9c <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8001e66:	4632      	mov	r2, r6
 8001e68:	4621      	mov	r1, r4
 8001e6a:	4628      	mov	r0, r5
 8001e6c:	f7ff fe9a 	bl	8001ba4 <I2C_IsErrorOccurred>
 8001e70:	b9b0      	cbnz	r0, 8001ea0 <I2C_WaitOnSTOPFlagUntilTimeout+0x4c>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001e72:	f7ff fac9 	bl	8001408 <HAL_GetTick>
 8001e76:	1b80      	subs	r0, r0, r6
 8001e78:	42a0      	cmp	r0, r4
 8001e7a:	d801      	bhi.n	8001e80 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
 8001e7c:	2c00      	cmp	r4, #0
 8001e7e:	d1ed      	bne.n	8001e5c <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001e80:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8001e82:	f043 0320 	orr.w	r3, r3, #32
 8001e86:	646b      	str	r3, [r5, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 8001e88:	2320      	movs	r3, #32
 8001e8a:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8001e8e:	2300      	movs	r3, #0
 8001e90:	f885 3042 	strb.w	r3, [r5, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
 8001e94:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
      return HAL_ERROR;
 8001e98:	2001      	movs	r0, #1
}
 8001e9a:	bd70      	pop	{r4, r5, r6, pc}
  return HAL_OK;
 8001e9c:	2000      	movs	r0, #0
 8001e9e:	e7fc      	b.n	8001e9a <I2C_WaitOnSTOPFlagUntilTimeout+0x46>
      return HAL_ERROR;
 8001ea0:	2001      	movs	r0, #1
 8001ea2:	e7fa      	b.n	8001e9a <I2C_WaitOnSTOPFlagUntilTimeout+0x46>

08001ea4 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8001ea4:	b570      	push	{r4, r5, r6, lr}
 8001ea6:	4604      	mov	r4, r0
 8001ea8:	460d      	mov	r5, r1
 8001eaa:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8001eac:	6823      	ldr	r3, [r4, #0]
 8001eae:	699b      	ldr	r3, [r3, #24]
 8001eb0:	f013 0f04 	tst.w	r3, #4
 8001eb4:	d149      	bne.n	8001f4a <I2C_WaitOnRXNEFlagUntilTimeout+0xa6>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8001eb6:	4632      	mov	r2, r6
 8001eb8:	4629      	mov	r1, r5
 8001eba:	4620      	mov	r0, r4
 8001ebc:	f7ff fe72 	bl	8001ba4 <I2C_IsErrorOccurred>
 8001ec0:	4601      	mov	r1, r0
 8001ec2:	2800      	cmp	r0, #0
 8001ec4:	d143      	bne.n	8001f4e <I2C_WaitOnRXNEFlagUntilTimeout+0xaa>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8001ec6:	6823      	ldr	r3, [r4, #0]
 8001ec8:	699a      	ldr	r2, [r3, #24]
 8001eca:	f012 0f20 	tst.w	r2, #32
 8001ece:	d113      	bne.n	8001ef8 <I2C_WaitOnRXNEFlagUntilTimeout+0x54>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001ed0:	f7ff fa9a 	bl	8001408 <HAL_GetTick>
 8001ed4:	1b80      	subs	r0, r0, r6
 8001ed6:	42a8      	cmp	r0, r5
 8001ed8:	d801      	bhi.n	8001ede <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
 8001eda:	2d00      	cmp	r5, #0
 8001edc:	d1e6      	bne.n	8001eac <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8001ede:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8001ee0:	f043 0320 	orr.w	r3, r3, #32
 8001ee4:	6463      	str	r3, [r4, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 8001ee6:	2320      	movs	r3, #32
 8001ee8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
      __HAL_UNLOCK(hi2c);
 8001eec:	2300      	movs	r3, #0
 8001eee:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
 8001ef2:	2101      	movs	r1, #1
}
 8001ef4:	4608      	mov	r0, r1
 8001ef6:	bd70      	pop	{r4, r5, r6, pc}
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
 8001ef8:	699a      	ldr	r2, [r3, #24]
 8001efa:	f012 0f04 	tst.w	r2, #4
 8001efe:	d002      	beq.n	8001f06 <I2C_WaitOnRXNEFlagUntilTimeout+0x62>
 8001f00:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8001f02:	2a00      	cmp	r2, #0
 8001f04:	d1f6      	bne.n	8001ef4 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8001f06:	699a      	ldr	r2, [r3, #24]
 8001f08:	f012 0f10 	tst.w	r2, #16
 8001f0c:	d01a      	beq.n	8001f44 <I2C_WaitOnRXNEFlagUntilTimeout+0xa0>
          __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8001f0e:	2210      	movs	r2, #16
 8001f10:	61da      	str	r2, [r3, #28]
          hi2c->ErrorCode = HAL_I2C_ERROR_AF;
 8001f12:	2304      	movs	r3, #4
 8001f14:	6463      	str	r3, [r4, #68]	; 0x44
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8001f16:	6823      	ldr	r3, [r4, #0]
 8001f18:	2220      	movs	r2, #32
 8001f1a:	61da      	str	r2, [r3, #28]
        I2C_RESET_CR2(hi2c);
 8001f1c:	6821      	ldr	r1, [r4, #0]
 8001f1e:	684b      	ldr	r3, [r1, #4]
 8001f20:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
 8001f24:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
 8001f28:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 8001f2c:	f023 0301 	bic.w	r3, r3, #1
 8001f30:	604b      	str	r3, [r1, #4]
        hi2c->State = HAL_I2C_STATE_READY;
 8001f32:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8001f36:	2300      	movs	r3, #0
 8001f38:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 8001f3c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8001f40:	2101      	movs	r1, #1
 8001f42:	e7d7      	b.n	8001ef4 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
          hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001f44:	2300      	movs	r3, #0
 8001f46:	6463      	str	r3, [r4, #68]	; 0x44
 8001f48:	e7e5      	b.n	8001f16 <I2C_WaitOnRXNEFlagUntilTimeout+0x72>
  return HAL_OK;
 8001f4a:	2100      	movs	r1, #0
 8001f4c:	e7d2      	b.n	8001ef4 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
      return HAL_ERROR;
 8001f4e:	2101      	movs	r1, #1
 8001f50:	e7d0      	b.n	8001ef4 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
	...

08001f54 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8001f54:	2800      	cmp	r0, #0
 8001f56:	d057      	beq.n	8002008 <HAL_I2C_Init+0xb4>
{
 8001f58:	b510      	push	{r4, lr}
 8001f5a:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8001f5c:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8001f60:	2b00      	cmp	r3, #0
 8001f62:	d041      	beq.n	8001fe8 <HAL_I2C_Init+0x94>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8001f64:	2324      	movs	r3, #36	; 0x24
 8001f66:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8001f6a:	6822      	ldr	r2, [r4, #0]
 8001f6c:	6813      	ldr	r3, [r2, #0]
 8001f6e:	f023 0301 	bic.w	r3, r3, #1
 8001f72:	6013      	str	r3, [r2, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8001f74:	6863      	ldr	r3, [r4, #4]
 8001f76:	6822      	ldr	r2, [r4, #0]
 8001f78:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8001f7c:	6113      	str	r3, [r2, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8001f7e:	6822      	ldr	r2, [r4, #0]
 8001f80:	6893      	ldr	r3, [r2, #8]
 8001f82:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8001f86:	6093      	str	r3, [r2, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8001f88:	68e3      	ldr	r3, [r4, #12]
 8001f8a:	2b01      	cmp	r3, #1
 8001f8c:	d031      	beq.n	8001ff2 <HAL_I2C_Init+0x9e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8001f8e:	68a3      	ldr	r3, [r4, #8]
 8001f90:	6822      	ldr	r2, [r4, #0]
 8001f92:	f443 4304 	orr.w	r3, r3, #33792	; 0x8400
 8001f96:	6093      	str	r3, [r2, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8001f98:	68e3      	ldr	r3, [r4, #12]
 8001f9a:	2b02      	cmp	r3, #2
 8001f9c:	d02f      	beq.n	8001ffe <HAL_I2C_Init+0xaa>
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8001f9e:	6822      	ldr	r2, [r4, #0]
 8001fa0:	6851      	ldr	r1, [r2, #4]
 8001fa2:	4b1a      	ldr	r3, [pc, #104]	; (800200c <HAL_I2C_Init+0xb8>)
 8001fa4:	430b      	orrs	r3, r1
 8001fa6:	6053      	str	r3, [r2, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8001fa8:	6822      	ldr	r2, [r4, #0]
 8001faa:	68d3      	ldr	r3, [r2, #12]
 8001fac:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8001fb0:	60d3      	str	r3, [r2, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8001fb2:	6923      	ldr	r3, [r4, #16]
 8001fb4:	6962      	ldr	r2, [r4, #20]
 8001fb6:	4313      	orrs	r3, r2
                          (hi2c->Init.OwnAddress2Masks << 8));
 8001fb8:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8001fba:	6822      	ldr	r2, [r4, #0]
 8001fbc:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8001fc0:	60d3      	str	r3, [r2, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8001fc2:	69e3      	ldr	r3, [r4, #28]
 8001fc4:	6a21      	ldr	r1, [r4, #32]
 8001fc6:	6822      	ldr	r2, [r4, #0]
 8001fc8:	430b      	orrs	r3, r1
 8001fca:	6013      	str	r3, [r2, #0]
  __HAL_I2C_ENABLE(hi2c);
 8001fcc:	6822      	ldr	r2, [r4, #0]
 8001fce:	6813      	ldr	r3, [r2, #0]
 8001fd0:	f043 0301 	orr.w	r3, r3, #1
 8001fd4:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8001fd6:	2000      	movs	r0, #0
 8001fd8:	6460      	str	r0, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8001fda:	2320      	movs	r3, #32
 8001fdc:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8001fe0:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8001fe2:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 8001fe6:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8001fe8:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
 8001fec:	f005 fa5a 	bl	80074a4 <HAL_I2C_MspInit>
 8001ff0:	e7b8      	b.n	8001f64 <HAL_I2C_Init+0x10>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8001ff2:	68a3      	ldr	r3, [r4, #8]
 8001ff4:	6822      	ldr	r2, [r4, #0]
 8001ff6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001ffa:	6093      	str	r3, [r2, #8]
 8001ffc:	e7cc      	b.n	8001f98 <HAL_I2C_Init+0x44>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 8001ffe:	6823      	ldr	r3, [r4, #0]
 8002000:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002004:	605a      	str	r2, [r3, #4]
 8002006:	e7ca      	b.n	8001f9e <HAL_I2C_Init+0x4a>
    return HAL_ERROR;
 8002008:	2001      	movs	r0, #1
}
 800200a:	4770      	bx	lr
 800200c:	02008000 	.word	0x02008000

08002010 <HAL_I2C_Master_Transmit>:
{
 8002010:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002014:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002016:	f890 5041 	ldrb.w	r5, [r0, #65]	; 0x41
 800201a:	b2ed      	uxtb	r5, r5
 800201c:	2d20      	cmp	r5, #32
 800201e:	f040 80a4 	bne.w	800216a <HAL_I2C_Master_Transmit+0x15a>
    __HAL_LOCK(hi2c);
 8002022:	f890 4040 	ldrb.w	r4, [r0, #64]	; 0x40
 8002026:	2c01      	cmp	r4, #1
 8002028:	f000 80a4 	beq.w	8002174 <HAL_I2C_Master_Transmit+0x164>
 800202c:	4698      	mov	r8, r3
 800202e:	4617      	mov	r7, r2
 8002030:	460e      	mov	r6, r1
 8002032:	4604      	mov	r4, r0
 8002034:	f04f 0901 	mov.w	r9, #1
 8002038:	f880 9040 	strb.w	r9, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 800203c:	f7ff f9e4 	bl	8001408 <HAL_GetTick>
 8002040:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8002042:	9000      	str	r0, [sp, #0]
 8002044:	2319      	movs	r3, #25
 8002046:	464a      	mov	r2, r9
 8002048:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800204c:	4620      	mov	r0, r4
 800204e:	f7ff fe68 	bl	8001d22 <I2C_WaitOnFlagUntilTimeout>
 8002052:	2800      	cmp	r0, #0
 8002054:	f040 8090 	bne.w	8002178 <HAL_I2C_Master_Transmit+0x168>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8002058:	2321      	movs	r3, #33	; 0x21
 800205a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 800205e:	2310      	movs	r3, #16
 8002060:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8002064:	2300      	movs	r3, #0
 8002066:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->pBuffPtr  = pData;
 8002068:	6267      	str	r7, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 800206a:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 800206e:	6363      	str	r3, [r4, #52]	; 0x34
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8002070:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002072:	b29b      	uxth	r3, r3
 8002074:	2bff      	cmp	r3, #255	; 0xff
 8002076:	d90a      	bls.n	800208e <HAL_I2C_Master_Transmit+0x7e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8002078:	22ff      	movs	r2, #255	; 0xff
 800207a:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800207c:	4b42      	ldr	r3, [pc, #264]	; (8002188 <HAL_I2C_Master_Transmit+0x178>)
 800207e:	9300      	str	r3, [sp, #0]
 8002080:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002084:	4631      	mov	r1, r6
 8002086:	4620      	mov	r0, r4
 8002088:	f7ff fd6e 	bl	8001b68 <I2C_TransferConfig>
 800208c:	e018      	b.n	80020c0 <HAL_I2C_Master_Transmit+0xb0>
      hi2c->XferSize = hi2c->XferCount;
 800208e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002090:	b292      	uxth	r2, r2
 8002092:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8002094:	4b3c      	ldr	r3, [pc, #240]	; (8002188 <HAL_I2C_Master_Transmit+0x178>)
 8002096:	9300      	str	r3, [sp, #0]
 8002098:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800209c:	b2d2      	uxtb	r2, r2
 800209e:	4631      	mov	r1, r6
 80020a0:	4620      	mov	r0, r4
 80020a2:	f7ff fd61 	bl	8001b68 <I2C_TransferConfig>
 80020a6:	e00b      	b.n	80020c0 <HAL_I2C_Master_Transmit+0xb0>
          hi2c->XferSize = hi2c->XferCount;
 80020a8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80020aa:	b292      	uxth	r2, r2
 80020ac:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80020ae:	2300      	movs	r3, #0
 80020b0:	9300      	str	r3, [sp, #0]
 80020b2:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80020b6:	b2d2      	uxtb	r2, r2
 80020b8:	4631      	mov	r1, r6
 80020ba:	4620      	mov	r0, r4
 80020bc:	f7ff fd54 	bl	8001b68 <I2C_TransferConfig>
    while (hi2c->XferCount > 0U)
 80020c0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80020c2:	b29b      	uxth	r3, r3
 80020c4:	2b00      	cmp	r3, #0
 80020c6:	d033      	beq.n	8002130 <HAL_I2C_Master_Transmit+0x120>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80020c8:	462a      	mov	r2, r5
 80020ca:	990a      	ldr	r1, [sp, #40]	; 0x28
 80020cc:	4620      	mov	r0, r4
 80020ce:	f7ff fdfd 	bl	8001ccc <I2C_WaitOnTXISFlagUntilTimeout>
 80020d2:	2800      	cmp	r0, #0
 80020d4:	d152      	bne.n	800217c <HAL_I2C_Master_Transmit+0x16c>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 80020d6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80020d8:	6823      	ldr	r3, [r4, #0]
 80020da:	7812      	ldrb	r2, [r2, #0]
 80020dc:	629a      	str	r2, [r3, #40]	; 0x28
      hi2c->pBuffPtr++;
 80020de:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80020e0:	3301      	adds	r3, #1
 80020e2:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80020e4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80020e6:	3b01      	subs	r3, #1
 80020e8:	b29b      	uxth	r3, r3
 80020ea:	8563      	strh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80020ec:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80020ee:	3b01      	subs	r3, #1
 80020f0:	b29b      	uxth	r3, r3
 80020f2:	8523      	strh	r3, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80020f4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80020f6:	b292      	uxth	r2, r2
 80020f8:	2a00      	cmp	r2, #0
 80020fa:	d0e1      	beq.n	80020c0 <HAL_I2C_Master_Transmit+0xb0>
 80020fc:	2b00      	cmp	r3, #0
 80020fe:	d1df      	bne.n	80020c0 <HAL_I2C_Master_Transmit+0xb0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8002100:	9500      	str	r5, [sp, #0]
 8002102:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002104:	2200      	movs	r2, #0
 8002106:	2180      	movs	r1, #128	; 0x80
 8002108:	4620      	mov	r0, r4
 800210a:	f7ff fe0a 	bl	8001d22 <I2C_WaitOnFlagUntilTimeout>
 800210e:	2800      	cmp	r0, #0
 8002110:	d136      	bne.n	8002180 <HAL_I2C_Master_Transmit+0x170>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8002112:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002114:	b29b      	uxth	r3, r3
 8002116:	2bff      	cmp	r3, #255	; 0xff
 8002118:	d9c6      	bls.n	80020a8 <HAL_I2C_Master_Transmit+0x98>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800211a:	22ff      	movs	r2, #255	; 0xff
 800211c:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800211e:	2300      	movs	r3, #0
 8002120:	9300      	str	r3, [sp, #0]
 8002122:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002126:	4631      	mov	r1, r6
 8002128:	4620      	mov	r0, r4
 800212a:	f7ff fd1d 	bl	8001b68 <I2C_TransferConfig>
 800212e:	e7c7      	b.n	80020c0 <HAL_I2C_Master_Transmit+0xb0>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8002130:	462a      	mov	r2, r5
 8002132:	990a      	ldr	r1, [sp, #40]	; 0x28
 8002134:	4620      	mov	r0, r4
 8002136:	f7ff fe8d 	bl	8001e54 <I2C_WaitOnSTOPFlagUntilTimeout>
 800213a:	4603      	mov	r3, r0
 800213c:	bb10      	cbnz	r0, 8002184 <HAL_I2C_Master_Transmit+0x174>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800213e:	6822      	ldr	r2, [r4, #0]
 8002140:	2120      	movs	r1, #32
 8002142:	61d1      	str	r1, [r2, #28]
    I2C_RESET_CR2(hi2c);
 8002144:	6820      	ldr	r0, [r4, #0]
 8002146:	6842      	ldr	r2, [r0, #4]
 8002148:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 800214c:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8002150:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 8002154:	f022 0201 	bic.w	r2, r2, #1
 8002158:	6042      	str	r2, [r0, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800215a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 800215e:	2200      	movs	r2, #0
 8002160:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 8002164:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    return HAL_OK;
 8002168:	e000      	b.n	800216c <HAL_I2C_Master_Transmit+0x15c>
    return HAL_BUSY;
 800216a:	2302      	movs	r3, #2
}
 800216c:	4618      	mov	r0, r3
 800216e:	b003      	add	sp, #12
 8002170:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_LOCK(hi2c);
 8002174:	2302      	movs	r3, #2
 8002176:	e7f9      	b.n	800216c <HAL_I2C_Master_Transmit+0x15c>
      return HAL_ERROR;
 8002178:	2301      	movs	r3, #1
 800217a:	e7f7      	b.n	800216c <HAL_I2C_Master_Transmit+0x15c>
        return HAL_ERROR;
 800217c:	2301      	movs	r3, #1
 800217e:	e7f5      	b.n	800216c <HAL_I2C_Master_Transmit+0x15c>
          return HAL_ERROR;
 8002180:	2301      	movs	r3, #1
 8002182:	e7f3      	b.n	800216c <HAL_I2C_Master_Transmit+0x15c>
      return HAL_ERROR;
 8002184:	2301      	movs	r3, #1
 8002186:	e7f1      	b.n	800216c <HAL_I2C_Master_Transmit+0x15c>
 8002188:	80002000 	.word	0x80002000

0800218c <HAL_I2C_Master_Receive>:
{
 800218c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002190:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002192:	f890 5041 	ldrb.w	r5, [r0, #65]	; 0x41
 8002196:	b2ed      	uxtb	r5, r5
 8002198:	2d20      	cmp	r5, #32
 800219a:	f040 80a4 	bne.w	80022e6 <HAL_I2C_Master_Receive+0x15a>
    __HAL_LOCK(hi2c);
 800219e:	f890 4040 	ldrb.w	r4, [r0, #64]	; 0x40
 80021a2:	2c01      	cmp	r4, #1
 80021a4:	f000 80a4 	beq.w	80022f0 <HAL_I2C_Master_Receive+0x164>
 80021a8:	4698      	mov	r8, r3
 80021aa:	4617      	mov	r7, r2
 80021ac:	460e      	mov	r6, r1
 80021ae:	4604      	mov	r4, r0
 80021b0:	f04f 0901 	mov.w	r9, #1
 80021b4:	f880 9040 	strb.w	r9, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 80021b8:	f7ff f926 	bl	8001408 <HAL_GetTick>
 80021bc:	4605      	mov	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80021be:	9000      	str	r0, [sp, #0]
 80021c0:	2319      	movs	r3, #25
 80021c2:	464a      	mov	r2, r9
 80021c4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80021c8:	4620      	mov	r0, r4
 80021ca:	f7ff fdaa 	bl	8001d22 <I2C_WaitOnFlagUntilTimeout>
 80021ce:	2800      	cmp	r0, #0
 80021d0:	f040 8090 	bne.w	80022f4 <HAL_I2C_Master_Receive+0x168>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80021d4:	2322      	movs	r3, #34	; 0x22
 80021d6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 80021da:	2310      	movs	r3, #16
 80021dc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80021e0:	2300      	movs	r3, #0
 80021e2:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->pBuffPtr  = pData;
 80021e4:	6267      	str	r7, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 80021e6:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 80021ea:	6363      	str	r3, [r4, #52]	; 0x34
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80021ec:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80021ee:	b29b      	uxth	r3, r3
 80021f0:	2bff      	cmp	r3, #255	; 0xff
 80021f2:	d90a      	bls.n	800220a <HAL_I2C_Master_Receive+0x7e>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80021f4:	22ff      	movs	r2, #255	; 0xff
 80021f6:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80021f8:	4b42      	ldr	r3, [pc, #264]	; (8002304 <HAL_I2C_Master_Receive+0x178>)
 80021fa:	9300      	str	r3, [sp, #0]
 80021fc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002200:	4631      	mov	r1, r6
 8002202:	4620      	mov	r0, r4
 8002204:	f7ff fcb0 	bl	8001b68 <I2C_TransferConfig>
 8002208:	e018      	b.n	800223c <HAL_I2C_Master_Receive+0xb0>
      hi2c->XferSize = hi2c->XferCount;
 800220a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800220c:	b292      	uxth	r2, r2
 800220e:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8002210:	4b3c      	ldr	r3, [pc, #240]	; (8002304 <HAL_I2C_Master_Receive+0x178>)
 8002212:	9300      	str	r3, [sp, #0]
 8002214:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002218:	b2d2      	uxtb	r2, r2
 800221a:	4631      	mov	r1, r6
 800221c:	4620      	mov	r0, r4
 800221e:	f7ff fca3 	bl	8001b68 <I2C_TransferConfig>
 8002222:	e00b      	b.n	800223c <HAL_I2C_Master_Receive+0xb0>
          hi2c->XferSize = hi2c->XferCount;
 8002224:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002226:	b292      	uxth	r2, r2
 8002228:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800222a:	2300      	movs	r3, #0
 800222c:	9300      	str	r3, [sp, #0]
 800222e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002232:	b2d2      	uxtb	r2, r2
 8002234:	4631      	mov	r1, r6
 8002236:	4620      	mov	r0, r4
 8002238:	f7ff fc96 	bl	8001b68 <I2C_TransferConfig>
    while (hi2c->XferCount > 0U)
 800223c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800223e:	b29b      	uxth	r3, r3
 8002240:	2b00      	cmp	r3, #0
 8002242:	d033      	beq.n	80022ac <HAL_I2C_Master_Receive+0x120>
      if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8002244:	462a      	mov	r2, r5
 8002246:	990a      	ldr	r1, [sp, #40]	; 0x28
 8002248:	4620      	mov	r0, r4
 800224a:	f7ff fe2b 	bl	8001ea4 <I2C_WaitOnRXNEFlagUntilTimeout>
 800224e:	2800      	cmp	r0, #0
 8002250:	d152      	bne.n	80022f8 <HAL_I2C_Master_Receive+0x16c>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8002252:	6823      	ldr	r3, [r4, #0]
 8002254:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002256:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002258:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 800225a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800225c:	3301      	adds	r3, #1
 800225e:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8002260:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8002262:	3b01      	subs	r3, #1
 8002264:	b29b      	uxth	r3, r3
 8002266:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8002268:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800226a:	3a01      	subs	r2, #1
 800226c:	b292      	uxth	r2, r2
 800226e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8002270:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002272:	b292      	uxth	r2, r2
 8002274:	2a00      	cmp	r2, #0
 8002276:	d0e1      	beq.n	800223c <HAL_I2C_Master_Receive+0xb0>
 8002278:	2b00      	cmp	r3, #0
 800227a:	d1df      	bne.n	800223c <HAL_I2C_Master_Receive+0xb0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 800227c:	9500      	str	r5, [sp, #0]
 800227e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002280:	2200      	movs	r2, #0
 8002282:	2180      	movs	r1, #128	; 0x80
 8002284:	4620      	mov	r0, r4
 8002286:	f7ff fd4c 	bl	8001d22 <I2C_WaitOnFlagUntilTimeout>
 800228a:	2800      	cmp	r0, #0
 800228c:	d136      	bne.n	80022fc <HAL_I2C_Master_Receive+0x170>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800228e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002290:	b29b      	uxth	r3, r3
 8002292:	2bff      	cmp	r3, #255	; 0xff
 8002294:	d9c6      	bls.n	8002224 <HAL_I2C_Master_Receive+0x98>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8002296:	22ff      	movs	r2, #255	; 0xff
 8002298:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800229a:	2300      	movs	r3, #0
 800229c:	9300      	str	r3, [sp, #0]
 800229e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80022a2:	4631      	mov	r1, r6
 80022a4:	4620      	mov	r0, r4
 80022a6:	f7ff fc5f 	bl	8001b68 <I2C_TransferConfig>
 80022aa:	e7c7      	b.n	800223c <HAL_I2C_Master_Receive+0xb0>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80022ac:	462a      	mov	r2, r5
 80022ae:	990a      	ldr	r1, [sp, #40]	; 0x28
 80022b0:	4620      	mov	r0, r4
 80022b2:	f7ff fdcf 	bl	8001e54 <I2C_WaitOnSTOPFlagUntilTimeout>
 80022b6:	4603      	mov	r3, r0
 80022b8:	bb10      	cbnz	r0, 8002300 <HAL_I2C_Master_Receive+0x174>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80022ba:	6822      	ldr	r2, [r4, #0]
 80022bc:	2120      	movs	r1, #32
 80022be:	61d1      	str	r1, [r2, #28]
    I2C_RESET_CR2(hi2c);
 80022c0:	6820      	ldr	r0, [r4, #0]
 80022c2:	6842      	ldr	r2, [r0, #4]
 80022c4:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 80022c8:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 80022cc:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 80022d0:	f022 0201 	bic.w	r2, r2, #1
 80022d4:	6042      	str	r2, [r0, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80022d6:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80022da:	2200      	movs	r2, #0
 80022dc:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 80022e0:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    return HAL_OK;
 80022e4:	e000      	b.n	80022e8 <HAL_I2C_Master_Receive+0x15c>
    return HAL_BUSY;
 80022e6:	2302      	movs	r3, #2
}
 80022e8:	4618      	mov	r0, r3
 80022ea:	b003      	add	sp, #12
 80022ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    __HAL_LOCK(hi2c);
 80022f0:	2302      	movs	r3, #2
 80022f2:	e7f9      	b.n	80022e8 <HAL_I2C_Master_Receive+0x15c>
      return HAL_ERROR;
 80022f4:	2301      	movs	r3, #1
 80022f6:	e7f7      	b.n	80022e8 <HAL_I2C_Master_Receive+0x15c>
        return HAL_ERROR;
 80022f8:	2301      	movs	r3, #1
 80022fa:	e7f5      	b.n	80022e8 <HAL_I2C_Master_Receive+0x15c>
          return HAL_ERROR;
 80022fc:	2301      	movs	r3, #1
 80022fe:	e7f3      	b.n	80022e8 <HAL_I2C_Master_Receive+0x15c>
      return HAL_ERROR;
 8002300:	2301      	movs	r3, #1
 8002302:	e7f1      	b.n	80022e8 <HAL_I2C_Master_Receive+0x15c>
 8002304:	80002400 	.word	0x80002400

08002308 <HAL_I2C_Mem_Write>:
{
 8002308:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800230c:	b082      	sub	sp, #8
 800230e:	f8bd 602c 	ldrh.w	r6, [sp, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002312:	f890 5041 	ldrb.w	r5, [r0, #65]	; 0x41
 8002316:	b2ed      	uxtb	r5, r5
 8002318:	2d20      	cmp	r5, #32
 800231a:	f040 80bf 	bne.w	800249c <HAL_I2C_Mem_Write+0x194>
    if ((pData == NULL) || (Size == 0U))
 800231e:	fab6 f586 	clz	r5, r6
 8002322:	096d      	lsrs	r5, r5, #5
 8002324:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8002326:	2c00      	cmp	r4, #0
 8002328:	bf08      	it	eq
 800232a:	2501      	moveq	r5, #1
 800232c:	b9d5      	cbnz	r5, 8002364 <HAL_I2C_Mem_Write+0x5c>
    __HAL_LOCK(hi2c);
 800232e:	f890 4040 	ldrb.w	r4, [r0, #64]	; 0x40
 8002332:	2c01      	cmp	r4, #1
 8002334:	f000 80b7 	beq.w	80024a6 <HAL_I2C_Mem_Write+0x19e>
 8002338:	4698      	mov	r8, r3
 800233a:	4691      	mov	r9, r2
 800233c:	460d      	mov	r5, r1
 800233e:	4604      	mov	r4, r0
 8002340:	f04f 0a01 	mov.w	sl, #1
 8002344:	f880 a040 	strb.w	sl, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 8002348:	f7ff f85e 	bl	8001408 <HAL_GetTick>
 800234c:	4607      	mov	r7, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800234e:	9000      	str	r0, [sp, #0]
 8002350:	2319      	movs	r3, #25
 8002352:	4652      	mov	r2, sl
 8002354:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8002358:	4620      	mov	r0, r4
 800235a:	f7ff fce2 	bl	8001d22 <I2C_WaitOnFlagUntilTimeout>
 800235e:	b130      	cbz	r0, 800236e <HAL_I2C_Mem_Write+0x66>
      return HAL_ERROR;
 8002360:	2301      	movs	r3, #1
 8002362:	e09c      	b.n	800249e <HAL_I2C_Mem_Write+0x196>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8002364:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002368:	6443      	str	r3, [r0, #68]	; 0x44
      return  HAL_ERROR;
 800236a:	2301      	movs	r3, #1
 800236c:	e097      	b.n	800249e <HAL_I2C_Mem_Write+0x196>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800236e:	2321      	movs	r3, #33	; 0x21
 8002370:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8002374:	2340      	movs	r3, #64	; 0x40
 8002376:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800237a:	2300      	movs	r3, #0
 800237c:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->pBuffPtr  = pData;
 800237e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002380:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 8002382:	8566      	strh	r6, [r4, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 8002384:	6363      	str	r3, [r4, #52]	; 0x34
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8002386:	9701      	str	r7, [sp, #4]
 8002388:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800238a:	9300      	str	r3, [sp, #0]
 800238c:	4643      	mov	r3, r8
 800238e:	464a      	mov	r2, r9
 8002390:	4629      	mov	r1, r5
 8002392:	4620      	mov	r0, r4
 8002394:	f7ff fcee 	bl	8001d74 <I2C_RequestMemoryWrite>
 8002398:	b970      	cbnz	r0, 80023b8 <HAL_I2C_Mem_Write+0xb0>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800239a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800239c:	b29b      	uxth	r3, r3
 800239e:	2bff      	cmp	r3, #255	; 0xff
 80023a0:	d90f      	bls.n	80023c2 <HAL_I2C_Mem_Write+0xba>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80023a2:	22ff      	movs	r2, #255	; 0xff
 80023a4:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 80023a6:	2300      	movs	r3, #0
 80023a8:	9300      	str	r3, [sp, #0]
 80023aa:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80023ae:	4629      	mov	r1, r5
 80023b0:	4620      	mov	r0, r4
 80023b2:	f7ff fbd9 	bl	8001b68 <I2C_TransferConfig>
 80023b6:	e021      	b.n	80023fc <HAL_I2C_Mem_Write+0xf4>
      __HAL_UNLOCK(hi2c);
 80023b8:	2300      	movs	r3, #0
 80023ba:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
 80023be:	4653      	mov	r3, sl
 80023c0:	e06d      	b.n	800249e <HAL_I2C_Mem_Write+0x196>
      hi2c->XferSize = hi2c->XferCount;
 80023c2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80023c4:	b292      	uxth	r2, r2
 80023c6:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80023c8:	2300      	movs	r3, #0
 80023ca:	9300      	str	r3, [sp, #0]
 80023cc:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80023d0:	b2d2      	uxtb	r2, r2
 80023d2:	4629      	mov	r1, r5
 80023d4:	4620      	mov	r0, r4
 80023d6:	f7ff fbc7 	bl	8001b68 <I2C_TransferConfig>
 80023da:	e00f      	b.n	80023fc <HAL_I2C_Mem_Write+0xf4>
          hi2c->XferSize = hi2c->XferCount;
 80023dc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80023de:	b292      	uxth	r2, r2
 80023e0:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80023e2:	2300      	movs	r3, #0
 80023e4:	9300      	str	r3, [sp, #0]
 80023e6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80023ea:	b2d2      	uxtb	r2, r2
 80023ec:	4629      	mov	r1, r5
 80023ee:	4620      	mov	r0, r4
 80023f0:	f7ff fbba 	bl	8001b68 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 80023f4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80023f6:	b29b      	uxth	r3, r3
 80023f8:	2b00      	cmp	r3, #0
 80023fa:	d032      	beq.n	8002462 <HAL_I2C_Mem_Write+0x15a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80023fc:	463a      	mov	r2, r7
 80023fe:	990c      	ldr	r1, [sp, #48]	; 0x30
 8002400:	4620      	mov	r0, r4
 8002402:	f7ff fc63 	bl	8001ccc <I2C_WaitOnTXISFlagUntilTimeout>
 8002406:	2800      	cmp	r0, #0
 8002408:	d14f      	bne.n	80024aa <HAL_I2C_Mem_Write+0x1a2>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 800240a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800240c:	6823      	ldr	r3, [r4, #0]
 800240e:	7812      	ldrb	r2, [r2, #0]
 8002410:	629a      	str	r2, [r3, #40]	; 0x28
      hi2c->pBuffPtr++;
 8002412:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002414:	3301      	adds	r3, #1
 8002416:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8002418:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800241a:	3b01      	subs	r3, #1
 800241c:	b29b      	uxth	r3, r3
 800241e:	8563      	strh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8002420:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8002422:	3b01      	subs	r3, #1
 8002424:	b29b      	uxth	r3, r3
 8002426:	8523      	strh	r3, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8002428:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800242a:	b292      	uxth	r2, r2
 800242c:	2a00      	cmp	r2, #0
 800242e:	d0e1      	beq.n	80023f4 <HAL_I2C_Mem_Write+0xec>
 8002430:	2b00      	cmp	r3, #0
 8002432:	d1df      	bne.n	80023f4 <HAL_I2C_Mem_Write+0xec>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8002434:	9700      	str	r7, [sp, #0]
 8002436:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002438:	2200      	movs	r2, #0
 800243a:	2180      	movs	r1, #128	; 0x80
 800243c:	4620      	mov	r0, r4
 800243e:	f7ff fc70 	bl	8001d22 <I2C_WaitOnFlagUntilTimeout>
 8002442:	bba0      	cbnz	r0, 80024ae <HAL_I2C_Mem_Write+0x1a6>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8002444:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002446:	b29b      	uxth	r3, r3
 8002448:	2bff      	cmp	r3, #255	; 0xff
 800244a:	d9c7      	bls.n	80023dc <HAL_I2C_Mem_Write+0xd4>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800244c:	22ff      	movs	r2, #255	; 0xff
 800244e:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8002450:	2300      	movs	r3, #0
 8002452:	9300      	str	r3, [sp, #0]
 8002454:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002458:	4629      	mov	r1, r5
 800245a:	4620      	mov	r0, r4
 800245c:	f7ff fb84 	bl	8001b68 <I2C_TransferConfig>
 8002460:	e7c8      	b.n	80023f4 <HAL_I2C_Mem_Write+0xec>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8002462:	463a      	mov	r2, r7
 8002464:	990c      	ldr	r1, [sp, #48]	; 0x30
 8002466:	4620      	mov	r0, r4
 8002468:	f7ff fcf4 	bl	8001e54 <I2C_WaitOnSTOPFlagUntilTimeout>
 800246c:	4603      	mov	r3, r0
 800246e:	bb00      	cbnz	r0, 80024b2 <HAL_I2C_Mem_Write+0x1aa>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8002470:	6822      	ldr	r2, [r4, #0]
 8002472:	2120      	movs	r1, #32
 8002474:	61d1      	str	r1, [r2, #28]
    I2C_RESET_CR2(hi2c);
 8002476:	6820      	ldr	r0, [r4, #0]
 8002478:	6842      	ldr	r2, [r0, #4]
 800247a:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 800247e:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8002482:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 8002486:	f022 0201 	bic.w	r2, r2, #1
 800248a:	6042      	str	r2, [r0, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800248c:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8002490:	2200      	movs	r2, #0
 8002492:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 8002496:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    return HAL_OK;
 800249a:	e000      	b.n	800249e <HAL_I2C_Mem_Write+0x196>
    return HAL_BUSY;
 800249c:	2302      	movs	r3, #2
}
 800249e:	4618      	mov	r0, r3
 80024a0:	b002      	add	sp, #8
 80024a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    __HAL_LOCK(hi2c);
 80024a6:	2302      	movs	r3, #2
 80024a8:	e7f9      	b.n	800249e <HAL_I2C_Mem_Write+0x196>
        return HAL_ERROR;
 80024aa:	2301      	movs	r3, #1
 80024ac:	e7f7      	b.n	800249e <HAL_I2C_Mem_Write+0x196>
          return HAL_ERROR;
 80024ae:	2301      	movs	r3, #1
 80024b0:	e7f5      	b.n	800249e <HAL_I2C_Mem_Write+0x196>
      return HAL_ERROR;
 80024b2:	2301      	movs	r3, #1
 80024b4:	e7f3      	b.n	800249e <HAL_I2C_Mem_Write+0x196>
	...

080024b8 <HAL_I2C_Mem_Read>:
{
 80024b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80024bc:	b082      	sub	sp, #8
 80024be:	f8bd 602c 	ldrh.w	r6, [sp, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_READY)
 80024c2:	f890 5041 	ldrb.w	r5, [r0, #65]	; 0x41
 80024c6:	b2ed      	uxtb	r5, r5
 80024c8:	2d20      	cmp	r5, #32
 80024ca:	f040 80c1 	bne.w	8002650 <HAL_I2C_Mem_Read+0x198>
    if ((pData == NULL) || (Size == 0U))
 80024ce:	fab6 f586 	clz	r5, r6
 80024d2:	096d      	lsrs	r5, r5, #5
 80024d4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80024d6:	2c00      	cmp	r4, #0
 80024d8:	bf08      	it	eq
 80024da:	2501      	moveq	r5, #1
 80024dc:	b9d5      	cbnz	r5, 8002514 <HAL_I2C_Mem_Read+0x5c>
    __HAL_LOCK(hi2c);
 80024de:	f890 4040 	ldrb.w	r4, [r0, #64]	; 0x40
 80024e2:	2c01      	cmp	r4, #1
 80024e4:	f000 80b9 	beq.w	800265a <HAL_I2C_Mem_Read+0x1a2>
 80024e8:	4698      	mov	r8, r3
 80024ea:	4691      	mov	r9, r2
 80024ec:	460d      	mov	r5, r1
 80024ee:	4604      	mov	r4, r0
 80024f0:	f04f 0a01 	mov.w	sl, #1
 80024f4:	f880 a040 	strb.w	sl, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 80024f8:	f7fe ff86 	bl	8001408 <HAL_GetTick>
 80024fc:	4607      	mov	r7, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80024fe:	9000      	str	r0, [sp, #0]
 8002500:	2319      	movs	r3, #25
 8002502:	4652      	mov	r2, sl
 8002504:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8002508:	4620      	mov	r0, r4
 800250a:	f7ff fc0a 	bl	8001d22 <I2C_WaitOnFlagUntilTimeout>
 800250e:	b130      	cbz	r0, 800251e <HAL_I2C_Mem_Read+0x66>
      return HAL_ERROR;
 8002510:	2301      	movs	r3, #1
 8002512:	e09e      	b.n	8002652 <HAL_I2C_Mem_Read+0x19a>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8002514:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002518:	6443      	str	r3, [r0, #68]	; 0x44
      return  HAL_ERROR;
 800251a:	2301      	movs	r3, #1
 800251c:	e099      	b.n	8002652 <HAL_I2C_Mem_Read+0x19a>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800251e:	2322      	movs	r3, #34	; 0x22
 8002520:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8002524:	2340      	movs	r3, #64	; 0x40
 8002526:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800252a:	2300      	movs	r3, #0
 800252c:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->pBuffPtr  = pData;
 800252e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002530:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 8002532:	8566      	strh	r6, [r4, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 8002534:	6363      	str	r3, [r4, #52]	; 0x34
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8002536:	9701      	str	r7, [sp, #4]
 8002538:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800253a:	9300      	str	r3, [sp, #0]
 800253c:	4643      	mov	r3, r8
 800253e:	464a      	mov	r2, r9
 8002540:	4629      	mov	r1, r5
 8002542:	4620      	mov	r0, r4
 8002544:	f7ff fc4e 	bl	8001de4 <I2C_RequestMemoryRead>
 8002548:	b970      	cbnz	r0, 8002568 <HAL_I2C_Mem_Read+0xb0>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800254a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800254c:	b29b      	uxth	r3, r3
 800254e:	2bff      	cmp	r3, #255	; 0xff
 8002550:	d90f      	bls.n	8002572 <HAL_I2C_Mem_Read+0xba>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8002552:	22ff      	movs	r2, #255	; 0xff
 8002554:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8002556:	4b45      	ldr	r3, [pc, #276]	; (800266c <HAL_I2C_Mem_Read+0x1b4>)
 8002558:	9300      	str	r3, [sp, #0]
 800255a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800255e:	4629      	mov	r1, r5
 8002560:	4620      	mov	r0, r4
 8002562:	f7ff fb01 	bl	8001b68 <I2C_TransferConfig>
 8002566:	e021      	b.n	80025ac <HAL_I2C_Mem_Read+0xf4>
      __HAL_UNLOCK(hi2c);
 8002568:	2300      	movs	r3, #0
 800256a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
 800256e:	4653      	mov	r3, sl
 8002570:	e06f      	b.n	8002652 <HAL_I2C_Mem_Read+0x19a>
      hi2c->XferSize = hi2c->XferCount;
 8002572:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002574:	b292      	uxth	r2, r2
 8002576:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8002578:	4b3c      	ldr	r3, [pc, #240]	; (800266c <HAL_I2C_Mem_Read+0x1b4>)
 800257a:	9300      	str	r3, [sp, #0]
 800257c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8002580:	b2d2      	uxtb	r2, r2
 8002582:	4629      	mov	r1, r5
 8002584:	4620      	mov	r0, r4
 8002586:	f7ff faef 	bl	8001b68 <I2C_TransferConfig>
 800258a:	e00f      	b.n	80025ac <HAL_I2C_Mem_Read+0xf4>
          hi2c->XferSize = hi2c->XferCount;
 800258c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800258e:	b292      	uxth	r2, r2
 8002590:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8002592:	2300      	movs	r3, #0
 8002594:	9300      	str	r3, [sp, #0]
 8002596:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800259a:	b2d2      	uxtb	r2, r2
 800259c:	4629      	mov	r1, r5
 800259e:	4620      	mov	r0, r4
 80025a0:	f7ff fae2 	bl	8001b68 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 80025a4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80025a6:	b29b      	uxth	r3, r3
 80025a8:	2b00      	cmp	r3, #0
 80025aa:	d034      	beq.n	8002616 <HAL_I2C_Mem_Read+0x15e>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 80025ac:	9700      	str	r7, [sp, #0]
 80025ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80025b0:	2200      	movs	r2, #0
 80025b2:	2104      	movs	r1, #4
 80025b4:	4620      	mov	r0, r4
 80025b6:	f7ff fbb4 	bl	8001d22 <I2C_WaitOnFlagUntilTimeout>
 80025ba:	2800      	cmp	r0, #0
 80025bc:	d14f      	bne.n	800265e <HAL_I2C_Mem_Read+0x1a6>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 80025be:	6823      	ldr	r3, [r4, #0]
 80025c0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80025c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80025c4:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 80025c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80025c8:	3301      	adds	r3, #1
 80025ca:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferSize--;
 80025cc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80025ce:	3b01      	subs	r3, #1
 80025d0:	b29b      	uxth	r3, r3
 80025d2:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80025d4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80025d6:	3a01      	subs	r2, #1
 80025d8:	b292      	uxth	r2, r2
 80025da:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80025dc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 80025de:	b292      	uxth	r2, r2
 80025e0:	2a00      	cmp	r2, #0
 80025e2:	d0df      	beq.n	80025a4 <HAL_I2C_Mem_Read+0xec>
 80025e4:	2b00      	cmp	r3, #0
 80025e6:	d1dd      	bne.n	80025a4 <HAL_I2C_Mem_Read+0xec>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 80025e8:	9700      	str	r7, [sp, #0]
 80025ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80025ec:	2200      	movs	r2, #0
 80025ee:	2180      	movs	r1, #128	; 0x80
 80025f0:	4620      	mov	r0, r4
 80025f2:	f7ff fb96 	bl	8001d22 <I2C_WaitOnFlagUntilTimeout>
 80025f6:	bba0      	cbnz	r0, 8002662 <HAL_I2C_Mem_Read+0x1aa>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80025f8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80025fa:	b29b      	uxth	r3, r3
 80025fc:	2bff      	cmp	r3, #255	; 0xff
 80025fe:	d9c5      	bls.n	800258c <HAL_I2C_Mem_Read+0xd4>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8002600:	22ff      	movs	r2, #255	; 0xff
 8002602:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8002604:	2300      	movs	r3, #0
 8002606:	9300      	str	r3, [sp, #0]
 8002608:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800260c:	4629      	mov	r1, r5
 800260e:	4620      	mov	r0, r4
 8002610:	f7ff faaa 	bl	8001b68 <I2C_TransferConfig>
 8002614:	e7c6      	b.n	80025a4 <HAL_I2C_Mem_Read+0xec>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8002616:	463a      	mov	r2, r7
 8002618:	990c      	ldr	r1, [sp, #48]	; 0x30
 800261a:	4620      	mov	r0, r4
 800261c:	f7ff fc1a 	bl	8001e54 <I2C_WaitOnSTOPFlagUntilTimeout>
 8002620:	4603      	mov	r3, r0
 8002622:	bb00      	cbnz	r0, 8002666 <HAL_I2C_Mem_Read+0x1ae>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8002624:	6822      	ldr	r2, [r4, #0]
 8002626:	2120      	movs	r1, #32
 8002628:	61d1      	str	r1, [r2, #28]
    I2C_RESET_CR2(hi2c);
 800262a:	6820      	ldr	r0, [r4, #0]
 800262c:	6842      	ldr	r2, [r0, #4]
 800262e:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 8002632:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8002636:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 800263a:	f022 0201 	bic.w	r2, r2, #1
 800263e:	6042      	str	r2, [r0, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8002640:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8002644:	2200      	movs	r2, #0
 8002646:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 800264a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    return HAL_OK;
 800264e:	e000      	b.n	8002652 <HAL_I2C_Mem_Read+0x19a>
    return HAL_BUSY;
 8002650:	2302      	movs	r3, #2
}
 8002652:	4618      	mov	r0, r3
 8002654:	b002      	add	sp, #8
 8002656:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    __HAL_LOCK(hi2c);
 800265a:	2302      	movs	r3, #2
 800265c:	e7f9      	b.n	8002652 <HAL_I2C_Mem_Read+0x19a>
        return HAL_ERROR;
 800265e:	2301      	movs	r3, #1
 8002660:	e7f7      	b.n	8002652 <HAL_I2C_Mem_Read+0x19a>
          return HAL_ERROR;
 8002662:	2301      	movs	r3, #1
 8002664:	e7f5      	b.n	8002652 <HAL_I2C_Mem_Read+0x19a>
      return HAL_ERROR;
 8002666:	2301      	movs	r3, #1
 8002668:	e7f3      	b.n	8002652 <HAL_I2C_Mem_Read+0x19a>
 800266a:	bf00      	nop
 800266c:	80002400 	.word	0x80002400

08002670 <HAL_I2C_IsDeviceReady>:
{
 8002670:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002674:	b085      	sub	sp, #20
  __IO uint32_t I2C_Trials = 0UL;
 8002676:	2400      	movs	r4, #0
 8002678:	9403      	str	r4, [sp, #12]
  if (hi2c->State == HAL_I2C_STATE_READY)
 800267a:	f890 4041 	ldrb.w	r4, [r0, #65]	; 0x41
 800267e:	b2e4      	uxtb	r4, r4
 8002680:	2c20      	cmp	r4, #32
 8002682:	f040 809b 	bne.w	80027bc <HAL_I2C_IsDeviceReady+0x14c>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 8002686:	6804      	ldr	r4, [r0, #0]
 8002688:	69a4      	ldr	r4, [r4, #24]
 800268a:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 800268e:	f040 809a 	bne.w	80027c6 <HAL_I2C_IsDeviceReady+0x156>
    __HAL_LOCK(hi2c);
 8002692:	f890 4040 	ldrb.w	r4, [r0, #64]	; 0x40
 8002696:	2c01      	cmp	r4, #1
 8002698:	f000 8097 	beq.w	80027ca <HAL_I2C_IsDeviceReady+0x15a>
 800269c:	461e      	mov	r6, r3
 800269e:	4691      	mov	r9, r2
 80026a0:	4688      	mov	r8, r1
 80026a2:	4605      	mov	r5, r0
 80026a4:	2301      	movs	r3, #1
 80026a6:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    hi2c->State = HAL_I2C_STATE_BUSY;
 80026aa:	2324      	movs	r3, #36	; 0x24
 80026ac:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80026b0:	2300      	movs	r3, #0
 80026b2:	6443      	str	r3, [r0, #68]	; 0x44
      hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
 80026b4:	68eb      	ldr	r3, [r5, #12]
 80026b6:	2b01      	cmp	r3, #1
 80026b8:	d010      	beq.n	80026dc <HAL_I2C_IsDeviceReady+0x6c>
 80026ba:	f3c8 0309 	ubfx	r3, r8, #0, #10
 80026be:	f443 5320 	orr.w	r3, r3, #10240	; 0x2800
 80026c2:	682a      	ldr	r2, [r5, #0]
 80026c4:	6053      	str	r3, [r2, #4]
      tickstart = HAL_GetTick();
 80026c6:	f7fe fe9f 	bl	8001408 <HAL_GetTick>
 80026ca:	4607      	mov	r7, r0
      tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
 80026cc:	682a      	ldr	r2, [r5, #0]
 80026ce:	6993      	ldr	r3, [r2, #24]
 80026d0:	f3c3 1340 	ubfx	r3, r3, #5, #1
      tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 80026d4:	6994      	ldr	r4, [r2, #24]
 80026d6:	f3c4 1400 	ubfx	r4, r4, #4, #1
      while ((tmp1 == RESET) && (tmp2 == RESET))
 80026da:	e00b      	b.n	80026f4 <HAL_I2C_IsDeviceReady+0x84>
      hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
 80026dc:	f3c8 0209 	ubfx	r2, r8, #0, #10
 80026e0:	4b3e      	ldr	r3, [pc, #248]	; (80027dc <HAL_I2C_IsDeviceReady+0x16c>)
 80026e2:	4313      	orrs	r3, r2
 80026e4:	e7ed      	b.n	80026c2 <HAL_I2C_IsDeviceReady+0x52>
        tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
 80026e6:	682a      	ldr	r2, [r5, #0]
 80026e8:	6993      	ldr	r3, [r2, #24]
 80026ea:	f3c3 1340 	ubfx	r3, r3, #5, #1
        tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 80026ee:	6994      	ldr	r4, [r2, #24]
 80026f0:	f3c4 1400 	ubfx	r4, r4, #4, #1
      while ((tmp1 == RESET) && (tmp2 == RESET))
 80026f4:	4323      	orrs	r3, r4
 80026f6:	d115      	bne.n	8002724 <HAL_I2C_IsDeviceReady+0xb4>
        if (Timeout != HAL_MAX_DELAY)
 80026f8:	f1b6 3fff 	cmp.w	r6, #4294967295
 80026fc:	d0f3      	beq.n	80026e6 <HAL_I2C_IsDeviceReady+0x76>
          if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 80026fe:	f7fe fe83 	bl	8001408 <HAL_GetTick>
 8002702:	1bc0      	subs	r0, r0, r7
 8002704:	42b0      	cmp	r0, r6
 8002706:	d801      	bhi.n	800270c <HAL_I2C_IsDeviceReady+0x9c>
 8002708:	2e00      	cmp	r6, #0
 800270a:	d1ec      	bne.n	80026e6 <HAL_I2C_IsDeviceReady+0x76>
            hi2c->State = HAL_I2C_STATE_READY;
 800270c:	2320      	movs	r3, #32
 800270e:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
            hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8002712:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8002714:	f043 0320 	orr.w	r3, r3, #32
 8002718:	646b      	str	r3, [r5, #68]	; 0x44
            __HAL_UNLOCK(hi2c);
 800271a:	2300      	movs	r3, #0
 800271c:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
            return HAL_ERROR;
 8002720:	2301      	movs	r3, #1
 8002722:	e04c      	b.n	80027be <HAL_I2C_IsDeviceReady+0x14e>
      if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
 8002724:	682b      	ldr	r3, [r5, #0]
 8002726:	699b      	ldr	r3, [r3, #24]
 8002728:	f013 0f10 	tst.w	r3, #16
 800272c:	d023      	beq.n	8002776 <HAL_I2C_IsDeviceReady+0x106>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 800272e:	9700      	str	r7, [sp, #0]
 8002730:	4633      	mov	r3, r6
 8002732:	2200      	movs	r2, #0
 8002734:	2120      	movs	r1, #32
 8002736:	4628      	mov	r0, r5
 8002738:	f7ff faf3 	bl	8001d22 <I2C_WaitOnFlagUntilTimeout>
 800273c:	2800      	cmp	r0, #0
 800273e:	d148      	bne.n	80027d2 <HAL_I2C_IsDeviceReady+0x162>
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8002740:	682b      	ldr	r3, [r5, #0]
 8002742:	2210      	movs	r2, #16
 8002744:	61da      	str	r2, [r3, #28]
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8002746:	682b      	ldr	r3, [r5, #0]
 8002748:	2220      	movs	r2, #32
 800274a:	61da      	str	r2, [r3, #28]
      if (I2C_Trials == Trials)
 800274c:	9b03      	ldr	r3, [sp, #12]
 800274e:	454b      	cmp	r3, r9
 8002750:	d023      	beq.n	800279a <HAL_I2C_IsDeviceReady+0x12a>
      I2C_Trials++;
 8002752:	9b03      	ldr	r3, [sp, #12]
 8002754:	3301      	adds	r3, #1
 8002756:	9303      	str	r3, [sp, #12]
    } while (I2C_Trials < Trials);
 8002758:	9b03      	ldr	r3, [sp, #12]
 800275a:	454b      	cmp	r3, r9
 800275c:	d3aa      	bcc.n	80026b4 <HAL_I2C_IsDeviceReady+0x44>
    hi2c->State = HAL_I2C_STATE_READY;
 800275e:	2320      	movs	r3, #32
 8002760:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
    hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8002764:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8002766:	f043 0320 	orr.w	r3, r3, #32
 800276a:	646b      	str	r3, [r5, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
 800276c:	2300      	movs	r3, #0
 800276e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    return HAL_ERROR;
 8002772:	2301      	movs	r3, #1
 8002774:	e023      	b.n	80027be <HAL_I2C_IsDeviceReady+0x14e>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 8002776:	9700      	str	r7, [sp, #0]
 8002778:	4633      	mov	r3, r6
 800277a:	2200      	movs	r2, #0
 800277c:	2120      	movs	r1, #32
 800277e:	4628      	mov	r0, r5
 8002780:	f7ff facf 	bl	8001d22 <I2C_WaitOnFlagUntilTimeout>
 8002784:	4603      	mov	r3, r0
 8002786:	bb10      	cbnz	r0, 80027ce <HAL_I2C_IsDeviceReady+0x15e>
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8002788:	6829      	ldr	r1, [r5, #0]
 800278a:	2220      	movs	r2, #32
 800278c:	61ca      	str	r2, [r1, #28]
        hi2c->State = HAL_I2C_STATE_READY;
 800278e:	f885 2041 	strb.w	r2, [r5, #65]	; 0x41
        __HAL_UNLOCK(hi2c);
 8002792:	2200      	movs	r2, #0
 8002794:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
        return HAL_OK;
 8002798:	e011      	b.n	80027be <HAL_I2C_IsDeviceReady+0x14e>
        hi2c->Instance->CR2 |= I2C_CR2_STOP;
 800279a:	682a      	ldr	r2, [r5, #0]
 800279c:	6853      	ldr	r3, [r2, #4]
 800279e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80027a2:	6053      	str	r3, [r2, #4]
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 80027a4:	9700      	str	r7, [sp, #0]
 80027a6:	4633      	mov	r3, r6
 80027a8:	2200      	movs	r2, #0
 80027aa:	2120      	movs	r1, #32
 80027ac:	4628      	mov	r0, r5
 80027ae:	f7ff fab8 	bl	8001d22 <I2C_WaitOnFlagUntilTimeout>
 80027b2:	b980      	cbnz	r0, 80027d6 <HAL_I2C_IsDeviceReady+0x166>
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80027b4:	682b      	ldr	r3, [r5, #0]
 80027b6:	2220      	movs	r2, #32
 80027b8:	61da      	str	r2, [r3, #28]
 80027ba:	e7ca      	b.n	8002752 <HAL_I2C_IsDeviceReady+0xe2>
    return HAL_BUSY;
 80027bc:	2302      	movs	r3, #2
}
 80027be:	4618      	mov	r0, r3
 80027c0:	b005      	add	sp, #20
 80027c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      return HAL_BUSY;
 80027c6:	2302      	movs	r3, #2
 80027c8:	e7f9      	b.n	80027be <HAL_I2C_IsDeviceReady+0x14e>
    __HAL_LOCK(hi2c);
 80027ca:	2302      	movs	r3, #2
 80027cc:	e7f7      	b.n	80027be <HAL_I2C_IsDeviceReady+0x14e>
          return HAL_ERROR;
 80027ce:	2301      	movs	r3, #1
 80027d0:	e7f5      	b.n	80027be <HAL_I2C_IsDeviceReady+0x14e>
          return HAL_ERROR;
 80027d2:	2301      	movs	r3, #1
 80027d4:	e7f3      	b.n	80027be <HAL_I2C_IsDeviceReady+0x14e>
          return HAL_ERROR;
 80027d6:	2301      	movs	r3, #1
 80027d8:	e7f1      	b.n	80027be <HAL_I2C_IsDeviceReady+0x14e>
 80027da:	bf00      	nop
 80027dc:	02002000 	.word	0x02002000

080027e0 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80027e0:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 80027e4:	b2db      	uxtb	r3, r3
 80027e6:	2b20      	cmp	r3, #32
 80027e8:	d124      	bne.n	8002834 <HAL_I2CEx_ConfigAnalogFilter+0x54>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80027ea:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 80027ee:	2b01      	cmp	r3, #1
 80027f0:	d022      	beq.n	8002838 <HAL_I2CEx_ConfigAnalogFilter+0x58>
 80027f2:	2301      	movs	r3, #1
 80027f4:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 80027f8:	2324      	movs	r3, #36	; 0x24
 80027fa:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80027fe:	6802      	ldr	r2, [r0, #0]
 8002800:	6813      	ldr	r3, [r2, #0]
 8002802:	f023 0301 	bic.w	r3, r3, #1
 8002806:	6013      	str	r3, [r2, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8002808:	6802      	ldr	r2, [r0, #0]
 800280a:	6813      	ldr	r3, [r2, #0]
 800280c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002810:	6013      	str	r3, [r2, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8002812:	6802      	ldr	r2, [r0, #0]
 8002814:	6813      	ldr	r3, [r2, #0]
 8002816:	4319      	orrs	r1, r3
 8002818:	6011      	str	r1, [r2, #0]

    __HAL_I2C_ENABLE(hi2c);
 800281a:	6802      	ldr	r2, [r0, #0]
 800281c:	6813      	ldr	r3, [r2, #0]
 800281e:	f043 0301 	orr.w	r3, r3, #1
 8002822:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8002824:	2320      	movs	r3, #32
 8002826:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800282a:	2300      	movs	r3, #0
 800282c:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 8002830:	4618      	mov	r0, r3
 8002832:	4770      	bx	lr
  }
  else
  {
    return HAL_BUSY;
 8002834:	2002      	movs	r0, #2
 8002836:	4770      	bx	lr
    __HAL_LOCK(hi2c);
 8002838:	2002      	movs	r0, #2
  }
}
 800283a:	4770      	bx	lr

0800283c <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800283c:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8002840:	b2db      	uxtb	r3, r3
 8002842:	2b20      	cmp	r3, #32
 8002844:	d122      	bne.n	800288c <HAL_I2CEx_ConfigDigitalFilter+0x50>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8002846:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800284a:	2b01      	cmp	r3, #1
 800284c:	d020      	beq.n	8002890 <HAL_I2CEx_ConfigDigitalFilter+0x54>
 800284e:	2301      	movs	r3, #1
 8002850:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 8002854:	2324      	movs	r3, #36	; 0x24
 8002856:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800285a:	6802      	ldr	r2, [r0, #0]
 800285c:	6813      	ldr	r3, [r2, #0]
 800285e:	f023 0301 	bic.w	r3, r3, #1
 8002862:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8002864:	6802      	ldr	r2, [r0, #0]
 8002866:	6813      	ldr	r3, [r2, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8002868:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 800286c:	ea43 2101 	orr.w	r1, r3, r1, lsl #8

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8002870:	6011      	str	r1, [r2, #0]

    __HAL_I2C_ENABLE(hi2c);
 8002872:	6802      	ldr	r2, [r0, #0]
 8002874:	6813      	ldr	r3, [r2, #0]
 8002876:	f043 0301 	orr.w	r3, r3, #1
 800287a:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800287c:	2320      	movs	r3, #32
 800287e:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8002882:	2300      	movs	r3, #0
 8002884:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 8002888:	4618      	mov	r0, r3
 800288a:	4770      	bx	lr
  }
  else
  {
    return HAL_BUSY;
 800288c:	2002      	movs	r0, #2
 800288e:	4770      	bx	lr
    __HAL_LOCK(hi2c);
 8002890:	2002      	movs	r0, #2
  }
}
 8002892:	4770      	bx	lr

08002894 <PCD_WriteEmptyTxFifo>:
  * @param  hpcd PCD handle
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_WriteEmptyTxFifo(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
 8002894:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002898:	b082      	sub	sp, #8
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 800289a:	6807      	ldr	r7, [r0, #0]
  uint32_t len32b;
  uint32_t fifoemptymsk;

  ep = &hpcd->IN_ep[epnum];

  if (ep->xfer_count > ep->xfer_len)
 800289c:	00ca      	lsls	r2, r1, #3
 800289e:	1a52      	subs	r2, r2, r1
 80028a0:	0093      	lsls	r3, r2, #2
 80028a2:	4403      	add	r3, r0
 80028a4:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80028a6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80028a8:	429a      	cmp	r2, r3
 80028aa:	d857      	bhi.n	800295c <PCD_WriteEmptyTxFifo+0xc8>
 80028ac:	46b8      	mov	r8, r7
  {
    return HAL_ERROR;
  }

  len = ep->xfer_len - ep->xfer_count;
 80028ae:	1a9b      	subs	r3, r3, r2

  if (len > ep->maxpacket)
 80028b0:	ebc1 04c1 	rsb	r4, r1, r1, lsl #3
 80028b4:	00a2      	lsls	r2, r4, #2
 80028b6:	4402      	add	r2, r0
 80028b8:	6c52      	ldr	r2, [r2, #68]	; 0x44
 80028ba:	429a      	cmp	r2, r3
 80028bc:	d300      	bcc.n	80028c0 <PCD_WriteEmptyTxFifo+0x2c>
  len = ep->xfer_len - ep->xfer_count;
 80028be:	461a      	mov	r2, r3
 80028c0:	460c      	mov	r4, r1
 80028c2:	4606      	mov	r6, r0
  {
    len = ep->maxpacket;
  }

  len32b = (len + 3U) / 4U;
 80028c4:	f102 0a03 	add.w	sl, r2, #3
 80028c8:	ea4f 0a9a 	mov.w	sl, sl, lsr #2

  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80028cc:	e016      	b.n	80028fc <PCD_WriteEmptyTxFifo+0x68>

    if (len > ep->maxpacket)
    {
      len = ep->maxpacket;
    }
    len32b = (len + 3U) / 4U;
 80028ce:	f109 0a03 	add.w	sl, r9, #3
 80028d2:	ea4f 0a9a 	mov.w	sl, sl, lsr #2

    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 80028d6:	00e3      	lsls	r3, r4, #3
 80028d8:	1b1b      	subs	r3, r3, r4
 80028da:	009d      	lsls	r5, r3, #2
 80028dc:	4435      	add	r5, r6
 80028de:	6ca9      	ldr	r1, [r5, #72]	; 0x48
 80028e0:	7c33      	ldrb	r3, [r6, #16]
 80028e2:	9300      	str	r3, [sp, #0]
 80028e4:	fa1f f389 	uxth.w	r3, r9
 80028e8:	b2e2      	uxtb	r2, r4
 80028ea:	4638      	mov	r0, r7
 80028ec:	f002 fec2 	bl	8005674 <USB_WritePacket>
                          (uint8_t)hpcd->Init.dma_enable);

    ep->xfer_buff  += len;
 80028f0:	6cab      	ldr	r3, [r5, #72]	; 0x48
 80028f2:	444b      	add	r3, r9
 80028f4:	64ab      	str	r3, [r5, #72]	; 0x48
    ep->xfer_count += len;
 80028f6:	6d6b      	ldr	r3, [r5, #84]	; 0x54
 80028f8:	444b      	add	r3, r9
 80028fa:	656b      	str	r3, [r5, #84]	; 0x54
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80028fc:	eb08 1344 	add.w	r3, r8, r4, lsl #5
 8002900:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8002904:	699b      	ldr	r3, [r3, #24]
 8002906:	b29b      	uxth	r3, r3
 8002908:	4553      	cmp	r3, sl
 800290a:	d313      	bcc.n	8002934 <PCD_WriteEmptyTxFifo+0xa0>
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 800290c:	00e3      	lsls	r3, r4, #3
 800290e:	1b1b      	subs	r3, r3, r4
 8002910:	009a      	lsls	r2, r3, #2
 8002912:	4432      	add	r2, r6
 8002914:	6d51      	ldr	r1, [r2, #84]	; 0x54
 8002916:	6d13      	ldr	r3, [r2, #80]	; 0x50
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8002918:	4299      	cmp	r1, r3
 800291a:	d20b      	bcs.n	8002934 <PCD_WriteEmptyTxFifo+0xa0>
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 800291c:	b153      	cbz	r3, 8002934 <PCD_WriteEmptyTxFifo+0xa0>
    len = ep->xfer_len - ep->xfer_count;
 800291e:	1a5b      	subs	r3, r3, r1
    if (len > ep->maxpacket)
 8002920:	ebc4 01c4 	rsb	r1, r4, r4, lsl #3
 8002924:	008a      	lsls	r2, r1, #2
 8002926:	4432      	add	r2, r6
 8002928:	f8d2 9044 	ldr.w	r9, [r2, #68]	; 0x44
 800292c:	4599      	cmp	r9, r3
 800292e:	d3ce      	bcc.n	80028ce <PCD_WriteEmptyTxFifo+0x3a>
    len = ep->xfer_len - ep->xfer_count;
 8002930:	4699      	mov	r9, r3
 8002932:	e7cc      	b.n	80028ce <PCD_WriteEmptyTxFifo+0x3a>
  }

  if (ep->xfer_len <= ep->xfer_count)
 8002934:	00e3      	lsls	r3, r4, #3
 8002936:	1b1b      	subs	r3, r3, r4
 8002938:	0098      	lsls	r0, r3, #2
 800293a:	4406      	add	r6, r0
 800293c:	6d32      	ldr	r2, [r6, #80]	; 0x50
 800293e:	6d73      	ldr	r3, [r6, #84]	; 0x54
 8002940:	429a      	cmp	r2, r3
 8002942:	d80f      	bhi.n	8002964 <PCD_WriteEmptyTxFifo+0xd0>
  {
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8002944:	f004 040f 	and.w	r4, r4, #15
 8002948:	2101      	movs	r1, #1
 800294a:	40a1      	lsls	r1, r4
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 800294c:	f8d7 4834 	ldr.w	r4, [r7, #2100]	; 0x834
 8002950:	ea24 0401 	bic.w	r4, r4, r1
 8002954:	f8c7 4834 	str.w	r4, [r7, #2100]	; 0x834
  }

  return HAL_OK;
 8002958:	2000      	movs	r0, #0
 800295a:	e000      	b.n	800295e <PCD_WriteEmptyTxFifo+0xca>
    return HAL_ERROR;
 800295c:	2001      	movs	r0, #1
}
 800295e:	b002      	add	sp, #8
 8002960:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  return HAL_OK;
 8002964:	2000      	movs	r0, #0
 8002966:	e7fa      	b.n	800295e <PCD_WriteEmptyTxFifo+0xca>

08002968 <HAL_PCD_Init>:
{
 8002968:	b5f0      	push	{r4, r5, r6, r7, lr}
 800296a:	b08b      	sub	sp, #44	; 0x2c
  if (hpcd == NULL)
 800296c:	2800      	cmp	r0, #0
 800296e:	f000 8091 	beq.w	8002a94 <HAL_PCD_Init+0x12c>
 8002972:	4604      	mov	r4, r0
  USBx = hpcd->Instance;
 8002974:	6805      	ldr	r5, [r0, #0]
  if (hpcd->State == HAL_PCD_STATE_RESET)
 8002976:	f890 33bd 	ldrb.w	r3, [r0, #957]	; 0x3bd
 800297a:	b323      	cbz	r3, 80029c6 <HAL_PCD_Init+0x5e>
  hpcd->State = HAL_PCD_STATE_BUSY;
 800297c:	2303      	movs	r3, #3
 800297e:	f884 33bd 	strb.w	r3, [r4, #957]	; 0x3bd
  if ((USBx->CID & (0x1U << 8)) == 0U)
 8002982:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8002984:	f413 7f80 	tst.w	r3, #256	; 0x100
 8002988:	d101      	bne.n	800298e <HAL_PCD_Init+0x26>
    hpcd->Init.dma_enable = 0U;
 800298a:	2300      	movs	r3, #0
 800298c:	6123      	str	r3, [r4, #16]
  __HAL_PCD_DISABLE(hpcd);
 800298e:	6820      	ldr	r0, [r4, #0]
 8002990:	f002 fc02 	bl	8005198 <USB_DisableGlobalInt>
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8002994:	4625      	mov	r5, r4
 8002996:	f855 7b10 	ldr.w	r7, [r5], #16
 800299a:	466e      	mov	r6, sp
 800299c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800299e:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80029a0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80029a2:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80029a4:	e895 0003 	ldmia.w	r5, {r0, r1}
 80029a8:	e886 0003 	stmia.w	r6, {r0, r1}
 80029ac:	1d23      	adds	r3, r4, #4
 80029ae:	cb0e      	ldmia	r3, {r1, r2, r3}
 80029b0:	4638      	mov	r0, r7
 80029b2:	f002 fb37 	bl	8005024 <USB_CoreInit>
 80029b6:	b158      	cbz	r0, 80029d0 <HAL_PCD_Init+0x68>
    hpcd->State = HAL_PCD_STATE_ERROR;
 80029b8:	2302      	movs	r3, #2
 80029ba:	f884 33bd 	strb.w	r3, [r4, #957]	; 0x3bd
    return HAL_ERROR;
 80029be:	2501      	movs	r5, #1
}
 80029c0:	4628      	mov	r0, r5
 80029c2:	b00b      	add	sp, #44	; 0x2c
 80029c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hpcd->Lock = HAL_UNLOCKED;
 80029c6:	f880 33bc 	strb.w	r3, [r0, #956]	; 0x3bc
    HAL_PCD_MspInit(hpcd);
 80029ca:	f004 fee5 	bl	8007798 <HAL_PCD_MspInit>
 80029ce:	e7d5      	b.n	800297c <HAL_PCD_Init+0x14>
  (void)USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE);
 80029d0:	2100      	movs	r1, #0
 80029d2:	6820      	ldr	r0, [r4, #0]
 80029d4:	f003 f851 	bl	8005a7a <USB_SetCurrentMode>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80029d8:	2300      	movs	r3, #0
 80029da:	e015      	b.n	8002a08 <HAL_PCD_Init+0xa0>
    hpcd->IN_ep[i].is_in = 1U;
 80029dc:	00d9      	lsls	r1, r3, #3
 80029de:	1ac8      	subs	r0, r1, r3
 80029e0:	0082      	lsls	r2, r0, #2
 80029e2:	4422      	add	r2, r4
 80029e4:	2001      	movs	r0, #1
 80029e6:	f882 003d 	strb.w	r0, [r2, #61]	; 0x3d
    hpcd->IN_ep[i].num = i;
 80029ea:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
    hpcd->IN_ep[i].tx_fifo_num = i;
 80029ee:	f8a2 3042 	strh.w	r3, [r2, #66]	; 0x42
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 80029f2:	2000      	movs	r0, #0
 80029f4:	f882 003f 	strb.w	r0, [r2, #63]	; 0x3f
    hpcd->IN_ep[i].maxpacket = 0U;
 80029f8:	6450      	str	r0, [r2, #68]	; 0x44
    hpcd->IN_ep[i].xfer_buff = 0U;
 80029fa:	6490      	str	r0, [r2, #72]	; 0x48
    hpcd->IN_ep[i].xfer_len = 0U;
 80029fc:	1aca      	subs	r2, r1, r3
 80029fe:	0091      	lsls	r1, r2, #2
 8002a00:	4421      	add	r1, r4
 8002a02:	6508      	str	r0, [r1, #80]	; 0x50
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8002a04:	3301      	adds	r3, #1
 8002a06:	b2db      	uxtb	r3, r3
 8002a08:	6865      	ldr	r5, [r4, #4]
 8002a0a:	42ab      	cmp	r3, r5
 8002a0c:	d3e6      	bcc.n	80029dc <HAL_PCD_Init+0x74>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8002a0e:	2300      	movs	r3, #0
 8002a10:	e015      	b.n	8002a3e <HAL_PCD_Init+0xd6>
    hpcd->OUT_ep[i].is_in = 0U;
 8002a12:	00d8      	lsls	r0, r3, #3
 8002a14:	1ac1      	subs	r1, r0, r3
 8002a16:	008a      	lsls	r2, r1, #2
 8002a18:	4422      	add	r2, r4
 8002a1a:	2100      	movs	r1, #0
 8002a1c:	f882 11fd 	strb.w	r1, [r2, #509]	; 0x1fd
    hpcd->OUT_ep[i].num = i;
 8002a20:	f882 31fc 	strb.w	r3, [r2, #508]	; 0x1fc
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 8002a24:	f882 11ff 	strb.w	r1, [r2, #511]	; 0x1ff
    hpcd->OUT_ep[i].maxpacket = 0U;
 8002a28:	f8c2 1204 	str.w	r1, [r2, #516]	; 0x204
    hpcd->OUT_ep[i].xfer_buff = 0U;
 8002a2c:	f8c2 1208 	str.w	r1, [r2, #520]	; 0x208
    hpcd->OUT_ep[i].xfer_len = 0U;
 8002a30:	1ac2      	subs	r2, r0, r3
 8002a32:	0090      	lsls	r0, r2, #2
 8002a34:	4420      	add	r0, r4
 8002a36:	f8c0 1210 	str.w	r1, [r0, #528]	; 0x210
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8002a3a:	3301      	adds	r3, #1
 8002a3c:	b2db      	uxtb	r3, r3
 8002a3e:	429d      	cmp	r5, r3
 8002a40:	d8e7      	bhi.n	8002a12 <HAL_PCD_Init+0xaa>
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8002a42:	4625      	mov	r5, r4
 8002a44:	f855 7b10 	ldr.w	r7, [r5], #16
 8002a48:	466e      	mov	r6, sp
 8002a4a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a4c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8002a4e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a50:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8002a52:	e895 0003 	ldmia.w	r5, {r0, r1}
 8002a56:	e886 0003 	stmia.w	r6, {r0, r1}
 8002a5a:	1d23      	adds	r3, r4, #4
 8002a5c:	cb0e      	ldmia	r3, {r1, r2, r3}
 8002a5e:	4638      	mov	r0, r7
 8002a60:	f002 fbf2 	bl	8005248 <USB_DevInit>
 8002a64:	4605      	mov	r5, r0
 8002a66:	b960      	cbnz	r0, 8002a82 <HAL_PCD_Init+0x11a>
  hpcd->USB_Address = 0U;
 8002a68:	2300      	movs	r3, #0
 8002a6a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
  hpcd->State = HAL_PCD_STATE_READY;
 8002a6e:	2301      	movs	r3, #1
 8002a70:	f884 33bd 	strb.w	r3, [r4, #957]	; 0x3bd
  if (hpcd->Init.lpm_enable == 1U)
 8002a74:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002a76:	2b01      	cmp	r3, #1
 8002a78:	d008      	beq.n	8002a8c <HAL_PCD_Init+0x124>
  (void)USB_DevDisconnect(hpcd->Instance);
 8002a7a:	6820      	ldr	r0, [r4, #0]
 8002a7c:	f002 ffba 	bl	80059f4 <USB_DevDisconnect>
  return HAL_OK;
 8002a80:	e79e      	b.n	80029c0 <HAL_PCD_Init+0x58>
    hpcd->State = HAL_PCD_STATE_ERROR;
 8002a82:	2302      	movs	r3, #2
 8002a84:	f884 33bd 	strb.w	r3, [r4, #957]	; 0x3bd
    return HAL_ERROR;
 8002a88:	2501      	movs	r5, #1
 8002a8a:	e799      	b.n	80029c0 <HAL_PCD_Init+0x58>
    (void)HAL_PCDEx_ActivateLPM(hpcd);
 8002a8c:	4620      	mov	r0, r4
 8002a8e:	f000 fcbd 	bl	800340c <HAL_PCDEx_ActivateLPM>
 8002a92:	e7f2      	b.n	8002a7a <HAL_PCD_Init+0x112>
    return HAL_ERROR;
 8002a94:	2501      	movs	r5, #1
 8002a96:	e793      	b.n	80029c0 <HAL_PCD_Init+0x58>

08002a98 <HAL_PCD_Start>:
  __HAL_LOCK(hpcd);
 8002a98:	f890 33bc 	ldrb.w	r3, [r0, #956]	; 0x3bc
 8002a9c:	2b01      	cmp	r3, #1
 8002a9e:	d00e      	beq.n	8002abe <HAL_PCD_Start+0x26>
{
 8002aa0:	b510      	push	{r4, lr}
 8002aa2:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
 8002aa4:	2301      	movs	r3, #1
 8002aa6:	f880 33bc 	strb.w	r3, [r0, #956]	; 0x3bc
  __HAL_PCD_ENABLE(hpcd);
 8002aaa:	6800      	ldr	r0, [r0, #0]
 8002aac:	f002 fb6e 	bl	800518c <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
 8002ab0:	6820      	ldr	r0, [r4, #0]
 8002ab2:	f002 ff91 	bl	80059d8 <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
 8002ab6:	2000      	movs	r0, #0
 8002ab8:	f884 03bc 	strb.w	r0, [r4, #956]	; 0x3bc
}
 8002abc:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8002abe:	2002      	movs	r0, #2
}
 8002ac0:	4770      	bx	lr
	...

08002ac4 <PCD_EP_OutXfrComplete_int>:
  * @param  hpcd PCD handle
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
 8002ac4:	b570      	push	{r4, r5, r6, lr}
 8002ac6:	4604      	mov	r4, r0
 8002ac8:	460d      	mov	r5, r1
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8002aca:	6800      	ldr	r0, [r0, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO uint32_t *)(&USBx->CID + 0x1U);
 8002acc:	6c06      	ldr	r6, [r0, #64]	; 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8002ace:	eb00 1341 	add.w	r3, r0, r1, lsl #5
 8002ad2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8002ad6:	689a      	ldr	r2, [r3, #8]

  if (hpcd->Init.dma_enable == 1U)
 8002ad8:	6921      	ldr	r1, [r4, #16]
 8002ada:	2901      	cmp	r1, #1
 8002adc:	d011      	beq.n	8002b02 <PCD_EP_OutXfrComplete_int+0x3e>
      /* ... */
    }
  }
  else
  {
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
 8002ade:	4937      	ldr	r1, [pc, #220]	; (8002bbc <PCD_EP_OutXfrComplete_int+0xf8>)
 8002ae0:	428e      	cmp	r6, r1
 8002ae2:	d054      	beq.n	8002b8e <PCD_EP_OutXfrComplete_int+0xca>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
      }
    }
    else
    {
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 8002ae4:	b93d      	cbnz	r5, 8002af6 <PCD_EP_OutXfrComplete_int+0x32>
 8002ae6:	ebc5 02c5 	rsb	r2, r5, r5, lsl #3
 8002aea:	0093      	lsls	r3, r2, #2
 8002aec:	4423      	add	r3, r4
 8002aee:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
 8002af2:	2b00      	cmp	r3, #0
 8002af4:	d05c      	beq.n	8002bb0 <PCD_EP_OutXfrComplete_int+0xec>
      }

#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
      hpcd->DataOutStageCallback(hpcd, (uint8_t)epnum);
#else
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 8002af6:	b2e9      	uxtb	r1, r5
 8002af8:	4620      	mov	r0, r4
 8002afa:	f004 fe99 	bl	8007830 <HAL_PCD_DataOutStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
    }
  }

  return HAL_OK;
}
 8002afe:	2000      	movs	r0, #0
 8002b00:	bd70      	pop	{r4, r5, r6, pc}
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
 8002b02:	f012 0f08 	tst.w	r2, #8
 8002b06:	d009      	beq.n	8002b1c <PCD_EP_OutXfrComplete_int+0x58>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8002b08:	492d      	ldr	r1, [pc, #180]	; (8002bc0 <PCD_EP_OutXfrComplete_int+0xfc>)
 8002b0a:	428e      	cmp	r6, r1
 8002b0c:	d9f7      	bls.n	8002afe <PCD_EP_OutXfrComplete_int+0x3a>
 8002b0e:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 8002b12:	d0f4      	beq.n	8002afe <PCD_EP_OutXfrComplete_int+0x3a>
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8002b14:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8002b18:	609a      	str	r2, [r3, #8]
 8002b1a:	e7f0      	b.n	8002afe <PCD_EP_OutXfrComplete_int+0x3a>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
 8002b1c:	f012 0f20 	tst.w	r2, #32
 8002b20:	d128      	bne.n	8002b74 <PCD_EP_OutXfrComplete_int+0xb0>
    else if ((DoepintReg & (USB_OTG_DOEPINT_STUP | USB_OTG_DOEPINT_OTEPSPR)) == 0U)
 8002b22:	f012 0f28 	tst.w	r2, #40	; 0x28
 8002b26:	d1ea      	bne.n	8002afe <PCD_EP_OutXfrComplete_int+0x3a>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8002b28:	4925      	ldr	r1, [pc, #148]	; (8002bc0 <PCD_EP_OutXfrComplete_int+0xfc>)
 8002b2a:	428e      	cmp	r6, r1
 8002b2c:	d902      	bls.n	8002b34 <PCD_EP_OutXfrComplete_int+0x70>
 8002b2e:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 8002b32:	d122      	bne.n	8002b7a <PCD_EP_OutXfrComplete_int+0xb6>
          hpcd->OUT_ep[epnum].maxpacket -
 8002b34:	00e9      	lsls	r1, r5, #3
 8002b36:	1b49      	subs	r1, r1, r5
 8002b38:	008a      	lsls	r2, r1, #2
 8002b3a:	4422      	add	r2, r4
 8002b3c:	f8d2 1204 	ldr.w	r1, [r2, #516]	; 0x204
          (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
 8002b40:	691b      	ldr	r3, [r3, #16]
 8002b42:	f3c3 0312 	ubfx	r3, r3, #0, #19
          hpcd->OUT_ep[epnum].maxpacket -
 8002b46:	1ac9      	subs	r1, r1, r3
        hpcd->OUT_ep[epnum].xfer_count =
 8002b48:	f8c2 1214 	str.w	r1, [r2, #532]	; 0x214
        hpcd->OUT_ep[epnum].xfer_buff += hpcd->OUT_ep[epnum].maxpacket;
 8002b4c:	f8d2 1204 	ldr.w	r1, [r2, #516]	; 0x204
 8002b50:	f8d2 3208 	ldr.w	r3, [r2, #520]	; 0x208
 8002b54:	440b      	add	r3, r1
 8002b56:	f8c2 3208 	str.w	r3, [r2, #520]	; 0x208
        if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 8002b5a:	b935      	cbnz	r5, 8002b6a <PCD_EP_OutXfrComplete_int+0xa6>
 8002b5c:	ebc5 02c5 	rsb	r2, r5, r5, lsl #3
 8002b60:	0093      	lsls	r3, r2, #2
 8002b62:	4423      	add	r3, r4
 8002b64:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
 8002b68:	b15b      	cbz	r3, 8002b82 <PCD_EP_OutXfrComplete_int+0xbe>
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 8002b6a:	b2e9      	uxtb	r1, r5
 8002b6c:	4620      	mov	r0, r4
 8002b6e:	f004 fe5f 	bl	8007830 <HAL_PCD_DataOutStageCallback>
 8002b72:	e7c4      	b.n	8002afe <PCD_EP_OutXfrComplete_int+0x3a>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8002b74:	2220      	movs	r2, #32
 8002b76:	609a      	str	r2, [r3, #8]
 8002b78:	e7c1      	b.n	8002afe <PCD_EP_OutXfrComplete_int+0x3a>
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8002b7a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8002b7e:	609a      	str	r2, [r3, #8]
 8002b80:	e7bd      	b.n	8002afe <PCD_EP_OutXfrComplete_int+0x3a>
          (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8002b82:	f504 7271 	add.w	r2, r4, #964	; 0x3c4
 8002b86:	2101      	movs	r1, #1
 8002b88:	f002 ffb8 	bl	8005afc <USB_EP0_OutStart>
 8002b8c:	e7ed      	b.n	8002b6a <PCD_EP_OutXfrComplete_int+0xa6>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
 8002b8e:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 8002b92:	d109      	bne.n	8002ba8 <PCD_EP_OutXfrComplete_int+0xe4>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 8002b94:	f012 0f20 	tst.w	r2, #32
 8002b98:	d001      	beq.n	8002b9e <PCD_EP_OutXfrComplete_int+0xda>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8002b9a:	2220      	movs	r2, #32
 8002b9c:	609a      	str	r2, [r3, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 8002b9e:	b2e9      	uxtb	r1, r5
 8002ba0:	4620      	mov	r0, r4
 8002ba2:	f004 fe45 	bl	8007830 <HAL_PCD_DataOutStageCallback>
 8002ba6:	e7aa      	b.n	8002afe <PCD_EP_OutXfrComplete_int+0x3a>
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8002ba8:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8002bac:	609a      	str	r2, [r3, #8]
 8002bae:	e7a6      	b.n	8002afe <PCD_EP_OutXfrComplete_int+0x3a>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 8002bb0:	f504 7271 	add.w	r2, r4, #964	; 0x3c4
 8002bb4:	2100      	movs	r1, #0
 8002bb6:	f002 ffa1 	bl	8005afc <USB_EP0_OutStart>
 8002bba:	e79c      	b.n	8002af6 <PCD_EP_OutXfrComplete_int+0x32>
 8002bbc:	4f54310a 	.word	0x4f54310a
 8002bc0:	4f54300a 	.word	0x4f54300a

08002bc4 <PCD_EP_OutSetupPacket_int>:
  * @param  hpcd PCD handle
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
 8002bc4:	b538      	push	{r3, r4, r5, lr}
 8002bc6:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8002bc8:	6803      	ldr	r3, [r0, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO uint32_t *)(&USBx->CID + 0x1U);
 8002bca:	6c1d      	ldr	r5, [r3, #64]	; 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8002bcc:	eb03 1141 	add.w	r1, r3, r1, lsl #5
 8002bd0:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	; 0xb08

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8002bd4:	4b0e      	ldr	r3, [pc, #56]	; (8002c10 <PCD_EP_OutSetupPacket_int+0x4c>)
 8002bd6:	429d      	cmp	r5, r3
 8002bd8:	d907      	bls.n	8002bea <PCD_EP_OutSetupPacket_int+0x26>
 8002bda:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 8002bde:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 8002be2:	d002      	beq.n	8002bea <PCD_EP_OutSetupPacket_int+0x26>
      ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
  {
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8002be4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002be8:	608b      	str	r3, [r1, #8]

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
 8002bea:	4620      	mov	r0, r4
 8002bec:	f004 fe18 	bl	8007820 <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
 8002bf0:	4b07      	ldr	r3, [pc, #28]	; (8002c10 <PCD_EP_OutSetupPacket_int+0x4c>)
 8002bf2:	429d      	cmp	r5, r3
 8002bf4:	d902      	bls.n	8002bfc <PCD_EP_OutSetupPacket_int+0x38>
 8002bf6:	6923      	ldr	r3, [r4, #16]
 8002bf8:	2b01      	cmp	r3, #1
 8002bfa:	d001      	beq.n	8002c00 <PCD_EP_OutSetupPacket_int+0x3c>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
  }

  return HAL_OK;
}
 8002bfc:	2000      	movs	r0, #0
 8002bfe:	bd38      	pop	{r3, r4, r5, pc}
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8002c00:	f504 7271 	add.w	r2, r4, #964	; 0x3c4
 8002c04:	2101      	movs	r1, #1
 8002c06:	6820      	ldr	r0, [r4, #0]
 8002c08:	f002 ff78 	bl	8005afc <USB_EP0_OutStart>
 8002c0c:	e7f6      	b.n	8002bfc <PCD_EP_OutSetupPacket_int+0x38>
 8002c0e:	bf00      	nop
 8002c10:	4f54300a 	.word	0x4f54300a

08002c14 <HAL_PCD_IRQHandler>:
{
 8002c14:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c18:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8002c1a:	6805      	ldr	r5, [r0, #0]
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 8002c1c:	4628      	mov	r0, r5
 8002c1e:	f002 ff28 	bl	8005a72 <USB_GetMode>
 8002c22:	b108      	cbz	r0, 8002c28 <HAL_PCD_IRQHandler+0x14>
}
 8002c24:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c28:	462f      	mov	r7, r5
 8002c2a:	4606      	mov	r6, r0
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 8002c2c:	6820      	ldr	r0, [r4, #0]
 8002c2e:	f002 feef 	bl	8005a10 <USB_ReadInterrupts>
 8002c32:	2800      	cmp	r0, #0
 8002c34:	d0f6      	beq.n	8002c24 <HAL_PCD_IRQHandler+0x10>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8002c36:	6820      	ldr	r0, [r4, #0]
 8002c38:	f002 feea 	bl	8005a10 <USB_ReadInterrupts>
 8002c3c:	f010 0f02 	tst.w	r0, #2
 8002c40:	d004      	beq.n	8002c4c <HAL_PCD_IRQHandler+0x38>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 8002c42:	6822      	ldr	r2, [r4, #0]
 8002c44:	6953      	ldr	r3, [r2, #20]
 8002c46:	f003 0302 	and.w	r3, r3, #2
 8002c4a:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8002c4c:	6820      	ldr	r0, [r4, #0]
 8002c4e:	f002 fedf 	bl	8005a10 <USB_ReadInterrupts>
 8002c52:	f010 0f10 	tst.w	r0, #16
 8002c56:	d015      	beq.n	8002c84 <HAL_PCD_IRQHandler+0x70>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8002c58:	6822      	ldr	r2, [r4, #0]
 8002c5a:	6993      	ldr	r3, [r2, #24]
 8002c5c:	f023 0310 	bic.w	r3, r3, #16
 8002c60:	6193      	str	r3, [r2, #24]
      temp = USBx->GRXSTSP;
 8002c62:	f8d5 8020 	ldr.w	r8, [r5, #32]
      ep = &hpcd->OUT_ep[temp & USB_OTG_GRXSTSP_EPNUM];
 8002c66:	f008 090f 	and.w	r9, r8, #15
      if (((temp & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 8002c6a:	f3c8 4343 	ubfx	r3, r8, #17, #4
 8002c6e:	2b02      	cmp	r3, #2
 8002c70:	f000 8085 	beq.w	8002d7e <HAL_PCD_IRQHandler+0x16a>
      else if (((temp & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_SETUP_UPDT)
 8002c74:	2b06      	cmp	r3, #6
 8002c76:	f000 80a5 	beq.w	8002dc4 <HAL_PCD_IRQHandler+0x1b0>
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8002c7a:	6822      	ldr	r2, [r4, #0]
 8002c7c:	6993      	ldr	r3, [r2, #24]
 8002c7e:	f043 0310 	orr.w	r3, r3, #16
 8002c82:	6193      	str	r3, [r2, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 8002c84:	6820      	ldr	r0, [r4, #0]
 8002c86:	f002 fec3 	bl	8005a10 <USB_ReadInterrupts>
 8002c8a:	f410 2f00 	tst.w	r0, #524288	; 0x80000
 8002c8e:	f040 80ad 	bne.w	8002dec <HAL_PCD_IRQHandler+0x1d8>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 8002c92:	6820      	ldr	r0, [r4, #0]
 8002c94:	f002 febc 	bl	8005a10 <USB_ReadInterrupts>
 8002c98:	f410 2f80 	tst.w	r0, #262144	; 0x40000
 8002c9c:	f040 80f1 	bne.w	8002e82 <HAL_PCD_IRQHandler+0x26e>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
 8002ca0:	6820      	ldr	r0, [r4, #0]
 8002ca2:	f002 feb5 	bl	8005a10 <USB_ReadInterrupts>
 8002ca6:	2800      	cmp	r0, #0
 8002ca8:	f2c0 815f 	blt.w	8002f6a <HAL_PCD_IRQHandler+0x356>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
 8002cac:	6820      	ldr	r0, [r4, #0]
 8002cae:	f002 feaf 	bl	8005a10 <USB_ReadInterrupts>
 8002cb2:	f410 6f00 	tst.w	r0, #2048	; 0x800
 8002cb6:	d00a      	beq.n	8002cce <HAL_PCD_IRQHandler+0xba>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
 8002cb8:	f8d5 3808 	ldr.w	r3, [r5, #2056]	; 0x808
 8002cbc:	f013 0f01 	tst.w	r3, #1
 8002cc0:	f040 816d 	bne.w	8002f9e <HAL_PCD_IRQHandler+0x38a>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
 8002cc4:	6822      	ldr	r2, [r4, #0]
 8002cc6:	6953      	ldr	r3, [r2, #20]
 8002cc8:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002ccc:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_LPMINT))
 8002cce:	6820      	ldr	r0, [r4, #0]
 8002cd0:	f002 fe9e 	bl	8005a10 <USB_ReadInterrupts>
 8002cd4:	f010 6f00 	tst.w	r0, #134217728	; 0x8000000
 8002cd8:	d015      	beq.n	8002d06 <HAL_PCD_IRQHandler+0xf2>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_LPMINT);
 8002cda:	6822      	ldr	r2, [r4, #0]
 8002cdc:	6953      	ldr	r3, [r2, #20]
 8002cde:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8002ce2:	6153      	str	r3, [r2, #20]
      if (hpcd->LPM_State == LPM_L0)
 8002ce4:	f894 33f4 	ldrb.w	r3, [r4, #1012]	; 0x3f4
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	f040 815c 	bne.w	8002fa6 <HAL_PCD_IRQHandler+0x392>
        hpcd->LPM_State = LPM_L1;
 8002cee:	2101      	movs	r1, #1
 8002cf0:	f884 13f4 	strb.w	r1, [r4, #1012]	; 0x3f4
        hpcd->BESL = (hpcd->Instance->GLPMCFG & USB_OTG_GLPMCFG_BESL) >> 2U;
 8002cf4:	6823      	ldr	r3, [r4, #0]
 8002cf6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002cf8:	f3c3 0383 	ubfx	r3, r3, #2, #4
 8002cfc:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L1_ACTIVE);
 8002d00:	4620      	mov	r0, r4
 8002d02:	f004 fe51 	bl	80079a8 <HAL_PCDEx_LPM_Callback>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
 8002d06:	6820      	ldr	r0, [r4, #0]
 8002d08:	f002 fe82 	bl	8005a10 <USB_ReadInterrupts>
 8002d0c:	f410 5f80 	tst.w	r0, #4096	; 0x1000
 8002d10:	f040 814d 	bne.w	8002fae <HAL_PCD_IRQHandler+0x39a>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 8002d14:	6820      	ldr	r0, [r4, #0]
 8002d16:	f002 fe7b 	bl	8005a10 <USB_ReadInterrupts>
 8002d1a:	f410 5f00 	tst.w	r0, #8192	; 0x2000
 8002d1e:	f040 81a5 	bne.w	800306c <HAL_PCD_IRQHandler+0x458>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
 8002d22:	6820      	ldr	r0, [r4, #0]
 8002d24:	f002 fe74 	bl	8005a10 <USB_ReadInterrupts>
 8002d28:	f010 0f08 	tst.w	r0, #8
 8002d2c:	f040 81b6 	bne.w	800309c <HAL_PCD_IRQHandler+0x488>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
 8002d30:	6820      	ldr	r0, [r4, #0]
 8002d32:	f002 fe6d 	bl	8005a10 <USB_ReadInterrupts>
 8002d36:	f410 1f80 	tst.w	r0, #1048576	; 0x100000
 8002d3a:	f040 81b8 	bne.w	80030ae <HAL_PCD_IRQHandler+0x49a>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
 8002d3e:	6820      	ldr	r0, [r4, #0]
 8002d40:	f002 fe66 	bl	8005a10 <USB_ReadInterrupts>
 8002d44:	f410 1f00 	tst.w	r0, #2097152	; 0x200000
 8002d48:	f040 81bb 	bne.w	80030c2 <HAL_PCD_IRQHandler+0x4ae>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
 8002d4c:	6820      	ldr	r0, [r4, #0]
 8002d4e:	f002 fe5f 	bl	8005a10 <USB_ReadInterrupts>
 8002d52:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8002d56:	f040 81be 	bne.w	80030d6 <HAL_PCD_IRQHandler+0x4c2>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
 8002d5a:	6820      	ldr	r0, [r4, #0]
 8002d5c:	f002 fe58 	bl	8005a10 <USB_ReadInterrupts>
 8002d60:	f010 0f04 	tst.w	r0, #4
 8002d64:	f43f af5e 	beq.w	8002c24 <HAL_PCD_IRQHandler+0x10>
      temp = hpcd->Instance->GOTGINT;
 8002d68:	6823      	ldr	r3, [r4, #0]
 8002d6a:	685d      	ldr	r5, [r3, #4]
      if ((temp & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
 8002d6c:	f015 0f04 	tst.w	r5, #4
 8002d70:	f040 81ba 	bne.w	80030e8 <HAL_PCD_IRQHandler+0x4d4>
      hpcd->Instance->GOTGINT |= temp;
 8002d74:	6822      	ldr	r2, [r4, #0]
 8002d76:	6853      	ldr	r3, [r2, #4]
 8002d78:	432b      	orrs	r3, r5
 8002d7a:	6053      	str	r3, [r2, #4]
 8002d7c:	e752      	b.n	8002c24 <HAL_PCD_IRQHandler+0x10>
        if ((temp & USB_OTG_GRXSTSP_BCNT) != 0U)
 8002d7e:	f647 73f0 	movw	r3, #32752	; 0x7ff0
 8002d82:	ea18 0f03 	tst.w	r8, r3
 8002d86:	f43f af78 	beq.w	8002c7a <HAL_PCD_IRQHandler+0x66>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 8002d8a:	ea4f 0bc9 	mov.w	fp, r9, lsl #3
 8002d8e:	ebab 0309 	sub.w	r3, fp, r9
 8002d92:	ea4f 0a83 	mov.w	sl, r3, lsl #2
 8002d96:	44a2      	add	sl, r4
                               (uint16_t)((temp & USB_OTG_GRXSTSP_BCNT) >> 4));
 8002d98:	ea4f 1818 	mov.w	r8, r8, lsr #4
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 8002d9c:	f3c8 020a 	ubfx	r2, r8, #0, #11
 8002da0:	f8da 1208 	ldr.w	r1, [sl, #520]	; 0x208
 8002da4:	4628      	mov	r0, r5
 8002da6:	f002 fd85 	bl	80058b4 <USB_ReadPacket>
          ep->xfer_buff += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
 8002daa:	f3c8 080a 	ubfx	r8, r8, #0, #11
 8002dae:	f8da 3208 	ldr.w	r3, [sl, #520]	; 0x208
 8002db2:	4443      	add	r3, r8
 8002db4:	f8ca 3208 	str.w	r3, [sl, #520]	; 0x208
          ep->xfer_count += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
 8002db8:	f8da 3214 	ldr.w	r3, [sl, #532]	; 0x214
 8002dbc:	4443      	add	r3, r8
 8002dbe:	f8ca 3214 	str.w	r3, [sl, #532]	; 0x214
 8002dc2:	e75a      	b.n	8002c7a <HAL_PCD_IRQHandler+0x66>
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
 8002dc4:	2208      	movs	r2, #8
 8002dc6:	f504 7171 	add.w	r1, r4, #964	; 0x3c4
 8002dca:	4628      	mov	r0, r5
 8002dcc:	f002 fd72 	bl	80058b4 <USB_ReadPacket>
        ep->xfer_count += (temp & USB_OTG_GRXSTSP_BCNT) >> 4;
 8002dd0:	f3c8 180a 	ubfx	r8, r8, #4, #11
 8002dd4:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002dd8:	eba3 0109 	sub.w	r1, r3, r9
 8002ddc:	008a      	lsls	r2, r1, #2
 8002dde:	4422      	add	r2, r4
 8002de0:	f8d2 3214 	ldr.w	r3, [r2, #532]	; 0x214
 8002de4:	4443      	add	r3, r8
 8002de6:	f8c2 3214 	str.w	r3, [r2, #532]	; 0x214
 8002dea:	e746      	b.n	8002c7a <HAL_PCD_IRQHandler+0x66>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 8002dec:	6820      	ldr	r0, [r4, #0]
 8002dee:	f002 fe13 	bl	8005a18 <USB_ReadDevAllOutEpInterrupt>
 8002df2:	4680      	mov	r8, r0
      epnum = 0U;
 8002df4:	46b1      	mov	r9, r6
      while (ep_intr != 0U)
 8002df6:	e017      	b.n	8002e28 <HAL_PCD_IRQHandler+0x214>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 8002df8:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002dfc:	2201      	movs	r2, #1
 8002dfe:	f8c3 2b08 	str.w	r2, [r3, #2824]	; 0xb08
            (void)PCD_EP_OutXfrComplete_int(hpcd, epnum);
 8002e02:	4649      	mov	r1, r9
 8002e04:	4620      	mov	r0, r4
 8002e06:	f7ff fe5d 	bl	8002ac4 <PCD_EP_OutXfrComplete_int>
 8002e0a:	e01d      	b.n	8002e48 <HAL_PCD_IRQHandler+0x234>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 8002e0c:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002e10:	2208      	movs	r2, #8
 8002e12:	f8c3 2b08 	str.w	r2, [r3, #2824]	; 0xb08
            (void)PCD_EP_OutSetupPacket_int(hpcd, epnum);
 8002e16:	4649      	mov	r1, r9
 8002e18:	4620      	mov	r0, r4
 8002e1a:	f7ff fed3 	bl	8002bc4 <PCD_EP_OutSetupPacket_int>
 8002e1e:	e016      	b.n	8002e4e <HAL_PCD_IRQHandler+0x23a>
        epnum++;
 8002e20:	f109 0901 	add.w	r9, r9, #1
        ep_intr >>= 1U;
 8002e24:	ea4f 0858 	mov.w	r8, r8, lsr #1
      while (ep_intr != 0U)
 8002e28:	f1b8 0f00 	cmp.w	r8, #0
 8002e2c:	f43f af31 	beq.w	8002c92 <HAL_PCD_IRQHandler+0x7e>
        if ((ep_intr & 0x1U) != 0U)
 8002e30:	f018 0f01 	tst.w	r8, #1
 8002e34:	d0f4      	beq.n	8002e20 <HAL_PCD_IRQHandler+0x20c>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8002e36:	fa5f f189 	uxtb.w	r1, r9
 8002e3a:	6820      	ldr	r0, [r4, #0]
 8002e3c:	f002 fdfc 	bl	8005a38 <USB_ReadDevOutEPInterrupt>
 8002e40:	4682      	mov	sl, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 8002e42:	f010 0f01 	tst.w	r0, #1
 8002e46:	d1d7      	bne.n	8002df8 <HAL_PCD_IRQHandler+0x1e4>
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 8002e48:	f01a 0f08 	tst.w	sl, #8
 8002e4c:	d1de      	bne.n	8002e0c <HAL_PCD_IRQHandler+0x1f8>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 8002e4e:	f01a 0f10 	tst.w	sl, #16
 8002e52:	d004      	beq.n	8002e5e <HAL_PCD_IRQHandler+0x24a>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 8002e54:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002e58:	2210      	movs	r2, #16
 8002e5a:	f8c3 2b08 	str.w	r2, [r3, #2824]	; 0xb08
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 8002e5e:	f01a 0f20 	tst.w	sl, #32
 8002e62:	d004      	beq.n	8002e6e <HAL_PCD_IRQHandler+0x25a>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8002e64:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002e68:	2220      	movs	r2, #32
 8002e6a:	f8c3 2b08 	str.w	r2, [r3, #2824]	; 0xb08
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
 8002e6e:	f41a 5f00 	tst.w	sl, #8192	; 0x2000
 8002e72:	d0d5      	beq.n	8002e20 <HAL_PCD_IRQHandler+0x20c>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
 8002e74:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002e78:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002e7c:	f8c3 2b08 	str.w	r2, [r3, #2824]	; 0xb08
 8002e80:	e7ce      	b.n	8002e20 <HAL_PCD_IRQHandler+0x20c>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 8002e82:	6820      	ldr	r0, [r4, #0]
 8002e84:	f002 fdd0 	bl	8005a28 <USB_ReadDevAllInEpInterrupt>
 8002e88:	4680      	mov	r8, r0
      epnum = 0U;
 8002e8a:	46b1      	mov	r9, r6
      while (ep_intr != 0U)
 8002e8c:	e02a      	b.n	8002ee4 <HAL_PCD_IRQHandler+0x2d0>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
 8002e8e:	4659      	mov	r1, fp
 8002e90:	4620      	mov	r0, r4
 8002e92:	f004 fcd9 	bl	8007848 <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 8002e96:	f01a 0f08 	tst.w	sl, #8
 8002e9a:	d004      	beq.n	8002ea6 <HAL_PCD_IRQHandler+0x292>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 8002e9c:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002ea0:	2208      	movs	r2, #8
 8002ea2:	f8c3 2908 	str.w	r2, [r3, #2312]	; 0x908
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 8002ea6:	f01a 0f10 	tst.w	sl, #16
 8002eaa:	d004      	beq.n	8002eb6 <HAL_PCD_IRQHandler+0x2a2>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 8002eac:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002eb0:	2210      	movs	r2, #16
 8002eb2:	f8c3 2908 	str.w	r2, [r3, #2312]	; 0x908
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 8002eb6:	f01a 0f40 	tst.w	sl, #64	; 0x40
 8002eba:	d004      	beq.n	8002ec6 <HAL_PCD_IRQHandler+0x2b2>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 8002ebc:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002ec0:	2240      	movs	r2, #64	; 0x40
 8002ec2:	f8c3 2908 	str.w	r2, [r3, #2312]	; 0x908
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 8002ec6:	f01a 0f02 	tst.w	sl, #2
 8002eca:	d004      	beq.n	8002ed6 <HAL_PCD_IRQHandler+0x2c2>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 8002ecc:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002ed0:	2202      	movs	r2, #2
 8002ed2:	f8c3 2908 	str.w	r2, [r3, #2312]	; 0x908
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 8002ed6:	f01a 0f80 	tst.w	sl, #128	; 0x80
 8002eda:	d141      	bne.n	8002f60 <HAL_PCD_IRQHandler+0x34c>
        epnum++;
 8002edc:	f109 0901 	add.w	r9, r9, #1
        ep_intr >>= 1U;
 8002ee0:	ea4f 0858 	mov.w	r8, r8, lsr #1
      while (ep_intr != 0U)
 8002ee4:	f1b8 0f00 	cmp.w	r8, #0
 8002ee8:	f43f aeda 	beq.w	8002ca0 <HAL_PCD_IRQHandler+0x8c>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
 8002eec:	f018 0f01 	tst.w	r8, #1
 8002ef0:	d0f4      	beq.n	8002edc <HAL_PCD_IRQHandler+0x2c8>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8002ef2:	fa5f fb89 	uxtb.w	fp, r9
 8002ef6:	4659      	mov	r1, fp
 8002ef8:	6820      	ldr	r0, [r4, #0]
 8002efa:	f002 fda6 	bl	8005a4a <USB_ReadDevInEPInterrupt>
 8002efe:	4682      	mov	sl, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 8002f00:	f010 0f01 	tst.w	r0, #1
 8002f04:	d0c7      	beq.n	8002e96 <HAL_PCD_IRQHandler+0x282>
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8002f06:	f009 030f 	and.w	r3, r9, #15
 8002f0a:	2101      	movs	r1, #1
 8002f0c:	fa01 f203 	lsl.w	r2, r1, r3
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8002f10:	f8d7 3834 	ldr.w	r3, [r7, #2100]	; 0x834
 8002f14:	ea23 0302 	bic.w	r3, r3, r2
 8002f18:	f8c7 3834 	str.w	r3, [r7, #2100]	; 0x834
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 8002f1c:	eb07 1349 	add.w	r3, r7, r9, lsl #5
 8002f20:	f8c3 1908 	str.w	r1, [r3, #2312]	; 0x908
            if (hpcd->Init.dma_enable == 1U)
 8002f24:	6923      	ldr	r3, [r4, #16]
 8002f26:	428b      	cmp	r3, r1
 8002f28:	d1b1      	bne.n	8002e8e <HAL_PCD_IRQHandler+0x27a>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
 8002f2a:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8002f2e:	eba2 0209 	sub.w	r2, r2, r9
 8002f32:	0093      	lsls	r3, r2, #2
 8002f34:	4423      	add	r3, r4
 8002f36:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002f38:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8002f3a:	440a      	add	r2, r1
 8002f3c:	649a      	str	r2, [r3, #72]	; 0x48
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
 8002f3e:	f1b9 0f00 	cmp.w	r9, #0
 8002f42:	d1a4      	bne.n	8002e8e <HAL_PCD_IRQHandler+0x27a>
 8002f44:	ebc9 02c9 	rsb	r2, r9, r9, lsl #3
 8002f48:	0093      	lsls	r3, r2, #2
 8002f4a:	4423      	add	r3, r4
 8002f4c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002f4e:	2b00      	cmp	r3, #0
 8002f50:	d19d      	bne.n	8002e8e <HAL_PCD_IRQHandler+0x27a>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8002f52:	f504 7271 	add.w	r2, r4, #964	; 0x3c4
 8002f56:	2101      	movs	r1, #1
 8002f58:	6820      	ldr	r0, [r4, #0]
 8002f5a:	f002 fdcf 	bl	8005afc <USB_EP0_OutStart>
 8002f5e:	e796      	b.n	8002e8e <HAL_PCD_IRQHandler+0x27a>
            (void)PCD_WriteEmptyTxFifo(hpcd, epnum);
 8002f60:	4649      	mov	r1, r9
 8002f62:	4620      	mov	r0, r4
 8002f64:	f7ff fc96 	bl	8002894 <PCD_WriteEmptyTxFifo>
 8002f68:	e7b8      	b.n	8002edc <HAL_PCD_IRQHandler+0x2c8>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8002f6a:	f8d5 3804 	ldr.w	r3, [r5, #2052]	; 0x804
 8002f6e:	f023 0301 	bic.w	r3, r3, #1
 8002f72:	f8c5 3804 	str.w	r3, [r5, #2052]	; 0x804
      if (hpcd->LPM_State == LPM_L1)
 8002f76:	f894 33f4 	ldrb.w	r3, [r4, #1012]	; 0x3f4
 8002f7a:	2b01      	cmp	r3, #1
 8002f7c:	d008      	beq.n	8002f90 <HAL_PCD_IRQHandler+0x37c>
        HAL_PCD_ResumeCallback(hpcd);
 8002f7e:	4620      	mov	r0, r4
 8002f80:	f004 fca2 	bl	80078c8 <HAL_PCD_ResumeCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
 8002f84:	6822      	ldr	r2, [r4, #0]
 8002f86:	6953      	ldr	r3, [r2, #20]
 8002f88:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8002f8c:	6153      	str	r3, [r2, #20]
 8002f8e:	e68d      	b.n	8002cac <HAL_PCD_IRQHandler+0x98>
        hpcd->LPM_State = LPM_L0;
 8002f90:	2100      	movs	r1, #0
 8002f92:	f884 13f4 	strb.w	r1, [r4, #1012]	; 0x3f4
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 8002f96:	4620      	mov	r0, r4
 8002f98:	f004 fd06 	bl	80079a8 <HAL_PCDEx_LPM_Callback>
 8002f9c:	e7f2      	b.n	8002f84 <HAL_PCD_IRQHandler+0x370>
        HAL_PCD_SuspendCallback(hpcd);
 8002f9e:	4620      	mov	r0, r4
 8002fa0:	f004 fc7a 	bl	8007898 <HAL_PCD_SuspendCallback>
 8002fa4:	e68e      	b.n	8002cc4 <HAL_PCD_IRQHandler+0xb0>
        HAL_PCD_SuspendCallback(hpcd);
 8002fa6:	4620      	mov	r0, r4
 8002fa8:	f004 fc76 	bl	8007898 <HAL_PCD_SuspendCallback>
 8002fac:	e6ab      	b.n	8002d06 <HAL_PCD_IRQHandler+0xf2>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8002fae:	f505 6800 	add.w	r8, r5, #2048	; 0x800
 8002fb2:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8002fb6:	f023 0301 	bic.w	r3, r3, #1
 8002fba:	f8c8 3004 	str.w	r3, [r8, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 8002fbe:	2110      	movs	r1, #16
 8002fc0:	6820      	ldr	r0, [r4, #0]
 8002fc2:	f002 f8ef 	bl	80051a4 <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8002fc6:	e01a      	b.n	8002ffe <HAL_PCD_IRQHandler+0x3ea>
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8002fc8:	eb07 1346 	add.w	r3, r7, r6, lsl #5
 8002fcc:	f64f 317f 	movw	r1, #64383	; 0xfb7f
 8002fd0:	f8c3 1908 	str.w	r1, [r3, #2312]	; 0x908
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8002fd4:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8002fd8:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8002fdc:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
 8002fe0:	f8c3 1b08 	str.w	r1, [r3, #2824]	; 0xb08
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8002fe4:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8002fe8:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8002fec:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8002ff0:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8002ff4:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8002ff8:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8002ffc:	3601      	adds	r6, #1
 8002ffe:	6863      	ldr	r3, [r4, #4]
 8003000:	42b3      	cmp	r3, r6
 8003002:	d8e1      	bhi.n	8002fc8 <HAL_PCD_IRQHandler+0x3b4>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
 8003004:	f8d8 301c 	ldr.w	r3, [r8, #28]
 8003008:	f043 1301 	orr.w	r3, r3, #65537	; 0x10001
 800300c:	f8c8 301c 	str.w	r3, [r8, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
 8003010:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003012:	b1eb      	cbz	r3, 8003050 <HAL_PCD_IRQHandler+0x43c>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
 8003014:	f8d8 3084 	ldr.w	r3, [r8, #132]	; 0x84
 8003018:	f043 030b 	orr.w	r3, r3, #11
 800301c:	f8c8 3084 	str.w	r3, [r8, #132]	; 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
 8003020:	f8d8 3044 	ldr.w	r3, [r8, #68]	; 0x44
 8003024:	f043 030b 	orr.w	r3, r3, #11
 8003028:	f8c8 3044 	str.w	r3, [r8, #68]	; 0x44
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 800302c:	f8d5 3800 	ldr.w	r3, [r5, #2048]	; 0x800
 8003030:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8003034:	f8c5 3800 	str.w	r3, [r5, #2048]	; 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8003038:	f504 7271 	add.w	r2, r4, #964	; 0x3c4
 800303c:	7c21      	ldrb	r1, [r4, #16]
 800303e:	6820      	ldr	r0, [r4, #0]
 8003040:	f002 fd5c 	bl	8005afc <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
 8003044:	6822      	ldr	r2, [r4, #0]
 8003046:	6953      	ldr	r3, [r2, #20]
 8003048:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800304c:	6153      	str	r3, [r2, #20]
 800304e:	e661      	b.n	8002d14 <HAL_PCD_IRQHandler+0x100>
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
 8003050:	f8d8 2014 	ldr.w	r2, [r8, #20]
 8003054:	f242 032b 	movw	r3, #8235	; 0x202b
 8003058:	4313      	orrs	r3, r2
 800305a:	f8c8 3014 	str.w	r3, [r8, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
 800305e:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8003062:	f043 030b 	orr.w	r3, r3, #11
 8003066:	f8c8 3010 	str.w	r3, [r8, #16]
 800306a:	e7df      	b.n	800302c <HAL_PCD_IRQHandler+0x418>
      (void)USB_ActivateSetup(hpcd->Instance);
 800306c:	6820      	ldr	r0, [r4, #0]
 800306e:	f002 fd35 	bl	8005adc <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
 8003072:	6820      	ldr	r0, [r4, #0]
 8003074:	f002 f9ac 	bl	80053d0 <USB_GetDevSpeed>
 8003078:	60e0      	str	r0, [r4, #12]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
 800307a:	6825      	ldr	r5, [r4, #0]
 800307c:	f000 fd42 	bl	8003b04 <HAL_RCC_GetHCLKFreq>
 8003080:	7b22      	ldrb	r2, [r4, #12]
 8003082:	4601      	mov	r1, r0
 8003084:	4628      	mov	r0, r5
 8003086:	f002 f80b 	bl	80050a0 <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
 800308a:	4620      	mov	r0, r4
 800308c:	f004 fbed 	bl	800786a <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
 8003090:	6822      	ldr	r2, [r4, #0]
 8003092:	6953      	ldr	r3, [r2, #20]
 8003094:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8003098:	6153      	str	r3, [r2, #20]
 800309a:	e642      	b.n	8002d22 <HAL_PCD_IRQHandler+0x10e>
      HAL_PCD_SOFCallback(hpcd);
 800309c:	4620      	mov	r0, r4
 800309e:	f004 fbde 	bl	800785e <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 80030a2:	6822      	ldr	r2, [r4, #0]
 80030a4:	6953      	ldr	r3, [r2, #20]
 80030a6:	f003 0308 	and.w	r3, r3, #8
 80030aa:	6153      	str	r3, [r2, #20]
 80030ac:	e640      	b.n	8002d30 <HAL_PCD_IRQHandler+0x11c>
      HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 80030ae:	2100      	movs	r1, #0
 80030b0:	4620      	mov	r0, r4
 80030b2:	f004 fc15 	bl	80078e0 <HAL_PCD_ISOINIncompleteCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 80030b6:	6822      	ldr	r2, [r4, #0]
 80030b8:	6953      	ldr	r3, [r2, #20]
 80030ba:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80030be:	6153      	str	r3, [r2, #20]
 80030c0:	e63d      	b.n	8002d3e <HAL_PCD_IRQHandler+0x12a>
      HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
 80030c2:	2100      	movs	r1, #0
 80030c4:	4620      	mov	r0, r4
 80030c6:	f004 fc05 	bl	80078d4 <HAL_PCD_ISOOUTIncompleteCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 80030ca:	6822      	ldr	r2, [r4, #0]
 80030cc:	6953      	ldr	r3, [r2, #20]
 80030ce:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80030d2:	6153      	str	r3, [r2, #20]
 80030d4:	e63a      	b.n	8002d4c <HAL_PCD_IRQHandler+0x138>
      HAL_PCD_ConnectCallback(hpcd);
 80030d6:	4620      	mov	r0, r4
 80030d8:	f004 fc08 	bl	80078ec <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 80030dc:	6822      	ldr	r2, [r4, #0]
 80030de:	6953      	ldr	r3, [r2, #20]
 80030e0:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 80030e4:	6153      	str	r3, [r2, #20]
 80030e6:	e638      	b.n	8002d5a <HAL_PCD_IRQHandler+0x146>
        HAL_PCD_DisconnectCallback(hpcd);
 80030e8:	4620      	mov	r0, r4
 80030ea:	f004 fc05 	bl	80078f8 <HAL_PCD_DisconnectCallback>
 80030ee:	e641      	b.n	8002d74 <HAL_PCD_IRQHandler+0x160>

080030f0 <HAL_PCD_SetAddress>:
  __HAL_LOCK(hpcd);
 80030f0:	f890 33bc 	ldrb.w	r3, [r0, #956]	; 0x3bc
 80030f4:	2b01      	cmp	r3, #1
 80030f6:	d00d      	beq.n	8003114 <HAL_PCD_SetAddress+0x24>
{
 80030f8:	b510      	push	{r4, lr}
 80030fa:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
 80030fc:	2301      	movs	r3, #1
 80030fe:	f880 33bc 	strb.w	r3, [r0, #956]	; 0x3bc
  hpcd->USB_Address = address;
 8003102:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
  (void)USB_SetDevAddress(hpcd->Instance, address);
 8003106:	6800      	ldr	r0, [r0, #0]
 8003108:	f002 fc56 	bl	80059b8 <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
 800310c:	2000      	movs	r0, #0
 800310e:	f884 03bc 	strb.w	r0, [r4, #956]	; 0x3bc
}
 8003112:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8003114:	2002      	movs	r0, #2
}
 8003116:	4770      	bx	lr

08003118 <HAL_PCD_EP_Open>:
{
 8003118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if ((ep_addr & 0x80U) == 0x80U)
 800311a:	f011 0f80 	tst.w	r1, #128	; 0x80
 800311e:	d128      	bne.n	8003172 <HAL_PCD_EP_Open+0x5a>
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8003120:	f001 060f 	and.w	r6, r1, #15
 8003124:	00f5      	lsls	r5, r6, #3
 8003126:	1baf      	subs	r7, r5, r6
 8003128:	00bc      	lsls	r4, r7, #2
 800312a:	4627      	mov	r7, r4
 800312c:	f504 74fc 	add.w	r4, r4, #504	; 0x1f8
 8003130:	4404      	add	r4, r0
 8003132:	3404      	adds	r4, #4
    ep->is_in = 0U;
 8003134:	463e      	mov	r6, r7
 8003136:	4406      	add	r6, r0
 8003138:	2500      	movs	r5, #0
 800313a:	f886 51fd 	strb.w	r5, [r6, #509]	; 0x1fd
  ep->num = ep_addr & EP_ADDR_MSK;
 800313e:	f001 010f 	and.w	r1, r1, #15
 8003142:	7021      	strb	r1, [r4, #0]
  ep->maxpacket = ep_mps;
 8003144:	60a2      	str	r2, [r4, #8]
  ep->type = ep_type;
 8003146:	70e3      	strb	r3, [r4, #3]
  if (ep->is_in != 0U)
 8003148:	7862      	ldrb	r2, [r4, #1]
 800314a:	b102      	cbz	r2, 800314e <HAL_PCD_EP_Open+0x36>
    ep->tx_fifo_num = ep->num;
 800314c:	80e1      	strh	r1, [r4, #6]
  if (ep_type == EP_TYPE_BULK)
 800314e:	2b02      	cmp	r3, #2
 8003150:	d01e      	beq.n	8003190 <HAL_PCD_EP_Open+0x78>
  __HAL_LOCK(hpcd);
 8003152:	f890 33bc 	ldrb.w	r3, [r0, #956]	; 0x3bc
 8003156:	2b01      	cmp	r3, #1
 8003158:	d01d      	beq.n	8003196 <HAL_PCD_EP_Open+0x7e>
 800315a:	4605      	mov	r5, r0
 800315c:	2301      	movs	r3, #1
 800315e:	f880 33bc 	strb.w	r3, [r0, #956]	; 0x3bc
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8003162:	4621      	mov	r1, r4
 8003164:	6800      	ldr	r0, [r0, #0]
 8003166:	f002 f943 	bl	80053f0 <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
 800316a:	2000      	movs	r0, #0
 800316c:	f885 03bc 	strb.w	r0, [r5, #956]	; 0x3bc
}
 8003170:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8003172:	f001 060f 	and.w	r6, r1, #15
 8003176:	00f5      	lsls	r5, r6, #3
 8003178:	1baf      	subs	r7, r5, r6
 800317a:	00bc      	lsls	r4, r7, #2
 800317c:	4627      	mov	r7, r4
 800317e:	3438      	adds	r4, #56	; 0x38
 8003180:	4404      	add	r4, r0
 8003182:	3404      	adds	r4, #4
    ep->is_in = 1U;
 8003184:	463e      	mov	r6, r7
 8003186:	4406      	add	r6, r0
 8003188:	2501      	movs	r5, #1
 800318a:	f886 503d 	strb.w	r5, [r6, #61]	; 0x3d
 800318e:	e7d6      	b.n	800313e <HAL_PCD_EP_Open+0x26>
    ep->data_pid_start = 0U;
 8003190:	2300      	movs	r3, #0
 8003192:	7123      	strb	r3, [r4, #4]
 8003194:	e7dd      	b.n	8003152 <HAL_PCD_EP_Open+0x3a>
  __HAL_LOCK(hpcd);
 8003196:	2002      	movs	r0, #2
 8003198:	e7ea      	b.n	8003170 <HAL_PCD_EP_Open+0x58>

0800319a <HAL_PCD_EP_Close>:
{
 800319a:	b538      	push	{r3, r4, r5, lr}
  if ((ep_addr & 0x80U) == 0x80U)
 800319c:	f011 0f80 	tst.w	r1, #128	; 0x80
 80031a0:	d121      	bne.n	80031e6 <HAL_PCD_EP_Close+0x4c>
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80031a2:	f001 050f 	and.w	r5, r1, #15
 80031a6:	00ea      	lsls	r2, r5, #3
 80031a8:	1b54      	subs	r4, r2, r5
 80031aa:	00a3      	lsls	r3, r4, #2
 80031ac:	461c      	mov	r4, r3
 80031ae:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 80031b2:	4403      	add	r3, r0
 80031b4:	3304      	adds	r3, #4
    ep->is_in = 0U;
 80031b6:	4625      	mov	r5, r4
 80031b8:	4405      	add	r5, r0
 80031ba:	2200      	movs	r2, #0
 80031bc:	f885 21fd 	strb.w	r2, [r5, #509]	; 0x1fd
  ep->num   = ep_addr & EP_ADDR_MSK;
 80031c0:	f001 010f 	and.w	r1, r1, #15
 80031c4:	7019      	strb	r1, [r3, #0]
  __HAL_LOCK(hpcd);
 80031c6:	f890 23bc 	ldrb.w	r2, [r0, #956]	; 0x3bc
 80031ca:	2a01      	cmp	r2, #1
 80031cc:	d01a      	beq.n	8003204 <HAL_PCD_EP_Close+0x6a>
 80031ce:	4604      	mov	r4, r0
 80031d0:	2201      	movs	r2, #1
 80031d2:	f880 23bc 	strb.w	r2, [r0, #956]	; 0x3bc
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 80031d6:	4619      	mov	r1, r3
 80031d8:	6800      	ldr	r0, [r0, #0]
 80031da:	f002 f951 	bl	8005480 <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
 80031de:	2000      	movs	r0, #0
 80031e0:	f884 03bc 	strb.w	r0, [r4, #956]	; 0x3bc
}
 80031e4:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80031e6:	f001 040f 	and.w	r4, r1, #15
 80031ea:	00e2      	lsls	r2, r4, #3
 80031ec:	1b15      	subs	r5, r2, r4
 80031ee:	00ab      	lsls	r3, r5, #2
 80031f0:	461d      	mov	r5, r3
 80031f2:	3338      	adds	r3, #56	; 0x38
 80031f4:	4403      	add	r3, r0
 80031f6:	3304      	adds	r3, #4
    ep->is_in = 1U;
 80031f8:	462c      	mov	r4, r5
 80031fa:	4404      	add	r4, r0
 80031fc:	2201      	movs	r2, #1
 80031fe:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
 8003202:	e7dd      	b.n	80031c0 <HAL_PCD_EP_Close+0x26>
  __HAL_LOCK(hpcd);
 8003204:	2002      	movs	r0, #2
 8003206:	e7ed      	b.n	80031e4 <HAL_PCD_EP_Close+0x4a>

08003208 <HAL_PCD_EP_Receive>:
{
 8003208:	b570      	push	{r4, r5, r6, lr}
 800320a:	f001 050f 	and.w	r5, r1, #15
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 800320e:	00ee      	lsls	r6, r5, #3
 8003210:	1b71      	subs	r1, r6, r5
 8003212:	008c      	lsls	r4, r1, #2
 8003214:	f504 74fc 	add.w	r4, r4, #504	; 0x1f8
 8003218:	4404      	add	r4, r0
 800321a:	1d21      	adds	r1, r4, #4
  ep->xfer_buff = pBuf;
 800321c:	1b76      	subs	r6, r6, r5
 800321e:	00b4      	lsls	r4, r6, #2
 8003220:	4404      	add	r4, r0
 8003222:	f8c4 2208 	str.w	r2, [r4, #520]	; 0x208
  ep->xfer_len = len;
 8003226:	f8c4 3210 	str.w	r3, [r4, #528]	; 0x210
  ep->xfer_count = 0U;
 800322a:	2300      	movs	r3, #0
 800322c:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
  ep->is_in = 0U;
 8003230:	f884 31fd 	strb.w	r3, [r4, #509]	; 0x1fd
  ep->num = ep_addr & EP_ADDR_MSK;
 8003234:	f884 51fc 	strb.w	r5, [r4, #508]	; 0x1fc
  if (hpcd->Init.dma_enable == 1U)
 8003238:	6903      	ldr	r3, [r0, #16]
 800323a:	2b01      	cmp	r3, #1
 800323c:	d006      	beq.n	800324c <HAL_PCD_EP_Receive+0x44>
  if ((ep_addr & EP_ADDR_MSK) == 0U)
 800323e:	b165      	cbz	r5, 800325a <HAL_PCD_EP_Receive+0x52>
    (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8003240:	b2da      	uxtb	r2, r3
 8003242:	6800      	ldr	r0, [r0, #0]
 8003244:	f002 fa2a 	bl	800569c <USB_EPStartXfer>
}
 8003248:	2000      	movs	r0, #0
 800324a:	bd70      	pop	{r4, r5, r6, pc}
    ep->dma_addr = (uint32_t)pBuf;
 800324c:	ebc5 06c5 	rsb	r6, r5, r5, lsl #3
 8003250:	00b4      	lsls	r4, r6, #2
 8003252:	4404      	add	r4, r0
 8003254:	f8c4 220c 	str.w	r2, [r4, #524]	; 0x20c
 8003258:	e7f1      	b.n	800323e <HAL_PCD_EP_Receive+0x36>
    (void)USB_EP0StartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 800325a:	b2da      	uxtb	r2, r3
 800325c:	6800      	ldr	r0, [r0, #0]
 800325e:	f002 f97d 	bl	800555c <USB_EP0StartXfer>
 8003262:	e7f1      	b.n	8003248 <HAL_PCD_EP_Receive+0x40>

08003264 <HAL_PCD_EP_GetRxCount>:
  return hpcd->OUT_ep[ep_addr & EP_ADDR_MSK].xfer_count;
 8003264:	f001 010f 	and.w	r1, r1, #15
 8003268:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 800326c:	008b      	lsls	r3, r1, #2
 800326e:	4418      	add	r0, r3
}
 8003270:	f8d0 0214 	ldr.w	r0, [r0, #532]	; 0x214
 8003274:	4770      	bx	lr

08003276 <HAL_PCD_EP_Transmit>:
{
 8003276:	b570      	push	{r4, r5, r6, lr}
 8003278:	f001 050f 	and.w	r5, r1, #15
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800327c:	00ee      	lsls	r6, r5, #3
 800327e:	1b71      	subs	r1, r6, r5
 8003280:	008c      	lsls	r4, r1, #2
 8003282:	3438      	adds	r4, #56	; 0x38
 8003284:	4404      	add	r4, r0
 8003286:	1d21      	adds	r1, r4, #4
  ep->xfer_buff = pBuf;
 8003288:	1b76      	subs	r6, r6, r5
 800328a:	00b4      	lsls	r4, r6, #2
 800328c:	4404      	add	r4, r0
 800328e:	64a2      	str	r2, [r4, #72]	; 0x48
  ep->xfer_len = len;
 8003290:	6523      	str	r3, [r4, #80]	; 0x50
  ep->xfer_count = 0U;
 8003292:	2300      	movs	r3, #0
 8003294:	6563      	str	r3, [r4, #84]	; 0x54
  ep->is_in = 1U;
 8003296:	2301      	movs	r3, #1
 8003298:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  ep->num = ep_addr & EP_ADDR_MSK;
 800329c:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  if (hpcd->Init.dma_enable == 1U)
 80032a0:	6903      	ldr	r3, [r0, #16]
 80032a2:	2b01      	cmp	r3, #1
 80032a4:	d006      	beq.n	80032b4 <HAL_PCD_EP_Transmit+0x3e>
  if ((ep_addr & EP_ADDR_MSK) == 0U)
 80032a6:	b15d      	cbz	r5, 80032c0 <HAL_PCD_EP_Transmit+0x4a>
    (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80032a8:	b2da      	uxtb	r2, r3
 80032aa:	6800      	ldr	r0, [r0, #0]
 80032ac:	f002 f9f6 	bl	800569c <USB_EPStartXfer>
}
 80032b0:	2000      	movs	r0, #0
 80032b2:	bd70      	pop	{r4, r5, r6, pc}
    ep->dma_addr = (uint32_t)pBuf;
 80032b4:	ebc5 06c5 	rsb	r6, r5, r5, lsl #3
 80032b8:	00b4      	lsls	r4, r6, #2
 80032ba:	4404      	add	r4, r0
 80032bc:	64e2      	str	r2, [r4, #76]	; 0x4c
 80032be:	e7f2      	b.n	80032a6 <HAL_PCD_EP_Transmit+0x30>
    (void)USB_EP0StartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80032c0:	b2da      	uxtb	r2, r3
 80032c2:	6800      	ldr	r0, [r0, #0]
 80032c4:	f002 f94a 	bl	800555c <USB_EP0StartXfer>
 80032c8:	e7f2      	b.n	80032b0 <HAL_PCD_EP_Transmit+0x3a>

080032ca <HAL_PCD_EP_SetStall>:
{
 80032ca:	b538      	push	{r3, r4, r5, lr}
 80032cc:	f001 050f 	and.w	r5, r1, #15
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 80032d0:	6843      	ldr	r3, [r0, #4]
 80032d2:	429d      	cmp	r5, r3
 80032d4:	d836      	bhi.n	8003344 <HAL_PCD_EP_SetStall+0x7a>
  if ((0x80U & ep_addr) == 0x80U)
 80032d6:	f011 0f80 	tst.w	r1, #128	; 0x80
 80032da:	d120      	bne.n	800331e <HAL_PCD_EP_SetStall+0x54>
    ep = &hpcd->OUT_ep[ep_addr];
 80032dc:	00ca      	lsls	r2, r1, #3
 80032de:	1a54      	subs	r4, r2, r1
 80032e0:	00a3      	lsls	r3, r4, #2
 80032e2:	461c      	mov	r4, r3
 80032e4:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 80032e8:	4403      	add	r3, r0
 80032ea:	3304      	adds	r3, #4
    ep->is_in = 0U;
 80032ec:	4622      	mov	r2, r4
 80032ee:	4402      	add	r2, r0
 80032f0:	2100      	movs	r1, #0
 80032f2:	f882 11fd 	strb.w	r1, [r2, #509]	; 0x1fd
  ep->is_stall = 1U;
 80032f6:	2201      	movs	r2, #1
 80032f8:	709a      	strb	r2, [r3, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 80032fa:	701d      	strb	r5, [r3, #0]
  __HAL_LOCK(hpcd);
 80032fc:	f890 23bc 	ldrb.w	r2, [r0, #956]	; 0x3bc
 8003300:	2a01      	cmp	r2, #1
 8003302:	d021      	beq.n	8003348 <HAL_PCD_EP_SetStall+0x7e>
 8003304:	4604      	mov	r4, r0
 8003306:	2201      	movs	r2, #1
 8003308:	f880 23bc 	strb.w	r2, [r0, #956]	; 0x3bc
  (void)USB_EPSetStall(hpcd->Instance, ep);
 800330c:	4619      	mov	r1, r3
 800330e:	6800      	ldr	r0, [r0, #0]
 8003310:	f002 faf7 	bl	8005902 <USB_EPSetStall>
  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8003314:	b17d      	cbz	r5, 8003336 <HAL_PCD_EP_SetStall+0x6c>
  __HAL_UNLOCK(hpcd);
 8003316:	2000      	movs	r0, #0
 8003318:	f884 03bc 	strb.w	r0, [r4, #956]	; 0x3bc
  return HAL_OK;
 800331c:	e013      	b.n	8003346 <HAL_PCD_EP_SetStall+0x7c>
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800331e:	00ea      	lsls	r2, r5, #3
 8003320:	1b51      	subs	r1, r2, r5
 8003322:	008b      	lsls	r3, r1, #2
 8003324:	4619      	mov	r1, r3
 8003326:	3338      	adds	r3, #56	; 0x38
 8003328:	4403      	add	r3, r0
 800332a:	3304      	adds	r3, #4
    ep->is_in = 1U;
 800332c:	4401      	add	r1, r0
 800332e:	2201      	movs	r2, #1
 8003330:	f881 203d 	strb.w	r2, [r1, #61]	; 0x3d
 8003334:	e7df      	b.n	80032f6 <HAL_PCD_EP_SetStall+0x2c>
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
 8003336:	f504 7271 	add.w	r2, r4, #964	; 0x3c4
 800333a:	7c21      	ldrb	r1, [r4, #16]
 800333c:	6820      	ldr	r0, [r4, #0]
 800333e:	f002 fbdd 	bl	8005afc <USB_EP0_OutStart>
 8003342:	e7e8      	b.n	8003316 <HAL_PCD_EP_SetStall+0x4c>
    return HAL_ERROR;
 8003344:	2001      	movs	r0, #1
}
 8003346:	bd38      	pop	{r3, r4, r5, pc}
  __HAL_LOCK(hpcd);
 8003348:	2002      	movs	r0, #2
 800334a:	e7fc      	b.n	8003346 <HAL_PCD_EP_SetStall+0x7c>

0800334c <HAL_PCD_EP_ClrStall>:
{
 800334c:	b510      	push	{r4, lr}
 800334e:	f001 040f 	and.w	r4, r1, #15
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8003352:	6843      	ldr	r3, [r0, #4]
 8003354:	429c      	cmp	r4, r3
 8003356:	d82c      	bhi.n	80033b2 <HAL_PCD_EP_ClrStall+0x66>
  if ((0x80U & ep_addr) == 0x80U)
 8003358:	f011 0f80 	tst.w	r1, #128	; 0x80
 800335c:	d11d      	bne.n	800339a <HAL_PCD_EP_ClrStall+0x4e>
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 800335e:	00e3      	lsls	r3, r4, #3
 8003360:	1b1a      	subs	r2, r3, r4
 8003362:	0091      	lsls	r1, r2, #2
 8003364:	460a      	mov	r2, r1
 8003366:	f501 71fc 	add.w	r1, r1, #504	; 0x1f8
 800336a:	4401      	add	r1, r0
 800336c:	3104      	adds	r1, #4
    ep->is_in = 0U;
 800336e:	4402      	add	r2, r0
 8003370:	2300      	movs	r3, #0
 8003372:	f882 31fd 	strb.w	r3, [r2, #509]	; 0x1fd
  ep->is_stall = 0U;
 8003376:	2300      	movs	r3, #0
 8003378:	708b      	strb	r3, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 800337a:	700c      	strb	r4, [r1, #0]
  __HAL_LOCK(hpcd);
 800337c:	f890 33bc 	ldrb.w	r3, [r0, #956]	; 0x3bc
 8003380:	2b01      	cmp	r3, #1
 8003382:	d018      	beq.n	80033b6 <HAL_PCD_EP_ClrStall+0x6a>
 8003384:	4604      	mov	r4, r0
 8003386:	2301      	movs	r3, #1
 8003388:	f880 33bc 	strb.w	r3, [r0, #956]	; 0x3bc
  (void)USB_EPClearStall(hpcd->Instance, ep);
 800338c:	6800      	ldr	r0, [r0, #0]
 800338e:	f002 fae5 	bl	800595c <USB_EPClearStall>
  __HAL_UNLOCK(hpcd);
 8003392:	2000      	movs	r0, #0
 8003394:	f884 03bc 	strb.w	r0, [r4, #956]	; 0x3bc
  return HAL_OK;
 8003398:	e00c      	b.n	80033b4 <HAL_PCD_EP_ClrStall+0x68>
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800339a:	00e3      	lsls	r3, r4, #3
 800339c:	1b1a      	subs	r2, r3, r4
 800339e:	0091      	lsls	r1, r2, #2
 80033a0:	460a      	mov	r2, r1
 80033a2:	3138      	adds	r1, #56	; 0x38
 80033a4:	4401      	add	r1, r0
 80033a6:	3104      	adds	r1, #4
    ep->is_in = 1U;
 80033a8:	4402      	add	r2, r0
 80033aa:	2301      	movs	r3, #1
 80033ac:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
 80033b0:	e7e1      	b.n	8003376 <HAL_PCD_EP_ClrStall+0x2a>
    return HAL_ERROR;
 80033b2:	2001      	movs	r0, #1
}
 80033b4:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 80033b6:	2002      	movs	r0, #2
 80033b8:	e7fc      	b.n	80033b4 <HAL_PCD_EP_ClrStall+0x68>

080033ba <HAL_PCDEx_SetTxFiFo>:
  * @param  fifo The number of Tx fifo
  * @param  size Fifo size
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetTxFiFo(PCD_HandleTypeDef *hpcd, uint8_t fifo, uint16_t size)
{
 80033ba:	b430      	push	{r4, r5}
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
 80033bc:	6804      	ldr	r4, [r0, #0]
 80033be:	6a60      	ldr	r0, [r4, #36]	; 0x24

  if (fifo == 0U)
 80033c0:	b129      	cbz	r1, 80033ce <HAL_PCDEx_SetTxFiFo+0x14>
 80033c2:	460d      	mov	r5, r1
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
  }
  else
  {
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 80033c4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80033c6:	eb00 4013 	add.w	r0, r0, r3, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 80033ca:	2300      	movs	r3, #0
 80033cc:	e00c      	b.n	80033e8 <HAL_PCDEx_SetTxFiFo+0x2e>
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 80033ce:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80033d2:	62a0      	str	r0, [r4, #40]	; 0x28
 80033d4:	e012      	b.n	80033fc <HAL_PCDEx_SetTxFiFo+0x42>
    {
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 80033d6:	f103 0140 	add.w	r1, r3, #64	; 0x40
 80033da:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80033de:	6849      	ldr	r1, [r1, #4]
 80033e0:	eb00 4011 	add.w	r0, r0, r1, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 80033e4:	3301      	adds	r3, #1
 80033e6:	b2db      	uxtb	r3, r3
 80033e8:	1e69      	subs	r1, r5, #1
 80033ea:	428b      	cmp	r3, r1
 80033ec:	d3f3      	bcc.n	80033d6 <HAL_PCDEx_SetTxFiFo+0x1c>
    }

    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
 80033ee:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80033f2:	f105 013f 	add.w	r1, r5, #63	; 0x3f
 80033f6:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80033fa:	6048      	str	r0, [r1, #4]
  }

  return HAL_OK;
}
 80033fc:	2000      	movs	r0, #0
 80033fe:	bc30      	pop	{r4, r5}
 8003400:	4770      	bx	lr

08003402 <HAL_PCDEx_SetRxFiFo>:
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
  hpcd->Instance->GRXFSIZ = size;
 8003402:	6803      	ldr	r3, [r0, #0]
 8003404:	6259      	str	r1, [r3, #36]	; 0x24

  return HAL_OK;
}
 8003406:	2000      	movs	r0, #0
 8003408:	4770      	bx	lr
	...

0800340c <HAL_PCDEx_ActivateLPM>:
  * @brief  Activate LPM feature.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_ActivateLPM(PCD_HandleTypeDef *hpcd)
{
 800340c:	4602      	mov	r2, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 800340e:	6803      	ldr	r3, [r0, #0]

  hpcd->lpm_active = 1U;
 8003410:	2101      	movs	r1, #1
 8003412:	f8c0 13fc 	str.w	r1, [r0, #1020]	; 0x3fc
  hpcd->LPM_State = LPM_L0;
 8003416:	2000      	movs	r0, #0
 8003418:	f882 03f4 	strb.w	r0, [r2, #1012]	; 0x3f4
  USBx->GINTMSK |= USB_OTG_GINTMSK_LPMINTM;
 800341c:	699a      	ldr	r2, [r3, #24]
 800341e:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8003422:	619a      	str	r2, [r3, #24]
  USBx->GLPMCFG |= (USB_OTG_GLPMCFG_LPMEN | USB_OTG_GLPMCFG_LPMACK | USB_OTG_GLPMCFG_ENBESL);
 8003424:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8003426:	4a02      	ldr	r2, [pc, #8]	; (8003430 <HAL_PCDEx_ActivateLPM+0x24>)
 8003428:	430a      	orrs	r2, r1
 800342a:	655a      	str	r2, [r3, #84]	; 0x54

  return HAL_OK;
}
 800342c:	4770      	bx	lr
 800342e:	bf00      	nop
 8003430:	10000003 	.word	0x10000003

08003434 <HAL_PWR_EnableBkUpAccess>:
  * @retval None
  */
void HAL_PWR_EnableBkUpAccess(void)
{
  /* Enable access to RTC and backup registers */
  SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8003434:	4a02      	ldr	r2, [pc, #8]	; (8003440 <HAL_PWR_EnableBkUpAccess+0xc>)
 8003436:	6813      	ldr	r3, [r2, #0]
 8003438:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800343c:	6013      	str	r3, [r2, #0]
}
 800343e:	4770      	bx	lr
 8003440:	40007000 	.word	0x40007000

08003444 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8003444:	b510      	push	{r4, lr}
 8003446:	b082      	sub	sp, #8
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
 8003448:	4b1b      	ldr	r3, [pc, #108]	; (80034b8 <HAL_PWREx_EnableOverDrive+0x74>)
 800344a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800344c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003450:	641a      	str	r2, [r3, #64]	; 0x40
 8003452:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003454:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003458:	9301      	str	r3, [sp, #4]
 800345a:	9b01      	ldr	r3, [sp, #4]
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 800345c:	4a17      	ldr	r2, [pc, #92]	; (80034bc <HAL_PWREx_EnableOverDrive+0x78>)
 800345e:	6813      	ldr	r3, [r2, #0]
 8003460:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003464:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8003466:	f7fd ffcf 	bl	8001408 <HAL_GetTick>
 800346a:	4604      	mov	r4, r0

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800346c:	4b13      	ldr	r3, [pc, #76]	; (80034bc <HAL_PWREx_EnableOverDrive+0x78>)
 800346e:	685b      	ldr	r3, [r3, #4]
 8003470:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8003474:	d108      	bne.n	8003488 <HAL_PWREx_EnableOverDrive+0x44>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8003476:	f7fd ffc7 	bl	8001408 <HAL_GetTick>
 800347a:	1b00      	subs	r0, r0, r4
 800347c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8003480:	d9f4      	bls.n	800346c <HAL_PWREx_EnableOverDrive+0x28>
    {
      return HAL_TIMEOUT;
 8003482:	2003      	movs	r0, #3
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
}
 8003484:	b002      	add	sp, #8
 8003486:	bd10      	pop	{r4, pc}
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8003488:	4a0c      	ldr	r2, [pc, #48]	; (80034bc <HAL_PWREx_EnableOverDrive+0x78>)
 800348a:	6813      	ldr	r3, [r2, #0]
 800348c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003490:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
 8003492:	f7fd ffb9 	bl	8001408 <HAL_GetTick>
 8003496:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8003498:	4b08      	ldr	r3, [pc, #32]	; (80034bc <HAL_PWREx_EnableOverDrive+0x78>)
 800349a:	685b      	ldr	r3, [r3, #4]
 800349c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80034a0:	d107      	bne.n	80034b2 <HAL_PWREx_EnableOverDrive+0x6e>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80034a2:	f7fd ffb1 	bl	8001408 <HAL_GetTick>
 80034a6:	1b00      	subs	r0, r0, r4
 80034a8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80034ac:	d9f4      	bls.n	8003498 <HAL_PWREx_EnableOverDrive+0x54>
      return HAL_TIMEOUT;
 80034ae:	2003      	movs	r0, #3
 80034b0:	e7e8      	b.n	8003484 <HAL_PWREx_EnableOverDrive+0x40>
  return HAL_OK;
 80034b2:	2000      	movs	r0, #0
 80034b4:	e7e6      	b.n	8003484 <HAL_PWREx_EnableOverDrive+0x40>
 80034b6:	bf00      	nop
 80034b8:	40023800 	.word	0x40023800
 80034bc:	40007000 	.word	0x40007000

080034c0 <HAL_RCC_OscConfig>:
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 80034c0:	2800      	cmp	r0, #0
 80034c2:	f000 8209 	beq.w	80038d8 <HAL_RCC_OscConfig+0x418>
{
 80034c6:	b570      	push	{r4, r5, r6, lr}
 80034c8:	b082      	sub	sp, #8
 80034ca:	4604      	mov	r4, r0

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80034cc:	6803      	ldr	r3, [r0, #0]
 80034ce:	f013 0f01 	tst.w	r3, #1
 80034d2:	d029      	beq.n	8003528 <HAL_RCC_OscConfig+0x68>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 80034d4:	4ba2      	ldr	r3, [pc, #648]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 80034d6:	689b      	ldr	r3, [r3, #8]
 80034d8:	f003 030c 	and.w	r3, r3, #12
 80034dc:	2b04      	cmp	r3, #4
 80034de:	d01a      	beq.n	8003516 <HAL_RCC_OscConfig+0x56>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80034e0:	4b9f      	ldr	r3, [pc, #636]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 80034e2:	689b      	ldr	r3, [r3, #8]
 80034e4:	f003 030c 	and.w	r3, r3, #12
 80034e8:	2b08      	cmp	r3, #8
 80034ea:	d00f      	beq.n	800350c <HAL_RCC_OscConfig+0x4c>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80034ec:	6863      	ldr	r3, [r4, #4]
 80034ee:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80034f2:	d040      	beq.n	8003576 <HAL_RCC_OscConfig+0xb6>
 80034f4:	2b00      	cmp	r3, #0
 80034f6:	d154      	bne.n	80035a2 <HAL_RCC_OscConfig+0xe2>
 80034f8:	4b99      	ldr	r3, [pc, #612]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 80034fa:	681a      	ldr	r2, [r3, #0]
 80034fc:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8003500:	601a      	str	r2, [r3, #0]
 8003502:	681a      	ldr	r2, [r3, #0]
 8003504:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003508:	601a      	str	r2, [r3, #0]
 800350a:	e039      	b.n	8003580 <HAL_RCC_OscConfig+0xc0>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800350c:	4b94      	ldr	r3, [pc, #592]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 800350e:	685b      	ldr	r3, [r3, #4]
 8003510:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 8003514:	d0ea      	beq.n	80034ec <HAL_RCC_OscConfig+0x2c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003516:	4b92      	ldr	r3, [pc, #584]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 800351e:	d003      	beq.n	8003528 <HAL_RCC_OscConfig+0x68>
 8003520:	6863      	ldr	r3, [r4, #4]
 8003522:	2b00      	cmp	r3, #0
 8003524:	f000 81da 	beq.w	80038dc <HAL_RCC_OscConfig+0x41c>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8003528:	6823      	ldr	r3, [r4, #0]
 800352a:	f013 0f02 	tst.w	r3, #2
 800352e:	d075      	beq.n	800361c <HAL_RCC_OscConfig+0x15c>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8003530:	4b8b      	ldr	r3, [pc, #556]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 8003532:	689b      	ldr	r3, [r3, #8]
 8003534:	f013 0f0c 	tst.w	r3, #12
 8003538:	d05e      	beq.n	80035f8 <HAL_RCC_OscConfig+0x138>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800353a:	4b89      	ldr	r3, [pc, #548]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 800353c:	689b      	ldr	r3, [r3, #8]
 800353e:	f003 030c 	and.w	r3, r3, #12
 8003542:	2b08      	cmp	r3, #8
 8003544:	d053      	beq.n	80035ee <HAL_RCC_OscConfig+0x12e>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8003546:	68e3      	ldr	r3, [r4, #12]
 8003548:	2b00      	cmp	r3, #0
 800354a:	f000 808a 	beq.w	8003662 <HAL_RCC_OscConfig+0x1a2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800354e:	4a84      	ldr	r2, [pc, #528]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 8003550:	6813      	ldr	r3, [r2, #0]
 8003552:	f043 0301 	orr.w	r3, r3, #1
 8003556:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003558:	f7fd ff56 	bl	8001408 <HAL_GetTick>
 800355c:	4605      	mov	r5, r0

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800355e:	4b80      	ldr	r3, [pc, #512]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	f013 0f02 	tst.w	r3, #2
 8003566:	d173      	bne.n	8003650 <HAL_RCC_OscConfig+0x190>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8003568:	f7fd ff4e 	bl	8001408 <HAL_GetTick>
 800356c:	1b40      	subs	r0, r0, r5
 800356e:	2802      	cmp	r0, #2
 8003570:	d9f5      	bls.n	800355e <HAL_RCC_OscConfig+0x9e>
          {
            return HAL_TIMEOUT;
 8003572:	2003      	movs	r0, #3
 8003574:	e1b5      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8003576:	4a7a      	ldr	r2, [pc, #488]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 8003578:	6813      	ldr	r3, [r2, #0]
 800357a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800357e:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8003580:	6863      	ldr	r3, [r4, #4]
 8003582:	b32b      	cbz	r3, 80035d0 <HAL_RCC_OscConfig+0x110>
        tickstart = HAL_GetTick();
 8003584:	f7fd ff40 	bl	8001408 <HAL_GetTick>
 8003588:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800358a:	4b75      	ldr	r3, [pc, #468]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 800358c:	681b      	ldr	r3, [r3, #0]
 800358e:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8003592:	d1c9      	bne.n	8003528 <HAL_RCC_OscConfig+0x68>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8003594:	f7fd ff38 	bl	8001408 <HAL_GetTick>
 8003598:	1b40      	subs	r0, r0, r5
 800359a:	2864      	cmp	r0, #100	; 0x64
 800359c:	d9f5      	bls.n	800358a <HAL_RCC_OscConfig+0xca>
            return HAL_TIMEOUT;
 800359e:	2003      	movs	r0, #3
 80035a0:	e19f      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80035a2:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80035a6:	d009      	beq.n	80035bc <HAL_RCC_OscConfig+0xfc>
 80035a8:	4b6d      	ldr	r3, [pc, #436]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 80035aa:	681a      	ldr	r2, [r3, #0]
 80035ac:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80035b0:	601a      	str	r2, [r3, #0]
 80035b2:	681a      	ldr	r2, [r3, #0]
 80035b4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80035b8:	601a      	str	r2, [r3, #0]
 80035ba:	e7e1      	b.n	8003580 <HAL_RCC_OscConfig+0xc0>
 80035bc:	4b68      	ldr	r3, [pc, #416]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 80035be:	681a      	ldr	r2, [r3, #0]
 80035c0:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80035c4:	601a      	str	r2, [r3, #0]
 80035c6:	681a      	ldr	r2, [r3, #0]
 80035c8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80035cc:	601a      	str	r2, [r3, #0]
 80035ce:	e7d7      	b.n	8003580 <HAL_RCC_OscConfig+0xc0>
        tickstart = HAL_GetTick();
 80035d0:	f7fd ff1a 	bl	8001408 <HAL_GetTick>
 80035d4:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80035d6:	4b62      	ldr	r3, [pc, #392]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 80035d8:	681b      	ldr	r3, [r3, #0]
 80035da:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80035de:	d0a3      	beq.n	8003528 <HAL_RCC_OscConfig+0x68>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80035e0:	f7fd ff12 	bl	8001408 <HAL_GetTick>
 80035e4:	1b40      	subs	r0, r0, r5
 80035e6:	2864      	cmp	r0, #100	; 0x64
 80035e8:	d9f5      	bls.n	80035d6 <HAL_RCC_OscConfig+0x116>
            return HAL_TIMEOUT;
 80035ea:	2003      	movs	r0, #3
 80035ec:	e179      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80035ee:	4b5c      	ldr	r3, [pc, #368]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 80035f0:	685b      	ldr	r3, [r3, #4]
 80035f2:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 80035f6:	d1a6      	bne.n	8003546 <HAL_RCC_OscConfig+0x86>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80035f8:	4b59      	ldr	r3, [pc, #356]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 80035fa:	681b      	ldr	r3, [r3, #0]
 80035fc:	f013 0f02 	tst.w	r3, #2
 8003600:	d004      	beq.n	800360c <HAL_RCC_OscConfig+0x14c>
 8003602:	68e3      	ldr	r3, [r4, #12]
 8003604:	2b01      	cmp	r3, #1
 8003606:	d001      	beq.n	800360c <HAL_RCC_OscConfig+0x14c>
        return HAL_ERROR;
 8003608:	2001      	movs	r0, #1
 800360a:	e16a      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800360c:	4a54      	ldr	r2, [pc, #336]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 800360e:	6813      	ldr	r3, [r2, #0]
 8003610:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8003614:	6921      	ldr	r1, [r4, #16]
 8003616:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800361a:	6013      	str	r3, [r2, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800361c:	6823      	ldr	r3, [r4, #0]
 800361e:	f013 0f08 	tst.w	r3, #8
 8003622:	d046      	beq.n	80036b2 <HAL_RCC_OscConfig+0x1f2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8003624:	6963      	ldr	r3, [r4, #20]
 8003626:	b383      	cbz	r3, 800368a <HAL_RCC_OscConfig+0x1ca>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8003628:	4a4d      	ldr	r2, [pc, #308]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 800362a:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800362c:	f043 0301 	orr.w	r3, r3, #1
 8003630:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8003632:	f7fd fee9 	bl	8001408 <HAL_GetTick>
 8003636:	4605      	mov	r5, r0

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8003638:	4b49      	ldr	r3, [pc, #292]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 800363a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800363c:	f013 0f02 	tst.w	r3, #2
 8003640:	d137      	bne.n	80036b2 <HAL_RCC_OscConfig+0x1f2>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8003642:	f7fd fee1 	bl	8001408 <HAL_GetTick>
 8003646:	1b40      	subs	r0, r0, r5
 8003648:	2802      	cmp	r0, #2
 800364a:	d9f5      	bls.n	8003638 <HAL_RCC_OscConfig+0x178>
        {
          return HAL_TIMEOUT;
 800364c:	2003      	movs	r0, #3
 800364e:	e148      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8003650:	4a43      	ldr	r2, [pc, #268]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 8003652:	6813      	ldr	r3, [r2, #0]
 8003654:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8003658:	6921      	ldr	r1, [r4, #16]
 800365a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800365e:	6013      	str	r3, [r2, #0]
 8003660:	e7dc      	b.n	800361c <HAL_RCC_OscConfig+0x15c>
        __HAL_RCC_HSI_DISABLE();
 8003662:	4a3f      	ldr	r2, [pc, #252]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 8003664:	6813      	ldr	r3, [r2, #0]
 8003666:	f023 0301 	bic.w	r3, r3, #1
 800366a:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800366c:	f7fd fecc 	bl	8001408 <HAL_GetTick>
 8003670:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8003672:	4b3b      	ldr	r3, [pc, #236]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 8003674:	681b      	ldr	r3, [r3, #0]
 8003676:	f013 0f02 	tst.w	r3, #2
 800367a:	d0cf      	beq.n	800361c <HAL_RCC_OscConfig+0x15c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800367c:	f7fd fec4 	bl	8001408 <HAL_GetTick>
 8003680:	1b40      	subs	r0, r0, r5
 8003682:	2802      	cmp	r0, #2
 8003684:	d9f5      	bls.n	8003672 <HAL_RCC_OscConfig+0x1b2>
            return HAL_TIMEOUT;
 8003686:	2003      	movs	r0, #3
 8003688:	e12b      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 800368a:	4a35      	ldr	r2, [pc, #212]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 800368c:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800368e:	f023 0301 	bic.w	r3, r3, #1
 8003692:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8003694:	f7fd feb8 	bl	8001408 <HAL_GetTick>
 8003698:	4605      	mov	r5, r0

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800369a:	4b31      	ldr	r3, [pc, #196]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 800369c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800369e:	f013 0f02 	tst.w	r3, #2
 80036a2:	d006      	beq.n	80036b2 <HAL_RCC_OscConfig+0x1f2>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80036a4:	f7fd feb0 	bl	8001408 <HAL_GetTick>
 80036a8:	1b40      	subs	r0, r0, r5
 80036aa:	2802      	cmp	r0, #2
 80036ac:	d9f5      	bls.n	800369a <HAL_RCC_OscConfig+0x1da>
        {
          return HAL_TIMEOUT;
 80036ae:	2003      	movs	r0, #3
 80036b0:	e117      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80036b2:	6823      	ldr	r3, [r4, #0]
 80036b4:	f013 0f04 	tst.w	r3, #4
 80036b8:	d07e      	beq.n	80037b8 <HAL_RCC_OscConfig+0x2f8>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80036ba:	4b29      	ldr	r3, [pc, #164]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 80036bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036be:	f013 5f80 	tst.w	r3, #268435456	; 0x10000000
 80036c2:	d11e      	bne.n	8003702 <HAL_RCC_OscConfig+0x242>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 80036c4:	4b26      	ldr	r3, [pc, #152]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 80036c6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80036c8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80036cc:	641a      	str	r2, [r3, #64]	; 0x40
 80036ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036d0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80036d4:	9301      	str	r3, [sp, #4]
 80036d6:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80036d8:	2501      	movs	r5, #1
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80036da:	4b22      	ldr	r3, [pc, #136]	; (8003764 <HAL_RCC_OscConfig+0x2a4>)
 80036dc:	681b      	ldr	r3, [r3, #0]
 80036de:	f413 7f80 	tst.w	r3, #256	; 0x100
 80036e2:	d010      	beq.n	8003706 <HAL_RCC_OscConfig+0x246>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80036e4:	68a3      	ldr	r3, [r4, #8]
 80036e6:	2b01      	cmp	r3, #1
 80036e8:	d021      	beq.n	800372e <HAL_RCC_OscConfig+0x26e>
 80036ea:	2b00      	cmp	r3, #0
 80036ec:	d13c      	bne.n	8003768 <HAL_RCC_OscConfig+0x2a8>
 80036ee:	4b1c      	ldr	r3, [pc, #112]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 80036f0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80036f2:	f022 0201 	bic.w	r2, r2, #1
 80036f6:	671a      	str	r2, [r3, #112]	; 0x70
 80036f8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80036fa:	f022 0204 	bic.w	r2, r2, #4
 80036fe:	671a      	str	r2, [r3, #112]	; 0x70
 8003700:	e01a      	b.n	8003738 <HAL_RCC_OscConfig+0x278>
  FlagStatus pwrclkchanged = RESET;
 8003702:	2500      	movs	r5, #0
 8003704:	e7e9      	b.n	80036da <HAL_RCC_OscConfig+0x21a>
      PWR->CR1 |= PWR_CR1_DBP;
 8003706:	4a17      	ldr	r2, [pc, #92]	; (8003764 <HAL_RCC_OscConfig+0x2a4>)
 8003708:	6813      	ldr	r3, [r2, #0]
 800370a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800370e:	6013      	str	r3, [r2, #0]
      tickstart = HAL_GetTick();
 8003710:	f7fd fe7a 	bl	8001408 <HAL_GetTick>
 8003714:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8003716:	4b13      	ldr	r3, [pc, #76]	; (8003764 <HAL_RCC_OscConfig+0x2a4>)
 8003718:	681b      	ldr	r3, [r3, #0]
 800371a:	f413 7f80 	tst.w	r3, #256	; 0x100
 800371e:	d1e1      	bne.n	80036e4 <HAL_RCC_OscConfig+0x224>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003720:	f7fd fe72 	bl	8001408 <HAL_GetTick>
 8003724:	1b80      	subs	r0, r0, r6
 8003726:	2864      	cmp	r0, #100	; 0x64
 8003728:	d9f5      	bls.n	8003716 <HAL_RCC_OscConfig+0x256>
          return HAL_TIMEOUT;
 800372a:	2003      	movs	r0, #3
 800372c:	e0d9      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800372e:	4a0c      	ldr	r2, [pc, #48]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 8003730:	6f13      	ldr	r3, [r2, #112]	; 0x70
 8003732:	f043 0301 	orr.w	r3, r3, #1
 8003736:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8003738:	68a3      	ldr	r3, [r4, #8]
 800373a:	b35b      	cbz	r3, 8003794 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800373c:	f7fd fe64 	bl	8001408 <HAL_GetTick>
 8003740:	4606      	mov	r6, r0

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003742:	4b07      	ldr	r3, [pc, #28]	; (8003760 <HAL_RCC_OscConfig+0x2a0>)
 8003744:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003746:	f013 0f02 	tst.w	r3, #2
 800374a:	d134      	bne.n	80037b6 <HAL_RCC_OscConfig+0x2f6>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800374c:	f7fd fe5c 	bl	8001408 <HAL_GetTick>
 8003750:	1b80      	subs	r0, r0, r6
 8003752:	f241 3388 	movw	r3, #5000	; 0x1388
 8003756:	4298      	cmp	r0, r3
 8003758:	d9f3      	bls.n	8003742 <HAL_RCC_OscConfig+0x282>
        {
          return HAL_TIMEOUT;
 800375a:	2003      	movs	r0, #3
 800375c:	e0c1      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
 800375e:	bf00      	nop
 8003760:	40023800 	.word	0x40023800
 8003764:	40007000 	.word	0x40007000
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003768:	2b05      	cmp	r3, #5
 800376a:	d009      	beq.n	8003780 <HAL_RCC_OscConfig+0x2c0>
 800376c:	4b60      	ldr	r3, [pc, #384]	; (80038f0 <HAL_RCC_OscConfig+0x430>)
 800376e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8003770:	f022 0201 	bic.w	r2, r2, #1
 8003774:	671a      	str	r2, [r3, #112]	; 0x70
 8003776:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8003778:	f022 0204 	bic.w	r2, r2, #4
 800377c:	671a      	str	r2, [r3, #112]	; 0x70
 800377e:	e7db      	b.n	8003738 <HAL_RCC_OscConfig+0x278>
 8003780:	4b5b      	ldr	r3, [pc, #364]	; (80038f0 <HAL_RCC_OscConfig+0x430>)
 8003782:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8003784:	f042 0204 	orr.w	r2, r2, #4
 8003788:	671a      	str	r2, [r3, #112]	; 0x70
 800378a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800378c:	f042 0201 	orr.w	r2, r2, #1
 8003790:	671a      	str	r2, [r3, #112]	; 0x70
 8003792:	e7d1      	b.n	8003738 <HAL_RCC_OscConfig+0x278>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8003794:	f7fd fe38 	bl	8001408 <HAL_GetTick>
 8003798:	4606      	mov	r6, r0

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800379a:	4b55      	ldr	r3, [pc, #340]	; (80038f0 <HAL_RCC_OscConfig+0x430>)
 800379c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800379e:	f013 0f02 	tst.w	r3, #2
 80037a2:	d008      	beq.n	80037b6 <HAL_RCC_OscConfig+0x2f6>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80037a4:	f7fd fe30 	bl	8001408 <HAL_GetTick>
 80037a8:	1b80      	subs	r0, r0, r6
 80037aa:	f241 3388 	movw	r3, #5000	; 0x1388
 80037ae:	4298      	cmp	r0, r3
 80037b0:	d9f3      	bls.n	800379a <HAL_RCC_OscConfig+0x2da>
        {
          return HAL_TIMEOUT;
 80037b2:	2003      	movs	r0, #3
 80037b4:	e095      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 80037b6:	b9fd      	cbnz	r5, 80037f8 <HAL_RCC_OscConfig+0x338>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80037b8:	69a3      	ldr	r3, [r4, #24]
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	f000 8090 	beq.w	80038e0 <HAL_RCC_OscConfig+0x420>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80037c0:	4a4b      	ldr	r2, [pc, #300]	; (80038f0 <HAL_RCC_OscConfig+0x430>)
 80037c2:	6892      	ldr	r2, [r2, #8]
 80037c4:	f002 020c 	and.w	r2, r2, #12
 80037c8:	2a08      	cmp	r2, #8
 80037ca:	d058      	beq.n	800387e <HAL_RCC_OscConfig+0x3be>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80037cc:	2b02      	cmp	r3, #2
 80037ce:	d019      	beq.n	8003804 <HAL_RCC_OscConfig+0x344>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80037d0:	4a47      	ldr	r2, [pc, #284]	; (80038f0 <HAL_RCC_OscConfig+0x430>)
 80037d2:	6813      	ldr	r3, [r2, #0]
 80037d4:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80037d8:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80037da:	f7fd fe15 	bl	8001408 <HAL_GetTick>
 80037de:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80037e0:	4b43      	ldr	r3, [pc, #268]	; (80038f0 <HAL_RCC_OscConfig+0x430>)
 80037e2:	681b      	ldr	r3, [r3, #0]
 80037e4:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80037e8:	d047      	beq.n	800387a <HAL_RCC_OscConfig+0x3ba>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80037ea:	f7fd fe0d 	bl	8001408 <HAL_GetTick>
 80037ee:	1b00      	subs	r0, r0, r4
 80037f0:	2802      	cmp	r0, #2
 80037f2:	d9f5      	bls.n	80037e0 <HAL_RCC_OscConfig+0x320>
          {
            return HAL_TIMEOUT;
 80037f4:	2003      	movs	r0, #3
 80037f6:	e074      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
      __HAL_RCC_PWR_CLK_DISABLE();
 80037f8:	4a3d      	ldr	r2, [pc, #244]	; (80038f0 <HAL_RCC_OscConfig+0x430>)
 80037fa:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80037fc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003800:	6413      	str	r3, [r2, #64]	; 0x40
 8003802:	e7d9      	b.n	80037b8 <HAL_RCC_OscConfig+0x2f8>
        __HAL_RCC_PLL_DISABLE();
 8003804:	4a3a      	ldr	r2, [pc, #232]	; (80038f0 <HAL_RCC_OscConfig+0x430>)
 8003806:	6813      	ldr	r3, [r2, #0]
 8003808:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800380c:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800380e:	f7fd fdfb 	bl	8001408 <HAL_GetTick>
 8003812:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8003814:	4b36      	ldr	r3, [pc, #216]	; (80038f0 <HAL_RCC_OscConfig+0x430>)
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800381c:	d006      	beq.n	800382c <HAL_RCC_OscConfig+0x36c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800381e:	f7fd fdf3 	bl	8001408 <HAL_GetTick>
 8003822:	1b40      	subs	r0, r0, r5
 8003824:	2802      	cmp	r0, #2
 8003826:	d9f5      	bls.n	8003814 <HAL_RCC_OscConfig+0x354>
            return HAL_TIMEOUT;
 8003828:	2003      	movs	r0, #3
 800382a:	e05a      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800382c:	69e3      	ldr	r3, [r4, #28]
 800382e:	6a22      	ldr	r2, [r4, #32]
 8003830:	4313      	orrs	r3, r2
 8003832:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003834:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8003838:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800383a:	0852      	lsrs	r2, r2, #1
 800383c:	3a01      	subs	r2, #1
 800383e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003842:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8003844:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8003848:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800384c:	4a28      	ldr	r2, [pc, #160]	; (80038f0 <HAL_RCC_OscConfig+0x430>)
 800384e:	6053      	str	r3, [r2, #4]
        __HAL_RCC_PLL_ENABLE();
 8003850:	6813      	ldr	r3, [r2, #0]
 8003852:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003856:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 8003858:	f7fd fdd6 	bl	8001408 <HAL_GetTick>
 800385c:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800385e:	4b24      	ldr	r3, [pc, #144]	; (80038f0 <HAL_RCC_OscConfig+0x430>)
 8003860:	681b      	ldr	r3, [r3, #0]
 8003862:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8003866:	d106      	bne.n	8003876 <HAL_RCC_OscConfig+0x3b6>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8003868:	f7fd fdce 	bl	8001408 <HAL_GetTick>
 800386c:	1b00      	subs	r0, r0, r4
 800386e:	2802      	cmp	r0, #2
 8003870:	d9f5      	bls.n	800385e <HAL_RCC_OscConfig+0x39e>
            return HAL_TIMEOUT;
 8003872:	2003      	movs	r0, #3
 8003874:	e035      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
 8003876:	2000      	movs	r0, #0
 8003878:	e033      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
 800387a:	2000      	movs	r0, #0
 800387c:	e031      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
      pll_config = RCC->PLLCFGR;
 800387e:	4a1c      	ldr	r2, [pc, #112]	; (80038f0 <HAL_RCC_OscConfig+0x430>)
 8003880:	6852      	ldr	r2, [r2, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8003882:	2b01      	cmp	r3, #1
 8003884:	d02f      	beq.n	80038e6 <HAL_RCC_OscConfig+0x426>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8003886:	f402 0380 	and.w	r3, r2, #4194304	; 0x400000
 800388a:	69e1      	ldr	r1, [r4, #28]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800388c:	428b      	cmp	r3, r1
 800388e:	d001      	beq.n	8003894 <HAL_RCC_OscConfig+0x3d4>
        return HAL_ERROR;
 8003890:	2001      	movs	r0, #1
 8003892:	e026      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8003894:	f002 033f 	and.w	r3, r2, #63	; 0x3f
 8003898:	6a21      	ldr	r1, [r4, #32]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800389a:	428b      	cmp	r3, r1
 800389c:	d001      	beq.n	80038a2 <HAL_RCC_OscConfig+0x3e2>
        return HAL_ERROR;
 800389e:	2001      	movs	r0, #1
 80038a0:	e01f      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80038a2:	6a61      	ldr	r1, [r4, #36]	; 0x24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80038a4:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80038a8:	4013      	ands	r3, r2
 80038aa:	ebb3 1f81 	cmp.w	r3, r1, lsl #6
 80038ae:	d001      	beq.n	80038b4 <HAL_RCC_OscConfig+0x3f4>
        return HAL_ERROR;
 80038b0:	2001      	movs	r0, #1
 80038b2:	e016      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80038b4:	f402 3140 	and.w	r1, r2, #196608	; 0x30000
 80038b8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80038ba:	085b      	lsrs	r3, r3, #1
 80038bc:	3b01      	subs	r3, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80038be:	ebb1 4f03 	cmp.w	r1, r3, lsl #16
 80038c2:	d001      	beq.n	80038c8 <HAL_RCC_OscConfig+0x408>
        return HAL_ERROR;
 80038c4:	2001      	movs	r0, #1
 80038c6:	e00c      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80038c8:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 80038cc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80038ce:	ebb2 6f03 	cmp.w	r2, r3, lsl #24
 80038d2:	d00a      	beq.n	80038ea <HAL_RCC_OscConfig+0x42a>
        return HAL_ERROR;
 80038d4:	2001      	movs	r0, #1
 80038d6:	e004      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
    return HAL_ERROR;
 80038d8:	2001      	movs	r0, #1
}
 80038da:	4770      	bx	lr
        return HAL_ERROR;
 80038dc:	2001      	movs	r0, #1
 80038de:	e000      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
  return HAL_OK;
 80038e0:	2000      	movs	r0, #0
}
 80038e2:	b002      	add	sp, #8
 80038e4:	bd70      	pop	{r4, r5, r6, pc}
        return HAL_ERROR;
 80038e6:	2001      	movs	r0, #1
 80038e8:	e7fb      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
  return HAL_OK;
 80038ea:	2000      	movs	r0, #0
 80038ec:	e7f9      	b.n	80038e2 <HAL_RCC_OscConfig+0x422>
 80038ee:	bf00      	nop
 80038f0:	40023800 	.word	0x40023800

080038f4 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80038f4:	4b26      	ldr	r3, [pc, #152]	; (8003990 <HAL_RCC_GetSysClockFreq+0x9c>)
 80038f6:	689b      	ldr	r3, [r3, #8]
 80038f8:	f003 030c 	and.w	r3, r3, #12
 80038fc:	2b04      	cmp	r3, #4
 80038fe:	d044      	beq.n	800398a <HAL_RCC_GetSysClockFreq+0x96>
 8003900:	2b08      	cmp	r3, #8
 8003902:	d001      	beq.n	8003908 <HAL_RCC_GetSysClockFreq+0x14>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8003904:	4823      	ldr	r0, [pc, #140]	; (8003994 <HAL_RCC_GetSysClockFreq+0xa0>)
 8003906:	4770      	bx	lr
{
 8003908:	e92d 4bf0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, fp, lr}
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800390c:	4b20      	ldr	r3, [pc, #128]	; (8003990 <HAL_RCC_GetSysClockFreq+0x9c>)
 800390e:	685a      	ldr	r2, [r3, #4]
 8003910:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8003914:	685b      	ldr	r3, [r3, #4]
 8003916:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 800391a:	d013      	beq.n	8003944 <HAL_RCC_GetSysClockFreq+0x50>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800391c:	4b1c      	ldr	r3, [pc, #112]	; (8003990 <HAL_RCC_GetSysClockFreq+0x9c>)
 800391e:	6859      	ldr	r1, [r3, #4]
 8003920:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8003924:	2300      	movs	r3, #0
 8003926:	481c      	ldr	r0, [pc, #112]	; (8003998 <HAL_RCC_GetSysClockFreq+0xa4>)
 8003928:	fba1 0100 	umull	r0, r1, r1, r0
 800392c:	f7fd f8ba 	bl	8000aa4 <__aeabi_uldivmod>
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8003930:	4b17      	ldr	r3, [pc, #92]	; (8003990 <HAL_RCC_GetSysClockFreq+0x9c>)
 8003932:	685b      	ldr	r3, [r3, #4]
 8003934:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8003938:	3301      	adds	r3, #1
 800393a:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 800393c:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8003940:	e8bd 8bf0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, fp, pc}
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8003944:	4b12      	ldr	r3, [pc, #72]	; (8003990 <HAL_RCC_GetSysClockFreq+0x9c>)
 8003946:	685b      	ldr	r3, [r3, #4]
 8003948:	f3c3 1388 	ubfx	r3, r3, #6, #9
 800394c:	461e      	mov	r6, r3
 800394e:	2700      	movs	r7, #0
 8003950:	015c      	lsls	r4, r3, #5
 8003952:	2500      	movs	r5, #0
 8003954:	1ae4      	subs	r4, r4, r3
 8003956:	eb65 0507 	sbc.w	r5, r5, r7
 800395a:	01a9      	lsls	r1, r5, #6
 800395c:	ea41 6194 	orr.w	r1, r1, r4, lsr #26
 8003960:	01a0      	lsls	r0, r4, #6
 8003962:	1b00      	subs	r0, r0, r4
 8003964:	eb61 0105 	sbc.w	r1, r1, r5
 8003968:	00cb      	lsls	r3, r1, #3
 800396a:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 800396e:	00c4      	lsls	r4, r0, #3
 8003970:	19a0      	adds	r0, r4, r6
 8003972:	eb43 0107 	adc.w	r1, r3, r7
 8003976:	028b      	lsls	r3, r1, #10
 8003978:	ea43 5390 	orr.w	r3, r3, r0, lsr #22
 800397c:	0284      	lsls	r4, r0, #10
 800397e:	4620      	mov	r0, r4
 8003980:	4619      	mov	r1, r3
 8003982:	2300      	movs	r3, #0
 8003984:	f7fd f88e 	bl	8000aa4 <__aeabi_uldivmod>
 8003988:	e7d2      	b.n	8003930 <HAL_RCC_GetSysClockFreq+0x3c>
      sysclockfreq = HSE_VALUE;
 800398a:	4803      	ldr	r0, [pc, #12]	; (8003998 <HAL_RCC_GetSysClockFreq+0xa4>)
}
 800398c:	4770      	bx	lr
 800398e:	bf00      	nop
 8003990:	40023800 	.word	0x40023800
 8003994:	00f42400 	.word	0x00f42400
 8003998:	017d7840 	.word	0x017d7840

0800399c <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
 800399c:	2800      	cmp	r0, #0
 800399e:	f000 80a3 	beq.w	8003ae8 <HAL_RCC_ClockConfig+0x14c>
{
 80039a2:	b570      	push	{r4, r5, r6, lr}
 80039a4:	4604      	mov	r4, r0
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 80039a6:	4b52      	ldr	r3, [pc, #328]	; (8003af0 <HAL_RCC_ClockConfig+0x154>)
 80039a8:	681b      	ldr	r3, [r3, #0]
 80039aa:	f003 030f 	and.w	r3, r3, #15
 80039ae:	428b      	cmp	r3, r1
 80039b0:	d20c      	bcs.n	80039cc <HAL_RCC_ClockConfig+0x30>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80039b2:	4a4f      	ldr	r2, [pc, #316]	; (8003af0 <HAL_RCC_ClockConfig+0x154>)
 80039b4:	6813      	ldr	r3, [r2, #0]
 80039b6:	f023 030f 	bic.w	r3, r3, #15
 80039ba:	430b      	orrs	r3, r1
 80039bc:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80039be:	6813      	ldr	r3, [r2, #0]
 80039c0:	f003 030f 	and.w	r3, r3, #15
 80039c4:	428b      	cmp	r3, r1
 80039c6:	d001      	beq.n	80039cc <HAL_RCC_ClockConfig+0x30>
      return HAL_ERROR;
 80039c8:	2001      	movs	r0, #1
}
 80039ca:	bd70      	pop	{r4, r5, r6, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80039cc:	6823      	ldr	r3, [r4, #0]
 80039ce:	f013 0f02 	tst.w	r3, #2
 80039d2:	d017      	beq.n	8003a04 <HAL_RCC_ClockConfig+0x68>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80039d4:	f013 0f04 	tst.w	r3, #4
 80039d8:	d004      	beq.n	80039e4 <HAL_RCC_ClockConfig+0x48>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80039da:	4a46      	ldr	r2, [pc, #280]	; (8003af4 <HAL_RCC_ClockConfig+0x158>)
 80039dc:	6893      	ldr	r3, [r2, #8]
 80039de:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80039e2:	6093      	str	r3, [r2, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80039e4:	6823      	ldr	r3, [r4, #0]
 80039e6:	f013 0f08 	tst.w	r3, #8
 80039ea:	d004      	beq.n	80039f6 <HAL_RCC_ClockConfig+0x5a>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80039ec:	4a41      	ldr	r2, [pc, #260]	; (8003af4 <HAL_RCC_ClockConfig+0x158>)
 80039ee:	6893      	ldr	r3, [r2, #8]
 80039f0:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80039f4:	6093      	str	r3, [r2, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80039f6:	4a3f      	ldr	r2, [pc, #252]	; (8003af4 <HAL_RCC_ClockConfig+0x158>)
 80039f8:	6893      	ldr	r3, [r2, #8]
 80039fa:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80039fe:	68a0      	ldr	r0, [r4, #8]
 8003a00:	4303      	orrs	r3, r0
 8003a02:	6093      	str	r3, [r2, #8]
 8003a04:	460d      	mov	r5, r1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003a06:	6823      	ldr	r3, [r4, #0]
 8003a08:	f013 0f01 	tst.w	r3, #1
 8003a0c:	d031      	beq.n	8003a72 <HAL_RCC_ClockConfig+0xd6>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003a0e:	6863      	ldr	r3, [r4, #4]
 8003a10:	2b01      	cmp	r3, #1
 8003a12:	d020      	beq.n	8003a56 <HAL_RCC_ClockConfig+0xba>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003a14:	2b02      	cmp	r3, #2
 8003a16:	d025      	beq.n	8003a64 <HAL_RCC_ClockConfig+0xc8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003a18:	4a36      	ldr	r2, [pc, #216]	; (8003af4 <HAL_RCC_ClockConfig+0x158>)
 8003a1a:	6812      	ldr	r2, [r2, #0]
 8003a1c:	f012 0f02 	tst.w	r2, #2
 8003a20:	d064      	beq.n	8003aec <HAL_RCC_ClockConfig+0x150>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8003a22:	4934      	ldr	r1, [pc, #208]	; (8003af4 <HAL_RCC_ClockConfig+0x158>)
 8003a24:	688a      	ldr	r2, [r1, #8]
 8003a26:	f022 0203 	bic.w	r2, r2, #3
 8003a2a:	4313      	orrs	r3, r2
 8003a2c:	608b      	str	r3, [r1, #8]
    tickstart = HAL_GetTick();
 8003a2e:	f7fd fceb 	bl	8001408 <HAL_GetTick>
 8003a32:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003a34:	4b2f      	ldr	r3, [pc, #188]	; (8003af4 <HAL_RCC_ClockConfig+0x158>)
 8003a36:	689b      	ldr	r3, [r3, #8]
 8003a38:	f003 030c 	and.w	r3, r3, #12
 8003a3c:	6862      	ldr	r2, [r4, #4]
 8003a3e:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8003a42:	d016      	beq.n	8003a72 <HAL_RCC_ClockConfig+0xd6>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003a44:	f7fd fce0 	bl	8001408 <HAL_GetTick>
 8003a48:	1b80      	subs	r0, r0, r6
 8003a4a:	f241 3388 	movw	r3, #5000	; 0x1388
 8003a4e:	4298      	cmp	r0, r3
 8003a50:	d9f0      	bls.n	8003a34 <HAL_RCC_ClockConfig+0x98>
        return HAL_TIMEOUT;
 8003a52:	2003      	movs	r0, #3
 8003a54:	e7b9      	b.n	80039ca <HAL_RCC_ClockConfig+0x2e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003a56:	4a27      	ldr	r2, [pc, #156]	; (8003af4 <HAL_RCC_ClockConfig+0x158>)
 8003a58:	6812      	ldr	r2, [r2, #0]
 8003a5a:	f412 3f00 	tst.w	r2, #131072	; 0x20000
 8003a5e:	d1e0      	bne.n	8003a22 <HAL_RCC_ClockConfig+0x86>
        return HAL_ERROR;
 8003a60:	2001      	movs	r0, #1
 8003a62:	e7b2      	b.n	80039ca <HAL_RCC_ClockConfig+0x2e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8003a64:	4a23      	ldr	r2, [pc, #140]	; (8003af4 <HAL_RCC_ClockConfig+0x158>)
 8003a66:	6812      	ldr	r2, [r2, #0]
 8003a68:	f012 7f00 	tst.w	r2, #33554432	; 0x2000000
 8003a6c:	d1d9      	bne.n	8003a22 <HAL_RCC_ClockConfig+0x86>
        return HAL_ERROR;
 8003a6e:	2001      	movs	r0, #1
 8003a70:	e7ab      	b.n	80039ca <HAL_RCC_ClockConfig+0x2e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8003a72:	4b1f      	ldr	r3, [pc, #124]	; (8003af0 <HAL_RCC_ClockConfig+0x154>)
 8003a74:	681b      	ldr	r3, [r3, #0]
 8003a76:	f003 030f 	and.w	r3, r3, #15
 8003a7a:	42ab      	cmp	r3, r5
 8003a7c:	d90c      	bls.n	8003a98 <HAL_RCC_ClockConfig+0xfc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003a7e:	4a1c      	ldr	r2, [pc, #112]	; (8003af0 <HAL_RCC_ClockConfig+0x154>)
 8003a80:	6813      	ldr	r3, [r2, #0]
 8003a82:	f023 030f 	bic.w	r3, r3, #15
 8003a86:	432b      	orrs	r3, r5
 8003a88:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8003a8a:	6813      	ldr	r3, [r2, #0]
 8003a8c:	f003 030f 	and.w	r3, r3, #15
 8003a90:	42ab      	cmp	r3, r5
 8003a92:	d001      	beq.n	8003a98 <HAL_RCC_ClockConfig+0xfc>
      return HAL_ERROR;
 8003a94:	2001      	movs	r0, #1
 8003a96:	e798      	b.n	80039ca <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003a98:	6823      	ldr	r3, [r4, #0]
 8003a9a:	f013 0f04 	tst.w	r3, #4
 8003a9e:	d006      	beq.n	8003aae <HAL_RCC_ClockConfig+0x112>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8003aa0:	4a14      	ldr	r2, [pc, #80]	; (8003af4 <HAL_RCC_ClockConfig+0x158>)
 8003aa2:	6893      	ldr	r3, [r2, #8]
 8003aa4:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8003aa8:	68e1      	ldr	r1, [r4, #12]
 8003aaa:	430b      	orrs	r3, r1
 8003aac:	6093      	str	r3, [r2, #8]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8003aae:	6823      	ldr	r3, [r4, #0]
 8003ab0:	f013 0f08 	tst.w	r3, #8
 8003ab4:	d007      	beq.n	8003ac6 <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8003ab6:	4a0f      	ldr	r2, [pc, #60]	; (8003af4 <HAL_RCC_ClockConfig+0x158>)
 8003ab8:	6893      	ldr	r3, [r2, #8]
 8003aba:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8003abe:	6921      	ldr	r1, [r4, #16]
 8003ac0:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8003ac4:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8003ac6:	f7ff ff15 	bl	80038f4 <HAL_RCC_GetSysClockFreq>
 8003aca:	4b0a      	ldr	r3, [pc, #40]	; (8003af4 <HAL_RCC_ClockConfig+0x158>)
 8003acc:	689b      	ldr	r3, [r3, #8]
 8003ace:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8003ad2:	4a09      	ldr	r2, [pc, #36]	; (8003af8 <HAL_RCC_ClockConfig+0x15c>)
 8003ad4:	5cd3      	ldrb	r3, [r2, r3]
 8003ad6:	40d8      	lsrs	r0, r3
 8003ad8:	4b08      	ldr	r3, [pc, #32]	; (8003afc <HAL_RCC_ClockConfig+0x160>)
 8003ada:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8003adc:	4b08      	ldr	r3, [pc, #32]	; (8003b00 <HAL_RCC_ClockConfig+0x164>)
 8003ade:	6818      	ldr	r0, [r3, #0]
 8003ae0:	f7fd fc54 	bl	800138c <HAL_InitTick>
  return HAL_OK;
 8003ae4:	2000      	movs	r0, #0
 8003ae6:	e770      	b.n	80039ca <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 8003ae8:	2001      	movs	r0, #1
}
 8003aea:	4770      	bx	lr
        return HAL_ERROR;
 8003aec:	2001      	movs	r0, #1
 8003aee:	e76c      	b.n	80039ca <HAL_RCC_ClockConfig+0x2e>
 8003af0:	40023c00 	.word	0x40023c00
 8003af4:	40023800 	.word	0x40023800
 8003af8:	080163c0 	.word	0x080163c0
 8003afc:	20000118 	.word	0x20000118
 8003b00:	20000004 	.word	0x20000004

08003b04 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 8003b04:	4b01      	ldr	r3, [pc, #4]	; (8003b0c <HAL_RCC_GetHCLKFreq+0x8>)
 8003b06:	6818      	ldr	r0, [r3, #0]
 8003b08:	4770      	bx	lr
 8003b0a:	bf00      	nop
 8003b0c:	20000118 	.word	0x20000118

08003b10 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8003b10:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8003b12:	f7ff fff7 	bl	8003b04 <HAL_RCC_GetHCLKFreq>
 8003b16:	4b04      	ldr	r3, [pc, #16]	; (8003b28 <HAL_RCC_GetPCLK1Freq+0x18>)
 8003b18:	689b      	ldr	r3, [r3, #8]
 8003b1a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8003b1e:	4a03      	ldr	r2, [pc, #12]	; (8003b2c <HAL_RCC_GetPCLK1Freq+0x1c>)
 8003b20:	5cd3      	ldrb	r3, [r2, r3]
}
 8003b22:	40d8      	lsrs	r0, r3
 8003b24:	bd08      	pop	{r3, pc}
 8003b26:	bf00      	nop
 8003b28:	40023800 	.word	0x40023800
 8003b2c:	080163d0 	.word	0x080163d0

08003b30 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8003b30:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8003b32:	f7ff ffe7 	bl	8003b04 <HAL_RCC_GetHCLKFreq>
 8003b36:	4b04      	ldr	r3, [pc, #16]	; (8003b48 <HAL_RCC_GetPCLK2Freq+0x18>)
 8003b38:	689b      	ldr	r3, [r3, #8]
 8003b3a:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8003b3e:	4a03      	ldr	r2, [pc, #12]	; (8003b4c <HAL_RCC_GetPCLK2Freq+0x1c>)
 8003b40:	5cd3      	ldrb	r3, [r2, r3]
}
 8003b42:	40d8      	lsrs	r0, r3
 8003b44:	bd08      	pop	{r3, pc}
 8003b46:	bf00      	nop
 8003b48:	40023800 	.word	0x40023800
 8003b4c:	080163d0 	.word	0x080163d0

08003b50 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8003b50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003b52:	b083      	sub	sp, #12
 8003b54:	4604      	mov	r4, r0

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8003b56:	6803      	ldr	r3, [r0, #0]
 8003b58:	f013 0f01 	tst.w	r3, #1
 8003b5c:	d00c      	beq.n	8003b78 <HAL_RCCEx_PeriphCLKConfig+0x28>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8003b5e:	4bb6      	ldr	r3, [pc, #728]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003b60:	689a      	ldr	r2, [r3, #8]
 8003b62:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8003b66:	609a      	str	r2, [r3, #8]
 8003b68:	689a      	ldr	r2, [r3, #8]
 8003b6a:	6b41      	ldr	r1, [r0, #52]	; 0x34
 8003b6c:	430a      	orrs	r2, r1
 8003b6e:	609a      	str	r2, [r3, #8]

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 8003b70:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8003b72:	b1c3      	cbz	r3, 8003ba6 <HAL_RCCEx_PeriphCLKConfig+0x56>
  uint32_t plli2sused = 0;
 8003b74:	2600      	movs	r6, #0
 8003b76:	e000      	b.n	8003b7a <HAL_RCCEx_PeriphCLKConfig+0x2a>
 8003b78:	2600      	movs	r6, #0
      plli2sused = 1;
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 8003b7a:	6823      	ldr	r3, [r4, #0]
 8003b7c:	f413 2f00 	tst.w	r3, #524288	; 0x80000
 8003b80:	d015      	beq.n	8003bae <HAL_RCCEx_PeriphCLKConfig+0x5e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8003b82:	4aad      	ldr	r2, [pc, #692]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003b84:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8003b88:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8003b8c:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8003b8e:	430b      	orrs	r3, r1
 8003b90:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8003b94:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003b96:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8003b9a:	d006      	beq.n	8003baa <HAL_RCCEx_PeriphCLKConfig+0x5a>
    {
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8003b9c:	2b00      	cmp	r3, #0
 8003b9e:	f000 8129 	beq.w	8003df4 <HAL_RCCEx_PeriphCLKConfig+0x2a4>
  uint32_t pllsaiused = 0;
 8003ba2:	2500      	movs	r5, #0
 8003ba4:	e004      	b.n	8003bb0 <HAL_RCCEx_PeriphCLKConfig+0x60>
      plli2sused = 1;
 8003ba6:	2601      	movs	r6, #1
 8003ba8:	e7e7      	b.n	8003b7a <HAL_RCCEx_PeriphCLKConfig+0x2a>
      plli2sused = 1;
 8003baa:	2601      	movs	r6, #1
 8003bac:	e7f6      	b.n	8003b9c <HAL_RCCEx_PeriphCLKConfig+0x4c>
  uint32_t pllsaiused = 0;
 8003bae:	2500      	movs	r5, #0
      pllsaiused = 1;
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 8003bb0:	6823      	ldr	r3, [r4, #0]
 8003bb2:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8003bb6:	d00f      	beq.n	8003bd8 <HAL_RCCEx_PeriphCLKConfig+0x88>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8003bb8:	4a9f      	ldr	r2, [pc, #636]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003bba:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8003bbe:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8003bc2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8003bc4:	430b      	orrs	r3, r1
 8003bc6:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8003bca:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003bcc:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8003bd0:	f000 8112 	beq.w	8003df8 <HAL_RCCEx_PeriphCLKConfig+0x2a8>
    {
      plli2sused = 1;
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
 8003bd4:	b903      	cbnz	r3, 8003bd8 <HAL_RCCEx_PeriphCLKConfig+0x88>
    {
      pllsaiused = 1;
 8003bd6:	2501      	movs	r5, #1
    }
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8003bd8:	6823      	ldr	r3, [r4, #0]
 8003bda:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
 8003bde:	d000      	beq.n	8003be2 <HAL_RCCEx_PeriphCLKConfig+0x92>
  {
      plli2sused = 1;
 8003be0:	2601      	movs	r6, #1
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8003be2:	f013 0f20 	tst.w	r3, #32
 8003be6:	f040 8109 	bne.w	8003dfc <HAL_RCCEx_PeriphCLKConfig+0x2ac>
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8003bea:	6823      	ldr	r3, [r4, #0]
 8003bec:	f013 0f10 	tst.w	r3, #16
 8003bf0:	d00c      	beq.n	8003c0c <HAL_RCCEx_PeriphCLKConfig+0xbc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8003bf2:	4b91      	ldr	r3, [pc, #580]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003bf4:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8003bf8:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8003bfc:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8003c00:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8003c04:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8003c06:	430a      	orrs	r2, r1
 8003c08:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8003c0c:	6823      	ldr	r3, [r4, #0]
 8003c0e:	f413 4f80 	tst.w	r3, #16384	; 0x4000
 8003c12:	d008      	beq.n	8003c26 <HAL_RCCEx_PeriphCLKConfig+0xd6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8003c14:	4a88      	ldr	r2, [pc, #544]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003c16:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003c1a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003c1e:	6e61      	ldr	r1, [r4, #100]	; 0x64
 8003c20:	430b      	orrs	r3, r1
 8003c22:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8003c26:	6823      	ldr	r3, [r4, #0]
 8003c28:	f413 4f00 	tst.w	r3, #32768	; 0x8000
 8003c2c:	d008      	beq.n	8003c40 <HAL_RCCEx_PeriphCLKConfig+0xf0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8003c2e:	4a82      	ldr	r2, [pc, #520]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003c30:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003c34:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 8003c38:	6ea1      	ldr	r1, [r4, #104]	; 0x68
 8003c3a:	430b      	orrs	r3, r1
 8003c3c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8003c40:	6823      	ldr	r3, [r4, #0]
 8003c42:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8003c46:	d008      	beq.n	8003c5a <HAL_RCCEx_PeriphCLKConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8003c48:	4a7b      	ldr	r2, [pc, #492]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003c4a:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003c4e:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8003c52:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 8003c54:	430b      	orrs	r3, r1
 8003c56:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8003c5a:	6823      	ldr	r3, [r4, #0]
 8003c5c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8003c60:	d008      	beq.n	8003c74 <HAL_RCCEx_PeriphCLKConfig+0x124>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8003c62:	4a75      	ldr	r2, [pc, #468]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003c64:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003c68:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8003c6c:	6f21      	ldr	r1, [r4, #112]	; 0x70
 8003c6e:	430b      	orrs	r3, r1
 8003c70:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8003c74:	6823      	ldr	r3, [r4, #0]
 8003c76:	f013 0f40 	tst.w	r3, #64	; 0x40
 8003c7a:	d008      	beq.n	8003c8e <HAL_RCCEx_PeriphCLKConfig+0x13e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8003c7c:	4a6e      	ldr	r2, [pc, #440]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003c7e:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003c82:	f023 0303 	bic.w	r3, r3, #3
 8003c86:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8003c88:	430b      	orrs	r3, r1
 8003c8a:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8003c8e:	6823      	ldr	r3, [r4, #0]
 8003c90:	f013 0f80 	tst.w	r3, #128	; 0x80
 8003c94:	d008      	beq.n	8003ca8 <HAL_RCCEx_PeriphCLKConfig+0x158>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8003c96:	4a68      	ldr	r2, [pc, #416]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003c98:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003c9c:	f023 030c 	bic.w	r3, r3, #12
 8003ca0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8003ca2:	430b      	orrs	r3, r1
 8003ca4:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8003ca8:	6823      	ldr	r3, [r4, #0]
 8003caa:	f413 7f80 	tst.w	r3, #256	; 0x100
 8003cae:	d008      	beq.n	8003cc2 <HAL_RCCEx_PeriphCLKConfig+0x172>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8003cb0:	4a61      	ldr	r2, [pc, #388]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003cb2:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003cb6:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8003cba:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8003cbc:	430b      	orrs	r3, r1
 8003cbe:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8003cc2:	6823      	ldr	r3, [r4, #0]
 8003cc4:	f413 7f00 	tst.w	r3, #512	; 0x200
 8003cc8:	d008      	beq.n	8003cdc <HAL_RCCEx_PeriphCLKConfig+0x18c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8003cca:	4a5b      	ldr	r2, [pc, #364]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003ccc:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003cd0:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8003cd4:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8003cd6:	430b      	orrs	r3, r1
 8003cd8:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8003cdc:	6823      	ldr	r3, [r4, #0]
 8003cde:	f413 6f80 	tst.w	r3, #1024	; 0x400
 8003ce2:	d008      	beq.n	8003cf6 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8003ce4:	4a54      	ldr	r2, [pc, #336]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003ce6:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003cea:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003cee:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8003cf0:	430b      	orrs	r3, r1
 8003cf2:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8003cf6:	6823      	ldr	r3, [r4, #0]
 8003cf8:	f413 6f00 	tst.w	r3, #2048	; 0x800
 8003cfc:	d008      	beq.n	8003d10 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 8003cfe:	4a4e      	ldr	r2, [pc, #312]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003d00:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003d04:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8003d08:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8003d0a:	430b      	orrs	r3, r1
 8003d0c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8003d10:	6823      	ldr	r3, [r4, #0]
 8003d12:	f413 5f80 	tst.w	r3, #4096	; 0x1000
 8003d16:	d008      	beq.n	8003d2a <HAL_RCCEx_PeriphCLKConfig+0x1da>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8003d18:	4a47      	ldr	r2, [pc, #284]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003d1a:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003d1e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8003d22:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8003d24:	430b      	orrs	r3, r1
 8003d26:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8003d2a:	6823      	ldr	r3, [r4, #0]
 8003d2c:	f413 5f00 	tst.w	r3, #8192	; 0x2000
 8003d30:	d008      	beq.n	8003d44 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8003d32:	4a41      	ldr	r2, [pc, #260]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003d34:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003d38:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8003d3c:	6e21      	ldr	r1, [r4, #96]	; 0x60
 8003d3e:	430b      	orrs	r3, r1
 8003d40:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8003d44:	6823      	ldr	r3, [r4, #0]
 8003d46:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 8003d4a:	d008      	beq.n	8003d5e <HAL_RCCEx_PeriphCLKConfig+0x20e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8003d4c:	4a3a      	ldr	r2, [pc, #232]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003d4e:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003d52:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8003d56:	6fa1      	ldr	r1, [r4, #120]	; 0x78
 8003d58:	430b      	orrs	r3, r1
 8003d5a:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8003d5e:	6823      	ldr	r3, [r4, #0]
 8003d60:	f413 1f00 	tst.w	r3, #2097152	; 0x200000
 8003d64:	d00d      	beq.n	8003d82 <HAL_RCCEx_PeriphCLKConfig+0x232>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8003d66:	4a34      	ldr	r2, [pc, #208]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003d68:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003d6c:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8003d70:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
 8003d72:	430b      	orrs	r3, r1
 8003d74:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
 8003d78:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
 8003d7a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8003d7e:	f000 80a7 	beq.w	8003ed0 <HAL_RCCEx_PeriphCLKConfig+0x380>
    }
  }

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8003d82:	6823      	ldr	r3, [r4, #0]
 8003d84:	f013 0f08 	tst.w	r3, #8
 8003d88:	d000      	beq.n	8003d8c <HAL_RCCEx_PeriphCLKConfig+0x23c>
  {
    pllsaiused = 1;
 8003d8a:	2501      	movs	r5, #1
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8003d8c:	f413 2f80 	tst.w	r3, #262144	; 0x40000
 8003d90:	d008      	beq.n	8003da4 <HAL_RCCEx_PeriphCLKConfig+0x254>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8003d92:	4a29      	ldr	r2, [pc, #164]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003d94:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003d98:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8003d9c:	6f61      	ldr	r1, [r4, #116]	; 0x74
 8003d9e:	430b      	orrs	r3, r1
 8003da0:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8003da4:	6823      	ldr	r3, [r4, #0]
 8003da6:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
 8003daa:	d009      	beq.n	8003dc0 <HAL_RCCEx_PeriphCLKConfig+0x270>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8003dac:	4a22      	ldr	r2, [pc, #136]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003dae:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 8003db2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003db6:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 8003dba:	430b      	orrs	r3, r1
 8003dbc:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8003dc0:	b926      	cbnz	r6, 8003dcc <HAL_RCCEx_PeriphCLKConfig+0x27c>
 8003dc2:	6823      	ldr	r3, [r4, #0]
 8003dc4:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8003dc8:	f000 8102 	beq.w	8003fd0 <HAL_RCCEx_PeriphCLKConfig+0x480>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8003dcc:	4a1a      	ldr	r2, [pc, #104]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003dce:	6813      	ldr	r3, [r2, #0]
 8003dd0:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8003dd4:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8003dd6:	f7fd fb17 	bl	8001408 <HAL_GetTick>
 8003dda:	4606      	mov	r6, r0

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8003ddc:	4b16      	ldr	r3, [pc, #88]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003dde:	681b      	ldr	r3, [r3, #0]
 8003de0:	f013 6f00 	tst.w	r3, #134217728	; 0x8000000
 8003de4:	d076      	beq.n	8003ed4 <HAL_RCCEx_PeriphCLKConfig+0x384>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8003de6:	f7fd fb0f 	bl	8001408 <HAL_GetTick>
 8003dea:	1b80      	subs	r0, r0, r6
 8003dec:	2864      	cmp	r0, #100	; 0x64
 8003dee:	d9f5      	bls.n	8003ddc <HAL_RCCEx_PeriphCLKConfig+0x28c>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8003df0:	2003      	movs	r0, #3
 8003df2:	e0ef      	b.n	8003fd4 <HAL_RCCEx_PeriphCLKConfig+0x484>
      pllsaiused = 1;
 8003df4:	2501      	movs	r5, #1
 8003df6:	e6db      	b.n	8003bb0 <HAL_RCCEx_PeriphCLKConfig+0x60>
      plli2sused = 1;
 8003df8:	2601      	movs	r6, #1
 8003dfa:	e6eb      	b.n	8003bd4 <HAL_RCCEx_PeriphCLKConfig+0x84>
    __HAL_RCC_PWR_CLK_ENABLE();
 8003dfc:	4b0e      	ldr	r3, [pc, #56]	; (8003e38 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8003dfe:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003e00:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003e04:	641a      	str	r2, [r3, #64]	; 0x40
 8003e06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e08:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003e0c:	9301      	str	r3, [sp, #4]
 8003e0e:	9b01      	ldr	r3, [sp, #4]
    PWR->CR1 |= PWR_CR1_DBP;
 8003e10:	4a0a      	ldr	r2, [pc, #40]	; (8003e3c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8003e12:	6813      	ldr	r3, [r2, #0]
 8003e14:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003e18:	6013      	str	r3, [r2, #0]
    tickstart = HAL_GetTick();
 8003e1a:	f7fd faf5 	bl	8001408 <HAL_GetTick>
 8003e1e:	4607      	mov	r7, r0
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8003e20:	4b06      	ldr	r3, [pc, #24]	; (8003e3c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8003e22:	681b      	ldr	r3, [r3, #0]
 8003e24:	f413 7f80 	tst.w	r3, #256	; 0x100
 8003e28:	d10a      	bne.n	8003e40 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003e2a:	f7fd faed 	bl	8001408 <HAL_GetTick>
 8003e2e:	1bc0      	subs	r0, r0, r7
 8003e30:	2864      	cmp	r0, #100	; 0x64
 8003e32:	d9f5      	bls.n	8003e20 <HAL_RCCEx_PeriphCLKConfig+0x2d0>
        return HAL_TIMEOUT;
 8003e34:	2003      	movs	r0, #3
 8003e36:	e0cd      	b.n	8003fd4 <HAL_RCCEx_PeriphCLKConfig+0x484>
 8003e38:	40023800 	.word	0x40023800
 8003e3c:	40007000 	.word	0x40007000
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8003e40:	4baa      	ldr	r3, [pc, #680]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003e42:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8003e44:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8003e48:	d015      	beq.n	8003e76 <HAL_RCCEx_PeriphCLKConfig+0x326>
 8003e4a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8003e4c:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8003e50:	429a      	cmp	r2, r3
 8003e52:	d010      	beq.n	8003e76 <HAL_RCCEx_PeriphCLKConfig+0x326>
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8003e54:	4ba5      	ldr	r3, [pc, #660]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003e56:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8003e58:	f422 7240 	bic.w	r2, r2, #768	; 0x300
      __HAL_RCC_BACKUPRESET_FORCE();
 8003e5c:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8003e5e:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 8003e62:	6719      	str	r1, [r3, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8003e64:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8003e66:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 8003e6a:	6719      	str	r1, [r3, #112]	; 0x70
      RCC->BDCR = tmpreg0;
 8003e6c:	671a      	str	r2, [r3, #112]	; 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8003e6e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003e70:	f013 0f01 	tst.w	r3, #1
 8003e74:	d112      	bne.n	8003e9c <HAL_RCCEx_PeriphCLKConfig+0x34c>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8003e76:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003e78:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8003e7c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8003e80:	d01d      	beq.n	8003ebe <HAL_RCCEx_PeriphCLKConfig+0x36e>
 8003e82:	4a9a      	ldr	r2, [pc, #616]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003e84:	6893      	ldr	r3, [r2, #8]
 8003e86:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8003e8a:	6093      	str	r3, [r2, #8]
 8003e8c:	4997      	ldr	r1, [pc, #604]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003e8e:	6f0b      	ldr	r3, [r1, #112]	; 0x70
 8003e90:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8003e92:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8003e96:	4313      	orrs	r3, r2
 8003e98:	670b      	str	r3, [r1, #112]	; 0x70
 8003e9a:	e6a6      	b.n	8003bea <HAL_RCCEx_PeriphCLKConfig+0x9a>
        tickstart = HAL_GetTick();
 8003e9c:	f7fd fab4 	bl	8001408 <HAL_GetTick>
 8003ea0:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003ea2:	4b92      	ldr	r3, [pc, #584]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003ea4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003ea6:	f013 0f02 	tst.w	r3, #2
 8003eaa:	d1e4      	bne.n	8003e76 <HAL_RCCEx_PeriphCLKConfig+0x326>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003eac:	f7fd faac 	bl	8001408 <HAL_GetTick>
 8003eb0:	1bc0      	subs	r0, r0, r7
 8003eb2:	f241 3388 	movw	r3, #5000	; 0x1388
 8003eb6:	4298      	cmp	r0, r3
 8003eb8:	d9f3      	bls.n	8003ea2 <HAL_RCCEx_PeriphCLKConfig+0x352>
            return HAL_TIMEOUT;
 8003eba:	2003      	movs	r0, #3
 8003ebc:	e08a      	b.n	8003fd4 <HAL_RCCEx_PeriphCLKConfig+0x484>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8003ebe:	488b      	ldr	r0, [pc, #556]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003ec0:	6882      	ldr	r2, [r0, #8]
 8003ec2:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 8003ec6:	498a      	ldr	r1, [pc, #552]	; (80040f0 <HAL_RCCEx_PeriphCLKConfig+0x5a0>)
 8003ec8:	4019      	ands	r1, r3
 8003eca:	430a      	orrs	r2, r1
 8003ecc:	6082      	str	r2, [r0, #8]
 8003ece:	e7dd      	b.n	8003e8c <HAL_RCCEx_PeriphCLKConfig+0x33c>
      pllsaiused = 1;
 8003ed0:	2501      	movs	r5, #1
 8003ed2:	e756      	b.n	8003d82 <HAL_RCCEx_PeriphCLKConfig+0x232>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8003ed4:	6823      	ldr	r3, [r4, #0]
 8003ed6:	f013 0f01 	tst.w	r3, #1
 8003eda:	d013      	beq.n	8003f04 <HAL_RCCEx_PeriphCLKConfig+0x3b4>
 8003edc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003ede:	b98b      	cbnz	r3, 8003f04 <HAL_RCCEx_PeriphCLKConfig+0x3b4>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8003ee0:	4a82      	ldr	r2, [pc, #520]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003ee2:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8003ee6:	f8d2 1084 	ldr.w	r1, [r2, #132]	; 0x84
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8003eea:	6860      	ldr	r0, [r4, #4]
 8003eec:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003ef0:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8003ef4:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8003ef8:	430b      	orrs	r3, r1
 8003efa:	68a1      	ldr	r1, [r4, #8]
 8003efc:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8003f00:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8003f04:	6823      	ldr	r3, [r4, #0]
 8003f06:	f413 2f00 	tst.w	r3, #524288	; 0x80000
 8003f0a:	d003      	beq.n	8003f14 <HAL_RCCEx_PeriphCLKConfig+0x3c4>
 8003f0c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8003f0e:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
 8003f12:	d006      	beq.n	8003f22 <HAL_RCCEx_PeriphCLKConfig+0x3d2>
 8003f14:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8003f18:	d01e      	beq.n	8003f58 <HAL_RCCEx_PeriphCLKConfig+0x408>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8003f1a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003f1c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8003f20:	d11a      	bne.n	8003f58 <HAL_RCCEx_PeriphCLKConfig+0x408>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      /* Check for PLLI2S/DIVQ parameters */
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SP and PLLI2SR values from PLLI2SCFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8003f22:	4a72      	ldr	r2, [pc, #456]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003f24:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8003f28:	f8d2 1084 	ldr.w	r1, [r2, #132]	; 0x84
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8003f2c:	6860      	ldr	r0, [r4, #4]
 8003f2e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003f32:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8003f36:	68e0      	ldr	r0, [r4, #12]
 8003f38:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8003f3c:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 8003f40:	430b      	orrs	r3, r1
 8003f42:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84

      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8003f46:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8003f4a:	f023 031f 	bic.w	r3, r3, #31
 8003f4e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8003f50:	3901      	subs	r1, #1
 8003f52:	430b      	orrs	r3, r1
 8003f54:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8003f58:	6823      	ldr	r3, [r4, #0]
 8003f5a:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
 8003f5e:	d011      	beq.n	8003f84 <HAL_RCCEx_PeriphCLKConfig+0x434>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8003f60:	4a62      	ldr	r2, [pc, #392]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003f62:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8003f66:	f8d2 1084 	ldr.w	r1, [r2, #132]	; 0x84
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8003f6a:	6866      	ldr	r6, [r4, #4]
 8003f6c:	6923      	ldr	r3, [r4, #16]
 8003f6e:	041b      	lsls	r3, r3, #16
 8003f70:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 8003f74:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 8003f78:	4303      	orrs	r3, r0
 8003f7a:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 8003f7e:	430b      	orrs	r3, r1
 8003f80:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8003f84:	6823      	ldr	r3, [r4, #0]
 8003f86:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8003f8a:	d00d      	beq.n	8003fa8 <HAL_RCCEx_PeriphCLKConfig+0x458>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));

      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLI2SM) */
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8003f8c:	6862      	ldr	r2, [r4, #4]
 8003f8e:	6923      	ldr	r3, [r4, #16]
 8003f90:	041b      	lsls	r3, r3, #16
 8003f92:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8003f96:	68e2      	ldr	r2, [r4, #12]
 8003f98:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8003f9c:	68a2      	ldr	r2, [r4, #8]
 8003f9e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8003fa2:	4a52      	ldr	r2, [pc, #328]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003fa4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8003fa8:	4a50      	ldr	r2, [pc, #320]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003faa:	6813      	ldr	r3, [r2, #0]
 8003fac:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8003fb0:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8003fb2:	f7fd fa29 	bl	8001408 <HAL_GetTick>
 8003fb6:	4606      	mov	r6, r0

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8003fb8:	4b4c      	ldr	r3, [pc, #304]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	f013 6f00 	tst.w	r3, #134217728	; 0x8000000
 8003fc0:	d106      	bne.n	8003fd0 <HAL_RCCEx_PeriphCLKConfig+0x480>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8003fc2:	f7fd fa21 	bl	8001408 <HAL_GetTick>
 8003fc6:	1b80      	subs	r0, r0, r6
 8003fc8:	2864      	cmp	r0, #100	; 0x64
 8003fca:	d9f5      	bls.n	8003fb8 <HAL_RCCEx_PeriphCLKConfig+0x468>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8003fcc:	2003      	movs	r0, #3
 8003fce:	e001      	b.n	8003fd4 <HAL_RCCEx_PeriphCLKConfig+0x484>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8003fd0:	b915      	cbnz	r5, 8003fd8 <HAL_RCCEx_PeriphCLKConfig+0x488>
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8003fd2:	2000      	movs	r0, #0
}
 8003fd4:	b003      	add	sp, #12
 8003fd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 8003fd8:	4a44      	ldr	r2, [pc, #272]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003fda:	6813      	ldr	r3, [r2, #0]
 8003fdc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003fe0:	6013      	str	r3, [r2, #0]
    tickstart = HAL_GetTick();
 8003fe2:	f7fd fa11 	bl	8001408 <HAL_GetTick>
 8003fe6:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8003fe8:	4b40      	ldr	r3, [pc, #256]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8003fea:	681b      	ldr	r3, [r3, #0]
 8003fec:	f013 5f00 	tst.w	r3, #536870912	; 0x20000000
 8003ff0:	d006      	beq.n	8004000 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8003ff2:	f7fd fa09 	bl	8001408 <HAL_GetTick>
 8003ff6:	1b40      	subs	r0, r0, r5
 8003ff8:	2864      	cmp	r0, #100	; 0x64
 8003ffa:	d9f5      	bls.n	8003fe8 <HAL_RCCEx_PeriphCLKConfig+0x498>
        return HAL_TIMEOUT;
 8003ffc:	2003      	movs	r0, #3
 8003ffe:	e7e9      	b.n	8003fd4 <HAL_RCCEx_PeriphCLKConfig+0x484>
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8004000:	6823      	ldr	r3, [r4, #0]
 8004002:	f413 2f00 	tst.w	r3, #524288	; 0x80000
 8004006:	d001      	beq.n	800400c <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 8004008:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800400a:	b122      	cbz	r2, 8004016 <HAL_RCCEx_PeriphCLKConfig+0x4c6>
 800400c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8004010:	d01d      	beq.n	800404e <HAL_RCCEx_PeriphCLKConfig+0x4fe>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8004012:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004014:	b9db      	cbnz	r3, 800404e <HAL_RCCEx_PeriphCLKConfig+0x4fe>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8004016:	4a35      	ldr	r2, [pc, #212]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8004018:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800401c:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8004020:	6960      	ldr	r0, [r4, #20]
 8004022:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004026:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800402a:	69a0      	ldr	r0, [r4, #24]
 800402c:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8004030:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 8004034:	430b      	orrs	r3, r1
 8004036:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800403a:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800403e:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8004042:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8004044:	3901      	subs	r1, #1
 8004046:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800404a:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 800404e:	6823      	ldr	r3, [r4, #0]
 8004050:	f413 1f00 	tst.w	r3, #2097152	; 0x200000
 8004054:	d003      	beq.n	800405e <HAL_RCCEx_PeriphCLKConfig+0x50e>
 8004056:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
 8004058:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800405c:	d031      	beq.n	80040c2 <HAL_RCCEx_PeriphCLKConfig+0x572>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800405e:	6823      	ldr	r3, [r4, #0]
 8004060:	f013 0f08 	tst.w	r3, #8
 8004064:	d019      	beq.n	800409a <HAL_RCCEx_PeriphCLKConfig+0x54a>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8004066:	4a21      	ldr	r2, [pc, #132]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 8004068:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 800406c:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8004070:	6960      	ldr	r0, [r4, #20]
 8004072:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004076:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800407a:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800407e:	430b      	orrs	r3, r1
 8004080:	69e1      	ldr	r1, [r4, #28]
 8004082:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 8004086:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800408a:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800408e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8004092:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8004094:	430b      	orrs	r3, r1
 8004096:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800409a:	4a14      	ldr	r2, [pc, #80]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 800409c:	6813      	ldr	r3, [r2, #0]
 800409e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80040a2:	6013      	str	r3, [r2, #0]
    tickstart = HAL_GetTick();
 80040a4:	f7fd f9b0 	bl	8001408 <HAL_GetTick>
 80040a8:	4604      	mov	r4, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80040aa:	4b10      	ldr	r3, [pc, #64]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 80040ac:	681b      	ldr	r3, [r3, #0]
 80040ae:	f013 5f00 	tst.w	r3, #536870912	; 0x20000000
 80040b2:	d119      	bne.n	80040e8 <HAL_RCCEx_PeriphCLKConfig+0x598>
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80040b4:	f7fd f9a8 	bl	8001408 <HAL_GetTick>
 80040b8:	1b00      	subs	r0, r0, r4
 80040ba:	2864      	cmp	r0, #100	; 0x64
 80040bc:	d9f5      	bls.n	80040aa <HAL_RCCEx_PeriphCLKConfig+0x55a>
        return HAL_TIMEOUT;
 80040be:	2003      	movs	r0, #3
 80040c0:	e788      	b.n	8003fd4 <HAL_RCCEx_PeriphCLKConfig+0x484>
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80040c2:	4a0a      	ldr	r2, [pc, #40]	; (80040ec <HAL_RCCEx_PeriphCLKConfig+0x59c>)
 80040c4:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80040c8:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 80040cc:	6965      	ldr	r5, [r4, #20]
 80040ce:	6a23      	ldr	r3, [r4, #32]
 80040d0:	041b      	lsls	r3, r3, #16
 80040d2:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80040d6:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 80040da:	4303      	orrs	r3, r0
 80040dc:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 80040e0:	430b      	orrs	r3, r1
 80040e2:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80040e6:	e7ba      	b.n	800405e <HAL_RCCEx_PeriphCLKConfig+0x50e>
  return HAL_OK;
 80040e8:	2000      	movs	r0, #0
 80040ea:	e773      	b.n	8003fd4 <HAL_RCCEx_PeriphCLKConfig+0x484>
 80040ec:	40023800 	.word	0x40023800
 80040f0:	0ffffcff 	.word	0x0ffffcff

080040f4 <HAL_RTC_AlarmAEventCallback>:
  UNUSED(hrtc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_RTC_AlarmAEventCallback could be implemented in the user file
   */
}
 80040f4:	4770      	bx	lr
	...

080040f8 <HAL_RTC_AlarmIRQHandler>:
{
 80040f8:	b510      	push	{r4, lr}
 80040fa:	4604      	mov	r4, r0
  if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA) != (uint32_t)RESET)
 80040fc:	6803      	ldr	r3, [r0, #0]
 80040fe:	689a      	ldr	r2, [r3, #8]
 8004100:	f412 5f80 	tst.w	r2, #4096	; 0x1000
 8004104:	d003      	beq.n	800410e <HAL_RTC_AlarmIRQHandler+0x16>
    if(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) != (uint32_t)RESET)
 8004106:	68db      	ldr	r3, [r3, #12]
 8004108:	f413 7f80 	tst.w	r3, #256	; 0x100
 800410c:	d10f      	bne.n	800412e <HAL_RTC_AlarmIRQHandler+0x36>
  if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRB) != (uint32_t)RESET)
 800410e:	6823      	ldr	r3, [r4, #0]
 8004110:	689a      	ldr	r2, [r3, #8]
 8004112:	f412 5f00 	tst.w	r2, #8192	; 0x2000
 8004116:	d003      	beq.n	8004120 <HAL_RTC_AlarmIRQHandler+0x28>
    if(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) != (uint32_t)RESET)
 8004118:	68db      	ldr	r3, [r3, #12]
 800411a:	f413 7f00 	tst.w	r3, #512	; 0x200
 800411e:	d10f      	bne.n	8004140 <HAL_RTC_AlarmIRQHandler+0x48>
  __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
 8004120:	4b0c      	ldr	r3, [pc, #48]	; (8004154 <HAL_RTC_AlarmIRQHandler+0x5c>)
 8004122:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8004126:	615a      	str	r2, [r3, #20]
  hrtc->State = HAL_RTC_STATE_READY;
 8004128:	2301      	movs	r3, #1
 800412a:	7763      	strb	r3, [r4, #29]
}
 800412c:	bd10      	pop	{r4, pc}
      HAL_RTC_AlarmAEventCallback(hrtc);
 800412e:	f7ff ffe1 	bl	80040f4 <HAL_RTC_AlarmAEventCallback>
      __HAL_RTC_ALARM_CLEAR_FLAG(hrtc,RTC_FLAG_ALRAF);
 8004132:	6822      	ldr	r2, [r4, #0]
 8004134:	68d3      	ldr	r3, [r2, #12]
 8004136:	b2db      	uxtb	r3, r3
 8004138:	f463 73c0 	orn	r3, r3, #384	; 0x180
 800413c:	60d3      	str	r3, [r2, #12]
 800413e:	e7e6      	b.n	800410e <HAL_RTC_AlarmIRQHandler+0x16>
      HAL_RTCEx_AlarmBEventCallback(hrtc);
 8004140:	4620      	mov	r0, r4
 8004142:	f000 fa6d 	bl	8004620 <HAL_RTCEx_AlarmBEventCallback>
      __HAL_RTC_ALARM_CLEAR_FLAG(hrtc,RTC_FLAG_ALRBF);
 8004146:	6822      	ldr	r2, [r4, #0]
 8004148:	68d3      	ldr	r3, [r2, #12]
 800414a:	b2db      	uxtb	r3, r3
 800414c:	f463 7320 	orn	r3, r3, #640	; 0x280
 8004150:	60d3      	str	r3, [r2, #12]
 8004152:	e7e5      	b.n	8004120 <HAL_RTC_AlarmIRQHandler+0x28>
 8004154:	40013c00 	.word	0x40013c00

08004158 <HAL_RTC_WaitForSynchro>:
  * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
  *                the configuration information for RTC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef* hrtc)
{
 8004158:	b538      	push	{r3, r4, r5, lr}
 800415a:	4604      	mov	r4, r0
  uint32_t tickstart = 0;

  /* Clear RSF flag */
  hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 800415c:	6802      	ldr	r2, [r0, #0]
 800415e:	68d3      	ldr	r3, [r2, #12]
 8004160:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8004164:	60d3      	str	r3, [r2, #12]

    /* Get tick */
    tickstart = HAL_GetTick();
 8004166:	f7fd f94f 	bl	8001408 <HAL_GetTick>
 800416a:	4605      	mov	r5, r0

  /* Wait the registers to be synchronised */
  while((hrtc->Instance->ISR & RTC_ISR_RSF) == (uint32_t)RESET)
 800416c:	6823      	ldr	r3, [r4, #0]
 800416e:	68db      	ldr	r3, [r3, #12]
 8004170:	f013 0f20 	tst.w	r3, #32
 8004174:	d107      	bne.n	8004186 <HAL_RTC_WaitForSynchro+0x2e>
  {
    if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 8004176:	f7fd f947 	bl	8001408 <HAL_GetTick>
 800417a:	1b40      	subs	r0, r0, r5
 800417c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004180:	d9f4      	bls.n	800416c <HAL_RTC_WaitForSynchro+0x14>
    {
      return HAL_TIMEOUT;
 8004182:	2003      	movs	r0, #3
 8004184:	e000      	b.n	8004188 <HAL_RTC_WaitForSynchro+0x30>
    }
  }

  return HAL_OK;
 8004186:	2000      	movs	r0, #0
}
 8004188:	bd38      	pop	{r3, r4, r5, pc}

0800418a <RTC_EnterInitMode>:
  * @param  hrtc pointer to a RTC_HandleTypeDef structure that contains
  *                the configuration information for RTC.
  * @retval HAL status
  */
HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef* hrtc)
{
 800418a:	b538      	push	{r3, r4, r5, lr}
  uint32_t tickstart = 0;

  /* Check if the Initialization mode is set */
  if((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 800418c:	6803      	ldr	r3, [r0, #0]
 800418e:	68da      	ldr	r2, [r3, #12]
 8004190:	f012 0f40 	tst.w	r2, #64	; 0x40
 8004194:	d001      	beq.n	800419a <RTC_EnterInitMode+0x10>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8004196:	2000      	movs	r0, #0
}
 8004198:	bd38      	pop	{r3, r4, r5, pc}
 800419a:	4604      	mov	r4, r0
    hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 800419c:	f04f 32ff 	mov.w	r2, #4294967295
 80041a0:	60da      	str	r2, [r3, #12]
    tickstart = HAL_GetTick();
 80041a2:	f7fd f931 	bl	8001408 <HAL_GetTick>
 80041a6:	4605      	mov	r5, r0
    while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 80041a8:	6823      	ldr	r3, [r4, #0]
 80041aa:	68db      	ldr	r3, [r3, #12]
 80041ac:	f013 0f40 	tst.w	r3, #64	; 0x40
 80041b0:	d107      	bne.n	80041c2 <RTC_EnterInitMode+0x38>
      if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 80041b2:	f7fd f929 	bl	8001408 <HAL_GetTick>
 80041b6:	1b40      	subs	r0, r0, r5
 80041b8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80041bc:	d9f4      	bls.n	80041a8 <RTC_EnterInitMode+0x1e>
        return HAL_TIMEOUT;
 80041be:	2003      	movs	r0, #3
 80041c0:	e7ea      	b.n	8004198 <RTC_EnterInitMode+0xe>
  return HAL_OK;
 80041c2:	2000      	movs	r0, #0
 80041c4:	e7e8      	b.n	8004198 <RTC_EnterInitMode+0xe>
	...

080041c8 <HAL_RTC_Init>:
{
 80041c8:	b538      	push	{r3, r4, r5, lr}
  if(hrtc == NULL)
 80041ca:	2800      	cmp	r0, #0
 80041cc:	d05a      	beq.n	8004284 <HAL_RTC_Init+0xbc>
 80041ce:	4604      	mov	r4, r0
  if(hrtc->State == HAL_RTC_STATE_RESET)
 80041d0:	7f43      	ldrb	r3, [r0, #29]
 80041d2:	2b00      	cmp	r3, #0
 80041d4:	d03e      	beq.n	8004254 <HAL_RTC_Init+0x8c>
  hrtc->State = HAL_RTC_STATE_BUSY;
 80041d6:	2302      	movs	r3, #2
 80041d8:	7763      	strb	r3, [r4, #29]
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 80041da:	6823      	ldr	r3, [r4, #0]
 80041dc:	22ca      	movs	r2, #202	; 0xca
 80041de:	625a      	str	r2, [r3, #36]	; 0x24
 80041e0:	6823      	ldr	r3, [r4, #0]
 80041e2:	2253      	movs	r2, #83	; 0x53
 80041e4:	625a      	str	r2, [r3, #36]	; 0x24
  if(RTC_EnterInitMode(hrtc) != HAL_OK)
 80041e6:	4620      	mov	r0, r4
 80041e8:	f7ff ffcf 	bl	800418a <RTC_EnterInitMode>
 80041ec:	4605      	mov	r5, r0
 80041ee:	2800      	cmp	r0, #0
 80041f0:	d134      	bne.n	800425c <HAL_RTC_Init+0x94>
    hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 80041f2:	6822      	ldr	r2, [r4, #0]
 80041f4:	6891      	ldr	r1, [r2, #8]
 80041f6:	4b24      	ldr	r3, [pc, #144]	; (8004288 <HAL_RTC_Init+0xc0>)
 80041f8:	400b      	ands	r3, r1
 80041fa:	6093      	str	r3, [r2, #8]
    hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
 80041fc:	6821      	ldr	r1, [r4, #0]
 80041fe:	688a      	ldr	r2, [r1, #8]
 8004200:	6863      	ldr	r3, [r4, #4]
 8004202:	6920      	ldr	r0, [r4, #16]
 8004204:	4303      	orrs	r3, r0
 8004206:	6960      	ldr	r0, [r4, #20]
 8004208:	4303      	orrs	r3, r0
 800420a:	4313      	orrs	r3, r2
 800420c:	608b      	str	r3, [r1, #8]
    hrtc->Instance->PRER = (uint32_t)(hrtc->Init.SynchPrediv);
 800420e:	6823      	ldr	r3, [r4, #0]
 8004210:	68e2      	ldr	r2, [r4, #12]
 8004212:	611a      	str	r2, [r3, #16]
    hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16);
 8004214:	6822      	ldr	r2, [r4, #0]
 8004216:	6913      	ldr	r3, [r2, #16]
 8004218:	68a1      	ldr	r1, [r4, #8]
 800421a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800421e:	6113      	str	r3, [r2, #16]
    hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 8004220:	6822      	ldr	r2, [r4, #0]
 8004222:	68d3      	ldr	r3, [r2, #12]
 8004224:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004228:	60d3      	str	r3, [r2, #12]
    if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 800422a:	6823      	ldr	r3, [r4, #0]
 800422c:	689b      	ldr	r3, [r3, #8]
 800422e:	f013 0f20 	tst.w	r3, #32
 8004232:	d01b      	beq.n	800426c <HAL_RTC_Init+0xa4>
    hrtc->Instance->OR &= (uint32_t)~RTC_OR_ALARMTYPE;
 8004234:	6822      	ldr	r2, [r4, #0]
 8004236:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8004238:	f023 0308 	bic.w	r3, r3, #8
 800423c:	64d3      	str	r3, [r2, #76]	; 0x4c
    hrtc->Instance->OR |= (uint32_t)(hrtc->Init.OutPutType);
 800423e:	6822      	ldr	r2, [r4, #0]
 8004240:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8004242:	69a1      	ldr	r1, [r4, #24]
 8004244:	430b      	orrs	r3, r1
 8004246:	64d3      	str	r3, [r2, #76]	; 0x4c
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8004248:	6823      	ldr	r3, [r4, #0]
 800424a:	22ff      	movs	r2, #255	; 0xff
 800424c:	625a      	str	r2, [r3, #36]	; 0x24
    hrtc->State = HAL_RTC_STATE_READY;
 800424e:	2301      	movs	r3, #1
 8004250:	7763      	strb	r3, [r4, #29]
    return HAL_OK;
 8004252:	e009      	b.n	8004268 <HAL_RTC_Init+0xa0>
    hrtc->Lock = HAL_UNLOCKED;
 8004254:	7703      	strb	r3, [r0, #28]
    HAL_RTC_MspInit(hrtc);
 8004256:	f003 f95b 	bl	8007510 <HAL_RTC_MspInit>
 800425a:	e7bc      	b.n	80041d6 <HAL_RTC_Init+0xe>
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 800425c:	6823      	ldr	r3, [r4, #0]
 800425e:	22ff      	movs	r2, #255	; 0xff
 8004260:	625a      	str	r2, [r3, #36]	; 0x24
    hrtc->State = HAL_RTC_STATE_ERROR;
 8004262:	2304      	movs	r3, #4
 8004264:	7763      	strb	r3, [r4, #29]
    return HAL_ERROR;
 8004266:	2501      	movs	r5, #1
}
 8004268:	4628      	mov	r0, r5
 800426a:	bd38      	pop	{r3, r4, r5, pc}
      if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 800426c:	4620      	mov	r0, r4
 800426e:	f7ff ff73 	bl	8004158 <HAL_RTC_WaitForSynchro>
 8004272:	2800      	cmp	r0, #0
 8004274:	d0de      	beq.n	8004234 <HAL_RTC_Init+0x6c>
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8004276:	6823      	ldr	r3, [r4, #0]
 8004278:	22ff      	movs	r2, #255	; 0xff
 800427a:	625a      	str	r2, [r3, #36]	; 0x24
        hrtc->State = HAL_RTC_STATE_ERROR;
 800427c:	2304      	movs	r3, #4
 800427e:	7763      	strb	r3, [r4, #29]
        return HAL_ERROR;
 8004280:	2501      	movs	r5, #1
 8004282:	e7f1      	b.n	8004268 <HAL_RTC_Init+0xa0>
     return HAL_ERROR;
 8004284:	2501      	movs	r5, #1
 8004286:	e7ef      	b.n	8004268 <HAL_RTC_Init+0xa0>
 8004288:	ff8fffbf 	.word	0xff8fffbf

0800428c <RTC_ByteToBcd2>:
  * @param  Value Byte to be converted
  * @retval Converted byte
  */
uint8_t RTC_ByteToBcd2(uint8_t Value)
{
  uint32_t bcdhigh = 0;
 800428c:	2300      	movs	r3, #0

  while(Value >= 10)
 800428e:	e002      	b.n	8004296 <RTC_ByteToBcd2+0xa>
  {
    bcdhigh++;
 8004290:	3301      	adds	r3, #1
    Value -= 10;
 8004292:	380a      	subs	r0, #10
 8004294:	b2c0      	uxtb	r0, r0
  while(Value >= 10)
 8004296:	2809      	cmp	r0, #9
 8004298:	d8fa      	bhi.n	8004290 <RTC_ByteToBcd2+0x4>
  }

  return  ((uint8_t)(bcdhigh << 4) | Value);
 800429a:	011b      	lsls	r3, r3, #4
 800429c:	b2db      	uxtb	r3, r3
}
 800429e:	4318      	orrs	r0, r3
 80042a0:	4770      	bx	lr
	...

080042a4 <HAL_RTC_SetTime>:
{
 80042a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(hrtc);
 80042a6:	7f03      	ldrb	r3, [r0, #28]
 80042a8:	2b01      	cmp	r3, #1
 80042aa:	d076      	beq.n	800439a <HAL_RTC_SetTime+0xf6>
 80042ac:	460d      	mov	r5, r1
 80042ae:	4604      	mov	r4, r0
 80042b0:	2301      	movs	r3, #1
 80042b2:	7703      	strb	r3, [r0, #28]
  hrtc->State = HAL_RTC_STATE_BUSY;
 80042b4:	2302      	movs	r3, #2
 80042b6:	7743      	strb	r3, [r0, #29]
  if(Format == RTC_FORMAT_BIN)
 80042b8:	2a00      	cmp	r2, #0
 80042ba:	d144      	bne.n	8004346 <HAL_RTC_SetTime+0xa2>
    if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 80042bc:	6803      	ldr	r3, [r0, #0]
 80042be:	689b      	ldr	r3, [r3, #8]
 80042c0:	f013 0f40 	tst.w	r3, #64	; 0x40
 80042c4:	d101      	bne.n	80042ca <HAL_RTC_SetTime+0x26>
      sTime->TimeFormat = 0x00;
 80042c6:	2300      	movs	r3, #0
 80042c8:	730b      	strb	r3, [r1, #12]
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16) | \
 80042ca:	7828      	ldrb	r0, [r5, #0]
 80042cc:	f7ff ffde 	bl	800428c <RTC_ByteToBcd2>
 80042d0:	0406      	lsls	r6, r0, #16
                        ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8) | \
 80042d2:	7868      	ldrb	r0, [r5, #1]
 80042d4:	f7ff ffda 	bl	800428c <RTC_ByteToBcd2>
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16) | \
 80042d8:	ea46 2600 	orr.w	r6, r6, r0, lsl #8
                        ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 80042dc:	78a8      	ldrb	r0, [r5, #2]
 80042de:	f7ff ffd5 	bl	800428c <RTC_ByteToBcd2>
                        ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8) | \
 80042e2:	4306      	orrs	r6, r0
                        (((uint32_t)sTime->TimeFormat) << 16));
 80042e4:	7b28      	ldrb	r0, [r5, #12]
    tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16) | \
 80042e6:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 80042ea:	6823      	ldr	r3, [r4, #0]
 80042ec:	22ca      	movs	r2, #202	; 0xca
 80042ee:	625a      	str	r2, [r3, #36]	; 0x24
 80042f0:	6823      	ldr	r3, [r4, #0]
 80042f2:	2253      	movs	r2, #83	; 0x53
 80042f4:	625a      	str	r2, [r3, #36]	; 0x24
  if(RTC_EnterInitMode(hrtc) != HAL_OK)
 80042f6:	4620      	mov	r0, r4
 80042f8:	f7ff ff47 	bl	800418a <RTC_EnterInitMode>
 80042fc:	4607      	mov	r7, r0
 80042fe:	2800      	cmp	r0, #0
 8004300:	d133      	bne.n	800436a <HAL_RTC_SetTime+0xc6>
    hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 8004302:	6822      	ldr	r2, [r4, #0]
 8004304:	4b26      	ldr	r3, [pc, #152]	; (80043a0 <HAL_RTC_SetTime+0xfc>)
 8004306:	4033      	ands	r3, r6
 8004308:	6013      	str	r3, [r2, #0]
    hrtc->Instance->CR &= (uint32_t)~RTC_CR_BKP;
 800430a:	6822      	ldr	r2, [r4, #0]
 800430c:	6893      	ldr	r3, [r2, #8]
 800430e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004312:	6093      	str	r3, [r2, #8]
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 8004314:	6821      	ldr	r1, [r4, #0]
 8004316:	688b      	ldr	r3, [r1, #8]
 8004318:	692a      	ldr	r2, [r5, #16]
 800431a:	6968      	ldr	r0, [r5, #20]
 800431c:	4302      	orrs	r2, r0
 800431e:	4313      	orrs	r3, r2
 8004320:	608b      	str	r3, [r1, #8]
    hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 8004322:	6822      	ldr	r2, [r4, #0]
 8004324:	68d3      	ldr	r3, [r2, #12]
 8004326:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800432a:	60d3      	str	r3, [r2, #12]
    if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 800432c:	6823      	ldr	r3, [r4, #0]
 800432e:	689b      	ldr	r3, [r3, #8]
 8004330:	f013 0f20 	tst.w	r3, #32
 8004334:	d023      	beq.n	800437e <HAL_RTC_SetTime+0xda>
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8004336:	6823      	ldr	r3, [r4, #0]
 8004338:	22ff      	movs	r2, #255	; 0xff
 800433a:	625a      	str	r2, [r3, #36]	; 0x24
   hrtc->State = HAL_RTC_STATE_READY;
 800433c:	2301      	movs	r3, #1
 800433e:	7763      	strb	r3, [r4, #29]
   __HAL_UNLOCK(hrtc);
 8004340:	2300      	movs	r3, #0
 8004342:	7723      	strb	r3, [r4, #28]
   return HAL_OK;
 8004344:	e019      	b.n	800437a <HAL_RTC_SetTime+0xd6>
    if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 8004346:	6803      	ldr	r3, [r0, #0]
 8004348:	689b      	ldr	r3, [r3, #8]
 800434a:	f013 0f40 	tst.w	r3, #64	; 0x40
 800434e:	d101      	bne.n	8004354 <HAL_RTC_SetTime+0xb0>
      sTime->TimeFormat = 0x00;
 8004350:	2300      	movs	r3, #0
 8004352:	730b      	strb	r3, [r1, #12]
    tmpreg = (((uint32_t)(sTime->Hours) << 16) | \
 8004354:	7828      	ldrb	r0, [r5, #0]
              ((uint32_t)(sTime->Minutes) << 8) | \
 8004356:	786e      	ldrb	r6, [r5, #1]
 8004358:	0236      	lsls	r6, r6, #8
    tmpreg = (((uint32_t)(sTime->Hours) << 16) | \
 800435a:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
              ((uint32_t)sTime->Seconds) | \
 800435e:	78a8      	ldrb	r0, [r5, #2]
              ((uint32_t)(sTime->Minutes) << 8) | \
 8004360:	4306      	orrs	r6, r0
              ((uint32_t)(sTime->TimeFormat) << 16));
 8004362:	7b28      	ldrb	r0, [r5, #12]
    tmpreg = (((uint32_t)(sTime->Hours) << 16) | \
 8004364:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8004368:	e7bf      	b.n	80042ea <HAL_RTC_SetTime+0x46>
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 800436a:	6823      	ldr	r3, [r4, #0]
 800436c:	22ff      	movs	r2, #255	; 0xff
 800436e:	625a      	str	r2, [r3, #36]	; 0x24
    hrtc->State = HAL_RTC_STATE_ERROR;
 8004370:	2304      	movs	r3, #4
 8004372:	7763      	strb	r3, [r4, #29]
    __HAL_UNLOCK(hrtc);
 8004374:	2300      	movs	r3, #0
 8004376:	7723      	strb	r3, [r4, #28]
    return HAL_ERROR;
 8004378:	2701      	movs	r7, #1
}
 800437a:	4638      	mov	r0, r7
 800437c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 800437e:	4620      	mov	r0, r4
 8004380:	f7ff feea 	bl	8004158 <HAL_RTC_WaitForSynchro>
 8004384:	2800      	cmp	r0, #0
 8004386:	d0d6      	beq.n	8004336 <HAL_RTC_SetTime+0x92>
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8004388:	6823      	ldr	r3, [r4, #0]
 800438a:	22ff      	movs	r2, #255	; 0xff
 800438c:	625a      	str	r2, [r3, #36]	; 0x24
        hrtc->State = HAL_RTC_STATE_ERROR;
 800438e:	2304      	movs	r3, #4
 8004390:	7763      	strb	r3, [r4, #29]
        __HAL_UNLOCK(hrtc);
 8004392:	2300      	movs	r3, #0
 8004394:	7723      	strb	r3, [r4, #28]
        return HAL_ERROR;
 8004396:	2701      	movs	r7, #1
 8004398:	e7ef      	b.n	800437a <HAL_RTC_SetTime+0xd6>
  __HAL_LOCK(hrtc);
 800439a:	2702      	movs	r7, #2
 800439c:	e7ed      	b.n	800437a <HAL_RTC_SetTime+0xd6>
 800439e:	bf00      	nop
 80043a0:	007f7f7f 	.word	0x007f7f7f

080043a4 <HAL_RTC_SetDate>:
{
 80043a4:	b570      	push	{r4, r5, r6, lr}
 __HAL_LOCK(hrtc);
 80043a6:	7f03      	ldrb	r3, [r0, #28]
 80043a8:	2b01      	cmp	r3, #1
 80043aa:	d064      	beq.n	8004476 <HAL_RTC_SetDate+0xd2>
 80043ac:	2301      	movs	r3, #1
 80043ae:	7703      	strb	r3, [r0, #28]
  hrtc->State = HAL_RTC_STATE_BUSY;
 80043b0:	2302      	movs	r3, #2
 80043b2:	7743      	strb	r3, [r0, #29]
  if((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
 80043b4:	b93a      	cbnz	r2, 80043c6 <HAL_RTC_SetDate+0x22>
 80043b6:	784b      	ldrb	r3, [r1, #1]
 80043b8:	f013 0f10 	tst.w	r3, #16
 80043bc:	d003      	beq.n	80043c6 <HAL_RTC_SetDate+0x22>
    sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
 80043be:	f003 03ef 	and.w	r3, r3, #239	; 0xef
 80043c2:	330a      	adds	r3, #10
 80043c4:	704b      	strb	r3, [r1, #1]
 80043c6:	460e      	mov	r6, r1
 80043c8:	4604      	mov	r4, r0
  if(Format == RTC_FORMAT_BIN)
 80043ca:	2a00      	cmp	r2, #0
 80043cc:	d130      	bne.n	8004430 <HAL_RTC_SetDate+0x8c>
   datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16) | \
 80043ce:	78c8      	ldrb	r0, [r1, #3]
 80043d0:	f7ff ff5c 	bl	800428c <RTC_ByteToBcd2>
 80043d4:	0405      	lsls	r5, r0, #16
                 ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8) | \
 80043d6:	7870      	ldrb	r0, [r6, #1]
 80043d8:	f7ff ff58 	bl	800428c <RTC_ByteToBcd2>
   datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16) | \
 80043dc:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
                 ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 80043e0:	78b0      	ldrb	r0, [r6, #2]
 80043e2:	f7ff ff53 	bl	800428c <RTC_ByteToBcd2>
                 ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8) | \
 80043e6:	4305      	orrs	r5, r0
                 ((uint32_t)sDate->WeekDay << 13));
 80043e8:	7830      	ldrb	r0, [r6, #0]
   datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16) | \
 80043ea:	ea45 3540 	orr.w	r5, r5, r0, lsl #13
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 80043ee:	6823      	ldr	r3, [r4, #0]
 80043f0:	22ca      	movs	r2, #202	; 0xca
 80043f2:	625a      	str	r2, [r3, #36]	; 0x24
 80043f4:	6823      	ldr	r3, [r4, #0]
 80043f6:	2253      	movs	r2, #83	; 0x53
 80043f8:	625a      	str	r2, [r3, #36]	; 0x24
  if(RTC_EnterInitMode(hrtc) != HAL_OK)
 80043fa:	4620      	mov	r0, r4
 80043fc:	f7ff fec5 	bl	800418a <RTC_EnterInitMode>
 8004400:	4606      	mov	r6, r0
 8004402:	bb00      	cbnz	r0, 8004446 <HAL_RTC_SetDate+0xa2>
    hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
 8004404:	6822      	ldr	r2, [r4, #0]
 8004406:	4b1d      	ldr	r3, [pc, #116]	; (800447c <HAL_RTC_SetDate+0xd8>)
 8004408:	402b      	ands	r3, r5
 800440a:	6053      	str	r3, [r2, #4]
    hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 800440c:	6822      	ldr	r2, [r4, #0]
 800440e:	68d3      	ldr	r3, [r2, #12]
 8004410:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004414:	60d3      	str	r3, [r2, #12]
    if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 8004416:	6823      	ldr	r3, [r4, #0]
 8004418:	689b      	ldr	r3, [r3, #8]
 800441a:	f013 0f20 	tst.w	r3, #32
 800441e:	d01c      	beq.n	800445a <HAL_RTC_SetDate+0xb6>
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8004420:	6823      	ldr	r3, [r4, #0]
 8004422:	22ff      	movs	r2, #255	; 0xff
 8004424:	625a      	str	r2, [r3, #36]	; 0x24
    hrtc->State = HAL_RTC_STATE_READY ;
 8004426:	2301      	movs	r3, #1
 8004428:	7763      	strb	r3, [r4, #29]
    __HAL_UNLOCK(hrtc);
 800442a:	2300      	movs	r3, #0
 800442c:	7723      	strb	r3, [r4, #28]
    return HAL_OK;
 800442e:	e012      	b.n	8004456 <HAL_RTC_SetDate+0xb2>
    datetmpreg = ((((uint32_t)sDate->Year) << 16) | \
 8004430:	78c8      	ldrb	r0, [r1, #3]
                  (((uint32_t)sDate->Month) << 8) | \
 8004432:	784d      	ldrb	r5, [r1, #1]
 8004434:	022d      	lsls	r5, r5, #8
    datetmpreg = ((((uint32_t)sDate->Year) << 16) | \
 8004436:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
                  ((uint32_t)sDate->Date) | \
 800443a:	7888      	ldrb	r0, [r1, #2]
                  (((uint32_t)sDate->Month) << 8) | \
 800443c:	4305      	orrs	r5, r0
                  (((uint32_t)sDate->WeekDay) << 13));
 800443e:	7808      	ldrb	r0, [r1, #0]
    datetmpreg = ((((uint32_t)sDate->Year) << 16) | \
 8004440:	ea45 3540 	orr.w	r5, r5, r0, lsl #13
 8004444:	e7d3      	b.n	80043ee <HAL_RTC_SetDate+0x4a>
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8004446:	6823      	ldr	r3, [r4, #0]
 8004448:	22ff      	movs	r2, #255	; 0xff
 800444a:	625a      	str	r2, [r3, #36]	; 0x24
    hrtc->State = HAL_RTC_STATE_ERROR;
 800444c:	2304      	movs	r3, #4
 800444e:	7763      	strb	r3, [r4, #29]
    __HAL_UNLOCK(hrtc);
 8004450:	2300      	movs	r3, #0
 8004452:	7723      	strb	r3, [r4, #28]
    return HAL_ERROR;
 8004454:	2601      	movs	r6, #1
}
 8004456:	4630      	mov	r0, r6
 8004458:	bd70      	pop	{r4, r5, r6, pc}
      if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 800445a:	4620      	mov	r0, r4
 800445c:	f7ff fe7c 	bl	8004158 <HAL_RTC_WaitForSynchro>
 8004460:	2800      	cmp	r0, #0
 8004462:	d0dd      	beq.n	8004420 <HAL_RTC_SetDate+0x7c>
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8004464:	6823      	ldr	r3, [r4, #0]
 8004466:	22ff      	movs	r2, #255	; 0xff
 8004468:	625a      	str	r2, [r3, #36]	; 0x24
        hrtc->State = HAL_RTC_STATE_ERROR;
 800446a:	2304      	movs	r3, #4
 800446c:	7763      	strb	r3, [r4, #29]
        __HAL_UNLOCK(hrtc);
 800446e:	2300      	movs	r3, #0
 8004470:	7723      	strb	r3, [r4, #28]
        return HAL_ERROR;
 8004472:	2601      	movs	r6, #1
 8004474:	e7ef      	b.n	8004456 <HAL_RTC_SetDate+0xb2>
 __HAL_LOCK(hrtc);
 8004476:	2602      	movs	r6, #2
 8004478:	e7ed      	b.n	8004456 <HAL_RTC_SetDate+0xb2>
 800447a:	bf00      	nop
 800447c:	00ffff3f 	.word	0x00ffff3f

08004480 <HAL_RTC_SetAlarm_IT>:
{
 8004480:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004482:	b083      	sub	sp, #12
  __IO uint32_t count = RTC_TIMEOUT_VALUE  * (SystemCoreClock / 32U / 1000U) ;
 8004484:	4b63      	ldr	r3, [pc, #396]	; (8004614 <HAL_RTC_SetAlarm_IT+0x194>)
 8004486:	681b      	ldr	r3, [r3, #0]
 8004488:	4c63      	ldr	r4, [pc, #396]	; (8004618 <HAL_RTC_SetAlarm_IT+0x198>)
 800448a:	fba4 4303 	umull	r4, r3, r4, r3
 800448e:	0adb      	lsrs	r3, r3, #11
 8004490:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8004494:	fb06 f303 	mul.w	r3, r6, r3
 8004498:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hrtc);
 800449a:	7f03      	ldrb	r3, [r0, #28]
 800449c:	2b01      	cmp	r3, #1
 800449e:	f000 80b6 	beq.w	800460e <HAL_RTC_SetAlarm_IT+0x18e>
 80044a2:	460d      	mov	r5, r1
 80044a4:	4604      	mov	r4, r0
 80044a6:	2301      	movs	r3, #1
 80044a8:	7703      	strb	r3, [r0, #28]
  hrtc->State = HAL_RTC_STATE_BUSY;
 80044aa:	2302      	movs	r3, #2
 80044ac:	7743      	strb	r3, [r0, #29]
  if(Format == RTC_FORMAT_BIN)
 80044ae:	2a00      	cmp	r2, #0
 80044b0:	d161      	bne.n	8004576 <HAL_RTC_SetAlarm_IT+0xf6>
    if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 80044b2:	6803      	ldr	r3, [r0, #0]
 80044b4:	689b      	ldr	r3, [r3, #8]
 80044b6:	f013 0f40 	tst.w	r3, #64	; 0x40
 80044ba:	d101      	bne.n	80044c0 <HAL_RTC_SetAlarm_IT+0x40>
      sAlarm->AlarmTime.TimeFormat = 0x00U;
 80044bc:	2300      	movs	r3, #0
 80044be:	730b      	strb	r3, [r1, #12]
    if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 80044c0:	6a2f      	ldr	r7, [r5, #32]
    tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
 80044c2:	7828      	ldrb	r0, [r5, #0]
 80044c4:	f7ff fee2 	bl	800428c <RTC_ByteToBcd2>
 80044c8:	0406      	lsls	r6, r0, #16
              ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 80044ca:	7868      	ldrb	r0, [r5, #1]
 80044cc:	f7ff fede 	bl	800428c <RTC_ByteToBcd2>
    tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
 80044d0:	ea46 2600 	orr.w	r6, r6, r0, lsl #8
              ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 80044d4:	78a8      	ldrb	r0, [r5, #2]
 80044d6:	f7ff fed9 	bl	800428c <RTC_ByteToBcd2>
              ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 80044da:	4306      	orrs	r6, r0
              ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 80044dc:	7b28      	ldrb	r0, [r5, #12]
              ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 80044de:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
              ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 80044e2:	f895 0024 	ldrb.w	r0, [r5, #36]	; 0x24
 80044e6:	f7ff fed1 	bl	800428c <RTC_ByteToBcd2>
              ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 80044ea:	ea46 6000 	orr.w	r0, r6, r0, lsl #24
              ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 80044ee:	4338      	orrs	r0, r7
              ((uint32_t)sAlarm->AlarmMask));
 80044f0:	69ab      	ldr	r3, [r5, #24]
    tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
 80044f2:	4318      	orrs	r0, r3
  subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmSubSecondMask));
 80044f4:	6869      	ldr	r1, [r5, #4]
 80044f6:	69eb      	ldr	r3, [r5, #28]
 80044f8:	4319      	orrs	r1, r3
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 80044fa:	6823      	ldr	r3, [r4, #0]
 80044fc:	22ca      	movs	r2, #202	; 0xca
 80044fe:	625a      	str	r2, [r3, #36]	; 0x24
 8004500:	6823      	ldr	r3, [r4, #0]
 8004502:	2253      	movs	r2, #83	; 0x53
 8004504:	625a      	str	r2, [r3, #36]	; 0x24
  if(sAlarm->Alarm == RTC_ALARM_A)
 8004506:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8004508:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800450c:	d04d      	beq.n	80045aa <HAL_RTC_SetAlarm_IT+0x12a>
    __HAL_RTC_ALARMB_DISABLE(hrtc);
 800450e:	6822      	ldr	r2, [r4, #0]
 8004510:	6893      	ldr	r3, [r2, #8]
 8004512:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8004516:	6093      	str	r3, [r2, #8]
    __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 8004518:	6822      	ldr	r2, [r4, #0]
 800451a:	68d3      	ldr	r3, [r2, #12]
 800451c:	b2db      	uxtb	r3, r3
 800451e:	f463 7320 	orn	r3, r3, #640	; 0x280
 8004522:	60d3      	str	r3, [r2, #12]
      if (count-- == 0U)
 8004524:	9b01      	ldr	r3, [sp, #4]
 8004526:	1e5a      	subs	r2, r3, #1
 8004528:	9201      	str	r2, [sp, #4]
 800452a:	2b00      	cmp	r3, #0
 800452c:	d067      	beq.n	80045fe <HAL_RTC_SetAlarm_IT+0x17e>
    while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET);
 800452e:	6823      	ldr	r3, [r4, #0]
 8004530:	68da      	ldr	r2, [r3, #12]
 8004532:	f012 0f02 	tst.w	r2, #2
 8004536:	d0f5      	beq.n	8004524 <HAL_RTC_SetAlarm_IT+0xa4>
    hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
 8004538:	6218      	str	r0, [r3, #32]
    hrtc->Instance->ALRMBSSR = subsecondtmpreg;
 800453a:	6823      	ldr	r3, [r4, #0]
 800453c:	6499      	str	r1, [r3, #72]	; 0x48
    __HAL_RTC_ALARMB_ENABLE(hrtc);
 800453e:	6822      	ldr	r2, [r4, #0]
 8004540:	6893      	ldr	r3, [r2, #8]
 8004542:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004546:	6093      	str	r3, [r2, #8]
    __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRB);
 8004548:	6822      	ldr	r2, [r4, #0]
 800454a:	6893      	ldr	r3, [r2, #8]
 800454c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8004550:	6093      	str	r3, [r2, #8]
  __HAL_RTC_ALARM_EXTI_ENABLE_IT();
 8004552:	4b32      	ldr	r3, [pc, #200]	; (800461c <HAL_RTC_SetAlarm_IT+0x19c>)
 8004554:	681a      	ldr	r2, [r3, #0]
 8004556:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800455a:	601a      	str	r2, [r3, #0]
  EXTI->RTSR |= RTC_EXTI_LINE_ALARM_EVENT;
 800455c:	689a      	ldr	r2, [r3, #8]
 800455e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8004562:	609a      	str	r2, [r3, #8]
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 8004564:	6823      	ldr	r3, [r4, #0]
 8004566:	22ff      	movs	r2, #255	; 0xff
 8004568:	625a      	str	r2, [r3, #36]	; 0x24
  hrtc->State = HAL_RTC_STATE_READY;
 800456a:	2301      	movs	r3, #1
 800456c:	7763      	strb	r3, [r4, #29]
  __HAL_UNLOCK(hrtc);
 800456e:	2000      	movs	r0, #0
 8004570:	7720      	strb	r0, [r4, #28]
}
 8004572:	b003      	add	sp, #12
 8004574:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 8004576:	6803      	ldr	r3, [r0, #0]
 8004578:	689b      	ldr	r3, [r3, #8]
 800457a:	f013 0f40 	tst.w	r3, #64	; 0x40
 800457e:	d101      	bne.n	8004584 <HAL_RTC_SetAlarm_IT+0x104>
      sAlarm->AlarmTime.TimeFormat = 0x00U;
 8004580:	2300      	movs	r3, #0
 8004582:	730b      	strb	r3, [r1, #12]
    if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 8004584:	6a2a      	ldr	r2, [r5, #32]
    tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
 8004586:	7829      	ldrb	r1, [r5, #0]
              ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 8004588:	786b      	ldrb	r3, [r5, #1]
 800458a:	021b      	lsls	r3, r3, #8
    tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
 800458c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
              ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 8004590:	78a9      	ldrb	r1, [r5, #2]
              ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 8004592:	430b      	orrs	r3, r1
              ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 8004594:	7b29      	ldrb	r1, [r5, #12]
              ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 8004596:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
              ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 800459a:	f895 1024 	ldrb.w	r1, [r5, #36]	; 0x24
              ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 800459e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
              ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 80045a2:	4313      	orrs	r3, r2
              ((uint32_t)sAlarm->AlarmMask));
 80045a4:	69a8      	ldr	r0, [r5, #24]
    tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
 80045a6:	4318      	orrs	r0, r3
 80045a8:	e7a4      	b.n	80044f4 <HAL_RTC_SetAlarm_IT+0x74>
    __HAL_RTC_ALARMA_DISABLE(hrtc);
 80045aa:	6822      	ldr	r2, [r4, #0]
 80045ac:	6893      	ldr	r3, [r2, #8]
 80045ae:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80045b2:	6093      	str	r3, [r2, #8]
    __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 80045b4:	6822      	ldr	r2, [r4, #0]
 80045b6:	68d3      	ldr	r3, [r2, #12]
 80045b8:	b2db      	uxtb	r3, r3
 80045ba:	f463 73c0 	orn	r3, r3, #384	; 0x180
 80045be:	60d3      	str	r3, [r2, #12]
      if (count-- == 0U)
 80045c0:	9b01      	ldr	r3, [sp, #4]
 80045c2:	1e5a      	subs	r2, r3, #1
 80045c4:	9201      	str	r2, [sp, #4]
 80045c6:	b193      	cbz	r3, 80045ee <HAL_RTC_SetAlarm_IT+0x16e>
    while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET);
 80045c8:	6823      	ldr	r3, [r4, #0]
 80045ca:	68da      	ldr	r2, [r3, #12]
 80045cc:	f012 0f01 	tst.w	r2, #1
 80045d0:	d0f6      	beq.n	80045c0 <HAL_RTC_SetAlarm_IT+0x140>
    hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
 80045d2:	61d8      	str	r0, [r3, #28]
    hrtc->Instance->ALRMASSR = subsecondtmpreg;
 80045d4:	6823      	ldr	r3, [r4, #0]
 80045d6:	6459      	str	r1, [r3, #68]	; 0x44
    __HAL_RTC_ALARMA_ENABLE(hrtc);
 80045d8:	6822      	ldr	r2, [r4, #0]
 80045da:	6893      	ldr	r3, [r2, #8]
 80045dc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80045e0:	6093      	str	r3, [r2, #8]
    __HAL_RTC_ALARM_ENABLE_IT(hrtc,RTC_IT_ALRA);
 80045e2:	6822      	ldr	r2, [r4, #0]
 80045e4:	6893      	ldr	r3, [r2, #8]
 80045e6:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80045ea:	6093      	str	r3, [r2, #8]
 80045ec:	e7b1      	b.n	8004552 <HAL_RTC_SetAlarm_IT+0xd2>
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 80045ee:	6823      	ldr	r3, [r4, #0]
 80045f0:	22ff      	movs	r2, #255	; 0xff
 80045f2:	625a      	str	r2, [r3, #36]	; 0x24
        hrtc->State = HAL_RTC_STATE_TIMEOUT;
 80045f4:	2003      	movs	r0, #3
 80045f6:	7760      	strb	r0, [r4, #29]
        __HAL_UNLOCK(hrtc);
 80045f8:	2300      	movs	r3, #0
 80045fa:	7723      	strb	r3, [r4, #28]
        return HAL_TIMEOUT;
 80045fc:	e7b9      	b.n	8004572 <HAL_RTC_SetAlarm_IT+0xf2>
        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 80045fe:	6823      	ldr	r3, [r4, #0]
 8004600:	22ff      	movs	r2, #255	; 0xff
 8004602:	625a      	str	r2, [r3, #36]	; 0x24
        hrtc->State = HAL_RTC_STATE_TIMEOUT;
 8004604:	2003      	movs	r0, #3
 8004606:	7760      	strb	r0, [r4, #29]
        __HAL_UNLOCK(hrtc);
 8004608:	2300      	movs	r3, #0
 800460a:	7723      	strb	r3, [r4, #28]
        return HAL_TIMEOUT;
 800460c:	e7b1      	b.n	8004572 <HAL_RTC_SetAlarm_IT+0xf2>
  __HAL_LOCK(hrtc);
 800460e:	2002      	movs	r0, #2
 8004610:	e7af      	b.n	8004572 <HAL_RTC_SetAlarm_IT+0xf2>
 8004612:	bf00      	nop
 8004614:	20000118 	.word	0x20000118
 8004618:	10624dd3 	.word	0x10624dd3
 800461c:	40013c00 	.word	0x40013c00

08004620 <HAL_RTCEx_AlarmBEventCallback>:
  UNUSED(hrtc);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_RTC_AlarmBEventCallback could be implemented in the user file
   */
}
 8004620:	4770      	bx	lr

08004622 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8004622:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8004624:	e852 3f00 	ldrex	r3, [r2]
 8004628:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800462c:	e842 3100 	strex	r1, r3, [r2]
 8004630:	2900      	cmp	r1, #0
 8004632:	d1f6      	bne.n	8004622 <UART_EndRxTransfer>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8004634:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8004636:	f102 0308 	add.w	r3, r2, #8
 800463a:	e853 3f00 	ldrex	r3, [r3]
 800463e:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8004642:	3208      	adds	r2, #8
 8004644:	e842 3100 	strex	r1, r3, [r2]
 8004648:	2900      	cmp	r1, #0
 800464a:	d1f3      	bne.n	8004634 <UART_EndRxTransfer+0x12>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800464c:	6e03      	ldr	r3, [r0, #96]	; 0x60
 800464e:	2b01      	cmp	r3, #1
 8004650:	d005      	beq.n	800465e <UART_EndRxTransfer+0x3c>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8004652:	2320      	movs	r3, #32
 8004654:	67c3      	str	r3, [r0, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8004656:	2300      	movs	r3, #0
 8004658:	6603      	str	r3, [r0, #96]	; 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 800465a:	6643      	str	r3, [r0, #100]	; 0x64
}
 800465c:	4770      	bx	lr
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800465e:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8004660:	e852 3f00 	ldrex	r3, [r2]
 8004664:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8004668:	e842 3100 	strex	r1, r3, [r2]
 800466c:	2900      	cmp	r1, #0
 800466e:	d1f6      	bne.n	800465e <UART_EndRxTransfer+0x3c>
 8004670:	e7ef      	b.n	8004652 <UART_EndRxTransfer+0x30>

08004672 <UART_TxISR_8BIT>:
  * @retval None
  */
static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
{
  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8004672:	6f83      	ldr	r3, [r0, #120]	; 0x78
 8004674:	2b21      	cmp	r3, #33	; 0x21
 8004676:	d000      	beq.n	800467a <UART_TxISR_8BIT+0x8>
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
      huart->pTxBuffPtr++;
      huart->TxXferCount--;
    }
  }
}
 8004678:	4770      	bx	lr
    if (huart->TxXferCount == 0U)
 800467a:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 800467e:	b29b      	uxth	r3, r3
 8004680:	b993      	cbnz	r3, 80046a8 <UART_TxISR_8BIT+0x36>
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 8004682:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8004684:	e852 3f00 	ldrex	r3, [r2]
 8004688:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800468c:	e842 3100 	strex	r1, r3, [r2]
 8004690:	2900      	cmp	r1, #0
 8004692:	d1f6      	bne.n	8004682 <UART_TxISR_8BIT+0x10>
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8004694:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8004696:	e852 3f00 	ldrex	r3, [r2]
 800469a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800469e:	e842 3100 	strex	r1, r3, [r2]
 80046a2:	2900      	cmp	r1, #0
 80046a4:	d1f6      	bne.n	8004694 <UART_TxISR_8BIT+0x22>
 80046a6:	4770      	bx	lr
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 80046a8:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80046aa:	781a      	ldrb	r2, [r3, #0]
 80046ac:	6803      	ldr	r3, [r0, #0]
 80046ae:	629a      	str	r2, [r3, #40]	; 0x28
      huart->pTxBuffPtr++;
 80046b0:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80046b2:	3301      	adds	r3, #1
 80046b4:	64c3      	str	r3, [r0, #76]	; 0x4c
      huart->TxXferCount--;
 80046b6:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 80046ba:	3b01      	subs	r3, #1
 80046bc:	b29b      	uxth	r3, r3
 80046be:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
}
 80046c2:	e7d9      	b.n	8004678 <UART_TxISR_8BIT+0x6>

080046c4 <UART_TxISR_16BIT>:
static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
{
  const uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 80046c4:	6f83      	ldr	r3, [r0, #120]	; 0x78
 80046c6:	2b21      	cmp	r3, #33	; 0x21
 80046c8:	d000      	beq.n	80046cc <UART_TxISR_16BIT+0x8>
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
      huart->pTxBuffPtr += 2U;
      huart->TxXferCount--;
    }
  }
}
 80046ca:	4770      	bx	lr
    if (huart->TxXferCount == 0U)
 80046cc:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 80046d0:	b29b      	uxth	r3, r3
 80046d2:	b993      	cbnz	r3, 80046fa <UART_TxISR_16BIT+0x36>
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 80046d4:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80046d6:	e852 3f00 	ldrex	r3, [r2]
 80046da:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80046de:	e842 3100 	strex	r1, r3, [r2]
 80046e2:	2900      	cmp	r1, #0
 80046e4:	d1f6      	bne.n	80046d4 <UART_TxISR_16BIT+0x10>
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 80046e6:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80046e8:	e852 3f00 	ldrex	r3, [r2]
 80046ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80046f0:	e842 3100 	strex	r1, r3, [r2]
 80046f4:	2900      	cmp	r1, #0
 80046f6:	d1f6      	bne.n	80046e6 <UART_TxISR_16BIT+0x22>
 80046f8:	4770      	bx	lr
      tmp = (const uint16_t *) huart->pTxBuffPtr;
 80046fa:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 80046fc:	881b      	ldrh	r3, [r3, #0]
 80046fe:	6802      	ldr	r2, [r0, #0]
 8004700:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004704:	6293      	str	r3, [r2, #40]	; 0x28
      huart->pTxBuffPtr += 2U;
 8004706:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8004708:	3302      	adds	r3, #2
 800470a:	64c3      	str	r3, [r0, #76]	; 0x4c
      huart->TxXferCount--;
 800470c:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8004710:	3b01      	subs	r3, #1
 8004712:	b29b      	uxth	r3, r3
 8004714:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
}
 8004718:	e7d7      	b.n	80046ca <UART_TxISR_16BIT+0x6>
	...

0800471c <HAL_UART_Transmit_IT>:
  if (huart->gState == HAL_UART_STATE_READY)
 800471c:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800471e:	2b20      	cmp	r3, #32
 8004720:	d132      	bne.n	8004788 <HAL_UART_Transmit_IT+0x6c>
    if ((pData == NULL) || (Size == 0U))
 8004722:	fab2 f382 	clz	r3, r2
 8004726:	095b      	lsrs	r3, r3, #5
 8004728:	2900      	cmp	r1, #0
 800472a:	bf08      	it	eq
 800472c:	2301      	moveq	r3, #1
 800472e:	bb6b      	cbnz	r3, 800478c <HAL_UART_Transmit_IT+0x70>
    __HAL_LOCK(huart);
 8004730:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 8004734:	2b01      	cmp	r3, #1
 8004736:	d02b      	beq.n	8004790 <HAL_UART_Transmit_IT+0x74>
 8004738:	2301      	movs	r3, #1
 800473a:	f880 3074 	strb.w	r3, [r0, #116]	; 0x74
    huart->pTxBuffPtr  = pData;
 800473e:	64c1      	str	r1, [r0, #76]	; 0x4c
    huart->TxXferSize  = Size;
 8004740:	f8a0 2050 	strh.w	r2, [r0, #80]	; 0x50
    huart->TxXferCount = Size;
 8004744:	f8a0 2052 	strh.w	r2, [r0, #82]	; 0x52
    huart->TxISR       = NULL;
 8004748:	2300      	movs	r3, #0
 800474a:	6683      	str	r3, [r0, #104]	; 0x68
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800474c:	f8c0 3080 	str.w	r3, [r0, #128]	; 0x80
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8004750:	2321      	movs	r3, #33	; 0x21
 8004752:	6783      	str	r3, [r0, #120]	; 0x78
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8004754:	6883      	ldr	r3, [r0, #8]
 8004756:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800475a:	d00f      	beq.n	800477c <HAL_UART_Transmit_IT+0x60>
      huart->TxISR = UART_TxISR_8BIT;
 800475c:	4b0d      	ldr	r3, [pc, #52]	; (8004794 <HAL_UART_Transmit_IT+0x78>)
 800475e:	6683      	str	r3, [r0, #104]	; 0x68
    __HAL_UNLOCK(huart);
 8004760:	2300      	movs	r3, #0
 8004762:	f880 3074 	strb.w	r3, [r0, #116]	; 0x74
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 8004766:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8004768:	e852 3f00 	ldrex	r3, [r2]
 800476c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8004770:	e842 3100 	strex	r1, r3, [r2]
 8004774:	2900      	cmp	r1, #0
 8004776:	d1f6      	bne.n	8004766 <HAL_UART_Transmit_IT+0x4a>
    return HAL_OK;
 8004778:	2000      	movs	r0, #0
 800477a:	4770      	bx	lr
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800477c:	6903      	ldr	r3, [r0, #16]
 800477e:	2b00      	cmp	r3, #0
 8004780:	d1ec      	bne.n	800475c <HAL_UART_Transmit_IT+0x40>
      huart->TxISR = UART_TxISR_16BIT;
 8004782:	4b05      	ldr	r3, [pc, #20]	; (8004798 <HAL_UART_Transmit_IT+0x7c>)
 8004784:	6683      	str	r3, [r0, #104]	; 0x68
 8004786:	e7eb      	b.n	8004760 <HAL_UART_Transmit_IT+0x44>
    return HAL_BUSY;
 8004788:	2002      	movs	r0, #2
 800478a:	4770      	bx	lr
      return HAL_ERROR;
 800478c:	2001      	movs	r0, #1
 800478e:	4770      	bx	lr
    __HAL_LOCK(huart);
 8004790:	2002      	movs	r0, #2
}
 8004792:	4770      	bx	lr
 8004794:	08004673 	.word	0x08004673
 8004798:	080046c5 	.word	0x080046c5

0800479c <HAL_UART_TxCpltCallback>:
}
 800479c:	4770      	bx	lr

0800479e <UART_EndTransmit_IT>:
  * @param  huart pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 800479e:	b508      	push	{r3, lr}
  /* Disable the UART Transmit Complete Interrupt */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 80047a0:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80047a2:	e852 3f00 	ldrex	r3, [r2]
 80047a6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80047aa:	e842 3100 	strex	r1, r3, [r2]
 80047ae:	2900      	cmp	r1, #0
 80047b0:	d1f6      	bne.n	80047a0 <UART_EndTransmit_IT+0x2>

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 80047b2:	2320      	movs	r3, #32
 80047b4:	6783      	str	r3, [r0, #120]	; 0x78

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 80047b6:	2300      	movs	r3, #0
 80047b8:	6683      	str	r3, [r0, #104]	; 0x68
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 80047ba:	f7ff ffef 	bl	800479c <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80047be:	bd08      	pop	{r3, pc}

080047c0 <HAL_UART_ErrorCallback>:
}
 80047c0:	4770      	bx	lr

080047c2 <UART_DMAAbortOnError>:
{
 80047c2:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 80047c4:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0U;
 80047c6:	2300      	movs	r3, #0
 80047c8:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
  huart->TxXferCount = 0U;
 80047cc:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
  HAL_UART_ErrorCallback(huart);
 80047d0:	f7ff fff6 	bl	80047c0 <HAL_UART_ErrorCallback>
}
 80047d4:	bd08      	pop	{r3, pc}

080047d6 <HAL_UARTEx_RxEventCallback>:
}
 80047d6:	4770      	bx	lr

080047d8 <HAL_UART_IRQHandler>:
{
 80047d8:	b538      	push	{r3, r4, r5, lr}
 80047da:	4604      	mov	r4, r0
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 80047dc:	6801      	ldr	r1, [r0, #0]
 80047de:	69cb      	ldr	r3, [r1, #28]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 80047e0:	680d      	ldr	r5, [r1, #0]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 80047e2:	6888      	ldr	r0, [r1, #8]
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 80047e4:	f640 020f 	movw	r2, #2063	; 0x80f
  if (errorflags == 0U)
 80047e8:	401a      	ands	r2, r3
 80047ea:	d10c      	bne.n	8004806 <HAL_UART_IRQHandler+0x2e>
    if (((isrflags & USART_ISR_RXNE) != 0U)
 80047ec:	f013 0f20 	tst.w	r3, #32
 80047f0:	d009      	beq.n	8004806 <HAL_UART_IRQHandler+0x2e>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 80047f2:	f015 0f20 	tst.w	r5, #32
 80047f6:	d006      	beq.n	8004806 <HAL_UART_IRQHandler+0x2e>
      if (huart->RxISR != NULL)
 80047f8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80047fa:	2b00      	cmp	r3, #0
 80047fc:	f000 8140 	beq.w	8004a80 <HAL_UART_IRQHandler+0x2a8>
        huart->RxISR(huart);
 8004800:	4620      	mov	r0, r4
 8004802:	4798      	blx	r3
 8004804:	e13c      	b.n	8004a80 <HAL_UART_IRQHandler+0x2a8>
  if ((errorflags != 0U)
 8004806:	2a00      	cmp	r2, #0
 8004808:	f000 8098 	beq.w	800493c <HAL_UART_IRQHandler+0x164>
      && (((cr3its & USART_CR3_EIE) != 0U)
 800480c:	f010 0001 	ands.w	r0, r0, #1
 8004810:	d103      	bne.n	800481a <HAL_UART_IRQHandler+0x42>
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 8004812:	4a9e      	ldr	r2, [pc, #632]	; (8004a8c <HAL_UART_IRQHandler+0x2b4>)
 8004814:	4215      	tst	r5, r2
 8004816:	f000 8091 	beq.w	800493c <HAL_UART_IRQHandler+0x164>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 800481a:	f013 0f01 	tst.w	r3, #1
 800481e:	d00a      	beq.n	8004836 <HAL_UART_IRQHandler+0x5e>
 8004820:	f415 7f80 	tst.w	r5, #256	; 0x100
 8004824:	d007      	beq.n	8004836 <HAL_UART_IRQHandler+0x5e>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8004826:	2201      	movs	r2, #1
 8004828:	620a      	str	r2, [r1, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 800482a:	f8d4 2080 	ldr.w	r2, [r4, #128]	; 0x80
 800482e:	f042 0201 	orr.w	r2, r2, #1
 8004832:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8004836:	f013 0f02 	tst.w	r3, #2
 800483a:	d009      	beq.n	8004850 <HAL_UART_IRQHandler+0x78>
 800483c:	b140      	cbz	r0, 8004850 <HAL_UART_IRQHandler+0x78>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 800483e:	6822      	ldr	r2, [r4, #0]
 8004840:	2102      	movs	r1, #2
 8004842:	6211      	str	r1, [r2, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8004844:	f8d4 2080 	ldr.w	r2, [r4, #128]	; 0x80
 8004848:	f042 0204 	orr.w	r2, r2, #4
 800484c:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8004850:	f013 0f04 	tst.w	r3, #4
 8004854:	d009      	beq.n	800486a <HAL_UART_IRQHandler+0x92>
 8004856:	b140      	cbz	r0, 800486a <HAL_UART_IRQHandler+0x92>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8004858:	6822      	ldr	r2, [r4, #0]
 800485a:	2104      	movs	r1, #4
 800485c:	6211      	str	r1, [r2, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 800485e:	f8d4 2080 	ldr.w	r2, [r4, #128]	; 0x80
 8004862:	f042 0202 	orr.w	r2, r2, #2
 8004866:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
    if (((isrflags & USART_ISR_ORE) != 0U)
 800486a:	f013 0f08 	tst.w	r3, #8
 800486e:	d00b      	beq.n	8004888 <HAL_UART_IRQHandler+0xb0>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8004870:	f015 0f20 	tst.w	r5, #32
 8004874:	d100      	bne.n	8004878 <HAL_UART_IRQHandler+0xa0>
 8004876:	b138      	cbz	r0, 8004888 <HAL_UART_IRQHandler+0xb0>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8004878:	6822      	ldr	r2, [r4, #0]
 800487a:	2108      	movs	r1, #8
 800487c:	6211      	str	r1, [r2, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 800487e:	f8d4 2080 	ldr.w	r2, [r4, #128]	; 0x80
 8004882:	430a      	orrs	r2, r1
 8004884:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 8004888:	f413 6f00 	tst.w	r3, #2048	; 0x800
 800488c:	d00c      	beq.n	80048a8 <HAL_UART_IRQHandler+0xd0>
 800488e:	f015 6f80 	tst.w	r5, #67108864	; 0x4000000
 8004892:	d009      	beq.n	80048a8 <HAL_UART_IRQHandler+0xd0>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8004894:	6822      	ldr	r2, [r4, #0]
 8004896:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800489a:	6211      	str	r1, [r2, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 800489c:	f8d4 2080 	ldr.w	r2, [r4, #128]	; 0x80
 80048a0:	f042 0220 	orr.w	r2, r2, #32
 80048a4:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80048a8:	f8d4 2080 	ldr.w	r2, [r4, #128]	; 0x80
 80048ac:	2a00      	cmp	r2, #0
 80048ae:	f000 80e7 	beq.w	8004a80 <HAL_UART_IRQHandler+0x2a8>
      if (((isrflags & USART_ISR_RXNE) != 0U)
 80048b2:	f013 0f20 	tst.w	r3, #32
 80048b6:	d006      	beq.n	80048c6 <HAL_UART_IRQHandler+0xee>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 80048b8:	f015 0f20 	tst.w	r5, #32
 80048bc:	d003      	beq.n	80048c6 <HAL_UART_IRQHandler+0xee>
        if (huart->RxISR != NULL)
 80048be:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80048c0:	b10b      	cbz	r3, 80048c6 <HAL_UART_IRQHandler+0xee>
          huart->RxISR(huart);
 80048c2:	4620      	mov	r0, r4
 80048c4:	4798      	blx	r3
      errorcode = huart->ErrorCode;
 80048c6:	f8d4 2080 	ldr.w	r2, [r4, #128]	; 0x80
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80048ca:	6823      	ldr	r3, [r4, #0]
 80048cc:	689b      	ldr	r3, [r3, #8]
 80048ce:	f013 0f40 	tst.w	r3, #64	; 0x40
 80048d2:	d102      	bne.n	80048da <HAL_UART_IRQHandler+0x102>
 80048d4:	f012 0f28 	tst.w	r2, #40	; 0x28
 80048d8:	d029      	beq.n	800492e <HAL_UART_IRQHandler+0x156>
        UART_EndRxTransfer(huart);
 80048da:	4620      	mov	r0, r4
 80048dc:	f7ff fea1 	bl	8004622 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80048e0:	6823      	ldr	r3, [r4, #0]
 80048e2:	689b      	ldr	r3, [r3, #8]
 80048e4:	f013 0f40 	tst.w	r3, #64	; 0x40
 80048e8:	d01d      	beq.n	8004926 <HAL_UART_IRQHandler+0x14e>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80048ea:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80048ec:	f102 0308 	add.w	r3, r2, #8
 80048f0:	e853 3f00 	ldrex	r3, [r3]
 80048f4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80048f8:	3208      	adds	r2, #8
 80048fa:	e842 3100 	strex	r1, r3, [r2]
 80048fe:	2900      	cmp	r1, #0
 8004900:	d1f3      	bne.n	80048ea <HAL_UART_IRQHandler+0x112>
          if (huart->hdmarx != NULL)
 8004902:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8004904:	b15b      	cbz	r3, 800491e <HAL_UART_IRQHandler+0x146>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8004906:	4a62      	ldr	r2, [pc, #392]	; (8004a90 <HAL_UART_IRQHandler+0x2b8>)
 8004908:	651a      	str	r2, [r3, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 800490a:	6f20      	ldr	r0, [r4, #112]	; 0x70
 800490c:	f7fc ff16 	bl	800173c <HAL_DMA_Abort_IT>
 8004910:	2800      	cmp	r0, #0
 8004912:	f000 80b5 	beq.w	8004a80 <HAL_UART_IRQHandler+0x2a8>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8004916:	6f20      	ldr	r0, [r4, #112]	; 0x70
 8004918:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800491a:	4798      	blx	r3
 800491c:	e0b0      	b.n	8004a80 <HAL_UART_IRQHandler+0x2a8>
            HAL_UART_ErrorCallback(huart);
 800491e:	4620      	mov	r0, r4
 8004920:	f7ff ff4e 	bl	80047c0 <HAL_UART_ErrorCallback>
 8004924:	e0ac      	b.n	8004a80 <HAL_UART_IRQHandler+0x2a8>
          HAL_UART_ErrorCallback(huart);
 8004926:	4620      	mov	r0, r4
 8004928:	f7ff ff4a 	bl	80047c0 <HAL_UART_ErrorCallback>
 800492c:	e0a8      	b.n	8004a80 <HAL_UART_IRQHandler+0x2a8>
        HAL_UART_ErrorCallback(huart);
 800492e:	4620      	mov	r0, r4
 8004930:	f7ff ff46 	bl	80047c0 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004934:	2300      	movs	r3, #0
 8004936:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 800493a:	e0a1      	b.n	8004a80 <HAL_UART_IRQHandler+0x2a8>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800493c:	6e22      	ldr	r2, [r4, #96]	; 0x60
 800493e:	2a01      	cmp	r2, #1
 8004940:	d00e      	beq.n	8004960 <HAL_UART_IRQHandler+0x188>
  if (((isrflags & USART_ISR_TXE) != 0U)
 8004942:	f013 0f80 	tst.w	r3, #128	; 0x80
 8004946:	f000 8095 	beq.w	8004a74 <HAL_UART_IRQHandler+0x29c>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 800494a:	f015 0f80 	tst.w	r5, #128	; 0x80
 800494e:	f000 8091 	beq.w	8004a74 <HAL_UART_IRQHandler+0x29c>
    if (huart->TxISR != NULL)
 8004952:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8004954:	2b00      	cmp	r3, #0
 8004956:	f000 8093 	beq.w	8004a80 <HAL_UART_IRQHandler+0x2a8>
      huart->TxISR(huart);
 800495a:	4620      	mov	r0, r4
 800495c:	4798      	blx	r3
 800495e:	e08f      	b.n	8004a80 <HAL_UART_IRQHandler+0x2a8>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 8004960:	f013 0f10 	tst.w	r3, #16
 8004964:	d0ed      	beq.n	8004942 <HAL_UART_IRQHandler+0x16a>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 8004966:	f015 0f10 	tst.w	r5, #16
 800496a:	d0ea      	beq.n	8004942 <HAL_UART_IRQHandler+0x16a>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 800496c:	2310      	movs	r3, #16
 800496e:	620b      	str	r3, [r1, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8004970:	6823      	ldr	r3, [r4, #0]
 8004972:	689b      	ldr	r3, [r3, #8]
 8004974:	f013 0f40 	tst.w	r3, #64	; 0x40
 8004978:	d04a      	beq.n	8004a10 <HAL_UART_IRQHandler+0x238>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 800497a:	6f22      	ldr	r2, [r4, #112]	; 0x70
 800497c:	6813      	ldr	r3, [r2, #0]
 800497e:	685b      	ldr	r3, [r3, #4]
 8004980:	b29b      	uxth	r3, r3
      if ((nb_remaining_rx_data > 0U)
 8004982:	2b00      	cmp	r3, #0
 8004984:	d07c      	beq.n	8004a80 <HAL_UART_IRQHandler+0x2a8>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8004986:	f8b4 1058 	ldrh.w	r1, [r4, #88]	; 0x58
 800498a:	4299      	cmp	r1, r3
 800498c:	d978      	bls.n	8004a80 <HAL_UART_IRQHandler+0x2a8>
        huart->RxXferCount = nb_remaining_rx_data;
 800498e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8004992:	69d3      	ldr	r3, [r2, #28]
 8004994:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8004998:	d030      	beq.n	80049fc <HAL_UART_IRQHandler+0x224>
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800499a:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800499c:	e852 3f00 	ldrex	r3, [r2]
 80049a0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80049a4:	e842 3100 	strex	r1, r3, [r2]
 80049a8:	2900      	cmp	r1, #0
 80049aa:	d1f6      	bne.n	800499a <HAL_UART_IRQHandler+0x1c2>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80049ac:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80049ae:	f102 0308 	add.w	r3, r2, #8
 80049b2:	e853 3f00 	ldrex	r3, [r3]
 80049b6:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80049ba:	3208      	adds	r2, #8
 80049bc:	e842 3100 	strex	r1, r3, [r2]
 80049c0:	2900      	cmp	r1, #0
 80049c2:	d1f3      	bne.n	80049ac <HAL_UART_IRQHandler+0x1d4>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80049c4:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80049c6:	f102 0308 	add.w	r3, r2, #8
 80049ca:	e853 3f00 	ldrex	r3, [r3]
 80049ce:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80049d2:	3208      	adds	r2, #8
 80049d4:	e842 3100 	strex	r1, r3, [r2]
 80049d8:	2900      	cmp	r1, #0
 80049da:	d1f3      	bne.n	80049c4 <HAL_UART_IRQHandler+0x1ec>
          huart->RxState = HAL_UART_STATE_READY;
 80049dc:	2320      	movs	r3, #32
 80049de:	67e3      	str	r3, [r4, #124]	; 0x7c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80049e0:	2300      	movs	r3, #0
 80049e2:	6623      	str	r3, [r4, #96]	; 0x60
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80049e4:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80049e6:	e852 3f00 	ldrex	r3, [r2]
 80049ea:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80049ee:	e842 3100 	strex	r1, r3, [r2]
 80049f2:	2900      	cmp	r1, #0
 80049f4:	d1f6      	bne.n	80049e4 <HAL_UART_IRQHandler+0x20c>
          (void)HAL_DMA_Abort(huart->hdmarx);
 80049f6:	6f20      	ldr	r0, [r4, #112]	; 0x70
 80049f8:	f7fc fe56 	bl	80016a8 <HAL_DMA_Abort>
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 80049fc:	f8b4 1058 	ldrh.w	r1, [r4, #88]	; 0x58
 8004a00:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8004a04:	1ac9      	subs	r1, r1, r3
 8004a06:	b289      	uxth	r1, r1
 8004a08:	4620      	mov	r0, r4
 8004a0a:	f7ff fee4 	bl	80047d6 <HAL_UARTEx_RxEventCallback>
 8004a0e:	e037      	b.n	8004a80 <HAL_UART_IRQHandler+0x2a8>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8004a10:	f8b4 1058 	ldrh.w	r1, [r4, #88]	; 0x58
 8004a14:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8004a18:	1ac9      	subs	r1, r1, r3
 8004a1a:	b289      	uxth	r1, r1
      if ((huart->RxXferCount > 0U)
 8004a1c:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8004a20:	b29b      	uxth	r3, r3
 8004a22:	b36b      	cbz	r3, 8004a80 <HAL_UART_IRQHandler+0x2a8>
          && (nb_rx_data > 0U))
 8004a24:	b361      	cbz	r1, 8004a80 <HAL_UART_IRQHandler+0x2a8>
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8004a26:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8004a28:	e852 3f00 	ldrex	r3, [r2]
 8004a2c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8004a30:	e842 3000 	strex	r0, r3, [r2]
 8004a34:	2800      	cmp	r0, #0
 8004a36:	d1f6      	bne.n	8004a26 <HAL_UART_IRQHandler+0x24e>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8004a38:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8004a3a:	f102 0308 	add.w	r3, r2, #8
 8004a3e:	e853 3f00 	ldrex	r3, [r3]
 8004a42:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8004a46:	3208      	adds	r2, #8
 8004a48:	e842 3000 	strex	r0, r3, [r2]
 8004a4c:	2800      	cmp	r0, #0
 8004a4e:	d1f3      	bne.n	8004a38 <HAL_UART_IRQHandler+0x260>
        huart->RxState = HAL_UART_STATE_READY;
 8004a50:	2320      	movs	r3, #32
 8004a52:	67e3      	str	r3, [r4, #124]	; 0x7c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8004a54:	2300      	movs	r3, #0
 8004a56:	6623      	str	r3, [r4, #96]	; 0x60
        huart->RxISR = NULL;
 8004a58:	6663      	str	r3, [r4, #100]	; 0x64
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8004a5a:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8004a5c:	e852 3f00 	ldrex	r3, [r2]
 8004a60:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8004a64:	e842 3000 	strex	r0, r3, [r2]
 8004a68:	2800      	cmp	r0, #0
 8004a6a:	d1f6      	bne.n	8004a5a <HAL_UART_IRQHandler+0x282>
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 8004a6c:	4620      	mov	r0, r4
 8004a6e:	f7ff feb2 	bl	80047d6 <HAL_UARTEx_RxEventCallback>
 8004a72:	e005      	b.n	8004a80 <HAL_UART_IRQHandler+0x2a8>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 8004a74:	f013 0f40 	tst.w	r3, #64	; 0x40
 8004a78:	d002      	beq.n	8004a80 <HAL_UART_IRQHandler+0x2a8>
 8004a7a:	f015 0f40 	tst.w	r5, #64	; 0x40
 8004a7e:	d100      	bne.n	8004a82 <HAL_UART_IRQHandler+0x2aa>
}
 8004a80:	bd38      	pop	{r3, r4, r5, pc}
    UART_EndTransmit_IT(huart);
 8004a82:	4620      	mov	r0, r4
 8004a84:	f7ff fe8b 	bl	800479e <UART_EndTransmit_IT>
    return;
 8004a88:	e7fa      	b.n	8004a80 <HAL_UART_IRQHandler+0x2a8>
 8004a8a:	bf00      	nop
 8004a8c:	04000120 	.word	0x04000120
 8004a90:	080047c3 	.word	0x080047c3

08004a94 <UART_SetConfig>:
{
 8004a94:	b510      	push	{r4, lr}
 8004a96:	4604      	mov	r4, r0
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8004a98:	6883      	ldr	r3, [r0, #8]
 8004a9a:	6902      	ldr	r2, [r0, #16]
 8004a9c:	4313      	orrs	r3, r2
 8004a9e:	6942      	ldr	r2, [r0, #20]
 8004aa0:	4313      	orrs	r3, r2
 8004aa2:	69c2      	ldr	r2, [r0, #28]
 8004aa4:	4313      	orrs	r3, r2
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8004aa6:	6801      	ldr	r1, [r0, #0]
 8004aa8:	6808      	ldr	r0, [r1, #0]
 8004aaa:	4a98      	ldr	r2, [pc, #608]	; (8004d0c <UART_SetConfig+0x278>)
 8004aac:	4002      	ands	r2, r0
 8004aae:	4313      	orrs	r3, r2
 8004ab0:	600b      	str	r3, [r1, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8004ab2:	6822      	ldr	r2, [r4, #0]
 8004ab4:	6853      	ldr	r3, [r2, #4]
 8004ab6:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8004aba:	68e1      	ldr	r1, [r4, #12]
 8004abc:	430b      	orrs	r3, r1
 8004abe:	6053      	str	r3, [r2, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8004ac0:	69a2      	ldr	r2, [r4, #24]
  tmpreg |= huart->Init.OneBitSampling;
 8004ac2:	6a23      	ldr	r3, [r4, #32]
 8004ac4:	431a      	orrs	r2, r3
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8004ac6:	6821      	ldr	r1, [r4, #0]
 8004ac8:	688b      	ldr	r3, [r1, #8]
 8004aca:	f423 6330 	bic.w	r3, r3, #2816	; 0xb00
 8004ace:	4313      	orrs	r3, r2
 8004ad0:	608b      	str	r3, [r1, #8]
  UART_GETCLOCKSOURCE(huart, clocksource);
 8004ad2:	6823      	ldr	r3, [r4, #0]
 8004ad4:	4a8e      	ldr	r2, [pc, #568]	; (8004d10 <UART_SetConfig+0x27c>)
 8004ad6:	4293      	cmp	r3, r2
 8004ad8:	d018      	beq.n	8004b0c <UART_SetConfig+0x78>
 8004ada:	4a8e      	ldr	r2, [pc, #568]	; (8004d14 <UART_SetConfig+0x280>)
 8004adc:	4293      	cmp	r3, r2
 8004ade:	d028      	beq.n	8004b32 <UART_SetConfig+0x9e>
 8004ae0:	4a8d      	ldr	r2, [pc, #564]	; (8004d18 <UART_SetConfig+0x284>)
 8004ae2:	4293      	cmp	r3, r2
 8004ae4:	d03d      	beq.n	8004b62 <UART_SetConfig+0xce>
 8004ae6:	4a8d      	ldr	r2, [pc, #564]	; (8004d1c <UART_SetConfig+0x288>)
 8004ae8:	4293      	cmp	r3, r2
 8004aea:	d050      	beq.n	8004b8e <UART_SetConfig+0xfa>
 8004aec:	4a8c      	ldr	r2, [pc, #560]	; (8004d20 <UART_SetConfig+0x28c>)
 8004aee:	4293      	cmp	r3, r2
 8004af0:	d062      	beq.n	8004bb8 <UART_SetConfig+0x124>
 8004af2:	4a8c      	ldr	r2, [pc, #560]	; (8004d24 <UART_SetConfig+0x290>)
 8004af4:	4293      	cmp	r3, r2
 8004af6:	d077      	beq.n	8004be8 <UART_SetConfig+0x154>
 8004af8:	4a8b      	ldr	r2, [pc, #556]	; (8004d28 <UART_SetConfig+0x294>)
 8004afa:	4293      	cmp	r3, r2
 8004afc:	f000 808c 	beq.w	8004c18 <UART_SetConfig+0x184>
 8004b00:	4a8a      	ldr	r2, [pc, #552]	; (8004d2c <UART_SetConfig+0x298>)
 8004b02:	4293      	cmp	r3, r2
 8004b04:	f000 80a0 	beq.w	8004c48 <UART_SetConfig+0x1b4>
 8004b08:	2310      	movs	r3, #16
 8004b0a:	e0b6      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004b0c:	4b88      	ldr	r3, [pc, #544]	; (8004d30 <UART_SetConfig+0x29c>)
 8004b0e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004b12:	f003 0303 	and.w	r3, r3, #3
 8004b16:	2b03      	cmp	r3, #3
 8004b18:	d809      	bhi.n	8004b2e <UART_SetConfig+0x9a>
 8004b1a:	e8df f003 	tbb	[pc, r3]
 8004b1e:	0402      	.short	0x0402
 8004b20:	06ad      	.short	0x06ad
 8004b22:	2301      	movs	r3, #1
 8004b24:	e0a9      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004b26:	2304      	movs	r3, #4
 8004b28:	e0a7      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004b2a:	2308      	movs	r3, #8
 8004b2c:	e0a5      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004b2e:	2310      	movs	r3, #16
 8004b30:	e0a3      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004b32:	4b7f      	ldr	r3, [pc, #508]	; (8004d30 <UART_SetConfig+0x29c>)
 8004b34:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004b38:	f003 030c 	and.w	r3, r3, #12
 8004b3c:	2b0c      	cmp	r3, #12
 8004b3e:	d80e      	bhi.n	8004b5e <UART_SetConfig+0xca>
 8004b40:	e8df f003 	tbb	[pc, r3]
 8004b44:	0d0d0d07 	.word	0x0d0d0d07
 8004b48:	0d0d0d09 	.word	0x0d0d0d09
 8004b4c:	0d0d0da8 	.word	0x0d0d0da8
 8004b50:	0b          	.byte	0x0b
 8004b51:	00          	.byte	0x00
 8004b52:	2300      	movs	r3, #0
 8004b54:	e091      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004b56:	2304      	movs	r3, #4
 8004b58:	e08f      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004b5a:	2308      	movs	r3, #8
 8004b5c:	e08d      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004b5e:	2310      	movs	r3, #16
 8004b60:	e08b      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004b62:	4b73      	ldr	r3, [pc, #460]	; (8004d30 <UART_SetConfig+0x29c>)
 8004b64:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004b68:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8004b6c:	2b10      	cmp	r3, #16
 8004b6e:	d00a      	beq.n	8004b86 <UART_SetConfig+0xf2>
 8004b70:	d906      	bls.n	8004b80 <UART_SetConfig+0xec>
 8004b72:	2b20      	cmp	r3, #32
 8004b74:	f000 8090 	beq.w	8004c98 <UART_SetConfig+0x204>
 8004b78:	2b30      	cmp	r3, #48	; 0x30
 8004b7a:	d106      	bne.n	8004b8a <UART_SetConfig+0xf6>
 8004b7c:	2308      	movs	r3, #8
 8004b7e:	e07c      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004b80:	b91b      	cbnz	r3, 8004b8a <UART_SetConfig+0xf6>
 8004b82:	2300      	movs	r3, #0
 8004b84:	e079      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004b86:	2304      	movs	r3, #4
 8004b88:	e077      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004b8a:	2310      	movs	r3, #16
 8004b8c:	e075      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004b8e:	4b68      	ldr	r3, [pc, #416]	; (8004d30 <UART_SetConfig+0x29c>)
 8004b90:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004b94:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8004b98:	2b40      	cmp	r3, #64	; 0x40
 8004b9a:	d009      	beq.n	8004bb0 <UART_SetConfig+0x11c>
 8004b9c:	d905      	bls.n	8004baa <UART_SetConfig+0x116>
 8004b9e:	2b80      	cmp	r3, #128	; 0x80
 8004ba0:	d07c      	beq.n	8004c9c <UART_SetConfig+0x208>
 8004ba2:	2bc0      	cmp	r3, #192	; 0xc0
 8004ba4:	d106      	bne.n	8004bb4 <UART_SetConfig+0x120>
 8004ba6:	2308      	movs	r3, #8
 8004ba8:	e067      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004baa:	b91b      	cbnz	r3, 8004bb4 <UART_SetConfig+0x120>
 8004bac:	2300      	movs	r3, #0
 8004bae:	e064      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004bb0:	2304      	movs	r3, #4
 8004bb2:	e062      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004bb4:	2310      	movs	r3, #16
 8004bb6:	e060      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004bb8:	4b5d      	ldr	r3, [pc, #372]	; (8004d30 <UART_SetConfig+0x29c>)
 8004bba:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004bbe:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004bc2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8004bc6:	d00b      	beq.n	8004be0 <UART_SetConfig+0x14c>
 8004bc8:	d907      	bls.n	8004bda <UART_SetConfig+0x146>
 8004bca:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004bce:	d067      	beq.n	8004ca0 <UART_SetConfig+0x20c>
 8004bd0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8004bd4:	d106      	bne.n	8004be4 <UART_SetConfig+0x150>
 8004bd6:	2308      	movs	r3, #8
 8004bd8:	e04f      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004bda:	b91b      	cbnz	r3, 8004be4 <UART_SetConfig+0x150>
 8004bdc:	2300      	movs	r3, #0
 8004bde:	e04c      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004be0:	2304      	movs	r3, #4
 8004be2:	e04a      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004be4:	2310      	movs	r3, #16
 8004be6:	e048      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004be8:	4b51      	ldr	r3, [pc, #324]	; (8004d30 <UART_SetConfig+0x29c>)
 8004bea:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004bee:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8004bf2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004bf6:	d00b      	beq.n	8004c10 <UART_SetConfig+0x17c>
 8004bf8:	d907      	bls.n	8004c0a <UART_SetConfig+0x176>
 8004bfa:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004bfe:	d051      	beq.n	8004ca4 <UART_SetConfig+0x210>
 8004c00:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8004c04:	d106      	bne.n	8004c14 <UART_SetConfig+0x180>
 8004c06:	2308      	movs	r3, #8
 8004c08:	e037      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004c0a:	b91b      	cbnz	r3, 8004c14 <UART_SetConfig+0x180>
 8004c0c:	2301      	movs	r3, #1
 8004c0e:	e034      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004c10:	2304      	movs	r3, #4
 8004c12:	e032      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004c14:	2310      	movs	r3, #16
 8004c16:	e030      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004c18:	4b45      	ldr	r3, [pc, #276]	; (8004d30 <UART_SetConfig+0x29c>)
 8004c1a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004c1e:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8004c22:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004c26:	d00b      	beq.n	8004c40 <UART_SetConfig+0x1ac>
 8004c28:	d907      	bls.n	8004c3a <UART_SetConfig+0x1a6>
 8004c2a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004c2e:	d03b      	beq.n	8004ca8 <UART_SetConfig+0x214>
 8004c30:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8004c34:	d106      	bne.n	8004c44 <UART_SetConfig+0x1b0>
 8004c36:	2308      	movs	r3, #8
 8004c38:	e01f      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004c3a:	b91b      	cbnz	r3, 8004c44 <UART_SetConfig+0x1b0>
 8004c3c:	2300      	movs	r3, #0
 8004c3e:	e01c      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004c40:	2304      	movs	r3, #4
 8004c42:	e01a      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004c44:	2310      	movs	r3, #16
 8004c46:	e018      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004c48:	4b39      	ldr	r3, [pc, #228]	; (8004d30 <UART_SetConfig+0x29c>)
 8004c4a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004c4e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8004c52:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8004c56:	d00b      	beq.n	8004c70 <UART_SetConfig+0x1dc>
 8004c58:	d907      	bls.n	8004c6a <UART_SetConfig+0x1d6>
 8004c5a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004c5e:	d025      	beq.n	8004cac <UART_SetConfig+0x218>
 8004c60:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8004c64:	d106      	bne.n	8004c74 <UART_SetConfig+0x1e0>
 8004c66:	2308      	movs	r3, #8
 8004c68:	e007      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004c6a:	b91b      	cbnz	r3, 8004c74 <UART_SetConfig+0x1e0>
 8004c6c:	2300      	movs	r3, #0
 8004c6e:	e004      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004c70:	2304      	movs	r3, #4
 8004c72:	e002      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004c74:	2310      	movs	r3, #16
 8004c76:	e000      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004c78:	2302      	movs	r3, #2
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8004c7a:	69e2      	ldr	r2, [r4, #28]
 8004c7c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8004c80:	d016      	beq.n	8004cb0 <UART_SetConfig+0x21c>
    switch (clocksource)
 8004c82:	2b08      	cmp	r3, #8
 8004c84:	d87f      	bhi.n	8004d86 <UART_SetConfig+0x2f2>
 8004c86:	e8df f003 	tbb	[pc, r3]
 8004c8a:	6f59      	.short	0x6f59
 8004c8c:	7e727e57 	.word	0x7e727e57
 8004c90:	7e7e      	.short	0x7e7e
 8004c92:	75          	.byte	0x75
 8004c93:	00          	.byte	0x00
  UART_GETCLOCKSOURCE(huart, clocksource);
 8004c94:	2302      	movs	r3, #2
 8004c96:	e7f0      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004c98:	2302      	movs	r3, #2
 8004c9a:	e7ee      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004c9c:	2302      	movs	r3, #2
 8004c9e:	e7ec      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004ca0:	2302      	movs	r3, #2
 8004ca2:	e7ea      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004ca4:	2302      	movs	r3, #2
 8004ca6:	e7e8      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004ca8:	2302      	movs	r3, #2
 8004caa:	e7e6      	b.n	8004c7a <UART_SetConfig+0x1e6>
 8004cac:	2302      	movs	r3, #2
 8004cae:	e7e4      	b.n	8004c7a <UART_SetConfig+0x1e6>
    switch (clocksource)
 8004cb0:	2b08      	cmp	r3, #8
 8004cb2:	d862      	bhi.n	8004d7a <UART_SetConfig+0x2e6>
 8004cb4:	e8df f003 	tbb	[pc, r3]
 8004cb8:	61282208 	.word	0x61282208
 8004cbc:	61616125 	.word	0x61616125
 8004cc0:	05          	.byte	0x05
 8004cc1:	00          	.byte	0x00
        pclk = (uint32_t) LSE_VALUE;
 8004cc2:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8004cc6:	e003      	b.n	8004cd0 <UART_SetConfig+0x23c>
        pclk = HAL_RCC_GetPCLK1Freq();
 8004cc8:	f7fe ff22 	bl	8003b10 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 8004ccc:	2800      	cmp	r0, #0
 8004cce:	d056      	beq.n	8004d7e <UART_SetConfig+0x2ea>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8004cd0:	6862      	ldr	r2, [r4, #4]
 8004cd2:	0853      	lsrs	r3, r2, #1
 8004cd4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004cd8:	fbb0 f0f2 	udiv	r0, r0, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8004cdc:	f1a0 0210 	sub.w	r2, r0, #16
 8004ce0:	f64f 73ef 	movw	r3, #65519	; 0xffef
 8004ce4:	429a      	cmp	r2, r3
 8004ce6:	d84c      	bhi.n	8004d82 <UART_SetConfig+0x2ee>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8004ce8:	b283      	uxth	r3, r0
 8004cea:	f023 030f 	bic.w	r3, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8004cee:	f3c0 0042 	ubfx	r0, r0, #1, #3
 8004cf2:	4318      	orrs	r0, r3
        huart->Instance->BRR = brrtemp;
 8004cf4:	6823      	ldr	r3, [r4, #0]
 8004cf6:	60d8      	str	r0, [r3, #12]
 8004cf8:	2000      	movs	r0, #0
 8004cfa:	e031      	b.n	8004d60 <UART_SetConfig+0x2cc>
        pclk = HAL_RCC_GetPCLK2Freq();
 8004cfc:	f7fe ff18 	bl	8003b30 <HAL_RCC_GetPCLK2Freq>
        break;
 8004d00:	e7e4      	b.n	8004ccc <UART_SetConfig+0x238>
        pclk = HAL_RCC_GetSysClockFreq();
 8004d02:	f7fe fdf7 	bl	80038f4 <HAL_RCC_GetSysClockFreq>
        break;
 8004d06:	e7e1      	b.n	8004ccc <UART_SetConfig+0x238>
        pclk = (uint32_t) HSI_VALUE;
 8004d08:	480a      	ldr	r0, [pc, #40]	; (8004d34 <UART_SetConfig+0x2a0>)
 8004d0a:	e7e1      	b.n	8004cd0 <UART_SetConfig+0x23c>
 8004d0c:	efff69f3 	.word	0xefff69f3
 8004d10:	40011000 	.word	0x40011000
 8004d14:	40004400 	.word	0x40004400
 8004d18:	40004800 	.word	0x40004800
 8004d1c:	40004c00 	.word	0x40004c00
 8004d20:	40005000 	.word	0x40005000
 8004d24:	40011400 	.word	0x40011400
 8004d28:	40007800 	.word	0x40007800
 8004d2c:	40007c00 	.word	0x40007c00
 8004d30:	40023800 	.word	0x40023800
 8004d34:	00f42400 	.word	0x00f42400
        pclk = (uint32_t) HSI_VALUE;
 8004d38:	4816      	ldr	r0, [pc, #88]	; (8004d94 <UART_SetConfig+0x300>)
 8004d3a:	e002      	b.n	8004d42 <UART_SetConfig+0x2ae>
        pclk = HAL_RCC_GetPCLK1Freq();
 8004d3c:	f7fe fee8 	bl	8003b10 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 8004d40:	b318      	cbz	r0, 8004d8a <UART_SetConfig+0x2f6>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8004d42:	6863      	ldr	r3, [r4, #4]
 8004d44:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8004d48:	fbb0 f0f3 	udiv	r0, r0, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8004d4c:	f1a0 0210 	sub.w	r2, r0, #16
 8004d50:	f64f 73ef 	movw	r3, #65519	; 0xffef
 8004d54:	429a      	cmp	r2, r3
 8004d56:	d81a      	bhi.n	8004d8e <UART_SetConfig+0x2fa>
        huart->Instance->BRR = (uint16_t)usartdiv;
 8004d58:	6823      	ldr	r3, [r4, #0]
 8004d5a:	b280      	uxth	r0, r0
 8004d5c:	60d8      	str	r0, [r3, #12]
 8004d5e:	2000      	movs	r0, #0
  huart->RxISR = NULL;
 8004d60:	2300      	movs	r3, #0
 8004d62:	6663      	str	r3, [r4, #100]	; 0x64
  huart->TxISR = NULL;
 8004d64:	66a3      	str	r3, [r4, #104]	; 0x68
}
 8004d66:	bd10      	pop	{r4, pc}
        pclk = HAL_RCC_GetPCLK2Freq();
 8004d68:	f7fe fee2 	bl	8003b30 <HAL_RCC_GetPCLK2Freq>
        break;
 8004d6c:	e7e8      	b.n	8004d40 <UART_SetConfig+0x2ac>
        pclk = HAL_RCC_GetSysClockFreq();
 8004d6e:	f7fe fdc1 	bl	80038f4 <HAL_RCC_GetSysClockFreq>
        break;
 8004d72:	e7e5      	b.n	8004d40 <UART_SetConfig+0x2ac>
        pclk = (uint32_t) LSE_VALUE;
 8004d74:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8004d78:	e7e3      	b.n	8004d42 <UART_SetConfig+0x2ae>
        ret = HAL_ERROR;
 8004d7a:	2001      	movs	r0, #1
 8004d7c:	e7f0      	b.n	8004d60 <UART_SetConfig+0x2cc>
 8004d7e:	2000      	movs	r0, #0
 8004d80:	e7ee      	b.n	8004d60 <UART_SetConfig+0x2cc>
        ret = HAL_ERROR;
 8004d82:	2001      	movs	r0, #1
 8004d84:	e7ec      	b.n	8004d60 <UART_SetConfig+0x2cc>
        ret = HAL_ERROR;
 8004d86:	2001      	movs	r0, #1
 8004d88:	e7ea      	b.n	8004d60 <UART_SetConfig+0x2cc>
 8004d8a:	2000      	movs	r0, #0
 8004d8c:	e7e8      	b.n	8004d60 <UART_SetConfig+0x2cc>
        ret = HAL_ERROR;
 8004d8e:	2001      	movs	r0, #1
 8004d90:	e7e6      	b.n	8004d60 <UART_SetConfig+0x2cc>
 8004d92:	bf00      	nop
 8004d94:	00f42400 	.word	0x00f42400

08004d98 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8004d98:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004d9a:	f013 0f01 	tst.w	r3, #1
 8004d9e:	d006      	beq.n	8004dae <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8004da0:	6802      	ldr	r2, [r0, #0]
 8004da2:	6853      	ldr	r3, [r2, #4]
 8004da4:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8004da8:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8004daa:	430b      	orrs	r3, r1
 8004dac:	6053      	str	r3, [r2, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8004dae:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004db0:	f013 0f02 	tst.w	r3, #2
 8004db4:	d006      	beq.n	8004dc4 <UART_AdvFeatureConfig+0x2c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8004db6:	6802      	ldr	r2, [r0, #0]
 8004db8:	6853      	ldr	r3, [r2, #4]
 8004dba:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004dbe:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8004dc0:	430b      	orrs	r3, r1
 8004dc2:	6053      	str	r3, [r2, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8004dc4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004dc6:	f013 0f04 	tst.w	r3, #4
 8004dca:	d006      	beq.n	8004dda <UART_AdvFeatureConfig+0x42>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8004dcc:	6802      	ldr	r2, [r0, #0]
 8004dce:	6853      	ldr	r3, [r2, #4]
 8004dd0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004dd4:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8004dd6:	430b      	orrs	r3, r1
 8004dd8:	6053      	str	r3, [r2, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8004dda:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004ddc:	f013 0f08 	tst.w	r3, #8
 8004de0:	d006      	beq.n	8004df0 <UART_AdvFeatureConfig+0x58>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8004de2:	6802      	ldr	r2, [r0, #0]
 8004de4:	6853      	ldr	r3, [r2, #4]
 8004de6:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8004dea:	6b41      	ldr	r1, [r0, #52]	; 0x34
 8004dec:	430b      	orrs	r3, r1
 8004dee:	6053      	str	r3, [r2, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8004df0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004df2:	f013 0f10 	tst.w	r3, #16
 8004df6:	d006      	beq.n	8004e06 <UART_AdvFeatureConfig+0x6e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8004df8:	6802      	ldr	r2, [r0, #0]
 8004dfa:	6893      	ldr	r3, [r2, #8]
 8004dfc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004e00:	6b81      	ldr	r1, [r0, #56]	; 0x38
 8004e02:	430b      	orrs	r3, r1
 8004e04:	6093      	str	r3, [r2, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8004e06:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004e08:	f013 0f20 	tst.w	r3, #32
 8004e0c:	d006      	beq.n	8004e1c <UART_AdvFeatureConfig+0x84>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8004e0e:	6802      	ldr	r2, [r0, #0]
 8004e10:	6893      	ldr	r3, [r2, #8]
 8004e12:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004e16:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
 8004e18:	430b      	orrs	r3, r1
 8004e1a:	6093      	str	r3, [r2, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8004e1c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004e1e:	f013 0f40 	tst.w	r3, #64	; 0x40
 8004e22:	d00a      	beq.n	8004e3a <UART_AdvFeatureConfig+0xa2>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8004e24:	6802      	ldr	r2, [r0, #0]
 8004e26:	6853      	ldr	r3, [r2, #4]
 8004e28:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8004e2c:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8004e2e:	430b      	orrs	r3, r1
 8004e30:	6053      	str	r3, [r2, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8004e32:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8004e34:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004e38:	d00b      	beq.n	8004e52 <UART_AdvFeatureConfig+0xba>
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8004e3a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004e3c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8004e40:	d006      	beq.n	8004e50 <UART_AdvFeatureConfig+0xb8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8004e42:	6802      	ldr	r2, [r0, #0]
 8004e44:	6853      	ldr	r3, [r2, #4]
 8004e46:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8004e4a:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8004e4c:	430b      	orrs	r3, r1
 8004e4e:	6053      	str	r3, [r2, #4]
}
 8004e50:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8004e52:	6802      	ldr	r2, [r0, #0]
 8004e54:	6853      	ldr	r3, [r2, #4]
 8004e56:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 8004e5a:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8004e5c:	430b      	orrs	r3, r1
 8004e5e:	6053      	str	r3, [r2, #4]
 8004e60:	e7eb      	b.n	8004e3a <UART_AdvFeatureConfig+0xa2>

08004e62 <UART_WaitOnFlagUntilTimeout>:
{
 8004e62:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e66:	4604      	mov	r4, r0
 8004e68:	460f      	mov	r7, r1
 8004e6a:	4616      	mov	r6, r2
 8004e6c:	4698      	mov	r8, r3
 8004e6e:	9d06      	ldr	r5, [sp, #24]
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8004e70:	6823      	ldr	r3, [r4, #0]
 8004e72:	69db      	ldr	r3, [r3, #28]
 8004e74:	ea37 0303 	bics.w	r3, r7, r3
 8004e78:	bf0c      	ite	eq
 8004e7a:	2301      	moveq	r3, #1
 8004e7c:	2300      	movne	r3, #0
 8004e7e:	42b3      	cmp	r3, r6
 8004e80:	d151      	bne.n	8004f26 <UART_WaitOnFlagUntilTimeout+0xc4>
    if (Timeout != HAL_MAX_DELAY)
 8004e82:	f1b5 3fff 	cmp.w	r5, #4294967295
 8004e86:	d0f3      	beq.n	8004e70 <UART_WaitOnFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004e88:	f7fc fabe 	bl	8001408 <HAL_GetTick>
 8004e8c:	eba0 0008 	sub.w	r0, r0, r8
 8004e90:	42a8      	cmp	r0, r5
 8004e92:	d82b      	bhi.n	8004eec <UART_WaitOnFlagUntilTimeout+0x8a>
 8004e94:	b355      	cbz	r5, 8004eec <UART_WaitOnFlagUntilTimeout+0x8a>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8004e96:	6823      	ldr	r3, [r4, #0]
 8004e98:	681a      	ldr	r2, [r3, #0]
 8004e9a:	f012 0f04 	tst.w	r2, #4
 8004e9e:	d0e7      	beq.n	8004e70 <UART_WaitOnFlagUntilTimeout+0xe>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8004ea0:	69da      	ldr	r2, [r3, #28]
 8004ea2:	f412 6f00 	tst.w	r2, #2048	; 0x800
 8004ea6:	d0e3      	beq.n	8004e70 <UART_WaitOnFlagUntilTimeout+0xe>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8004ea8:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004eac:	621a      	str	r2, [r3, #32]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8004eae:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8004eb0:	e852 3f00 	ldrex	r3, [r2]
 8004eb4:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8004eb8:	e842 3100 	strex	r1, r3, [r2]
 8004ebc:	2900      	cmp	r1, #0
 8004ebe:	d1f6      	bne.n	8004eae <UART_WaitOnFlagUntilTimeout+0x4c>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8004ec0:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8004ec2:	f102 0308 	add.w	r3, r2, #8
 8004ec6:	e853 3f00 	ldrex	r3, [r3]
 8004eca:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8004ece:	3208      	adds	r2, #8
 8004ed0:	e842 3100 	strex	r1, r3, [r2]
 8004ed4:	2900      	cmp	r1, #0
 8004ed6:	d1f3      	bne.n	8004ec0 <UART_WaitOnFlagUntilTimeout+0x5e>
          huart->gState = HAL_UART_STATE_READY;
 8004ed8:	2320      	movs	r3, #32
 8004eda:	67a3      	str	r3, [r4, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 8004edc:	67e3      	str	r3, [r4, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8004ede:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
          __HAL_UNLOCK(huart);
 8004ee2:	2300      	movs	r3, #0
 8004ee4:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
          return HAL_TIMEOUT;
 8004ee8:	2003      	movs	r0, #3
 8004eea:	e01d      	b.n	8004f28 <UART_WaitOnFlagUntilTimeout+0xc6>
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8004eec:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8004eee:	e852 3f00 	ldrex	r3, [r2]
 8004ef2:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8004ef6:	e842 3100 	strex	r1, r3, [r2]
 8004efa:	2900      	cmp	r1, #0
 8004efc:	d1f6      	bne.n	8004eec <UART_WaitOnFlagUntilTimeout+0x8a>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8004efe:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8004f00:	f102 0308 	add.w	r3, r2, #8
 8004f04:	e853 3f00 	ldrex	r3, [r3]
 8004f08:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8004f0c:	3208      	adds	r2, #8
 8004f0e:	e842 3100 	strex	r1, r3, [r2]
 8004f12:	2900      	cmp	r1, #0
 8004f14:	d1f3      	bne.n	8004efe <UART_WaitOnFlagUntilTimeout+0x9c>
        huart->gState = HAL_UART_STATE_READY;
 8004f16:	2320      	movs	r3, #32
 8004f18:	67a3      	str	r3, [r4, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 8004f1a:	67e3      	str	r3, [r4, #124]	; 0x7c
        __HAL_UNLOCK(huart);
 8004f1c:	2300      	movs	r3, #0
 8004f1e:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
        return HAL_TIMEOUT;
 8004f22:	2003      	movs	r0, #3
 8004f24:	e000      	b.n	8004f28 <UART_WaitOnFlagUntilTimeout+0xc6>
  return HAL_OK;
 8004f26:	2000      	movs	r0, #0
}
 8004f28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004f2c <UART_CheckIdleState>:
{
 8004f2c:	b510      	push	{r4, lr}
 8004f2e:	b082      	sub	sp, #8
 8004f30:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004f32:	2300      	movs	r3, #0
 8004f34:	f8c0 3080 	str.w	r3, [r0, #128]	; 0x80
  tickstart = HAL_GetTick();
 8004f38:	f7fc fa66 	bl	8001408 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8004f3c:	6822      	ldr	r2, [r4, #0]
 8004f3e:	6812      	ldr	r2, [r2, #0]
 8004f40:	f012 0f08 	tst.w	r2, #8
 8004f44:	d108      	bne.n	8004f58 <UART_CheckIdleState+0x2c>
  huart->gState = HAL_UART_STATE_READY;
 8004f46:	2320      	movs	r3, #32
 8004f48:	67a3      	str	r3, [r4, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 8004f4a:	67e3      	str	r3, [r4, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8004f4c:	2000      	movs	r0, #0
 8004f4e:	6620      	str	r0, [r4, #96]	; 0x60
  __HAL_UNLOCK(huart);
 8004f50:	f884 0074 	strb.w	r0, [r4, #116]	; 0x74
}
 8004f54:	b002      	add	sp, #8
 8004f56:	bd10      	pop	{r4, pc}
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8004f58:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8004f5c:	9300      	str	r3, [sp, #0]
 8004f5e:	4603      	mov	r3, r0
 8004f60:	2200      	movs	r2, #0
 8004f62:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8004f66:	4620      	mov	r0, r4
 8004f68:	f7ff ff7b 	bl	8004e62 <UART_WaitOnFlagUntilTimeout>
 8004f6c:	2800      	cmp	r0, #0
 8004f6e:	d0ea      	beq.n	8004f46 <UART_CheckIdleState+0x1a>
      return HAL_TIMEOUT;
 8004f70:	2003      	movs	r0, #3
 8004f72:	e7ef      	b.n	8004f54 <UART_CheckIdleState+0x28>

08004f74 <HAL_UART_Init>:
  if (huart == NULL)
 8004f74:	b368      	cbz	r0, 8004fd2 <HAL_UART_Init+0x5e>
{
 8004f76:	b510      	push	{r4, lr}
 8004f78:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
 8004f7a:	6f83      	ldr	r3, [r0, #120]	; 0x78
 8004f7c:	b303      	cbz	r3, 8004fc0 <HAL_UART_Init+0x4c>
  huart->gState = HAL_UART_STATE_BUSY;
 8004f7e:	2324      	movs	r3, #36	; 0x24
 8004f80:	67a3      	str	r3, [r4, #120]	; 0x78
  __HAL_UART_DISABLE(huart);
 8004f82:	6822      	ldr	r2, [r4, #0]
 8004f84:	6813      	ldr	r3, [r2, #0]
 8004f86:	f023 0301 	bic.w	r3, r3, #1
 8004f8a:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 8004f8c:	4620      	mov	r0, r4
 8004f8e:	f7ff fd81 	bl	8004a94 <UART_SetConfig>
 8004f92:	2801      	cmp	r0, #1
 8004f94:	d013      	beq.n	8004fbe <HAL_UART_Init+0x4a>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8004f96:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004f98:	b9bb      	cbnz	r3, 8004fca <HAL_UART_Init+0x56>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8004f9a:	6822      	ldr	r2, [r4, #0]
 8004f9c:	6853      	ldr	r3, [r2, #4]
 8004f9e:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8004fa2:	6053      	str	r3, [r2, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8004fa4:	6822      	ldr	r2, [r4, #0]
 8004fa6:	6893      	ldr	r3, [r2, #8]
 8004fa8:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 8004fac:	6093      	str	r3, [r2, #8]
  __HAL_UART_ENABLE(huart);
 8004fae:	6822      	ldr	r2, [r4, #0]
 8004fb0:	6813      	ldr	r3, [r2, #0]
 8004fb2:	f043 0301 	orr.w	r3, r3, #1
 8004fb6:	6013      	str	r3, [r2, #0]
  return (UART_CheckIdleState(huart));
 8004fb8:	4620      	mov	r0, r4
 8004fba:	f7ff ffb7 	bl	8004f2c <UART_CheckIdleState>
}
 8004fbe:	bd10      	pop	{r4, pc}
    huart->Lock = HAL_UNLOCKED;
 8004fc0:	f880 3074 	strb.w	r3, [r0, #116]	; 0x74
    HAL_UART_MspInit(huart);
 8004fc4:	f002 fabc 	bl	8007540 <HAL_UART_MspInit>
 8004fc8:	e7d9      	b.n	8004f7e <HAL_UART_Init+0xa>
    UART_AdvFeatureConfig(huart);
 8004fca:	4620      	mov	r0, r4
 8004fcc:	f7ff fee4 	bl	8004d98 <UART_AdvFeatureConfig>
 8004fd0:	e7e3      	b.n	8004f9a <HAL_UART_Init+0x26>
    return HAL_ERROR;
 8004fd2:	2001      	movs	r0, #1
}
 8004fd4:	4770      	bx	lr
	...

08004fd8 <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 8004fd8:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8004fda:	2300      	movs	r3, #0
 8004fdc:	9301      	str	r3, [sp, #4]

  /* Wait for AHB master IDLE state. */
  do
  {
    if (++count > 200000U)
 8004fde:	9b01      	ldr	r3, [sp, #4]
 8004fe0:	3301      	adds	r3, #1
 8004fe2:	9301      	str	r3, [sp, #4]
 8004fe4:	4a0e      	ldr	r2, [pc, #56]	; (8005020 <USB_CoreReset+0x48>)
 8004fe6:	4293      	cmp	r3, r2
 8004fe8:	d814      	bhi.n	8005014 <USB_CoreReset+0x3c>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8004fea:	6903      	ldr	r3, [r0, #16]
 8004fec:	2b00      	cmp	r3, #0
 8004fee:	daf6      	bge.n	8004fde <USB_CoreReset+0x6>

  /* Core Soft Reset */
  count = 0U;
 8004ff0:	2300      	movs	r3, #0
 8004ff2:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 8004ff4:	6903      	ldr	r3, [r0, #16]
 8004ff6:	f043 0301 	orr.w	r3, r3, #1
 8004ffa:	6103      	str	r3, [r0, #16]

  do
  {
    if (++count > 200000U)
 8004ffc:	9b01      	ldr	r3, [sp, #4]
 8004ffe:	3301      	adds	r3, #1
 8005000:	9301      	str	r3, [sp, #4]
 8005002:	4a07      	ldr	r2, [pc, #28]	; (8005020 <USB_CoreReset+0x48>)
 8005004:	4293      	cmp	r3, r2
 8005006:	d808      	bhi.n	800501a <USB_CoreReset+0x42>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 8005008:	6903      	ldr	r3, [r0, #16]
 800500a:	f013 0f01 	tst.w	r3, #1
 800500e:	d1f5      	bne.n	8004ffc <USB_CoreReset+0x24>

  return HAL_OK;
 8005010:	2000      	movs	r0, #0
 8005012:	e000      	b.n	8005016 <USB_CoreReset+0x3e>
      return HAL_TIMEOUT;
 8005014:	2003      	movs	r0, #3
}
 8005016:	b002      	add	sp, #8
 8005018:	4770      	bx	lr
      return HAL_TIMEOUT;
 800501a:	2003      	movs	r0, #3
 800501c:	e7fb      	b.n	8005016 <USB_CoreReset+0x3e>
 800501e:	bf00      	nop
 8005020:	00030d40 	.word	0x00030d40

08005024 <USB_CoreInit>:
{
 8005024:	b084      	sub	sp, #16
 8005026:	b510      	push	{r4, lr}
 8005028:	4604      	mov	r4, r0
 800502a:	a803      	add	r0, sp, #12
 800502c:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8005030:	9b08      	ldr	r3, [sp, #32]
 8005032:	2b01      	cmp	r3, #1
 8005034:	d11d      	bne.n	8005072 <USB_CoreInit+0x4e>
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 8005036:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005038:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800503c:	63a3      	str	r3, [r4, #56]	; 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
 800503e:	68e2      	ldr	r2, [r4, #12]
 8005040:	4b16      	ldr	r3, [pc, #88]	; (800509c <USB_CoreInit+0x78>)
 8005042:	4013      	ands	r3, r2
 8005044:	60e3      	str	r3, [r4, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
 8005046:	68e3      	ldr	r3, [r4, #12]
 8005048:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 800504c:	60e3      	str	r3, [r4, #12]
    if (cfg.use_external_vbus == 1U)
 800504e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005050:	2b01      	cmp	r3, #1
 8005052:	d009      	beq.n	8005068 <USB_CoreInit+0x44>
    ret = USB_CoreReset(USBx);
 8005054:	4620      	mov	r0, r4
 8005056:	f7ff ffbf 	bl	8004fd8 <USB_CoreReset>
  if (cfg.dma_enable == 1U)
 800505a:	9b06      	ldr	r3, [sp, #24]
 800505c:	2b01      	cmp	r3, #1
 800505e:	d014      	beq.n	800508a <USB_CoreInit+0x66>
}
 8005060:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005064:	b004      	add	sp, #16
 8005066:	4770      	bx	lr
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
 8005068:	68e3      	ldr	r3, [r4, #12]
 800506a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800506e:	60e3      	str	r3, [r4, #12]
 8005070:	e7f0      	b.n	8005054 <USB_CoreInit+0x30>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
 8005072:	68e3      	ldr	r3, [r4, #12]
 8005074:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005078:	60e3      	str	r3, [r4, #12]
    ret = USB_CoreReset(USBx);
 800507a:	4620      	mov	r0, r4
 800507c:	f7ff ffac 	bl	8004fd8 <USB_CoreReset>
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8005080:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005082:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005086:	63a3      	str	r3, [r4, #56]	; 0x38
 8005088:	e7e7      	b.n	800505a <USB_CoreInit+0x36>
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
 800508a:	68a3      	ldr	r3, [r4, #8]
 800508c:	f043 0306 	orr.w	r3, r3, #6
 8005090:	60a3      	str	r3, [r4, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
 8005092:	68a3      	ldr	r3, [r4, #8]
 8005094:	f043 0320 	orr.w	r3, r3, #32
 8005098:	60a3      	str	r3, [r4, #8]
 800509a:	e7e1      	b.n	8005060 <USB_CoreInit+0x3c>
 800509c:	ffbdffbf 	.word	0xffbdffbf

080050a0 <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
 80050a0:	2a02      	cmp	r2, #2
 80050a2:	d00a      	beq.n	80050ba <USB_SetTurnaroundTime+0x1a>
    UsbTrd = USBD_HS_TRDT_VALUE;
 80050a4:	2109      	movs	r1, #9
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 80050a6:	68c2      	ldr	r2, [r0, #12]
 80050a8:	f422 5270 	bic.w	r2, r2, #15360	; 0x3c00
 80050ac:	60c2      	str	r2, [r0, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
 80050ae:	68c3      	ldr	r3, [r0, #12]
 80050b0:	ea43 2381 	orr.w	r3, r3, r1, lsl #10
 80050b4:	60c3      	str	r3, [r0, #12]
}
 80050b6:	2000      	movs	r0, #0
 80050b8:	4770      	bx	lr
    if ((hclk >= 14200000U) && (hclk < 15000000U))
 80050ba:	4b27      	ldr	r3, [pc, #156]	; (8005158 <USB_SetTurnaroundTime+0xb8>)
 80050bc:	440b      	add	r3, r1
 80050be:	4a27      	ldr	r2, [pc, #156]	; (800515c <USB_SetTurnaroundTime+0xbc>)
 80050c0:	4293      	cmp	r3, r2
 80050c2:	d939      	bls.n	8005138 <USB_SetTurnaroundTime+0x98>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
 80050c4:	4b26      	ldr	r3, [pc, #152]	; (8005160 <USB_SetTurnaroundTime+0xc0>)
 80050c6:	440b      	add	r3, r1
 80050c8:	4a26      	ldr	r2, [pc, #152]	; (8005164 <USB_SetTurnaroundTime+0xc4>)
 80050ca:	4293      	cmp	r3, r2
 80050cc:	d936      	bls.n	800513c <USB_SetTurnaroundTime+0x9c>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
 80050ce:	4b26      	ldr	r3, [pc, #152]	; (8005168 <USB_SetTurnaroundTime+0xc8>)
 80050d0:	440b      	add	r3, r1
 80050d2:	4a26      	ldr	r2, [pc, #152]	; (800516c <USB_SetTurnaroundTime+0xcc>)
 80050d4:	4293      	cmp	r3, r2
 80050d6:	d933      	bls.n	8005140 <USB_SetTurnaroundTime+0xa0>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
 80050d8:	4b25      	ldr	r3, [pc, #148]	; (8005170 <USB_SetTurnaroundTime+0xd0>)
 80050da:	440b      	add	r3, r1
 80050dc:	f502 32c3 	add.w	r2, r2, #99840	; 0x18600
 80050e0:	32a0      	adds	r2, #160	; 0xa0
 80050e2:	4293      	cmp	r3, r2
 80050e4:	d92e      	bls.n	8005144 <USB_SetTurnaroundTime+0xa4>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
 80050e6:	4b23      	ldr	r3, [pc, #140]	; (8005174 <USB_SetTurnaroundTime+0xd4>)
 80050e8:	440b      	add	r3, r1
 80050ea:	4a23      	ldr	r2, [pc, #140]	; (8005178 <USB_SetTurnaroundTime+0xd8>)
 80050ec:	4293      	cmp	r3, r2
 80050ee:	d92b      	bls.n	8005148 <USB_SetTurnaroundTime+0xa8>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
 80050f0:	4b22      	ldr	r3, [pc, #136]	; (800517c <USB_SetTurnaroundTime+0xdc>)
 80050f2:	440b      	add	r3, r1
 80050f4:	f502 2292 	add.w	r2, r2, #299008	; 0x49000
 80050f8:	f502 7278 	add.w	r2, r2, #992	; 0x3e0
 80050fc:	4293      	cmp	r3, r2
 80050fe:	d925      	bls.n	800514c <USB_SetTurnaroundTime+0xac>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
 8005100:	4b1f      	ldr	r3, [pc, #124]	; (8005180 <USB_SetTurnaroundTime+0xe0>)
 8005102:	440b      	add	r3, r1
 8005104:	f502 22c3 	add.w	r2, r2, #399360	; 0x61800
 8005108:	f502 7220 	add.w	r2, r2, #640	; 0x280
 800510c:	4293      	cmp	r3, r2
 800510e:	d91f      	bls.n	8005150 <USB_SetTurnaroundTime+0xb0>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
 8005110:	4b1c      	ldr	r3, [pc, #112]	; (8005184 <USB_SetTurnaroundTime+0xe4>)
 8005112:	440b      	add	r3, r1
 8005114:	f502 12b7 	add.w	r2, r2, #1499136	; 0x16e000
 8005118:	f502 7258 	add.w	r2, r2, #864	; 0x360
 800511c:	4293      	cmp	r3, r2
 800511e:	d919      	bls.n	8005154 <USB_SetTurnaroundTime+0xb4>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 8005120:	4b19      	ldr	r3, [pc, #100]	; (8005188 <USB_SetTurnaroundTime+0xe8>)
 8005122:	440b      	add	r3, r1
 8005124:	f502 2212 	add.w	r2, r2, #598016	; 0x92000
 8005128:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
 800512c:	4293      	cmp	r3, r2
 800512e:	d901      	bls.n	8005134 <USB_SetTurnaroundTime+0x94>
      UsbTrd = 0x6U;
 8005130:	2106      	movs	r1, #6
 8005132:	e7b8      	b.n	80050a6 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0x7U;
 8005134:	2107      	movs	r1, #7
 8005136:	e7b6      	b.n	80050a6 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0xFU;
 8005138:	210f      	movs	r1, #15
 800513a:	e7b4      	b.n	80050a6 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0xEU;
 800513c:	210e      	movs	r1, #14
 800513e:	e7b2      	b.n	80050a6 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0xDU;
 8005140:	210d      	movs	r1, #13
 8005142:	e7b0      	b.n	80050a6 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0xCU;
 8005144:	210c      	movs	r1, #12
 8005146:	e7ae      	b.n	80050a6 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0xBU;
 8005148:	210b      	movs	r1, #11
 800514a:	e7ac      	b.n	80050a6 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0xAU;
 800514c:	210a      	movs	r1, #10
 800514e:	e7aa      	b.n	80050a6 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0x9U;
 8005150:	2109      	movs	r1, #9
 8005152:	e7a8      	b.n	80050a6 <USB_SetTurnaroundTime+0x6>
      UsbTrd = 0x8U;
 8005154:	2108      	movs	r1, #8
 8005156:	e7a6      	b.n	80050a6 <USB_SetTurnaroundTime+0x6>
 8005158:	ff275340 	.word	0xff275340
 800515c:	000c34ff 	.word	0x000c34ff
 8005160:	ff1b1e40 	.word	0xff1b1e40
 8005164:	000f423f 	.word	0x000f423f
 8005168:	ff0bdc00 	.word	0xff0bdc00
 800516c:	00124f7f 	.word	0x00124f7f
 8005170:	fef98c80 	.word	0xfef98c80
 8005174:	fee5b660 	.word	0xfee5b660
 8005178:	0016e35f 	.word	0x0016e35f
 800517c:	feced300 	.word	0xfeced300
 8005180:	feb35bc0 	.word	0xfeb35bc0
 8005184:	fe91ca00 	.word	0xfe91ca00
 8005188:	fe5954e0 	.word	0xfe5954e0

0800518c <USB_EnableGlobalInt>:
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
 800518c:	6883      	ldr	r3, [r0, #8]
 800518e:	f043 0301 	orr.w	r3, r3, #1
 8005192:	6083      	str	r3, [r0, #8]
}
 8005194:	2000      	movs	r0, #0
 8005196:	4770      	bx	lr

08005198 <USB_DisableGlobalInt>:
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 8005198:	6883      	ldr	r3, [r0, #8]
 800519a:	f023 0301 	bic.w	r3, r3, #1
 800519e:	6083      	str	r3, [r0, #8]
}
 80051a0:	2000      	movs	r0, #0
 80051a2:	4770      	bx	lr

080051a4 <USB_FlushTxFifo>:
{
 80051a4:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 80051a6:	2300      	movs	r3, #0
 80051a8:	9301      	str	r3, [sp, #4]
    if (++count > 200000U)
 80051aa:	9b01      	ldr	r3, [sp, #4]
 80051ac:	3301      	adds	r3, #1
 80051ae:	9301      	str	r3, [sp, #4]
 80051b0:	4a0e      	ldr	r2, [pc, #56]	; (80051ec <USB_FlushTxFifo+0x48>)
 80051b2:	4293      	cmp	r3, r2
 80051b4:	d814      	bhi.n	80051e0 <USB_FlushTxFifo+0x3c>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 80051b6:	6903      	ldr	r3, [r0, #16]
 80051b8:	2b00      	cmp	r3, #0
 80051ba:	daf6      	bge.n	80051aa <USB_FlushTxFifo+0x6>
  count = 0U;
 80051bc:	2300      	movs	r3, #0
 80051be:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 80051c0:	0189      	lsls	r1, r1, #6
 80051c2:	f041 0120 	orr.w	r1, r1, #32
 80051c6:	6101      	str	r1, [r0, #16]
    if (++count > 200000U)
 80051c8:	9b01      	ldr	r3, [sp, #4]
 80051ca:	3301      	adds	r3, #1
 80051cc:	9301      	str	r3, [sp, #4]
 80051ce:	4a07      	ldr	r2, [pc, #28]	; (80051ec <USB_FlushTxFifo+0x48>)
 80051d0:	4293      	cmp	r3, r2
 80051d2:	d808      	bhi.n	80051e6 <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 80051d4:	6903      	ldr	r3, [r0, #16]
 80051d6:	f013 0f20 	tst.w	r3, #32
 80051da:	d1f5      	bne.n	80051c8 <USB_FlushTxFifo+0x24>
  return HAL_OK;
 80051dc:	2000      	movs	r0, #0
 80051de:	e000      	b.n	80051e2 <USB_FlushTxFifo+0x3e>
      return HAL_TIMEOUT;
 80051e0:	2003      	movs	r0, #3
}
 80051e2:	b002      	add	sp, #8
 80051e4:	4770      	bx	lr
      return HAL_TIMEOUT;
 80051e6:	2003      	movs	r0, #3
 80051e8:	e7fb      	b.n	80051e2 <USB_FlushTxFifo+0x3e>
 80051ea:	bf00      	nop
 80051ec:	00030d40 	.word	0x00030d40

080051f0 <USB_FlushRxFifo>:
{
 80051f0:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 80051f2:	2300      	movs	r3, #0
 80051f4:	9301      	str	r3, [sp, #4]
    if (++count > 200000U)
 80051f6:	9b01      	ldr	r3, [sp, #4]
 80051f8:	3301      	adds	r3, #1
 80051fa:	9301      	str	r3, [sp, #4]
 80051fc:	4a0d      	ldr	r2, [pc, #52]	; (8005234 <USB_FlushRxFifo+0x44>)
 80051fe:	4293      	cmp	r3, r2
 8005200:	d812      	bhi.n	8005228 <USB_FlushRxFifo+0x38>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8005202:	6903      	ldr	r3, [r0, #16]
 8005204:	2b00      	cmp	r3, #0
 8005206:	daf6      	bge.n	80051f6 <USB_FlushRxFifo+0x6>
  count = 0U;
 8005208:	2300      	movs	r3, #0
 800520a:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 800520c:	2310      	movs	r3, #16
 800520e:	6103      	str	r3, [r0, #16]
    if (++count > 200000U)
 8005210:	9b01      	ldr	r3, [sp, #4]
 8005212:	3301      	adds	r3, #1
 8005214:	9301      	str	r3, [sp, #4]
 8005216:	4a07      	ldr	r2, [pc, #28]	; (8005234 <USB_FlushRxFifo+0x44>)
 8005218:	4293      	cmp	r3, r2
 800521a:	d808      	bhi.n	800522e <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 800521c:	6903      	ldr	r3, [r0, #16]
 800521e:	f013 0f10 	tst.w	r3, #16
 8005222:	d1f5      	bne.n	8005210 <USB_FlushRxFifo+0x20>
  return HAL_OK;
 8005224:	2000      	movs	r0, #0
 8005226:	e000      	b.n	800522a <USB_FlushRxFifo+0x3a>
      return HAL_TIMEOUT;
 8005228:	2003      	movs	r0, #3
}
 800522a:	b002      	add	sp, #8
 800522c:	4770      	bx	lr
      return HAL_TIMEOUT;
 800522e:	2003      	movs	r0, #3
 8005230:	e7fb      	b.n	800522a <USB_FlushRxFifo+0x3a>
 8005232:	bf00      	nop
 8005234:	00030d40 	.word	0x00030d40

08005238 <USB_SetDevSpeed>:
  USBx_DEVICE->DCFG |= speed;
 8005238:	f8d0 3800 	ldr.w	r3, [r0, #2048]	; 0x800
 800523c:	4319      	orrs	r1, r3
 800523e:	f8c0 1800 	str.w	r1, [r0, #2048]	; 0x800
}
 8005242:	2000      	movs	r0, #0
 8005244:	4770      	bx	lr
	...

08005248 <USB_DevInit>:
{
 8005248:	b084      	sub	sp, #16
 800524a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800524e:	4604      	mov	r4, r0
 8005250:	a807      	add	r0, sp, #28
 8005252:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  uint32_t USBx_BASE = (uint32_t)USBx;
 8005256:	4625      	mov	r5, r4
  for (i = 0U; i < 15U; i++)
 8005258:	2300      	movs	r3, #0
 800525a:	e006      	b.n	800526a <USB_DevInit+0x22>
    USBx->DIEPTXF[i] = 0U;
 800525c:	f103 0240 	add.w	r2, r3, #64	; 0x40
 8005260:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8005264:	2100      	movs	r1, #0
 8005266:	6051      	str	r1, [r2, #4]
  for (i = 0U; i < 15U; i++)
 8005268:	3301      	adds	r3, #1
 800526a:	2b0e      	cmp	r3, #14
 800526c:	d9f6      	bls.n	800525c <USB_DevInit+0x14>
  if (cfg.vbus_sensing_enable == 0U)
 800526e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005270:	bb23      	cbnz	r3, 80052bc <USB_DevInit+0x74>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8005272:	f8d4 3804 	ldr.w	r3, [r4, #2052]	; 0x804
 8005276:	f043 0302 	orr.w	r3, r3, #2
 800527a:	f8c4 3804 	str.w	r3, [r4, #2052]	; 0x804
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBDEN;
 800527e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005280:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8005284:	63a3      	str	r3, [r4, #56]	; 0x38
    USBx->GOTGCTL |= USB_OTG_GOTGCTL_BVALOEN;
 8005286:	6823      	ldr	r3, [r4, #0]
 8005288:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800528c:	6023      	str	r3, [r4, #0]
    USBx->GOTGCTL |= USB_OTG_GOTGCTL_BVALOVAL;
 800528e:	6823      	ldr	r3, [r4, #0]
 8005290:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005294:	6023      	str	r3, [r4, #0]
  USBx_PCGCCTL = 0U;
 8005296:	2300      	movs	r3, #0
 8005298:	f8c4 3e00 	str.w	r3, [r4, #3584]	; 0xe00
  USBx_DEVICE->DCFG |= DCFG_FRAME_INTERVAL_80;
 800529c:	f504 6600 	add.w	r6, r4, #2048	; 0x800
 80052a0:	f8d4 3800 	ldr.w	r3, [r4, #2048]	; 0x800
 80052a4:	f8c4 3800 	str.w	r3, [r4, #2048]	; 0x800
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 80052a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80052aa:	2b01      	cmp	r3, #1
 80052ac:	d110      	bne.n	80052d0 <USB_DevInit+0x88>
    if (cfg.speed == USBD_HS_SPEED)
 80052ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80052b0:	b94b      	cbnz	r3, 80052c6 <USB_DevInit+0x7e>
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH);
 80052b2:	2100      	movs	r1, #0
 80052b4:	4620      	mov	r0, r4
 80052b6:	f7ff ffbf 	bl	8005238 <USB_SetDevSpeed>
 80052ba:	e00d      	b.n	80052d8 <USB_DevInit+0x90>
    USBx->GCCFG |= USB_OTG_GCCFG_VBDEN;
 80052bc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80052be:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80052c2:	63a3      	str	r3, [r4, #56]	; 0x38
 80052c4:	e7e7      	b.n	8005296 <USB_DevInit+0x4e>
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
 80052c6:	2101      	movs	r1, #1
 80052c8:	4620      	mov	r0, r4
 80052ca:	f7ff ffb5 	bl	8005238 <USB_SetDevSpeed>
 80052ce:	e003      	b.n	80052d8 <USB_DevInit+0x90>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 80052d0:	2103      	movs	r1, #3
 80052d2:	4620      	mov	r0, r4
 80052d4:	f7ff ffb0 	bl	8005238 <USB_SetDevSpeed>
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 80052d8:	2110      	movs	r1, #16
 80052da:	4620      	mov	r0, r4
 80052dc:	f7ff ff62 	bl	80051a4 <USB_FlushTxFifo>
 80052e0:	4680      	mov	r8, r0
 80052e2:	b108      	cbz	r0, 80052e8 <USB_DevInit+0xa0>
    ret = HAL_ERROR;
 80052e4:	f04f 0801 	mov.w	r8, #1
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 80052e8:	4620      	mov	r0, r4
 80052ea:	f7ff ff81 	bl	80051f0 <USB_FlushRxFifo>
 80052ee:	b108      	cbz	r0, 80052f4 <USB_DevInit+0xac>
    ret = HAL_ERROR;
 80052f0:	f04f 0801 	mov.w	r8, #1
  USBx_DEVICE->DIEPMSK = 0U;
 80052f4:	2300      	movs	r3, #0
 80052f6:	6133      	str	r3, [r6, #16]
  USBx_DEVICE->DOEPMSK = 0U;
 80052f8:	6173      	str	r3, [r6, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 80052fa:	61f3      	str	r3, [r6, #28]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80052fc:	e00a      	b.n	8005314 <USB_DevInit+0xcc>
      if (i == 0U)
 80052fe:	b9c3      	cbnz	r3, 8005332 <USB_DevInit+0xea>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8005300:	f04f 6000 	mov.w	r0, #134217728	; 0x8000000
 8005304:	f8c2 0900 	str.w	r0, [r2, #2304]	; 0x900
    USBx_INEP(i)->DIEPTSIZ = 0U;
 8005308:	2200      	movs	r2, #0
 800530a:	610a      	str	r2, [r1, #16]
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 800530c:	f64f 327f 	movw	r2, #64383	; 0xfb7f
 8005310:	608a      	str	r2, [r1, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8005312:	3301      	adds	r3, #1
 8005314:	9907      	ldr	r1, [sp, #28]
 8005316:	4299      	cmp	r1, r3
 8005318:	d910      	bls.n	800533c <USB_DevInit+0xf4>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800531a:	eb05 1243 	add.w	r2, r5, r3, lsl #5
 800531e:	f502 6110 	add.w	r1, r2, #2304	; 0x900
 8005322:	f8d2 0900 	ldr.w	r0, [r2, #2304]	; 0x900
 8005326:	2800      	cmp	r0, #0
 8005328:	dbe9      	blt.n	80052fe <USB_DevInit+0xb6>
      USBx_INEP(i)->DIEPCTL = 0U;
 800532a:	2000      	movs	r0, #0
 800532c:	f8c2 0900 	str.w	r0, [r2, #2304]	; 0x900
 8005330:	e7ea      	b.n	8005308 <USB_DevInit+0xc0>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8005332:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8005336:	f8c2 0900 	str.w	r0, [r2, #2304]	; 0x900
 800533a:	e7e5      	b.n	8005308 <USB_DevInit+0xc0>
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800533c:	2300      	movs	r3, #0
 800533e:	e00a      	b.n	8005356 <USB_DevInit+0x10e>
      if (i == 0U)
 8005340:	b1bb      	cbz	r3, 8005372 <USB_DevInit+0x12a>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 8005342:	f04f 4790 	mov.w	r7, #1207959552	; 0x48000000
 8005346:	f8c2 7b00 	str.w	r7, [r2, #2816]	; 0xb00
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 800534a:	2200      	movs	r2, #0
 800534c:	6102      	str	r2, [r0, #16]
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 800534e:	f64f 327f 	movw	r2, #64383	; 0xfb7f
 8005352:	6082      	str	r2, [r0, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8005354:	3301      	adds	r3, #1
 8005356:	4299      	cmp	r1, r3
 8005358:	d910      	bls.n	800537c <USB_DevInit+0x134>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 800535a:	eb05 1243 	add.w	r2, r5, r3, lsl #5
 800535e:	f502 6030 	add.w	r0, r2, #2816	; 0xb00
 8005362:	f8d2 7b00 	ldr.w	r7, [r2, #2816]	; 0xb00
 8005366:	2f00      	cmp	r7, #0
 8005368:	dbea      	blt.n	8005340 <USB_DevInit+0xf8>
      USBx_OUTEP(i)->DOEPCTL = 0U;
 800536a:	2700      	movs	r7, #0
 800536c:	f8c2 7b00 	str.w	r7, [r2, #2816]	; 0xb00
 8005370:	e7eb      	b.n	800534a <USB_DevInit+0x102>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 8005372:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
 8005376:	f8c2 7b00 	str.w	r7, [r2, #2816]	; 0xb00
 800537a:	e7e6      	b.n	800534a <USB_DevInit+0x102>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 800537c:	6933      	ldr	r3, [r6, #16]
 800537e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005382:	6133      	str	r3, [r6, #16]
  USBx->GINTMSK = 0U;
 8005384:	2300      	movs	r3, #0
 8005386:	61a3      	str	r3, [r4, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
 8005388:	f06f 4380 	mvn.w	r3, #1073741824	; 0x40000000
 800538c:	6163      	str	r3, [r4, #20]
  if (cfg.dma_enable == 0U)
 800538e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005390:	b91b      	cbnz	r3, 800539a <USB_DevInit+0x152>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 8005392:	69a3      	ldr	r3, [r4, #24]
 8005394:	f043 0310 	orr.w	r3, r3, #16
 8005398:	61a3      	str	r3, [r4, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 800539a:	69a2      	ldr	r2, [r4, #24]
 800539c:	4b0a      	ldr	r3, [pc, #40]	; (80053c8 <USB_DevInit+0x180>)
 800539e:	4313      	orrs	r3, r2
 80053a0:	61a3      	str	r3, [r4, #24]
  if (cfg.Sof_enable != 0U)
 80053a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80053a4:	b11b      	cbz	r3, 80053ae <USB_DevInit+0x166>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 80053a6:	69a3      	ldr	r3, [r4, #24]
 80053a8:	f043 0308 	orr.w	r3, r3, #8
 80053ac:	61a3      	str	r3, [r4, #24]
  if (cfg.vbus_sensing_enable == 1U)
 80053ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80053b0:	2b01      	cmp	r3, #1
 80053b2:	d004      	beq.n	80053be <USB_DevInit+0x176>
}
 80053b4:	4640      	mov	r0, r8
 80053b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80053ba:	b004      	add	sp, #16
 80053bc:	4770      	bx	lr
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 80053be:	69a2      	ldr	r2, [r4, #24]
 80053c0:	4b02      	ldr	r3, [pc, #8]	; (80053cc <USB_DevInit+0x184>)
 80053c2:	4313      	orrs	r3, r2
 80053c4:	61a3      	str	r3, [r4, #24]
 80053c6:	e7f5      	b.n	80053b4 <USB_DevInit+0x16c>
 80053c8:	803c3800 	.word	0x803c3800
 80053cc:	40000004 	.word	0x40000004

080053d0 <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
 80053d0:	f8d0 3808 	ldr.w	r3, [r0, #2056]	; 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
 80053d4:	f013 0306 	ands.w	r3, r3, #6
 80053d8:	d005      	beq.n	80053e6 <USB_GetDevSpeed+0x16>
  else if ((DevEnumSpeed == DSTS_ENUMSPD_FS_PHY_30MHZ_OR_60MHZ) ||
 80053da:	2b06      	cmp	r3, #6
 80053dc:	bf18      	it	ne
 80053de:	2b02      	cmpne	r3, #2
 80053e0:	d103      	bne.n	80053ea <USB_GetDevSpeed+0x1a>
    speed = USBD_FS_SPEED;
 80053e2:	2002      	movs	r0, #2
 80053e4:	4770      	bx	lr
    speed = USBD_HS_SPEED;
 80053e6:	2000      	movs	r0, #0
 80053e8:	4770      	bx	lr
    speed = 0xFU;
 80053ea:	200f      	movs	r0, #15
}
 80053ec:	4770      	bx	lr
	...

080053f0 <USB_ActivateEndpoint>:
{
 80053f0:	b470      	push	{r4, r5, r6}
  uint32_t epnum = (uint32_t)ep->num;
 80053f2:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 80053f4:	784a      	ldrb	r2, [r1, #1]
 80053f6:	2a01      	cmp	r2, #1
 80053f8:	d020      	beq.n	800543c <USB_ActivateEndpoint+0x4c>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
 80053fa:	f8d0 281c 	ldr.w	r2, [r0, #2076]	; 0x81c
 80053fe:	f003 060f 	and.w	r6, r3, #15
 8005402:	2401      	movs	r4, #1
 8005404:	40b4      	lsls	r4, r6
 8005406:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800540a:	f8c0 281c 	str.w	r2, [r0, #2076]	; 0x81c
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
 800540e:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8005412:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 8005416:	f413 4f00 	tst.w	r3, #32768	; 0x8000
 800541a:	d10c      	bne.n	8005436 <USB_ActivateEndpoint+0x46>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 800541c:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	; 0xb00
 8005420:	688b      	ldr	r3, [r1, #8]
 8005422:	f3c3 030a 	ubfx	r3, r3, #0, #11
                                    ((uint32_t)ep->type << 18) |
 8005426:	78c9      	ldrb	r1, [r1, #3]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8005428:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
 800542c:	4313      	orrs	r3, r2
 800542e:	4a13      	ldr	r2, [pc, #76]	; (800547c <USB_ActivateEndpoint+0x8c>)
 8005430:	431a      	orrs	r2, r3
 8005432:	f8c0 2b00 	str.w	r2, [r0, #2816]	; 0xb00
}
 8005436:	2000      	movs	r0, #0
 8005438:	bc70      	pop	{r4, r5, r6}
 800543a:	4770      	bx	lr
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 800543c:	f8d0 481c 	ldr.w	r4, [r0, #2076]	; 0x81c
 8005440:	f003 060f 	and.w	r6, r3, #15
 8005444:	40b2      	lsls	r2, r6
 8005446:	b292      	uxth	r2, r2
 8005448:	4322      	orrs	r2, r4
 800544a:	f8c0 281c 	str.w	r2, [r0, #2076]	; 0x81c
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 800544e:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8005452:	f8d0 2900 	ldr.w	r2, [r0, #2304]	; 0x900
 8005456:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 800545a:	d1ec      	bne.n	8005436 <USB_ActivateEndpoint+0x46>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 800545c:	f8d0 4900 	ldr.w	r4, [r0, #2304]	; 0x900
 8005460:	688a      	ldr	r2, [r1, #8]
 8005462:	f3c2 020a 	ubfx	r2, r2, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 8005466:	78c9      	ldrb	r1, [r1, #3]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8005468:	ea42 4281 	orr.w	r2, r2, r1, lsl #18
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 800546c:	ea42 5383 	orr.w	r3, r2, r3, lsl #22
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8005470:	4323      	orrs	r3, r4
 8005472:	4a02      	ldr	r2, [pc, #8]	; (800547c <USB_ActivateEndpoint+0x8c>)
 8005474:	431a      	orrs	r2, r3
 8005476:	f8c0 2900 	str.w	r2, [r0, #2304]	; 0x900
 800547a:	e7dc      	b.n	8005436 <USB_ActivateEndpoint+0x46>
 800547c:	10008000 	.word	0x10008000

08005480 <USB_DeactivateEndpoint>:
{
 8005480:	b430      	push	{r4, r5}
  uint32_t epnum = (uint32_t)ep->num;
 8005482:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8005484:	784a      	ldrb	r2, [r1, #1]
 8005486:	2a01      	cmp	r2, #1
 8005488:	d024      	beq.n	80054d4 <USB_DeactivateEndpoint+0x54>
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 800548a:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800548e:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8005492:	2a00      	cmp	r2, #0
 8005494:	db50      	blt.n	8005538 <USB_DeactivateEndpoint+0xb8>
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8005496:	f8d0 583c 	ldr.w	r5, [r0, #2108]	; 0x83c
 800549a:	780a      	ldrb	r2, [r1, #0]
 800549c:	f002 020f 	and.w	r2, r2, #15
 80054a0:	2401      	movs	r4, #1
 80054a2:	fa04 f202 	lsl.w	r2, r4, r2
 80054a6:	ea25 4202 	bic.w	r2, r5, r2, lsl #16
 80054aa:	f8c0 283c 	str.w	r2, [r0, #2108]	; 0x83c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 80054ae:	f8d0 281c 	ldr.w	r2, [r0, #2076]	; 0x81c
 80054b2:	7809      	ldrb	r1, [r1, #0]
 80054b4:	f001 010f 	and.w	r1, r1, #15
 80054b8:	408c      	lsls	r4, r1
 80054ba:	ea22 4404 	bic.w	r4, r2, r4, lsl #16
 80054be:	f8c0 481c 	str.w	r4, [r0, #2076]	; 0x81c
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
 80054c2:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	; 0xb00
 80054c6:	4a23      	ldr	r2, [pc, #140]	; (8005554 <USB_DeactivateEndpoint+0xd4>)
 80054c8:	400a      	ands	r2, r1
 80054ca:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
}
 80054ce:	2000      	movs	r0, #0
 80054d0:	bc30      	pop	{r4, r5}
 80054d2:	4770      	bx	lr
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 80054d4:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 80054d8:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 80054dc:	2a00      	cmp	r2, #0
 80054de:	db1e      	blt.n	800551e <USB_DeactivateEndpoint+0x9e>
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 80054e0:	f8d0 583c 	ldr.w	r5, [r0, #2108]	; 0x83c
 80054e4:	780a      	ldrb	r2, [r1, #0]
 80054e6:	f002 020f 	and.w	r2, r2, #15
 80054ea:	2401      	movs	r4, #1
 80054ec:	fa04 f202 	lsl.w	r2, r4, r2
 80054f0:	b292      	uxth	r2, r2
 80054f2:	ea25 0202 	bic.w	r2, r5, r2
 80054f6:	f8c0 283c 	str.w	r2, [r0, #2108]	; 0x83c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 80054fa:	f8d0 281c 	ldr.w	r2, [r0, #2076]	; 0x81c
 80054fe:	7809      	ldrb	r1, [r1, #0]
 8005500:	f001 010f 	and.w	r1, r1, #15
 8005504:	408c      	lsls	r4, r1
 8005506:	b2a4      	uxth	r4, r4
 8005508:	ea22 0404 	bic.w	r4, r2, r4
 800550c:	f8c0 481c 	str.w	r4, [r0, #2076]	; 0x81c
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
 8005510:	f8d3 1900 	ldr.w	r1, [r3, #2304]	; 0x900
 8005514:	4a10      	ldr	r2, [pc, #64]	; (8005558 <USB_DeactivateEndpoint+0xd8>)
 8005516:	400a      	ands	r2, r1
 8005518:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 800551c:	e7d7      	b.n	80054ce <USB_DeactivateEndpoint+0x4e>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
 800551e:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 8005522:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8005526:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
 800552a:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 800552e:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8005532:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 8005536:	e7d3      	b.n	80054e0 <USB_DeactivateEndpoint+0x60>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8005538:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 800553c:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8005540:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
 8005544:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 8005548:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800554c:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8005550:	e7a1      	b.n	8005496 <USB_DeactivateEndpoint+0x16>
 8005552:	bf00      	nop
 8005554:	eff37800 	.word	0xeff37800
 8005558:	ec337800 	.word	0xec337800

0800555c <USB_EP0StartXfer>:
{
 800555c:	b470      	push	{r4, r5, r6}
  uint32_t epnum = (uint32_t)ep->num;
 800555e:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8005560:	784c      	ldrb	r4, [r1, #1]
 8005562:	2c01      	cmp	r4, #1
 8005564:	d024      	beq.n	80055b0 <USB_EP0StartXfer+0x54>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 8005566:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 800556a:	f500 6330 	add.w	r3, r0, #2816	; 0xb00
 800556e:	691d      	ldr	r5, [r3, #16]
 8005570:	4c3e      	ldr	r4, [pc, #248]	; (800566c <USB_EP0StartXfer+0x110>)
 8005572:	402c      	ands	r4, r5
 8005574:	611c      	str	r4, [r3, #16]
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 8005576:	691d      	ldr	r5, [r3, #16]
 8005578:	4c3d      	ldr	r4, [pc, #244]	; (8005670 <USB_EP0StartXfer+0x114>)
 800557a:	402c      	ands	r4, r5
 800557c:	611c      	str	r4, [r3, #16]
    if (ep->xfer_len > 0U)
 800557e:	694c      	ldr	r4, [r1, #20]
 8005580:	b10c      	cbz	r4, 8005586 <USB_EP0StartXfer+0x2a>
      ep->xfer_len = ep->maxpacket;
 8005582:	688c      	ldr	r4, [r1, #8]
 8005584:	614c      	str	r4, [r1, #20]
    USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8005586:	691c      	ldr	r4, [r3, #16]
 8005588:	f444 2400 	orr.w	r4, r4, #524288	; 0x80000
 800558c:	611c      	str	r4, [r3, #16]
    USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & (ep->maxpacket));
 800558e:	691c      	ldr	r4, [r3, #16]
 8005590:	688d      	ldr	r5, [r1, #8]
 8005592:	f3c5 0512 	ubfx	r5, r5, #0, #19
 8005596:	432c      	orrs	r4, r5
 8005598:	611c      	str	r4, [r3, #16]
    if (dma == 1U)
 800559a:	2a01      	cmp	r2, #1
 800559c:	d061      	beq.n	8005662 <USB_EP0StartXfer+0x106>
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 800559e:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 80055a2:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 80055a6:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
}
 80055aa:	2000      	movs	r0, #0
 80055ac:	bc70      	pop	{r4, r5, r6}
 80055ae:	4770      	bx	lr
    if (ep->xfer_len == 0U)
 80055b0:	694c      	ldr	r4, [r1, #20]
 80055b2:	bb5c      	cbnz	r4, 800560c <USB_EP0StartXfer+0xb0>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 80055b4:	eb00 1443 	add.w	r4, r0, r3, lsl #5
 80055b8:	f8d4 6910 	ldr.w	r6, [r4, #2320]	; 0x910
 80055bc:	4d2c      	ldr	r5, [pc, #176]	; (8005670 <USB_EP0StartXfer+0x114>)
 80055be:	4035      	ands	r5, r6
 80055c0:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 80055c4:	f8d4 5910 	ldr.w	r5, [r4, #2320]	; 0x910
 80055c8:	f445 2500 	orr.w	r5, r5, #524288	; 0x80000
 80055cc:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 80055d0:	f8d4 6910 	ldr.w	r6, [r4, #2320]	; 0x910
 80055d4:	4d25      	ldr	r5, [pc, #148]	; (800566c <USB_EP0StartXfer+0x110>)
 80055d6:	4035      	ands	r5, r6
 80055d8:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
    if (dma == 1U)
 80055dc:	2a01      	cmp	r2, #1
 80055de:	d031      	beq.n	8005644 <USB_EP0StartXfer+0xe8>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 80055e0:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 80055e4:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 80055e8:	f042 4204 	orr.w	r2, r2, #2214592512	; 0x84000000
 80055ec:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
      if (ep->xfer_len > 0U)
 80055f0:	694b      	ldr	r3, [r1, #20]
 80055f2:	2b00      	cmp	r3, #0
 80055f4:	d0d9      	beq.n	80055aa <USB_EP0StartXfer+0x4e>
        USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 80055f6:	f8d0 2834 	ldr.w	r2, [r0, #2100]	; 0x834
 80055fa:	7809      	ldrb	r1, [r1, #0]
 80055fc:	f001 040f 	and.w	r4, r1, #15
 8005600:	2101      	movs	r1, #1
 8005602:	40a1      	lsls	r1, r4
 8005604:	430a      	orrs	r2, r1
 8005606:	f8c0 2834 	str.w	r2, [r0, #2100]	; 0x834
 800560a:	e7ce      	b.n	80055aa <USB_EP0StartXfer+0x4e>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 800560c:	eb00 1443 	add.w	r4, r0, r3, lsl #5
 8005610:	f504 6410 	add.w	r4, r4, #2304	; 0x900
 8005614:	6926      	ldr	r6, [r4, #16]
 8005616:	4d15      	ldr	r5, [pc, #84]	; (800566c <USB_EP0StartXfer+0x110>)
 8005618:	4035      	ands	r5, r6
 800561a:	6125      	str	r5, [r4, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 800561c:	6926      	ldr	r6, [r4, #16]
 800561e:	4d14      	ldr	r5, [pc, #80]	; (8005670 <USB_EP0StartXfer+0x114>)
 8005620:	4035      	ands	r5, r6
 8005622:	6125      	str	r5, [r4, #16]
      if (ep->xfer_len > ep->maxpacket)
 8005624:	694e      	ldr	r6, [r1, #20]
 8005626:	688d      	ldr	r5, [r1, #8]
 8005628:	42ae      	cmp	r6, r5
 800562a:	d900      	bls.n	800562e <USB_EP0StartXfer+0xd2>
        ep->xfer_len = ep->maxpacket;
 800562c:	614d      	str	r5, [r1, #20]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 800562e:	6925      	ldr	r5, [r4, #16]
 8005630:	f445 2500 	orr.w	r5, r5, #524288	; 0x80000
 8005634:	6125      	str	r5, [r4, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8005636:	6925      	ldr	r5, [r4, #16]
 8005638:	694e      	ldr	r6, [r1, #20]
 800563a:	f3c6 0612 	ubfx	r6, r6, #0, #19
 800563e:	4335      	orrs	r5, r6
 8005640:	6125      	str	r5, [r4, #16]
 8005642:	e7cb      	b.n	80055dc <USB_EP0StartXfer+0x80>
      if ((uint32_t)ep->dma_addr != 0U)
 8005644:	690a      	ldr	r2, [r1, #16]
 8005646:	b11a      	cbz	r2, 8005650 <USB_EP0StartXfer+0xf4>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 8005648:	eb00 1143 	add.w	r1, r0, r3, lsl #5
 800564c:	f8c1 2914 	str.w	r2, [r1, #2324]	; 0x914
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8005650:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8005654:	f8d0 2900 	ldr.w	r2, [r0, #2304]	; 0x900
 8005658:	f042 4204 	orr.w	r2, r2, #2214592512	; 0x84000000
 800565c:	f8c0 2900 	str.w	r2, [r0, #2304]	; 0x900
 8005660:	e7a3      	b.n	80055aa <USB_EP0StartXfer+0x4e>
      if ((uint32_t)ep->xfer_buff != 0U)
 8005662:	68ca      	ldr	r2, [r1, #12]
 8005664:	2a00      	cmp	r2, #0
 8005666:	d09a      	beq.n	800559e <USB_EP0StartXfer+0x42>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 8005668:	615a      	str	r2, [r3, #20]
 800566a:	e798      	b.n	800559e <USB_EP0StartXfer+0x42>
 800566c:	fff80000 	.word	0xfff80000
 8005670:	e007ffff 	.word	0xe007ffff

08005674 <USB_WritePacket>:
{
 8005674:	b470      	push	{r4, r5, r6}
 8005676:	f89d 400c 	ldrb.w	r4, [sp, #12]
  if (dma == 0U)
 800567a:	b964      	cbnz	r4, 8005696 <USB_WritePacket+0x22>
    count32b = ((uint32_t)len + 3U) / 4U;
 800567c:	3303      	adds	r3, #3
 800567e:	089d      	lsrs	r5, r3, #2
    for (i = 0U; i < count32b; i++)
 8005680:	e007      	b.n	8005692 <USB_WritePacket+0x1e>
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8005682:	eb00 3302 	add.w	r3, r0, r2, lsl #12
 8005686:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800568a:	f851 6b04 	ldr.w	r6, [r1], #4
 800568e:	601e      	str	r6, [r3, #0]
    for (i = 0U; i < count32b; i++)
 8005690:	3401      	adds	r4, #1
 8005692:	42ac      	cmp	r4, r5
 8005694:	d3f5      	bcc.n	8005682 <USB_WritePacket+0xe>
}
 8005696:	2000      	movs	r0, #0
 8005698:	bc70      	pop	{r4, r5, r6}
 800569a:	4770      	bx	lr

0800569c <USB_EPStartXfer>:
{
 800569c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800569e:	b083      	sub	sp, #12
  uint32_t epnum = (uint32_t)ep->num;
 80056a0:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 80056a2:	784c      	ldrb	r4, [r1, #1]
 80056a4:	2c01      	cmp	r4, #1
 80056a6:	d029      	beq.n	80056fc <USB_EPStartXfer+0x60>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 80056a8:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 80056ac:	f503 6430 	add.w	r4, r3, #2816	; 0xb00
 80056b0:	6926      	ldr	r6, [r4, #16]
 80056b2:	4d7d      	ldr	r5, [pc, #500]	; (80058a8 <USB_EPStartXfer+0x20c>)
 80056b4:	4035      	ands	r5, r6
 80056b6:	6125      	str	r5, [r4, #16]
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 80056b8:	6926      	ldr	r6, [r4, #16]
 80056ba:	4d7c      	ldr	r5, [pc, #496]	; (80058ac <USB_EPStartXfer+0x210>)
 80056bc:	4035      	ands	r5, r6
 80056be:	6125      	str	r5, [r4, #16]
    if (ep->xfer_len == 0U)
 80056c0:	694d      	ldr	r5, [r1, #20]
 80056c2:	2d00      	cmp	r5, #0
 80056c4:	f040 80c1 	bne.w	800584a <USB_EPStartXfer+0x1ae>
      USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
 80056c8:	6925      	ldr	r5, [r4, #16]
 80056ca:	688e      	ldr	r6, [r1, #8]
 80056cc:	f3c6 0612 	ubfx	r6, r6, #0, #19
 80056d0:	4335      	orrs	r5, r6
 80056d2:	6125      	str	r5, [r4, #16]
      USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 80056d4:	6925      	ldr	r5, [r4, #16]
 80056d6:	f445 2500 	orr.w	r5, r5, #524288	; 0x80000
 80056da:	6125      	str	r5, [r4, #16]
    if (dma == 1U)
 80056dc:	2a01      	cmp	r2, #1
 80056de:	f000 80c9 	beq.w	8005874 <USB_EPStartXfer+0x1d8>
    if (ep->type == EP_TYPE_ISOC)
 80056e2:	78ca      	ldrb	r2, [r1, #3]
 80056e4:	2a01      	cmp	r2, #1
 80056e6:	f000 80cb 	beq.w	8005880 <USB_EPStartXfer+0x1e4>
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 80056ea:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 80056ee:	f042 4204 	orr.w	r2, r2, #2214592512	; 0x84000000
 80056f2:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
}
 80056f6:	2000      	movs	r0, #0
 80056f8:	b003      	add	sp, #12
 80056fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if (ep->xfer_len == 0U)
 80056fc:	694c      	ldr	r4, [r1, #20]
 80056fe:	bb74      	cbnz	r4, 800575e <USB_EPStartXfer+0xc2>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8005700:	eb00 1443 	add.w	r4, r0, r3, lsl #5
 8005704:	f8d4 6910 	ldr.w	r6, [r4, #2320]	; 0x910
 8005708:	4d68      	ldr	r5, [pc, #416]	; (80058ac <USB_EPStartXfer+0x210>)
 800570a:	4035      	ands	r5, r6
 800570c:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8005710:	f8d4 5910 	ldr.w	r5, [r4, #2320]	; 0x910
 8005714:	f445 2500 	orr.w	r5, r5, #524288	; 0x80000
 8005718:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 800571c:	f8d4 6910 	ldr.w	r6, [r4, #2320]	; 0x910
 8005720:	4d61      	ldr	r5, [pc, #388]	; (80058a8 <USB_EPStartXfer+0x20c>)
 8005722:	4035      	ands	r5, r6
 8005724:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
    if (dma == 1U)
 8005728:	2a01      	cmp	r2, #1
 800572a:	d04a      	beq.n	80057c2 <USB_EPStartXfer+0x126>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 800572c:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 8005730:	f8d3 4900 	ldr.w	r4, [r3, #2304]	; 0x900
 8005734:	f044 4404 	orr.w	r4, r4, #2214592512	; 0x84000000
 8005738:	f8c3 4900 	str.w	r4, [r3, #2304]	; 0x900
      if (ep->type != EP_TYPE_ISOC)
 800573c:	78cc      	ldrb	r4, [r1, #3]
 800573e:	2c01      	cmp	r4, #1
 8005740:	d068      	beq.n	8005814 <USB_EPStartXfer+0x178>
        if (ep->xfer_len > 0U)
 8005742:	694b      	ldr	r3, [r1, #20]
 8005744:	2b00      	cmp	r3, #0
 8005746:	d0d6      	beq.n	80056f6 <USB_EPStartXfer+0x5a>
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 8005748:	f8d0 2834 	ldr.w	r2, [r0, #2100]	; 0x834
 800574c:	7809      	ldrb	r1, [r1, #0]
 800574e:	f001 040f 	and.w	r4, r1, #15
 8005752:	2101      	movs	r1, #1
 8005754:	40a1      	lsls	r1, r4
 8005756:	430a      	orrs	r2, r1
 8005758:	f8c0 2834 	str.w	r2, [r0, #2100]	; 0x834
 800575c:	e7cb      	b.n	80056f6 <USB_EPStartXfer+0x5a>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 800575e:	eb00 1443 	add.w	r4, r0, r3, lsl #5
 8005762:	f8d4 6910 	ldr.w	r6, [r4, #2320]	; 0x910
 8005766:	4d50      	ldr	r5, [pc, #320]	; (80058a8 <USB_EPStartXfer+0x20c>)
 8005768:	4035      	ands	r5, r6
 800576a:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 800576e:	f8d4 6910 	ldr.w	r6, [r4, #2320]	; 0x910
 8005772:	4d4e      	ldr	r5, [pc, #312]	; (80058ac <USB_EPStartXfer+0x210>)
 8005774:	4035      	ands	r5, r6
 8005776:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT &
 800577a:	f8d4 6910 	ldr.w	r6, [r4, #2320]	; 0x910
                                     (((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket) << 19));
 800577e:	694d      	ldr	r5, [r1, #20]
 8005780:	688f      	ldr	r7, [r1, #8]
 8005782:	443d      	add	r5, r7
 8005784:	3d01      	subs	r5, #1
 8005786:	fbb5 f5f7 	udiv	r5, r5, r7
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT &
 800578a:	4f49      	ldr	r7, [pc, #292]	; (80058b0 <USB_EPStartXfer+0x214>)
 800578c:	ea07 45c5 	and.w	r5, r7, r5, lsl #19
 8005790:	4335      	orrs	r5, r6
 8005792:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8005796:	f8d4 5910 	ldr.w	r5, [r4, #2320]	; 0x910
 800579a:	694e      	ldr	r6, [r1, #20]
 800579c:	f3c6 0612 	ubfx	r6, r6, #0, #19
 80057a0:	4335      	orrs	r5, r6
 80057a2:	f8c4 5910 	str.w	r5, [r4, #2320]	; 0x910
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 80057a6:	f504 6410 	add.w	r4, r4, #2304	; 0x900
      if (ep->type == EP_TYPE_ISOC)
 80057aa:	78cd      	ldrb	r5, [r1, #3]
 80057ac:	2d01      	cmp	r5, #1
 80057ae:	d1bb      	bne.n	8005728 <USB_EPStartXfer+0x8c>
        USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
 80057b0:	6925      	ldr	r5, [r4, #16]
 80057b2:	f025 45c0 	bic.w	r5, r5, #1610612736	; 0x60000000
 80057b6:	6125      	str	r5, [r4, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (1U << 29));
 80057b8:	6925      	ldr	r5, [r4, #16]
 80057ba:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 80057be:	6125      	str	r5, [r4, #16]
 80057c0:	e7b2      	b.n	8005728 <USB_EPStartXfer+0x8c>
      if ((uint32_t)ep->dma_addr != 0U)
 80057c2:	690a      	ldr	r2, [r1, #16]
 80057c4:	b11a      	cbz	r2, 80057ce <USB_EPStartXfer+0x132>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 80057c6:	eb00 1443 	add.w	r4, r0, r3, lsl #5
 80057ca:	f8c4 2914 	str.w	r2, [r4, #2324]	; 0x914
      if (ep->type == EP_TYPE_ISOC)
 80057ce:	78ca      	ldrb	r2, [r1, #3]
 80057d0:	2a01      	cmp	r2, #1
 80057d2:	d008      	beq.n	80057e6 <USB_EPStartXfer+0x14a>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 80057d4:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 80057d8:	f8d3 2900 	ldr.w	r2, [r3, #2304]	; 0x900
 80057dc:	f042 4204 	orr.w	r2, r2, #2214592512	; 0x84000000
 80057e0:	f8c3 2900 	str.w	r2, [r3, #2304]	; 0x900
 80057e4:	e787      	b.n	80056f6 <USB_EPStartXfer+0x5a>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 80057e6:	f8d0 2808 	ldr.w	r2, [r0, #2056]	; 0x808
 80057ea:	f412 7f80 	tst.w	r2, #256	; 0x100
 80057ee:	d108      	bne.n	8005802 <USB_EPStartXfer+0x166>
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 80057f0:	eb00 1143 	add.w	r1, r0, r3, lsl #5
 80057f4:	f8d1 2900 	ldr.w	r2, [r1, #2304]	; 0x900
 80057f8:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 80057fc:	f8c1 2900 	str.w	r2, [r1, #2304]	; 0x900
 8005800:	e7e8      	b.n	80057d4 <USB_EPStartXfer+0x138>
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 8005802:	eb00 1143 	add.w	r1, r0, r3, lsl #5
 8005806:	f8d1 2900 	ldr.w	r2, [r1, #2304]	; 0x900
 800580a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800580e:	f8c1 2900 	str.w	r2, [r1, #2304]	; 0x900
 8005812:	e7df      	b.n	80057d4 <USB_EPStartXfer+0x138>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8005814:	f8d0 4808 	ldr.w	r4, [r0, #2056]	; 0x808
 8005818:	f414 7f80 	tst.w	r4, #256	; 0x100
 800581c:	d10e      	bne.n	800583c <USB_EPStartXfer+0x1a0>
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 800581e:	f8d3 4900 	ldr.w	r4, [r3, #2304]	; 0x900
 8005822:	f044 5400 	orr.w	r4, r4, #536870912	; 0x20000000
 8005826:	f8c3 4900 	str.w	r4, [r3, #2304]	; 0x900
 800582a:	4614      	mov	r4, r2
 800582c:	460b      	mov	r3, r1
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
 800582e:	68c9      	ldr	r1, [r1, #12]
 8005830:	781a      	ldrb	r2, [r3, #0]
 8005832:	8a9b      	ldrh	r3, [r3, #20]
 8005834:	9400      	str	r4, [sp, #0]
 8005836:	f7ff ff1d 	bl	8005674 <USB_WritePacket>
 800583a:	e75c      	b.n	80056f6 <USB_EPStartXfer+0x5a>
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 800583c:	f8d3 4900 	ldr.w	r4, [r3, #2304]	; 0x900
 8005840:	f044 5480 	orr.w	r4, r4, #268435456	; 0x10000000
 8005844:	f8c3 4900 	str.w	r4, [r3, #2304]	; 0x900
 8005848:	e7ef      	b.n	800582a <USB_EPStartXfer+0x18e>
      pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 800584a:	688e      	ldr	r6, [r1, #8]
 800584c:	4435      	add	r5, r6
 800584e:	3d01      	subs	r5, #1
 8005850:	fbb5 f5f6 	udiv	r5, r5, r6
      USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8005854:	6926      	ldr	r6, [r4, #16]
 8005856:	4f16      	ldr	r7, [pc, #88]	; (80058b0 <USB_EPStartXfer+0x214>)
 8005858:	ea07 47c5 	and.w	r7, r7, r5, lsl #19
 800585c:	433e      	orrs	r6, r7
 800585e:	6126      	str	r6, [r4, #16]
      USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & (ep->maxpacket * pktcnt);
 8005860:	6927      	ldr	r7, [r4, #16]
 8005862:	688e      	ldr	r6, [r1, #8]
 8005864:	b2ad      	uxth	r5, r5
 8005866:	fb06 f505 	mul.w	r5, r6, r5
 800586a:	f3c5 0512 	ubfx	r5, r5, #0, #19
 800586e:	433d      	orrs	r5, r7
 8005870:	6125      	str	r5, [r4, #16]
 8005872:	e733      	b.n	80056dc <USB_EPStartXfer+0x40>
      if ((uint32_t)ep->xfer_buff != 0U)
 8005874:	68ca      	ldr	r2, [r1, #12]
 8005876:	2a00      	cmp	r2, #0
 8005878:	f43f af33 	beq.w	80056e2 <USB_EPStartXfer+0x46>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 800587c:	6162      	str	r2, [r4, #20]
 800587e:	e730      	b.n	80056e2 <USB_EPStartXfer+0x46>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8005880:	f8d0 2808 	ldr.w	r2, [r0, #2056]	; 0x808
 8005884:	f412 7f80 	tst.w	r2, #256	; 0x100
 8005888:	d106      	bne.n	8005898 <USB_EPStartXfer+0x1fc>
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
 800588a:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 800588e:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8005892:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 8005896:	e728      	b.n	80056ea <USB_EPStartXfer+0x4e>
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
 8005898:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	; 0xb00
 800589c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80058a0:	f8c3 2b00 	str.w	r2, [r3, #2816]	; 0xb00
 80058a4:	e721      	b.n	80056ea <USB_EPStartXfer+0x4e>
 80058a6:	bf00      	nop
 80058a8:	fff80000 	.word	0xfff80000
 80058ac:	e007ffff 	.word	0xe007ffff
 80058b0:	1ff80000 	.word	0x1ff80000

080058b4 <USB_ReadPacket>:
{
 80058b4:	b470      	push	{r4, r5, r6}
 80058b6:	b083      	sub	sp, #12
  uint32_t USBx_BASE = (uint32_t)USBx;
 80058b8:	4606      	mov	r6, r0
  uint32_t count32b = (uint32_t)len >> 2U;
 80058ba:	0895      	lsrs	r5, r2, #2
  uint16_t remaining_bytes = len % 4U;
 80058bc:	f002 0203 	and.w	r2, r2, #3
  for (i = 0U; i < count32b; i++)
 80058c0:	2300      	movs	r3, #0
 80058c2:	e005      	b.n	80058d0 <USB_ReadPacket+0x1c>
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 80058c4:	f506 5480 	add.w	r4, r6, #4096	; 0x1000
 80058c8:	6824      	ldr	r4, [r4, #0]
 80058ca:	f841 4b04 	str.w	r4, [r1], #4
  for (i = 0U; i < count32b; i++)
 80058ce:	3301      	adds	r3, #1
 80058d0:	42ab      	cmp	r3, r5
 80058d2:	d3f7      	bcc.n	80058c4 <USB_ReadPacket+0x10>
  if (remaining_bytes != 0U)
 80058d4:	b19a      	cbz	r2, 80058fe <USB_ReadPacket+0x4a>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
 80058d6:	f500 5080 	add.w	r0, r0, #4096	; 0x1000
 80058da:	6803      	ldr	r3, [r0, #0]
 80058dc:	9301      	str	r3, [sp, #4]
 80058de:	4608      	mov	r0, r1
    i = 0U;
 80058e0:	2400      	movs	r4, #0
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
 80058e2:	b2e3      	uxtb	r3, r4
 80058e4:	00d9      	lsls	r1, r3, #3
 80058e6:	9b01      	ldr	r3, [sp, #4]
 80058e8:	40cb      	lsrs	r3, r1
 80058ea:	f800 3b01 	strb.w	r3, [r0], #1
      i++;
 80058ee:	3401      	adds	r4, #1
      remaining_bytes--;
 80058f0:	3a01      	subs	r2, #1
 80058f2:	b292      	uxth	r2, r2
    } while (remaining_bytes != 0U);
 80058f4:	2a00      	cmp	r2, #0
 80058f6:	d1f4      	bne.n	80058e2 <USB_ReadPacket+0x2e>
}
 80058f8:	b003      	add	sp, #12
 80058fa:	bc70      	pop	{r4, r5, r6}
 80058fc:	4770      	bx	lr
 80058fe:	4608      	mov	r0, r1
  return ((void *)pDest);
 8005900:	e7fa      	b.n	80058f8 <USB_ReadPacket+0x44>

08005902 <USB_EPSetStall>:
  uint32_t epnum = (uint32_t)ep->num;
 8005902:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8005904:	784a      	ldrb	r2, [r1, #1]
 8005906:	2a01      	cmp	r2, #1
 8005908:	d014      	beq.n	8005934 <USB_EPSetStall+0x32>
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
 800590a:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 800590e:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	; 0xb00
 8005912:	2a00      	cmp	r2, #0
 8005914:	db06      	blt.n	8005924 <USB_EPSetStall+0x22>
 8005916:	b12b      	cbz	r3, 8005924 <USB_EPSetStall+0x22>
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
 8005918:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 800591c:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8005920:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
 8005924:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 8005928:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800592c:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
}
 8005930:	2000      	movs	r0, #0
 8005932:	4770      	bx	lr
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 8005934:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8005938:	f8d0 2900 	ldr.w	r2, [r0, #2304]	; 0x900
 800593c:	2a00      	cmp	r2, #0
 800593e:	db06      	blt.n	800594e <USB_EPSetStall+0x4c>
 8005940:	b12b      	cbz	r3, 800594e <USB_EPSetStall+0x4c>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
 8005942:	f8d0 3900 	ldr.w	r3, [r0, #2304]	; 0x900
 8005946:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800594a:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
 800594e:	f8d0 3900 	ldr.w	r3, [r0, #2304]	; 0x900
 8005952:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8005956:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
 800595a:	e7e9      	b.n	8005930 <USB_EPSetStall+0x2e>

0800595c <USB_EPClearStall>:
  uint32_t epnum = (uint32_t)ep->num;
 800595c:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 800595e:	784a      	ldrb	r2, [r1, #1]
 8005960:	2a01      	cmp	r2, #1
 8005962:	d00e      	beq.n	8005982 <USB_EPClearStall+0x26>
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8005964:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8005968:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 800596c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8005970:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8005974:	78cb      	ldrb	r3, [r1, #3]
 8005976:	3b02      	subs	r3, #2
 8005978:	b2db      	uxtb	r3, r3
 800597a:	2b01      	cmp	r3, #1
 800597c:	d915      	bls.n	80059aa <USB_EPClearStall+0x4e>
}
 800597e:	2000      	movs	r0, #0
 8005980:	4770      	bx	lr
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8005982:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8005986:	f8d0 3900 	ldr.w	r3, [r0, #2304]	; 0x900
 800598a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800598e:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8005992:	78cb      	ldrb	r3, [r1, #3]
 8005994:	3b02      	subs	r3, #2
 8005996:	b2db      	uxtb	r3, r3
 8005998:	2b01      	cmp	r3, #1
 800599a:	d8f0      	bhi.n	800597e <USB_EPClearStall+0x22>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 800599c:	f8d0 3900 	ldr.w	r3, [r0, #2304]	; 0x900
 80059a0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80059a4:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
 80059a8:	e7e9      	b.n	800597e <USB_EPClearStall+0x22>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 80059aa:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 80059ae:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80059b2:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
 80059b6:	e7e2      	b.n	800597e <USB_EPClearStall+0x22>

080059b8 <USB_SetDevAddress>:
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
 80059b8:	f8d0 3800 	ldr.w	r3, [r0, #2048]	; 0x800
 80059bc:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 80059c0:	f8c0 3800 	str.w	r3, [r0, #2048]	; 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
 80059c4:	f8d0 3800 	ldr.w	r3, [r0, #2048]	; 0x800
 80059c8:	0109      	lsls	r1, r1, #4
 80059ca:	f401 61fe 	and.w	r1, r1, #2032	; 0x7f0
 80059ce:	430b      	orrs	r3, r1
 80059d0:	f8c0 3800 	str.w	r3, [r0, #2048]	; 0x800
}
 80059d4:	2000      	movs	r0, #0
 80059d6:	4770      	bx	lr

080059d8 <USB_DevConnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 80059d8:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	; 0xe00
 80059dc:	f023 0303 	bic.w	r3, r3, #3
 80059e0:	f8c0 3e00 	str.w	r3, [r0, #3584]	; 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
 80059e4:	f8d0 3804 	ldr.w	r3, [r0, #2052]	; 0x804
 80059e8:	f023 0302 	bic.w	r3, r3, #2
 80059ec:	f8c0 3804 	str.w	r3, [r0, #2052]	; 0x804
}
 80059f0:	2000      	movs	r0, #0
 80059f2:	4770      	bx	lr

080059f4 <USB_DevDisconnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 80059f4:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	; 0xe00
 80059f8:	f023 0303 	bic.w	r3, r3, #3
 80059fc:	f8c0 3e00 	str.w	r3, [r0, #3584]	; 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8005a00:	f8d0 3804 	ldr.w	r3, [r0, #2052]	; 0x804
 8005a04:	f043 0302 	orr.w	r3, r3, #2
 8005a08:	f8c0 3804 	str.w	r3, [r0, #2052]	; 0x804
}
 8005a0c:	2000      	movs	r0, #0
 8005a0e:	4770      	bx	lr

08005a10 <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
 8005a10:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
 8005a12:	6980      	ldr	r0, [r0, #24]
}
 8005a14:	4010      	ands	r0, r2
 8005a16:	4770      	bx	lr

08005a18 <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 8005a18:	f8d0 3818 	ldr.w	r3, [r0, #2072]	; 0x818
 8005a1c:	f500 6000 	add.w	r0, r0, #2048	; 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8005a20:	69c0      	ldr	r0, [r0, #28]
 8005a22:	4018      	ands	r0, r3
}
 8005a24:	0c00      	lsrs	r0, r0, #16
 8005a26:	4770      	bx	lr

08005a28 <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 8005a28:	f8d0 3818 	ldr.w	r3, [r0, #2072]	; 0x818
 8005a2c:	f500 6000 	add.w	r0, r0, #2048	; 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8005a30:	69c0      	ldr	r0, [r0, #28]
 8005a32:	4018      	ands	r0, r3
}
 8005a34:	b280      	uxth	r0, r0
 8005a36:	4770      	bx	lr

08005a38 <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 8005a38:	eb00 1141 	add.w	r1, r0, r1, lsl #5
 8005a3c:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	; 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
 8005a40:	f500 6000 	add.w	r0, r0, #2048	; 0x800
 8005a44:	6940      	ldr	r0, [r0, #20]
}
 8005a46:	4010      	ands	r0, r2
 8005a48:	4770      	bx	lr

08005a4a <USB_ReadDevInEPInterrupt>:
{
 8005a4a:	b410      	push	{r4}
  msk = USBx_DEVICE->DIEPMSK;
 8005a4c:	f8d0 4810 	ldr.w	r4, [r0, #2064]	; 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
 8005a50:	f8d0 3834 	ldr.w	r3, [r0, #2100]	; 0x834
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 8005a54:	f001 020f 	and.w	r2, r1, #15
 8005a58:	40d3      	lsrs	r3, r2
 8005a5a:	01db      	lsls	r3, r3, #7
 8005a5c:	b2db      	uxtb	r3, r3
 8005a5e:	4323      	orrs	r3, r4
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 8005a60:	eb00 1041 	add.w	r0, r0, r1, lsl #5
 8005a64:	f500 6010 	add.w	r0, r0, #2304	; 0x900
 8005a68:	6880      	ldr	r0, [r0, #8]
}
 8005a6a:	4018      	ands	r0, r3
 8005a6c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005a70:	4770      	bx	lr

08005a72 <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
 8005a72:	6940      	ldr	r0, [r0, #20]
}
 8005a74:	f000 0001 	and.w	r0, r0, #1
 8005a78:	4770      	bx	lr

08005a7a <USB_SetCurrentMode>:
{
 8005a7a:	b538      	push	{r3, r4, r5, lr}
 8005a7c:	4605      	mov	r5, r0
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8005a7e:	68c3      	ldr	r3, [r0, #12]
 8005a80:	f023 43c0 	bic.w	r3, r3, #1610612736	; 0x60000000
 8005a84:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8005a86:	2901      	cmp	r1, #1
 8005a88:	d013      	beq.n	8005ab2 <USB_SetCurrentMode+0x38>
  else if (mode == USB_DEVICE_MODE)
 8005a8a:	bb29      	cbnz	r1, 8005ad8 <USB_SetCurrentMode+0x5e>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 8005a8c:	68c3      	ldr	r3, [r0, #12]
 8005a8e:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8005a92:	60c3      	str	r3, [r0, #12]
  uint32_t ms = 0U;
 8005a94:	2400      	movs	r4, #0
      HAL_Delay(1U);
 8005a96:	2001      	movs	r0, #1
 8005a98:	f7fb fcbc 	bl	8001414 <HAL_Delay>
      ms++;
 8005a9c:	3401      	adds	r4, #1
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < 50U));
 8005a9e:	4628      	mov	r0, r5
 8005aa0:	f7ff ffe7 	bl	8005a72 <USB_GetMode>
 8005aa4:	b108      	cbz	r0, 8005aaa <USB_SetCurrentMode+0x30>
 8005aa6:	2c31      	cmp	r4, #49	; 0x31
 8005aa8:	d9f5      	bls.n	8005a96 <USB_SetCurrentMode+0x1c>
  if (ms == 50U)
 8005aaa:	2c32      	cmp	r4, #50	; 0x32
 8005aac:	d012      	beq.n	8005ad4 <USB_SetCurrentMode+0x5a>
  return HAL_OK;
 8005aae:	2000      	movs	r0, #0
}
 8005ab0:	bd38      	pop	{r3, r4, r5, pc}
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 8005ab2:	68c3      	ldr	r3, [r0, #12]
 8005ab4:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8005ab8:	60c3      	str	r3, [r0, #12]
  uint32_t ms = 0U;
 8005aba:	2400      	movs	r4, #0
      HAL_Delay(1U);
 8005abc:	2001      	movs	r0, #1
 8005abe:	f7fb fca9 	bl	8001414 <HAL_Delay>
      ms++;
 8005ac2:	3401      	adds	r4, #1
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < 50U));
 8005ac4:	4628      	mov	r0, r5
 8005ac6:	f7ff ffd4 	bl	8005a72 <USB_GetMode>
 8005aca:	2801      	cmp	r0, #1
 8005acc:	d0ed      	beq.n	8005aaa <USB_SetCurrentMode+0x30>
 8005ace:	2c31      	cmp	r4, #49	; 0x31
 8005ad0:	d9f4      	bls.n	8005abc <USB_SetCurrentMode+0x42>
 8005ad2:	e7ea      	b.n	8005aaa <USB_SetCurrentMode+0x30>
    return HAL_ERROR;
 8005ad4:	2001      	movs	r0, #1
 8005ad6:	e7eb      	b.n	8005ab0 <USB_SetCurrentMode+0x36>
    return HAL_ERROR;
 8005ad8:	2001      	movs	r0, #1
 8005ada:	e7e9      	b.n	8005ab0 <USB_SetCurrentMode+0x36>

08005adc <USB_ActivateSetup>:
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
 8005adc:	f8d0 2900 	ldr.w	r2, [r0, #2304]	; 0x900
 8005ae0:	4b05      	ldr	r3, [pc, #20]	; (8005af8 <USB_ActivateSetup+0x1c>)
 8005ae2:	4013      	ands	r3, r2
 8005ae4:	f8c0 3900 	str.w	r3, [r0, #2304]	; 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
 8005ae8:	f8d0 3804 	ldr.w	r3, [r0, #2052]	; 0x804
 8005aec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005af0:	f8c0 3804 	str.w	r3, [r0, #2052]	; 0x804
}
 8005af4:	2000      	movs	r0, #0
 8005af6:	4770      	bx	lr
 8005af8:	fffff800 	.word	0xfffff800

08005afc <USB_EP0_OutStart>:
{
 8005afc:	b410      	push	{r4}
  uint32_t gSNPSiD = *(__IO uint32_t *)(&USBx->CID + 0x1U);
 8005afe:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8005b00:	4b15      	ldr	r3, [pc, #84]	; (8005b58 <USB_EP0_OutStart+0x5c>)
 8005b02:	429c      	cmp	r4, r3
 8005b04:	d903      	bls.n	8005b0e <USB_EP0_OutStart+0x12>
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8005b06:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 8005b0a:	2b00      	cmp	r3, #0
 8005b0c:	db16      	blt.n	8005b3c <USB_EP0_OutStart+0x40>
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
 8005b0e:	2400      	movs	r4, #0
 8005b10:	f8c0 4b10 	str.w	r4, [r0, #2832]	; 0xb10
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8005b14:	f8d0 4b10 	ldr.w	r4, [r0, #2832]	; 0xb10
 8005b18:	f444 2400 	orr.w	r4, r4, #524288	; 0x80000
 8005b1c:	f8c0 4b10 	str.w	r4, [r0, #2832]	; 0xb10
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
 8005b20:	f8d0 4b10 	ldr.w	r4, [r0, #2832]	; 0xb10
 8005b24:	f044 0418 	orr.w	r4, r4, #24
 8005b28:	f8c0 4b10 	str.w	r4, [r0, #2832]	; 0xb10
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8005b2c:	f8d0 4b10 	ldr.w	r4, [r0, #2832]	; 0xb10
 8005b30:	f044 44c0 	orr.w	r4, r4, #1610612736	; 0x60000000
 8005b34:	f8c0 4b10 	str.w	r4, [r0, #2832]	; 0xb10
  if (dma == 1U)
 8005b38:	2901      	cmp	r1, #1
 8005b3a:	d003      	beq.n	8005b44 <USB_EP0_OutStart+0x48>
}
 8005b3c:	2000      	movs	r0, #0
 8005b3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005b42:	4770      	bx	lr
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
 8005b44:	f8c0 2b14 	str.w	r2, [r0, #2836]	; 0xb14
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
 8005b48:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	; 0xb00
 8005b4c:	f043 2380 	orr.w	r3, r3, #2147516416	; 0x80008000
 8005b50:	f8c0 3b00 	str.w	r3, [r0, #2816]	; 0xb00
 8005b54:	e7f2      	b.n	8005b3c <USB_EP0_OutStart+0x40>
 8005b56:	bf00      	nop
 8005b58:	4f54300a 	.word	0x4f54300a

08005b5c <USBD_CDC_EP0_RxReady>:
  *         Handle EP0 Rx Ready event
  * @param  pdev: device instance
  * @retval status
  */
static uint8_t USBD_CDC_EP0_RxReady(USBD_HandleTypeDef *pdev)
{
 8005b5c:	b510      	push	{r4, lr}
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassData;
 8005b5e:	f8d0 42bc 	ldr.w	r4, [r0, #700]	; 0x2bc

  if ((pdev->pUserData != NULL) && (hcdc->CmdOpCode != 0xFFU))
 8005b62:	f8d0 32c0 	ldr.w	r3, [r0, #704]	; 0x2c0
 8005b66:	b15b      	cbz	r3, 8005b80 <USBD_CDC_EP0_RxReady+0x24>
 8005b68:	f894 0200 	ldrb.w	r0, [r4, #512]	; 0x200
 8005b6c:	28ff      	cmp	r0, #255	; 0xff
 8005b6e:	d007      	beq.n	8005b80 <USBD_CDC_EP0_RxReady+0x24>
  {
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Control(hcdc->CmdOpCode,
 8005b70:	689b      	ldr	r3, [r3, #8]
 8005b72:	f894 2201 	ldrb.w	r2, [r4, #513]	; 0x201
 8005b76:	4621      	mov	r1, r4
 8005b78:	4798      	blx	r3
                                                      (uint8_t *)hcdc->data,
                                                      (uint16_t)hcdc->CmdLength);
    hcdc->CmdOpCode = 0xFFU;
 8005b7a:	23ff      	movs	r3, #255	; 0xff
 8005b7c:	f884 3200 	strb.w	r3, [r4, #512]	; 0x200

  }

  return (uint8_t)USBD_OK;
}
 8005b80:	2000      	movs	r0, #0
 8005b82:	bd10      	pop	{r4, pc}

08005b84 <USBD_CDC_GetFSCfgDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetFSCfgDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_CDC_CfgFSDesc);
 8005b84:	2343      	movs	r3, #67	; 0x43
 8005b86:	8003      	strh	r3, [r0, #0]

  return USBD_CDC_CfgFSDesc;
}
 8005b88:	4800      	ldr	r0, [pc, #0]	; (8005b8c <USBD_CDC_GetFSCfgDesc+0x8>)
 8005b8a:	4770      	bx	lr
 8005b8c:	20000040 	.word	0x20000040

08005b90 <USBD_CDC_GetHSCfgDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetHSCfgDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_CDC_CfgHSDesc);
 8005b90:	2343      	movs	r3, #67	; 0x43
 8005b92:	8003      	strh	r3, [r0, #0]

  return USBD_CDC_CfgHSDesc;
}
 8005b94:	4800      	ldr	r0, [pc, #0]	; (8005b98 <USBD_CDC_GetHSCfgDesc+0x8>)
 8005b96:	4770      	bx	lr
 8005b98:	20000084 	.word	0x20000084

08005b9c <USBD_CDC_GetOtherSpeedCfgDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_CDC_GetOtherSpeedCfgDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_CDC_OtherSpeedCfgDesc);
 8005b9c:	2343      	movs	r3, #67	; 0x43
 8005b9e:	8003      	strh	r3, [r0, #0]

  return USBD_CDC_OtherSpeedCfgDesc;
}
 8005ba0:	4800      	ldr	r0, [pc, #0]	; (8005ba4 <USBD_CDC_GetOtherSpeedCfgDesc+0x8>)
 8005ba2:	4770      	bx	lr
 8005ba4:	200000d4 	.word	0x200000d4

08005ba8 <USBD_CDC_GetDeviceQualifierDescriptor>:
* @param  length : pointer data length
* @retval pointer to descriptor buffer
*/
uint8_t *USBD_CDC_GetDeviceQualifierDescriptor(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_CDC_DeviceQualifierDesc);
 8005ba8:	230a      	movs	r3, #10
 8005baa:	8003      	strh	r3, [r0, #0]

  return USBD_CDC_DeviceQualifierDesc;
}
 8005bac:	4800      	ldr	r0, [pc, #0]	; (8005bb0 <USBD_CDC_GetDeviceQualifierDescriptor+0x8>)
 8005bae:	4770      	bx	lr
 8005bb0:	200000c8 	.word	0x200000c8

08005bb4 <USBD_CDC_DataOut>:
{
 8005bb4:	b538      	push	{r3, r4, r5, lr}
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassData;
 8005bb6:	f8d0 52bc 	ldr.w	r5, [r0, #700]	; 0x2bc
  if (pdev->pClassData == NULL)
 8005bba:	b175      	cbz	r5, 8005bda <USBD_CDC_DataOut+0x26>
 8005bbc:	4604      	mov	r4, r0
  hcdc->RxLength = USBD_LL_GetRxDataSize(pdev, epnum);
 8005bbe:	f001 feec 	bl	800799a <USBD_LL_GetRxDataSize>
 8005bc2:	f8c5 020c 	str.w	r0, [r5, #524]	; 0x20c
  ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Receive(hcdc->RxBuffer, &hcdc->RxLength);
 8005bc6:	f8d4 32c0 	ldr.w	r3, [r4, #704]	; 0x2c0
 8005bca:	68db      	ldr	r3, [r3, #12]
 8005bcc:	f505 7103 	add.w	r1, r5, #524	; 0x20c
 8005bd0:	f8d5 0204 	ldr.w	r0, [r5, #516]	; 0x204
 8005bd4:	4798      	blx	r3
  return (uint8_t)USBD_OK;
 8005bd6:	2000      	movs	r0, #0
}
 8005bd8:	bd38      	pop	{r3, r4, r5, pc}
    return (uint8_t)USBD_FAIL;
 8005bda:	2003      	movs	r0, #3
 8005bdc:	e7fc      	b.n	8005bd8 <USBD_CDC_DataOut+0x24>

08005bde <USBD_CDC_DataIn>:
{
 8005bde:	b570      	push	{r4, r5, r6, lr}
  PCD_HandleTypeDef *hpcd = pdev->pData;
 8005be0:	f8d0 42c4 	ldr.w	r4, [r0, #708]	; 0x2c4
  if (pdev->pClassData == NULL)
 8005be4:	f8d0 52bc 	ldr.w	r5, [r0, #700]	; 0x2bc
 8005be8:	b355      	cbz	r5, 8005c40 <USBD_CDC_DataIn+0x62>
  if ((pdev->ep_in[epnum].total_length > 0U) &&
 8005bea:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 8005bee:	0093      	lsls	r3, r2, #2
 8005bf0:	4403      	add	r3, r0
 8005bf2:	699b      	ldr	r3, [r3, #24]
 8005bf4:	b96b      	cbnz	r3, 8005c12 <USBD_CDC_DataIn+0x34>
    hcdc->TxState = 0U;
 8005bf6:	2400      	movs	r4, #0
 8005bf8:	f8c5 4214 	str.w	r4, [r5, #532]	; 0x214
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->TransmitCplt(hcdc->TxBuffer, &hcdc->TxLength, epnum);
 8005bfc:	f8d0 32c0 	ldr.w	r3, [r0, #704]	; 0x2c0
 8005c00:	691b      	ldr	r3, [r3, #16]
 8005c02:	460a      	mov	r2, r1
 8005c04:	f505 7104 	add.w	r1, r5, #528	; 0x210
 8005c08:	f8d5 0208 	ldr.w	r0, [r5, #520]	; 0x208
 8005c0c:	4798      	blx	r3
  return (uint8_t)USBD_OK;
 8005c0e:	4620      	mov	r0, r4
}
 8005c10:	bd70      	pop	{r4, r5, r6, pc}
      ((pdev->ep_in[epnum].total_length % hpcd->IN_ep[epnum].maxpacket) == 0U))
 8005c12:	ebc1 06c1 	rsb	r6, r1, r1, lsl #3
 8005c16:	00b2      	lsls	r2, r6, #2
 8005c18:	4414      	add	r4, r2
 8005c1a:	6c64      	ldr	r4, [r4, #68]	; 0x44
 8005c1c:	fbb3 f2f4 	udiv	r2, r3, r4
 8005c20:	fb04 3312 	mls	r3, r4, r2, r3
  if ((pdev->ep_in[epnum].total_length > 0U) &&
 8005c24:	2b00      	cmp	r3, #0
 8005c26:	d1e6      	bne.n	8005bf6 <USBD_CDC_DataIn+0x18>
    pdev->ep_in[epnum].total_length = 0U;
 8005c28:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 8005c2c:	0093      	lsls	r3, r2, #2
 8005c2e:	4403      	add	r3, r0
 8005c30:	2400      	movs	r4, #0
 8005c32:	619c      	str	r4, [r3, #24]
    (void)USBD_LL_Transmit(pdev, epnum, NULL, 0U);
 8005c34:	4623      	mov	r3, r4
 8005c36:	4622      	mov	r2, r4
 8005c38:	f001 ff24 	bl	8007a84 <USBD_LL_Transmit>
  return (uint8_t)USBD_OK;
 8005c3c:	4620      	mov	r0, r4
    (void)USBD_LL_Transmit(pdev, epnum, NULL, 0U);
 8005c3e:	e7e7      	b.n	8005c10 <USBD_CDC_DataIn+0x32>
    return (uint8_t)USBD_FAIL;
 8005c40:	2003      	movs	r0, #3
 8005c42:	e7e5      	b.n	8005c10 <USBD_CDC_DataIn+0x32>

08005c44 <USBD_CDC_Setup>:
{
 8005c44:	b570      	push	{r4, r5, r6, lr}
 8005c46:	b082      	sub	sp, #8
 8005c48:	4605      	mov	r5, r0
 8005c4a:	460c      	mov	r4, r1
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassData;
 8005c4c:	f8d0 62bc 	ldr.w	r6, [r0, #700]	; 0x2bc
  uint8_t ifalt = 0U;
 8005c50:	2300      	movs	r3, #0
 8005c52:	f88d 3007 	strb.w	r3, [sp, #7]
  uint16_t status_info = 0U;
 8005c56:	f8ad 3004 	strh.w	r3, [sp, #4]
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8005c5a:	780b      	ldrb	r3, [r1, #0]
 8005c5c:	f013 0260 	ands.w	r2, r3, #96	; 0x60
 8005c60:	d027      	beq.n	8005cb2 <USBD_CDC_Setup+0x6e>
 8005c62:	2a20      	cmp	r2, #32
 8005c64:	d15b      	bne.n	8005d1e <USBD_CDC_Setup+0xda>
    if (req->wLength != 0U)
 8005c66:	88ca      	ldrh	r2, [r1, #6]
 8005c68:	b93a      	cbnz	r2, 8005c7a <USBD_CDC_Setup+0x36>
      ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Control(req->bRequest,
 8005c6a:	f8d0 32c0 	ldr.w	r3, [r0, #704]	; 0x2c0
 8005c6e:	689b      	ldr	r3, [r3, #8]
 8005c70:	2200      	movs	r2, #0
 8005c72:	7848      	ldrb	r0, [r1, #1]
 8005c74:	4798      	blx	r3
  USBD_StatusTypeDef ret = USBD_OK;
 8005c76:	2000      	movs	r0, #0
 8005c78:	e054      	b.n	8005d24 <USBD_CDC_Setup+0xe0>
      if ((req->bmRequest & 0x80U) != 0U)
 8005c7a:	f013 0f80 	tst.w	r3, #128	; 0x80
 8005c7e:	d00c      	beq.n	8005c9a <USBD_CDC_Setup+0x56>
        ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Control(req->bRequest,
 8005c80:	f8d0 32c0 	ldr.w	r3, [r0, #704]	; 0x2c0
 8005c84:	689b      	ldr	r3, [r3, #8]
 8005c86:	4631      	mov	r1, r6
 8005c88:	7860      	ldrb	r0, [r4, #1]
 8005c8a:	4798      	blx	r3
          (void)USBD_CtlSendData(pdev, (uint8_t *)hcdc->data, req->wLength);
 8005c8c:	88e2      	ldrh	r2, [r4, #6]
 8005c8e:	4631      	mov	r1, r6
 8005c90:	4628      	mov	r0, r5
 8005c92:	f000 fde7 	bl	8006864 <USBD_CtlSendData>
  USBD_StatusTypeDef ret = USBD_OK;
 8005c96:	2000      	movs	r0, #0
 8005c98:	e044      	b.n	8005d24 <USBD_CDC_Setup+0xe0>
        hcdc->CmdOpCode = req->bRequest;
 8005c9a:	784b      	ldrb	r3, [r1, #1]
 8005c9c:	f886 3200 	strb.w	r3, [r6, #512]	; 0x200
        hcdc->CmdLength = (uint8_t)req->wLength;
 8005ca0:	798b      	ldrb	r3, [r1, #6]
 8005ca2:	f886 3201 	strb.w	r3, [r6, #513]	; 0x201
        (void)USBD_CtlPrepareRx(pdev, (uint8_t *)hcdc->data, req->wLength);
 8005ca6:	88ca      	ldrh	r2, [r1, #6]
 8005ca8:	4631      	mov	r1, r6
 8005caa:	f000 fdf0 	bl	800688e <USBD_CtlPrepareRx>
  USBD_StatusTypeDef ret = USBD_OK;
 8005cae:	2000      	movs	r0, #0
 8005cb0:	e038      	b.n	8005d24 <USBD_CDC_Setup+0xe0>
    switch (req->bRequest)
 8005cb2:	784b      	ldrb	r3, [r1, #1]
 8005cb4:	2b0b      	cmp	r3, #11
 8005cb6:	d82e      	bhi.n	8005d16 <USBD_CDC_Setup+0xd2>
 8005cb8:	e8df f003 	tbb	[pc, r3]
 8005cbc:	2d2d3606 	.word	0x2d2d3606
 8005cc0:	2d2d2d2d 	.word	0x2d2d2d2d
 8005cc4:	23142d2d 	.word	0x23142d2d
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8005cc8:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8005ccc:	2b03      	cmp	r3, #3
 8005cce:	d105      	bne.n	8005cdc <USBD_CDC_Setup+0x98>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 8005cd0:	2202      	movs	r2, #2
 8005cd2:	a901      	add	r1, sp, #4
 8005cd4:	f000 fdc6 	bl	8006864 <USBD_CtlSendData>
  USBD_StatusTypeDef ret = USBD_OK;
 8005cd8:	2000      	movs	r0, #0
 8005cda:	e023      	b.n	8005d24 <USBD_CDC_Setup+0xe0>
        USBD_CtlError(pdev, req);
 8005cdc:	f000 fa66 	bl	80061ac <USBD_CtlError>
        ret = USBD_FAIL;
 8005ce0:	2003      	movs	r0, #3
 8005ce2:	e01f      	b.n	8005d24 <USBD_CDC_Setup+0xe0>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8005ce4:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8005ce8:	2b03      	cmp	r3, #3
 8005cea:	d106      	bne.n	8005cfa <USBD_CDC_Setup+0xb6>
        (void)USBD_CtlSendData(pdev, &ifalt, 1U);
 8005cec:	2201      	movs	r2, #1
 8005cee:	f10d 0107 	add.w	r1, sp, #7
 8005cf2:	f000 fdb7 	bl	8006864 <USBD_CtlSendData>
  USBD_StatusTypeDef ret = USBD_OK;
 8005cf6:	2000      	movs	r0, #0
 8005cf8:	e014      	b.n	8005d24 <USBD_CDC_Setup+0xe0>
        USBD_CtlError(pdev, req);
 8005cfa:	f000 fa57 	bl	80061ac <USBD_CtlError>
        ret = USBD_FAIL;
 8005cfe:	2003      	movs	r0, #3
 8005d00:	e010      	b.n	8005d24 <USBD_CDC_Setup+0xe0>
      if (pdev->dev_state != USBD_STATE_CONFIGURED)
 8005d02:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8005d06:	2b03      	cmp	r3, #3
 8005d08:	d101      	bne.n	8005d0e <USBD_CDC_Setup+0xca>
  USBD_StatusTypeDef ret = USBD_OK;
 8005d0a:	2000      	movs	r0, #0
 8005d0c:	e00a      	b.n	8005d24 <USBD_CDC_Setup+0xe0>
        USBD_CtlError(pdev, req);
 8005d0e:	f000 fa4d 	bl	80061ac <USBD_CtlError>
        ret = USBD_FAIL;
 8005d12:	2003      	movs	r0, #3
 8005d14:	e006      	b.n	8005d24 <USBD_CDC_Setup+0xe0>
      USBD_CtlError(pdev, req);
 8005d16:	f000 fa49 	bl	80061ac <USBD_CtlError>
      ret = USBD_FAIL;
 8005d1a:	2003      	movs	r0, #3
      break;
 8005d1c:	e002      	b.n	8005d24 <USBD_CDC_Setup+0xe0>
    USBD_CtlError(pdev, req);
 8005d1e:	f000 fa45 	bl	80061ac <USBD_CtlError>
    ret = USBD_FAIL;
 8005d22:	2003      	movs	r0, #3
}
 8005d24:	b002      	add	sp, #8
 8005d26:	bd70      	pop	{r4, r5, r6, pc}
  USBD_StatusTypeDef ret = USBD_OK;
 8005d28:	2000      	movs	r0, #0
 8005d2a:	e7fb      	b.n	8005d24 <USBD_CDC_Setup+0xe0>

08005d2c <USBD_CDC_DeInit>:
{
 8005d2c:	b538      	push	{r3, r4, r5, lr}
 8005d2e:	4604      	mov	r4, r0
  (void)USBD_LL_CloseEP(pdev, CDC_IN_EP);
 8005d30:	2181      	movs	r1, #129	; 0x81
 8005d32:	f001 fe87 	bl	8007a44 <USBD_LL_CloseEP>
  pdev->ep_in[CDC_IN_EP & 0xFU].is_used = 0U;
 8005d36:	2500      	movs	r5, #0
 8005d38:	8725      	strh	r5, [r4, #56]	; 0x38
  (void)USBD_LL_CloseEP(pdev, CDC_OUT_EP);
 8005d3a:	2101      	movs	r1, #1
 8005d3c:	4620      	mov	r0, r4
 8005d3e:	f001 fe81 	bl	8007a44 <USBD_LL_CloseEP>
  pdev->ep_out[CDC_OUT_EP & 0xFU].is_used = 0U;
 8005d42:	f8a4 5178 	strh.w	r5, [r4, #376]	; 0x178
  (void)USBD_LL_CloseEP(pdev, CDC_CMD_EP);
 8005d46:	2182      	movs	r1, #130	; 0x82
 8005d48:	4620      	mov	r0, r4
 8005d4a:	f001 fe7b 	bl	8007a44 <USBD_LL_CloseEP>
  pdev->ep_in[CDC_CMD_EP & 0xFU].is_used = 0U;
 8005d4e:	f8a4 504c 	strh.w	r5, [r4, #76]	; 0x4c
  pdev->ep_in[CDC_CMD_EP & 0xFU].bInterval = 0U;
 8005d52:	f8a4 504e 	strh.w	r5, [r4, #78]	; 0x4e
  if (pdev->pClassData != NULL)
 8005d56:	f8d4 32bc 	ldr.w	r3, [r4, #700]	; 0x2bc
 8005d5a:	b14b      	cbz	r3, 8005d70 <USBD_CDC_DeInit+0x44>
    ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->DeInit();
 8005d5c:	f8d4 32c0 	ldr.w	r3, [r4, #704]	; 0x2c0
 8005d60:	685b      	ldr	r3, [r3, #4]
 8005d62:	4798      	blx	r3
    (void)USBD_free(pdev->pClassData);
 8005d64:	f8d4 02bc 	ldr.w	r0, [r4, #700]	; 0x2bc
 8005d68:	f010 f9f0 	bl	801614c <free>
    pdev->pClassData = NULL;
 8005d6c:	f8c4 52bc 	str.w	r5, [r4, #700]	; 0x2bc
}
 8005d70:	2000      	movs	r0, #0
 8005d72:	bd38      	pop	{r3, r4, r5, pc}

08005d74 <USBD_CDC_Init>:
{
 8005d74:	b570      	push	{r4, r5, r6, lr}
 8005d76:	4604      	mov	r4, r0
  hcdc = USBD_malloc(sizeof(USBD_CDC_HandleTypeDef));
 8005d78:	f44f 7007 	mov.w	r0, #540	; 0x21c
 8005d7c:	f010 f9de 	bl	801613c <malloc>
  if (hcdc == NULL)
 8005d80:	b3b0      	cbz	r0, 8005df0 <USBD_CDC_Init+0x7c>
 8005d82:	4605      	mov	r5, r0
  pdev->pClassData = (void *)hcdc;
 8005d84:	f8c4 02bc 	str.w	r0, [r4, #700]	; 0x2bc
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8005d88:	7c23      	ldrb	r3, [r4, #16]
 8005d8a:	bbb3      	cbnz	r3, 8005dfa <USBD_CDC_Init+0x86>
    (void)USBD_LL_OpenEP(pdev, CDC_IN_EP, USBD_EP_TYPE_BULK,
 8005d8c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005d90:	2202      	movs	r2, #2
 8005d92:	2181      	movs	r1, #129	; 0x81
 8005d94:	4620      	mov	r0, r4
 8005d96:	f001 fe4a 	bl	8007a2e <USBD_LL_OpenEP>
     pdev->ep_in[CDC_IN_EP & 0xFU].is_used = 1U;
 8005d9a:	2601      	movs	r6, #1
 8005d9c:	8726      	strh	r6, [r4, #56]	; 0x38
     (void)USBD_LL_OpenEP(pdev, CDC_OUT_EP, USBD_EP_TYPE_BULK,
 8005d9e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005da2:	2202      	movs	r2, #2
 8005da4:	4631      	mov	r1, r6
 8005da6:	4620      	mov	r0, r4
 8005da8:	f001 fe41 	bl	8007a2e <USBD_LL_OpenEP>
      pdev->ep_out[CDC_OUT_EP & 0xFU].is_used = 1U;
 8005dac:	f8a4 6178 	strh.w	r6, [r4, #376]	; 0x178
      pdev->ep_in[CDC_CMD_EP & 0xFU].bInterval = CDC_HS_BINTERVAL;
 8005db0:	2310      	movs	r3, #16
 8005db2:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
  (void)USBD_LL_OpenEP(pdev, CDC_CMD_EP, USBD_EP_TYPE_INTR, CDC_CMD_PACKET_SIZE);
 8005db6:	2308      	movs	r3, #8
 8005db8:	2203      	movs	r2, #3
 8005dba:	2182      	movs	r1, #130	; 0x82
 8005dbc:	4620      	mov	r0, r4
 8005dbe:	f001 fe36 	bl	8007a2e <USBD_LL_OpenEP>
  pdev->ep_in[CDC_CMD_EP & 0xFU].is_used = 1U;
 8005dc2:	2301      	movs	r3, #1
 8005dc4:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
  ((USBD_CDC_ItfTypeDef *)pdev->pUserData)->Init();
 8005dc8:	f8d4 32c0 	ldr.w	r3, [r4, #704]	; 0x2c0
 8005dcc:	681b      	ldr	r3, [r3, #0]
 8005dce:	4798      	blx	r3
  hcdc->TxState = 0U;
 8005dd0:	2300      	movs	r3, #0
 8005dd2:	f8c5 3214 	str.w	r3, [r5, #532]	; 0x214
  hcdc->RxState = 0U;
 8005dd6:	f8c5 3218 	str.w	r3, [r5, #536]	; 0x218
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8005dda:	7c23      	ldrb	r3, [r4, #16]
 8005ddc:	b30b      	cbz	r3, 8005e22 <USBD_CDC_Init+0xae>
    (void)USBD_LL_PrepareReceive(pdev, CDC_OUT_EP, hcdc->RxBuffer,
 8005dde:	2340      	movs	r3, #64	; 0x40
 8005de0:	f8d5 2204 	ldr.w	r2, [r5, #516]	; 0x204
 8005de4:	2101      	movs	r1, #1
 8005de6:	4620      	mov	r0, r4
 8005de8:	f001 fe54 	bl	8007a94 <USBD_LL_PrepareReceive>
  return (uint8_t)USBD_OK;
 8005dec:	2000      	movs	r0, #0
}
 8005dee:	bd70      	pop	{r4, r5, r6, pc}
    pdev->pClassData = NULL;
 8005df0:	2300      	movs	r3, #0
 8005df2:	f8c4 32bc 	str.w	r3, [r4, #700]	; 0x2bc
    return (uint8_t)USBD_EMEM;
 8005df6:	2002      	movs	r0, #2
 8005df8:	e7f9      	b.n	8005dee <USBD_CDC_Init+0x7a>
    (void)USBD_LL_OpenEP(pdev, CDC_IN_EP, USBD_EP_TYPE_BULK,
 8005dfa:	2340      	movs	r3, #64	; 0x40
 8005dfc:	2202      	movs	r2, #2
 8005dfe:	2181      	movs	r1, #129	; 0x81
 8005e00:	4620      	mov	r0, r4
 8005e02:	f001 fe14 	bl	8007a2e <USBD_LL_OpenEP>
     pdev->ep_in[CDC_IN_EP & 0xFU].is_used = 1U;
 8005e06:	2601      	movs	r6, #1
 8005e08:	8726      	strh	r6, [r4, #56]	; 0x38
     (void)USBD_LL_OpenEP(pdev, CDC_OUT_EP, USBD_EP_TYPE_BULK,
 8005e0a:	2340      	movs	r3, #64	; 0x40
 8005e0c:	2202      	movs	r2, #2
 8005e0e:	4631      	mov	r1, r6
 8005e10:	4620      	mov	r0, r4
 8005e12:	f001 fe0c 	bl	8007a2e <USBD_LL_OpenEP>
      pdev->ep_out[CDC_OUT_EP & 0xFU].is_used = 1U;
 8005e16:	f8a4 6178 	strh.w	r6, [r4, #376]	; 0x178
      pdev->ep_in[CDC_CMD_EP & 0xFU].bInterval = CDC_FS_BINTERVAL;
 8005e1a:	2310      	movs	r3, #16
 8005e1c:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8005e20:	e7c9      	b.n	8005db6 <USBD_CDC_Init+0x42>
    (void)USBD_LL_PrepareReceive(pdev, CDC_OUT_EP, hcdc->RxBuffer,
 8005e22:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005e26:	f8d5 2204 	ldr.w	r2, [r5, #516]	; 0x204
 8005e2a:	2101      	movs	r1, #1
 8005e2c:	4620      	mov	r0, r4
 8005e2e:	f001 fe31 	bl	8007a94 <USBD_LL_PrepareReceive>
  return (uint8_t)USBD_OK;
 8005e32:	2000      	movs	r0, #0
 8005e34:	e7db      	b.n	8005dee <USBD_CDC_Init+0x7a>

08005e36 <USBD_CDC_RegisterInterface>:
  * @retval status
  */
uint8_t USBD_CDC_RegisterInterface(USBD_HandleTypeDef *pdev,
                                   USBD_CDC_ItfTypeDef *fops)
{
  if (fops == NULL)
 8005e36:	b119      	cbz	r1, 8005e40 <USBD_CDC_RegisterInterface+0xa>
  {
    return (uint8_t)USBD_FAIL;
  }

  pdev->pUserData = fops;
 8005e38:	f8c0 12c0 	str.w	r1, [r0, #704]	; 0x2c0

  return (uint8_t)USBD_OK;
 8005e3c:	2000      	movs	r0, #0
 8005e3e:	4770      	bx	lr
    return (uint8_t)USBD_FAIL;
 8005e40:	2003      	movs	r0, #3
}
 8005e42:	4770      	bx	lr

08005e44 <USBD_CDC_SetTxBuffer>:
  * @retval status
  */
uint8_t USBD_CDC_SetTxBuffer(USBD_HandleTypeDef *pdev,
                             uint8_t *pbuff, uint32_t length)
{
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassData;
 8005e44:	f8d0 32bc 	ldr.w	r3, [r0, #700]	; 0x2bc

  hcdc->TxBuffer = pbuff;
 8005e48:	f8c3 1208 	str.w	r1, [r3, #520]	; 0x208
  hcdc->TxLength = length;
 8005e4c:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210

  return (uint8_t)USBD_OK;
}
 8005e50:	2000      	movs	r0, #0
 8005e52:	4770      	bx	lr

08005e54 <USBD_CDC_SetRxBuffer>:
  * @param  pbuff: Rx Buffer
  * @retval status
  */
uint8_t USBD_CDC_SetRxBuffer(USBD_HandleTypeDef *pdev, uint8_t *pbuff)
{
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassData;
 8005e54:	f8d0 32bc 	ldr.w	r3, [r0, #700]	; 0x2bc

  hcdc->RxBuffer = pbuff;
 8005e58:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204

  return (uint8_t)USBD_OK;
}
 8005e5c:	2000      	movs	r0, #0
 8005e5e:	4770      	bx	lr

08005e60 <USBD_CDC_ReceivePacket>:
  * @param  pdev: device instance
  * @retval status
  */
uint8_t USBD_CDC_ReceivePacket(USBD_HandleTypeDef *pdev)
{
  USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef *)pdev->pClassData;
 8005e60:	f8d0 22bc 	ldr.w	r2, [r0, #700]	; 0x2bc

  if (pdev->pClassData == NULL)
 8005e64:	b19a      	cbz	r2, 8005e8e <USBD_CDC_ReceivePacket+0x2e>
{
 8005e66:	b508      	push	{r3, lr}
  {
    return (uint8_t)USBD_FAIL;
  }

  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8005e68:	7c03      	ldrb	r3, [r0, #16]
 8005e6a:	b13b      	cbz	r3, 8005e7c <USBD_CDC_ReceivePacket+0x1c>
                                 CDC_DATA_HS_OUT_PACKET_SIZE);
  }
  else
  {
    /* Prepare Out endpoint to receive next packet */
    (void)USBD_LL_PrepareReceive(pdev, CDC_OUT_EP, hcdc->RxBuffer,
 8005e6c:	2340      	movs	r3, #64	; 0x40
 8005e6e:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
 8005e72:	2101      	movs	r1, #1
 8005e74:	f001 fe0e 	bl	8007a94 <USBD_LL_PrepareReceive>
                                 CDC_DATA_FS_OUT_PACKET_SIZE);
  }

  return (uint8_t)USBD_OK;
 8005e78:	2000      	movs	r0, #0
}
 8005e7a:	bd08      	pop	{r3, pc}
    (void)USBD_LL_PrepareReceive(pdev, CDC_OUT_EP, hcdc->RxBuffer,
 8005e7c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005e80:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
 8005e84:	2101      	movs	r1, #1
 8005e86:	f001 fe05 	bl	8007a94 <USBD_LL_PrepareReceive>
  return (uint8_t)USBD_OK;
 8005e8a:	2000      	movs	r0, #0
 8005e8c:	e7f5      	b.n	8005e7a <USBD_CDC_ReceivePacket+0x1a>
    return (uint8_t)USBD_FAIL;
 8005e8e:	2003      	movs	r0, #3
}
 8005e90:	4770      	bx	lr

08005e92 <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 8005e92:	b1c0      	cbz	r0, 8005ec6 <USBD_Init+0x34>
{
 8005e94:	b508      	push	{r3, lr}
 8005e96:	4603      	mov	r3, r0
#endif
    return USBD_FAIL;
  }

  /* Unlink previous class */
  if (pdev->pClass != NULL)
 8005e98:	f8d0 02b8 	ldr.w	r0, [r0, #696]	; 0x2b8
 8005e9c:	b110      	cbz	r0, 8005ea4 <USBD_Init+0x12>
  {
    pdev->pClass = NULL;
 8005e9e:	2000      	movs	r0, #0
 8005ea0:	f8c3 02b8 	str.w	r0, [r3, #696]	; 0x2b8
  }

  if (pdev->pConfDesc != NULL)
 8005ea4:	f8d3 02cc 	ldr.w	r0, [r3, #716]	; 0x2cc
 8005ea8:	b110      	cbz	r0, 8005eb0 <USBD_Init+0x1e>
  {
    pdev->pConfDesc = NULL;
 8005eaa:	2000      	movs	r0, #0
 8005eac:	f8c3 02cc 	str.w	r0, [r3, #716]	; 0x2cc
  }

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 8005eb0:	b109      	cbz	r1, 8005eb6 <USBD_Init+0x24>
  {
    pdev->pDesc = pdesc;
 8005eb2:	f8c3 12b4 	str.w	r1, [r3, #692]	; 0x2b4
 8005eb6:	4618      	mov	r0, r3
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 8005eb8:	2301      	movs	r3, #1
 8005eba:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
  pdev->id = id;
 8005ebe:	7002      	strb	r2, [r0, #0]

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 8005ec0:	f001 fd20 	bl	8007904 <USBD_LL_Init>

  return ret;
}
 8005ec4:	bd08      	pop	{r3, pc}
    return USBD_FAIL;
 8005ec6:	2003      	movs	r0, #3
}
 8005ec8:	4770      	bx	lr

08005eca <USBD_RegisterClass>:
  * @param  pDevice : Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 8005eca:	b510      	push	{r4, lr}
 8005ecc:	b082      	sub	sp, #8
  uint16_t len = 0U;
 8005ece:	2300      	movs	r3, #0
 8005ed0:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
 8005ed4:	b159      	cbz	r1, 8005eee <USBD_RegisterClass+0x24>
 8005ed6:	4604      	mov	r4, r0
#endif
    return USBD_FAIL;
  }

  /* link the class to the USB Device handle */
  pdev->pClass = pclass;
 8005ed8:	f8c4 12b8 	str.w	r1, [r4, #696]	; 0x2b8

  /* Get Device Configuration Descriptor */
#ifdef USE_USB_FS
  pdev->pConfDesc = (void *)pdev->pClass->GetFSConfigDescriptor(&len);
#else /* USE_USB_HS */
  pdev->pConfDesc = (void *)pdev->pClass->GetHSConfigDescriptor(&len);
 8005edc:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 8005ede:	f10d 0006 	add.w	r0, sp, #6
 8005ee2:	4798      	blx	r3
 8005ee4:	f8c4 02cc 	str.w	r0, [r4, #716]	; 0x2cc
#endif /* USE_USB_FS */


  return USBD_OK;
 8005ee8:	2000      	movs	r0, #0
}
 8005eea:	b002      	add	sp, #8
 8005eec:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 8005eee:	2003      	movs	r0, #3
 8005ef0:	e7fb      	b.n	8005eea <USBD_RegisterClass+0x20>

08005ef2 <USBD_Start>:
  *         Start the USB Device Core.
  * @param  pdev: Device Handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_Start(USBD_HandleTypeDef *pdev)
{
 8005ef2:	b508      	push	{r3, lr}
  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 8005ef4:	f001 fd93 	bl	8007a1e <USBD_LL_Start>
}
 8005ef8:	bd08      	pop	{r3, pc}

08005efa <USBD_SetClassConfig>:
* @param  cfgidx: configuration index
* @retval status
*/

USBD_StatusTypeDef USBD_SetClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 8005efa:	b508      	push	{r3, lr}
  USBD_StatusTypeDef ret = USBD_FAIL;

  if (pdev->pClass != NULL)
 8005efc:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8005f00:	b113      	cbz	r3, 8005f08 <USBD_SetClassConfig+0xe>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass->Init(pdev, cfgidx);
 8005f02:	681b      	ldr	r3, [r3, #0]
 8005f04:	4798      	blx	r3
  }

  return ret;
}
 8005f06:	bd08      	pop	{r3, pc}
  USBD_StatusTypeDef ret = USBD_FAIL;
 8005f08:	2003      	movs	r0, #3
 8005f0a:	e7fc      	b.n	8005f06 <USBD_SetClassConfig+0xc>

08005f0c <USBD_ClrClassConfig>:
* @param  pdev: device instance
* @param  cfgidx: configuration index
* @retval status: USBD_StatusTypeDef
*/
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 8005f0c:	b508      	push	{r3, lr}
  /* Clear configuration and De-initialize the Class process */
  if (pdev->pClass != NULL)
 8005f0e:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8005f12:	b10b      	cbz	r3, 8005f18 <USBD_ClrClassConfig+0xc>
  {
    pdev->pClass->DeInit(pdev, cfgidx);
 8005f14:	685b      	ldr	r3, [r3, #4]
 8005f16:	4798      	blx	r3
  }

  return USBD_OK;
}
 8005f18:	2000      	movs	r0, #0
 8005f1a:	bd08      	pop	{r3, pc}

08005f1c <USBD_LL_SetupStage>:
*         Handle the setup stage
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 8005f1c:	b538      	push	{r3, r4, r5, lr}
 8005f1e:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 8005f20:	f200 25aa 	addw	r5, r0, #682	; 0x2aa
 8005f24:	4628      	mov	r0, r5
 8005f26:	f000 f92d 	bl	8006184 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 8005f2a:	2301      	movs	r3, #1
 8005f2c:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294

  pdev->ep0_data_len = pdev->request.wLength;
 8005f30:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	; 0x2b0
 8005f34:	f8c4 3298 	str.w	r3, [r4, #664]	; 0x298

  switch (pdev->request.bmRequest & 0x1FU)
 8005f38:	f894 12aa 	ldrb.w	r1, [r4, #682]	; 0x2aa
 8005f3c:	f001 031f 	and.w	r3, r1, #31
 8005f40:	2b01      	cmp	r3, #1
 8005f42:	d00d      	beq.n	8005f60 <USBD_LL_SetupStage+0x44>
 8005f44:	b13b      	cbz	r3, 8005f56 <USBD_LL_SetupStage+0x3a>
 8005f46:	2b02      	cmp	r3, #2
 8005f48:	d00f      	beq.n	8005f6a <USBD_LL_SetupStage+0x4e>
    case USB_REQ_RECIPIENT_ENDPOINT:
      ret = USBD_StdEPReq(pdev, &pdev->request);
      break;

    default:
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 8005f4a:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8005f4e:	4620      	mov	r0, r4
 8005f50:	f001 fd80 	bl	8007a54 <USBD_LL_StallEP>
      break;
 8005f54:	e003      	b.n	8005f5e <USBD_LL_SetupStage+0x42>
      ret = USBD_StdDevReq(pdev, &pdev->request);
 8005f56:	4629      	mov	r1, r5
 8005f58:	4620      	mov	r0, r4
 8005f5a:	f000 fae0 	bl	800651e <USBD_StdDevReq>
  }

  return ret;
}
 8005f5e:	bd38      	pop	{r3, r4, r5, pc}
      ret = USBD_StdItfReq(pdev, &pdev->request);
 8005f60:	4629      	mov	r1, r5
 8005f62:	4620      	mov	r0, r4
 8005f64:	f000 fb16 	bl	8006594 <USBD_StdItfReq>
      break;
 8005f68:	e7f9      	b.n	8005f5e <USBD_LL_SetupStage+0x42>
      ret = USBD_StdEPReq(pdev, &pdev->request);
 8005f6a:	4629      	mov	r1, r5
 8005f6c:	4620      	mov	r0, r4
 8005f6e:	f000 fb45 	bl	80065fc <USBD_StdEPReq>
      break;
 8005f72:	e7f4      	b.n	8005f5e <USBD_LL_SetupStage+0x42>

08005f74 <USBD_LL_DataOutStage>:
* @param  epnum: endpoint index
* @retval status
*/
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 8005f74:	b510      	push	{r4, lr}
 8005f76:	4604      	mov	r4, r0
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;

  if (epnum == 0U)
 8005f78:	bb29      	cbnz	r1, 8005fc6 <USBD_LL_DataOutStage+0x52>
 8005f7a:	4613      	mov	r3, r2
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 8005f7c:	f8d0 2294 	ldr.w	r2, [r0, #660]	; 0x294
 8005f80:	2a03      	cmp	r2, #3
 8005f82:	d001      	beq.n	8005f88 <USBD_LL_DataOutStage+0x14>
  {
    /* should never be in this condition */
    return USBD_FAIL;
  }

  return USBD_OK;
 8005f84:	2000      	movs	r0, #0
 8005f86:	e029      	b.n	8005fdc <USBD_LL_DataOutStage+0x68>
      if (pep->rem_length > pep->maxpacket)
 8005f88:	f8d0 115c 	ldr.w	r1, [r0, #348]	; 0x15c
 8005f8c:	f8d0 2160 	ldr.w	r2, [r0, #352]	; 0x160
 8005f90:	4291      	cmp	r1, r2
 8005f92:	d80d      	bhi.n	8005fb0 <USBD_LL_DataOutStage+0x3c>
        if ((pdev->pClass->EP0_RxReady != NULL) &&
 8005f94:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8005f98:	691b      	ldr	r3, [r3, #16]
 8005f9a:	b123      	cbz	r3, 8005fa6 <USBD_LL_DataOutStage+0x32>
            (pdev->dev_state == USBD_STATE_CONFIGURED))
 8005f9c:	f890 229c 	ldrb.w	r2, [r0, #668]	; 0x29c
        if ((pdev->pClass->EP0_RxReady != NULL) &&
 8005fa0:	2a03      	cmp	r2, #3
 8005fa2:	d100      	bne.n	8005fa6 <USBD_LL_DataOutStage+0x32>
          pdev->pClass->EP0_RxReady(pdev);
 8005fa4:	4798      	blx	r3
        (void)USBD_CtlSendStatus(pdev);
 8005fa6:	4620      	mov	r0, r4
 8005fa8:	f000 fc88 	bl	80068bc <USBD_CtlSendStatus>
  return USBD_OK;
 8005fac:	2000      	movs	r0, #0
 8005fae:	e015      	b.n	8005fdc <USBD_LL_DataOutStage+0x68>
        pep->rem_length -= pep->maxpacket;
 8005fb0:	1a89      	subs	r1, r1, r2
 8005fb2:	f8c0 115c 	str.w	r1, [r0, #348]	; 0x15c
        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 8005fb6:	428a      	cmp	r2, r1
 8005fb8:	bf28      	it	cs
 8005fba:	460a      	movcs	r2, r1
 8005fbc:	4619      	mov	r1, r3
 8005fbe:	f000 fc75 	bl	80068ac <USBD_CtlContinueRx>
  return USBD_OK;
 8005fc2:	2000      	movs	r0, #0
 8005fc4:	e00a      	b.n	8005fdc <USBD_LL_DataOutStage+0x68>
 8005fc6:	460a      	mov	r2, r1
  else if ((pdev->pClass->DataOut != NULL) &&
 8005fc8:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8005fcc:	699b      	ldr	r3, [r3, #24]
 8005fce:	b133      	cbz	r3, 8005fde <USBD_LL_DataOutStage+0x6a>
           (pdev->dev_state == USBD_STATE_CONFIGURED))
 8005fd0:	f890 129c 	ldrb.w	r1, [r0, #668]	; 0x29c
  else if ((pdev->pClass->DataOut != NULL) &&
 8005fd4:	2903      	cmp	r1, #3
 8005fd6:	d104      	bne.n	8005fe2 <USBD_LL_DataOutStage+0x6e>
    ret = (USBD_StatusTypeDef)pdev->pClass->DataOut(pdev, epnum);
 8005fd8:	4611      	mov	r1, r2
 8005fda:	4798      	blx	r3
}
 8005fdc:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 8005fde:	2003      	movs	r0, #3
 8005fe0:	e7fc      	b.n	8005fdc <USBD_LL_DataOutStage+0x68>
 8005fe2:	2003      	movs	r0, #3
 8005fe4:	e7fa      	b.n	8005fdc <USBD_LL_DataOutStage+0x68>

08005fe6 <USBD_LL_DataInStage>:
* @param  epnum: endpoint index
* @retval status
*/
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 8005fe6:	b510      	push	{r4, lr}
 8005fe8:	4604      	mov	r4, r0
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;

  if (epnum == 0U)
 8005fea:	2900      	cmp	r1, #0
 8005fec:	d146      	bne.n	800607c <USBD_LL_DataInStage+0x96>
 8005fee:	4613      	mov	r3, r2
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 8005ff0:	f8d0 2294 	ldr.w	r2, [r0, #660]	; 0x294
 8005ff4:	2a02      	cmp	r2, #2
 8005ff6:	d005      	beq.n	8006004 <USBD_LL_DataInStage+0x1e>
        (void)USBD_LL_StallEP(pdev, 0x80U);
      }
#endif
    }

    if (pdev->dev_test_mode == 1U)
 8005ff8:	f894 32a0 	ldrb.w	r3, [r4, #672]	; 0x2a0
 8005ffc:	2b01      	cmp	r3, #1
 8005ffe:	d039      	beq.n	8006074 <USBD_LL_DataInStage+0x8e>
  {
    /* should never be in this condition */
    return USBD_FAIL;
  }

  return USBD_OK;
 8006000:	2000      	movs	r0, #0
 8006002:	e046      	b.n	8006092 <USBD_LL_DataInStage+0xac>
      if (pep->rem_length > pep->maxpacket)
 8006004:	69c2      	ldr	r2, [r0, #28]
 8006006:	6a01      	ldr	r1, [r0, #32]
 8006008:	428a      	cmp	r2, r1
 800600a:	d813      	bhi.n	8006034 <USBD_LL_DataInStage+0x4e>
        if ((pep->maxpacket == pep->rem_length) &&
 800600c:	428a      	cmp	r2, r1
 800600e:	d01d      	beq.n	800604c <USBD_LL_DataInStage+0x66>
          if ((pdev->pClass->EP0_TxSent != NULL) &&
 8006010:	f8d4 32b8 	ldr.w	r3, [r4, #696]	; 0x2b8
 8006014:	68db      	ldr	r3, [r3, #12]
 8006016:	b12b      	cbz	r3, 8006024 <USBD_LL_DataInStage+0x3e>
              (pdev->dev_state == USBD_STATE_CONFIGURED))
 8006018:	f894 229c 	ldrb.w	r2, [r4, #668]	; 0x29c
          if ((pdev->pClass->EP0_TxSent != NULL) &&
 800601c:	2a03      	cmp	r2, #3
 800601e:	d101      	bne.n	8006024 <USBD_LL_DataInStage+0x3e>
            pdev->pClass->EP0_TxSent(pdev);
 8006020:	4620      	mov	r0, r4
 8006022:	4798      	blx	r3
          (void)USBD_LL_StallEP(pdev, 0x80U);
 8006024:	2180      	movs	r1, #128	; 0x80
 8006026:	4620      	mov	r0, r4
 8006028:	f001 fd14 	bl	8007a54 <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 800602c:	4620      	mov	r0, r4
 800602e:	f000 fc50 	bl	80068d2 <USBD_CtlReceiveStatus>
 8006032:	e7e1      	b.n	8005ff8 <USBD_LL_DataInStage+0x12>
        pep->rem_length -= pep->maxpacket;
 8006034:	1a52      	subs	r2, r2, r1
 8006036:	61c2      	str	r2, [r0, #28]
        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
 8006038:	4619      	mov	r1, r3
 800603a:	f000 fc20 	bl	800687e <USBD_CtlContinueSendData>
       (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800603e:	2300      	movs	r3, #0
 8006040:	461a      	mov	r2, r3
 8006042:	4619      	mov	r1, r3
 8006044:	4620      	mov	r0, r4
 8006046:	f001 fd25 	bl	8007a94 <USBD_LL_PrepareReceive>
 800604a:	e7d5      	b.n	8005ff8 <USBD_LL_DataInStage+0x12>
            (pep->total_length >= pep->maxpacket) &&
 800604c:	6983      	ldr	r3, [r0, #24]
        if ((pep->maxpacket == pep->rem_length) &&
 800604e:	4299      	cmp	r1, r3
 8006050:	d8de      	bhi.n	8006010 <USBD_LL_DataInStage+0x2a>
            (pep->total_length < pdev->ep0_data_len))
 8006052:	f8d0 2298 	ldr.w	r2, [r0, #664]	; 0x298
            (pep->total_length >= pep->maxpacket) &&
 8006056:	4293      	cmp	r3, r2
 8006058:	d2da      	bcs.n	8006010 <USBD_LL_DataInStage+0x2a>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 800605a:	2200      	movs	r2, #0
 800605c:	4611      	mov	r1, r2
 800605e:	f000 fc0e 	bl	800687e <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 8006062:	2100      	movs	r1, #0
 8006064:	f8c4 1298 	str.w	r1, [r4, #664]	; 0x298
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 8006068:	460b      	mov	r3, r1
 800606a:	460a      	mov	r2, r1
 800606c:	4620      	mov	r0, r4
 800606e:	f001 fd11 	bl	8007a94 <USBD_LL_PrepareReceive>
 8006072:	e7c1      	b.n	8005ff8 <USBD_LL_DataInStage+0x12>
      pdev->dev_test_mode = 0U;
 8006074:	2000      	movs	r0, #0
 8006076:	f884 02a0 	strb.w	r0, [r4, #672]	; 0x2a0
 800607a:	e00a      	b.n	8006092 <USBD_LL_DataInStage+0xac>
 800607c:	460a      	mov	r2, r1
  else if ((pdev->pClass->DataIn != NULL) &&
 800607e:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8006082:	695b      	ldr	r3, [r3, #20]
 8006084:	b133      	cbz	r3, 8006094 <USBD_LL_DataInStage+0xae>
           (pdev->dev_state == USBD_STATE_CONFIGURED))
 8006086:	f890 129c 	ldrb.w	r1, [r0, #668]	; 0x29c
  else if ((pdev->pClass->DataIn != NULL) &&
 800608a:	2903      	cmp	r1, #3
 800608c:	d104      	bne.n	8006098 <USBD_LL_DataInStage+0xb2>
    ret = (USBD_StatusTypeDef)pdev->pClass->DataIn(pdev, epnum);
 800608e:	4611      	mov	r1, r2
 8006090:	4798      	blx	r3
}
 8006092:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 8006094:	2003      	movs	r0, #3
 8006096:	e7fc      	b.n	8006092 <USBD_LL_DataInStage+0xac>
 8006098:	2003      	movs	r0, #3
 800609a:	e7fa      	b.n	8006092 <USBD_LL_DataInStage+0xac>

0800609c <USBD_LL_Reset>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 800609c:	b570      	push	{r4, r5, r6, lr}
 800609e:	4604      	mov	r4, r0
  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 80060a0:	2301      	movs	r3, #1
 80060a2:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
  pdev->ep0_state = USBD_EP0_IDLE;
 80060a6:	2300      	movs	r3, #0
 80060a8:	f8c0 3294 	str.w	r3, [r0, #660]	; 0x294
  pdev->dev_config = 0U;
 80060ac:	6043      	str	r3, [r0, #4]
  pdev->dev_remote_wakeup = 0U;
 80060ae:	f8c0 32a4 	str.w	r3, [r0, #676]	; 0x2a4

  if (pdev->pClassData != NULL)
 80060b2:	f8d0 32bc 	ldr.w	r3, [r0, #700]	; 0x2bc
 80060b6:	b123      	cbz	r3, 80060c2 <USBD_LL_Reset+0x26>
  {
    pdev->pClass->DeInit(pdev, (uint8_t)pdev->dev_config);
 80060b8:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 80060bc:	685b      	ldr	r3, [r3, #4]
 80060be:	2100      	movs	r1, #0
 80060c0:	4798      	blx	r3
  }

    /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80060c2:	2340      	movs	r3, #64	; 0x40
 80060c4:	2200      	movs	r2, #0
 80060c6:	4611      	mov	r1, r2
 80060c8:	4620      	mov	r0, r4
 80060ca:	f001 fcb0 	bl	8007a2e <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 80060ce:	2601      	movs	r6, #1
 80060d0:	f8a4 6164 	strh.w	r6, [r4, #356]	; 0x164

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 80060d4:	2540      	movs	r5, #64	; 0x40
 80060d6:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80060da:	462b      	mov	r3, r5
 80060dc:	2200      	movs	r2, #0
 80060de:	2180      	movs	r1, #128	; 0x80
 80060e0:	4620      	mov	r0, r4
 80060e2:	f001 fca4 	bl	8007a2e <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 80060e6:	84a6      	strh	r6, [r4, #36]	; 0x24

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 80060e8:	6225      	str	r5, [r4, #32]

  return USBD_OK;
}
 80060ea:	2000      	movs	r0, #0
 80060ec:	bd70      	pop	{r4, r5, r6, pc}

080060ee <USBD_LL_SetSpeed>:
* @retval status
*/
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
  pdev->dev_speed = speed;
 80060ee:	7401      	strb	r1, [r0, #16]

  return USBD_OK;
}
 80060f0:	2000      	movs	r0, #0
 80060f2:	4770      	bx	lr

080060f4 <USBD_LL_Suspend>:
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  pdev->dev_old_state = pdev->dev_state;
 80060f4:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 80060f8:	f880 329d 	strb.w	r3, [r0, #669]	; 0x29d
  pdev->dev_state = USBD_STATE_SUSPENDED;
 80060fc:	2304      	movs	r3, #4
 80060fe:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c

  return USBD_OK;
}
 8006102:	2000      	movs	r0, #0
 8006104:	4770      	bx	lr

08006106 <USBD_LL_Resume>:
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 8006106:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 800610a:	2b04      	cmp	r3, #4
 800610c:	d001      	beq.n	8006112 <USBD_LL_Resume+0xc>
  {
    pdev->dev_state = pdev->dev_old_state;
  }

  return USBD_OK;
}
 800610e:	2000      	movs	r0, #0
 8006110:	4770      	bx	lr
    pdev->dev_state = pdev->dev_old_state;
 8006112:	f890 329d 	ldrb.w	r3, [r0, #669]	; 0x29d
 8006116:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
 800611a:	e7f8      	b.n	800610e <USBD_LL_Resume+0x8>

0800611c <USBD_LL_SOF>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 800611c:	b508      	push	{r3, lr}
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800611e:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8006122:	2b03      	cmp	r3, #3
 8006124:	d001      	beq.n	800612a <USBD_LL_SOF+0xe>
      pdev->pClass->SOF(pdev);
    }
  }

  return USBD_OK;
}
 8006126:	2000      	movs	r0, #0
 8006128:	bd08      	pop	{r3, pc}
    if (pdev->pClass->SOF != NULL)
 800612a:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800612e:	69db      	ldr	r3, [r3, #28]
 8006130:	2b00      	cmp	r3, #0
 8006132:	d0f8      	beq.n	8006126 <USBD_LL_SOF+0xa>
      pdev->pClass->SOF(pdev);
 8006134:	4798      	blx	r3
 8006136:	e7f6      	b.n	8006126 <USBD_LL_SOF+0xa>

08006138 <USBD_LL_IsoINIncomplete>:
  /* Prevent unused arguments compilation warning */
  UNUSED(pdev);
  UNUSED(epnum);

  return USBD_OK;
}
 8006138:	2000      	movs	r0, #0
 800613a:	4770      	bx	lr

0800613c <USBD_LL_IsoOUTIncomplete>:
  /* Prevent unused arguments compilation warning */
  UNUSED(pdev);
  UNUSED(epnum);

  return USBD_OK;
}
 800613c:	2000      	movs	r0, #0
 800613e:	4770      	bx	lr

08006140 <USBD_LL_DevConnected>:
{
  /* Prevent unused argument compilation warning */
  UNUSED(pdev);

  return USBD_OK;
}
 8006140:	2000      	movs	r0, #0
 8006142:	4770      	bx	lr

08006144 <USBD_LL_DevDisconnected>:
*         Handle device disconnection event
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
 8006144:	b508      	push	{r3, lr}
  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
 8006146:	2301      	movs	r3, #1
 8006148:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c

  if (pdev->pClass != NULL)
 800614c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8006150:	b113      	cbz	r3, 8006158 <USBD_LL_DevDisconnected+0x14>
  {
    pdev->pClass->DeInit(pdev, (uint8_t)pdev->dev_config);
 8006152:	685b      	ldr	r3, [r3, #4]
 8006154:	7901      	ldrb	r1, [r0, #4]
 8006156:	4798      	blx	r3
  }

  return USBD_OK;
}
 8006158:	2000      	movs	r0, #0
 800615a:	bd08      	pop	{r3, pc}

0800615c <USBD_GetLen>:
   * @param  buf : pointer to the ascii string buffer
  * @retval string length
  */
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
 800615c:	2300      	movs	r3, #0
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
 800615e:	e002      	b.n	8006166 <USBD_GetLen+0xa>
  {
    len++;
 8006160:	3301      	adds	r3, #1
 8006162:	b2db      	uxtb	r3, r3
    pbuff++;
 8006164:	3001      	adds	r0, #1
  while (*pbuff != (uint8_t)'\0')
 8006166:	7802      	ldrb	r2, [r0, #0]
 8006168:	2a00      	cmp	r2, #0
 800616a:	d1f9      	bne.n	8006160 <USBD_GetLen+0x4>
  }

  return len;
}
 800616c:	4618      	mov	r0, r3
 800616e:	4770      	bx	lr

08006170 <USBD_SetFeature>:
{
 8006170:	b508      	push	{r3, lr}
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8006172:	884b      	ldrh	r3, [r1, #2]
 8006174:	2b01      	cmp	r3, #1
 8006176:	d000      	beq.n	800617a <USBD_SetFeature+0xa>
}
 8006178:	bd08      	pop	{r3, pc}
    pdev->dev_remote_wakeup = 1U;
 800617a:	f8c0 32a4 	str.w	r3, [r0, #676]	; 0x2a4
    (void)USBD_CtlSendStatus(pdev);
 800617e:	f000 fb9d 	bl	80068bc <USBD_CtlSendStatus>
}
 8006182:	e7f9      	b.n	8006178 <USBD_SetFeature+0x8>

08006184 <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
 8006184:	780b      	ldrb	r3, [r1, #0]
 8006186:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
 8006188:	784b      	ldrb	r3, [r1, #1]
 800618a:	7043      	strb	r3, [r0, #1]
__STATIC_INLINE uint16_t SWAPBYTE(uint8_t *addr)
{
  uint16_t _SwapVal, _Byte1, _Byte2;
  uint8_t *_pbuff = addr;

  _Byte1 = *(uint8_t *)_pbuff;
 800618c:	788b      	ldrb	r3, [r1, #2]
  _pbuff++;
  _Byte2 = *(uint8_t *)_pbuff;
 800618e:	78ca      	ldrb	r2, [r1, #3]

  _SwapVal = (_Byte2 << 8) | _Byte1;
 8006190:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  req->wValue = SWAPBYTE(pbuff);
 8006194:	8043      	strh	r3, [r0, #2]
  _Byte1 = *(uint8_t *)_pbuff;
 8006196:	790b      	ldrb	r3, [r1, #4]
  _Byte2 = *(uint8_t *)_pbuff;
 8006198:	794a      	ldrb	r2, [r1, #5]
  _SwapVal = (_Byte2 << 8) | _Byte1;
 800619a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  req->wIndex = SWAPBYTE(pbuff);
 800619e:	8083      	strh	r3, [r0, #4]
  _Byte1 = *(uint8_t *)_pbuff;
 80061a0:	798b      	ldrb	r3, [r1, #6]
  _Byte2 = *(uint8_t *)_pbuff;
 80061a2:	79ca      	ldrb	r2, [r1, #7]
  _SwapVal = (_Byte2 << 8) | _Byte1;
 80061a4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  req->wLength = SWAPBYTE(pbuff);
 80061a8:	80c3      	strh	r3, [r0, #6]
}
 80061aa:	4770      	bx	lr

080061ac <USBD_CtlError>:
{
 80061ac:	b510      	push	{r4, lr}
 80061ae:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 80061b0:	2180      	movs	r1, #128	; 0x80
 80061b2:	f001 fc4f 	bl	8007a54 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 80061b6:	2100      	movs	r1, #0
 80061b8:	4620      	mov	r0, r4
 80061ba:	f001 fc4b 	bl	8007a54 <USBD_LL_StallEP>
}
 80061be:	bd10      	pop	{r4, pc}

080061c0 <USBD_GetDescriptor>:
{
 80061c0:	b530      	push	{r4, r5, lr}
 80061c2:	b083      	sub	sp, #12
 80061c4:	4604      	mov	r4, r0
 80061c6:	460d      	mov	r5, r1
  uint16_t len = 0U;
 80061c8:	2300      	movs	r3, #0
 80061ca:	f8ad 3006 	strh.w	r3, [sp, #6]
  switch (req->wValue >> 8)
 80061ce:	884a      	ldrh	r2, [r1, #2]
 80061d0:	0a13      	lsrs	r3, r2, #8
 80061d2:	3b01      	subs	r3, #1
 80061d4:	2b0e      	cmp	r3, #14
 80061d6:	f200 80bc 	bhi.w	8006352 <USBD_GetDescriptor+0x192>
 80061da:	e8df f003 	tbb	[pc, r3]
 80061de:	3015      	.short	0x3015
 80061e0:	9ebaba44 	.word	0x9ebaba44
 80061e4:	bababaab 	.word	0xbababaab
 80061e8:	babababa 	.word	0xbabababa
 80061ec:	08          	.byte	0x08
 80061ed:	00          	.byte	0x00
    if (pdev->pDesc->GetBOSDescriptor != NULL)
 80061ee:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 80061f2:	69db      	ldr	r3, [r3, #28]
 80061f4:	b123      	cbz	r3, 8006200 <USBD_GetDescriptor+0x40>
      pbuf = pdev->pDesc->GetBOSDescriptor(pdev->dev_speed, &len);
 80061f6:	f10d 0106 	add.w	r1, sp, #6
 80061fa:	7c00      	ldrb	r0, [r0, #16]
 80061fc:	4798      	blx	r3
 80061fe:	e00a      	b.n	8006216 <USBD_GetDescriptor+0x56>
      USBD_CtlError(pdev, req);
 8006200:	4629      	mov	r1, r5
 8006202:	f7ff ffd3 	bl	80061ac <USBD_CtlError>
 8006206:	e018      	b.n	800623a <USBD_GetDescriptor+0x7a>
    pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 8006208:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 800620c:	681b      	ldr	r3, [r3, #0]
 800620e:	f10d 0106 	add.w	r1, sp, #6
 8006212:	7c00      	ldrb	r0, [r0, #16]
 8006214:	4798      	blx	r3
    if (req->wLength != 0U)
 8006216:	88ea      	ldrh	r2, [r5, #6]
 8006218:	2a00      	cmp	r2, #0
 800621a:	f000 80a3 	beq.w	8006364 <USBD_GetDescriptor+0x1a4>
      if (len != 0U)
 800621e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8006222:	2b00      	cmp	r3, #0
 8006224:	f000 8099 	beq.w	800635a <USBD_GetDescriptor+0x19a>
        len = MIN(len, req->wLength);
 8006228:	429a      	cmp	r2, r3
 800622a:	bf28      	it	cs
 800622c:	461a      	movcs	r2, r3
 800622e:	f8ad 2006 	strh.w	r2, [sp, #6]
        (void)USBD_CtlSendData(pdev, pbuf, len);
 8006232:	4601      	mov	r1, r0
 8006234:	4620      	mov	r0, r4
 8006236:	f000 fb15 	bl	8006864 <USBD_CtlSendData>
}
 800623a:	b003      	add	sp, #12
 800623c:	bd30      	pop	{r4, r5, pc}
    if (pdev->dev_speed == USBD_SPEED_HIGH)
 800623e:	7c03      	ldrb	r3, [r0, #16]
 8006240:	b943      	cbnz	r3, 8006254 <USBD_GetDescriptor+0x94>
      pbuf = pdev->pClass->GetHSConfigDescriptor(&len);
 8006242:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8006246:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006248:	f10d 0006 	add.w	r0, sp, #6
 800624c:	4798      	blx	r3
      pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 800624e:	2302      	movs	r3, #2
 8006250:	7043      	strb	r3, [r0, #1]
 8006252:	e7e0      	b.n	8006216 <USBD_GetDescriptor+0x56>
      pbuf = pdev->pClass->GetFSConfigDescriptor(&len);
 8006254:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8006258:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800625a:	f10d 0006 	add.w	r0, sp, #6
 800625e:	4798      	blx	r3
      pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 8006260:	2302      	movs	r3, #2
 8006262:	7043      	strb	r3, [r0, #1]
 8006264:	e7d7      	b.n	8006216 <USBD_GetDescriptor+0x56>
    switch ((uint8_t)(req->wValue))
 8006266:	b2d2      	uxtb	r2, r2
 8006268:	2a05      	cmp	r2, #5
 800626a:	d852      	bhi.n	8006312 <USBD_GetDescriptor+0x152>
 800626c:	e8df f002 	tbb	[pc, r2]
 8006270:	2a1d1003 	.word	0x2a1d1003
 8006274:	4437      	.short	0x4437
      if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 8006276:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 800627a:	685b      	ldr	r3, [r3, #4]
 800627c:	b123      	cbz	r3, 8006288 <USBD_GetDescriptor+0xc8>
        pbuf = pdev->pDesc->GetLangIDStrDescriptor(pdev->dev_speed, &len);
 800627e:	f10d 0106 	add.w	r1, sp, #6
 8006282:	7c00      	ldrb	r0, [r0, #16]
 8006284:	4798      	blx	r3
 8006286:	e7c6      	b.n	8006216 <USBD_GetDescriptor+0x56>
        USBD_CtlError(pdev, req);
 8006288:	4629      	mov	r1, r5
 800628a:	f7ff ff8f 	bl	80061ac <USBD_CtlError>
 800628e:	e7d4      	b.n	800623a <USBD_GetDescriptor+0x7a>
      if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 8006290:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 8006294:	689b      	ldr	r3, [r3, #8]
 8006296:	b123      	cbz	r3, 80062a2 <USBD_GetDescriptor+0xe2>
        pbuf = pdev->pDesc->GetManufacturerStrDescriptor(pdev->dev_speed, &len);
 8006298:	f10d 0106 	add.w	r1, sp, #6
 800629c:	7c00      	ldrb	r0, [r0, #16]
 800629e:	4798      	blx	r3
 80062a0:	e7b9      	b.n	8006216 <USBD_GetDescriptor+0x56>
        USBD_CtlError(pdev, req);
 80062a2:	4629      	mov	r1, r5
 80062a4:	f7ff ff82 	bl	80061ac <USBD_CtlError>
 80062a8:	e7c7      	b.n	800623a <USBD_GetDescriptor+0x7a>
      if (pdev->pDesc->GetProductStrDescriptor != NULL)
 80062aa:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 80062ae:	68db      	ldr	r3, [r3, #12]
 80062b0:	b123      	cbz	r3, 80062bc <USBD_GetDescriptor+0xfc>
        pbuf = pdev->pDesc->GetProductStrDescriptor(pdev->dev_speed, &len);
 80062b2:	f10d 0106 	add.w	r1, sp, #6
 80062b6:	7c00      	ldrb	r0, [r0, #16]
 80062b8:	4798      	blx	r3
 80062ba:	e7ac      	b.n	8006216 <USBD_GetDescriptor+0x56>
        USBD_CtlError(pdev, req);
 80062bc:	4629      	mov	r1, r5
 80062be:	f7ff ff75 	bl	80061ac <USBD_CtlError>
 80062c2:	e7ba      	b.n	800623a <USBD_GetDescriptor+0x7a>
      if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 80062c4:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 80062c8:	691b      	ldr	r3, [r3, #16]
 80062ca:	b123      	cbz	r3, 80062d6 <USBD_GetDescriptor+0x116>
        pbuf = pdev->pDesc->GetSerialStrDescriptor(pdev->dev_speed, &len);
 80062cc:	f10d 0106 	add.w	r1, sp, #6
 80062d0:	7c00      	ldrb	r0, [r0, #16]
 80062d2:	4798      	blx	r3
 80062d4:	e79f      	b.n	8006216 <USBD_GetDescriptor+0x56>
        USBD_CtlError(pdev, req);
 80062d6:	4629      	mov	r1, r5
 80062d8:	f7ff ff68 	bl	80061ac <USBD_CtlError>
 80062dc:	e7ad      	b.n	800623a <USBD_GetDescriptor+0x7a>
      if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 80062de:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 80062e2:	695b      	ldr	r3, [r3, #20]
 80062e4:	b123      	cbz	r3, 80062f0 <USBD_GetDescriptor+0x130>
        pbuf = pdev->pDesc->GetConfigurationStrDescriptor(pdev->dev_speed, &len);
 80062e6:	f10d 0106 	add.w	r1, sp, #6
 80062ea:	7c00      	ldrb	r0, [r0, #16]
 80062ec:	4798      	blx	r3
 80062ee:	e792      	b.n	8006216 <USBD_GetDescriptor+0x56>
        USBD_CtlError(pdev, req);
 80062f0:	4629      	mov	r1, r5
 80062f2:	f7ff ff5b 	bl	80061ac <USBD_CtlError>
 80062f6:	e7a0      	b.n	800623a <USBD_GetDescriptor+0x7a>
      if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 80062f8:	f8d0 32b4 	ldr.w	r3, [r0, #692]	; 0x2b4
 80062fc:	699b      	ldr	r3, [r3, #24]
 80062fe:	b123      	cbz	r3, 800630a <USBD_GetDescriptor+0x14a>
        pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 8006300:	f10d 0106 	add.w	r1, sp, #6
 8006304:	7c00      	ldrb	r0, [r0, #16]
 8006306:	4798      	blx	r3
 8006308:	e785      	b.n	8006216 <USBD_GetDescriptor+0x56>
        USBD_CtlError(pdev, req);
 800630a:	4629      	mov	r1, r5
 800630c:	f7ff ff4e 	bl	80061ac <USBD_CtlError>
 8006310:	e793      	b.n	800623a <USBD_GetDescriptor+0x7a>
      USBD_CtlError(pdev, req);
 8006312:	4629      	mov	r1, r5
 8006314:	f7ff ff4a 	bl	80061ac <USBD_CtlError>
 8006318:	e78f      	b.n	800623a <USBD_GetDescriptor+0x7a>
    if (pdev->dev_speed == USBD_SPEED_HIGH)
 800631a:	7c03      	ldrb	r3, [r0, #16]
 800631c:	b933      	cbnz	r3, 800632c <USBD_GetDescriptor+0x16c>
      pbuf = pdev->pClass->GetDeviceQualifierDescriptor(&len);
 800631e:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 8006322:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006324:	f10d 0006 	add.w	r0, sp, #6
 8006328:	4798      	blx	r3
 800632a:	e774      	b.n	8006216 <USBD_GetDescriptor+0x56>
      USBD_CtlError(pdev, req);
 800632c:	4629      	mov	r1, r5
 800632e:	f7ff ff3d 	bl	80061ac <USBD_CtlError>
 8006332:	e782      	b.n	800623a <USBD_GetDescriptor+0x7a>
    if (pdev->dev_speed == USBD_SPEED_HIGH)
 8006334:	7c03      	ldrb	r3, [r0, #16]
 8006336:	b943      	cbnz	r3, 800634a <USBD_GetDescriptor+0x18a>
      pbuf = pdev->pClass->GetOtherSpeedConfigDescriptor(&len);
 8006338:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800633c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800633e:	f10d 0006 	add.w	r0, sp, #6
 8006342:	4798      	blx	r3
      pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 8006344:	2307      	movs	r3, #7
 8006346:	7043      	strb	r3, [r0, #1]
 8006348:	e765      	b.n	8006216 <USBD_GetDescriptor+0x56>
      USBD_CtlError(pdev, req);
 800634a:	4629      	mov	r1, r5
 800634c:	f7ff ff2e 	bl	80061ac <USBD_CtlError>
 8006350:	e773      	b.n	800623a <USBD_GetDescriptor+0x7a>
    USBD_CtlError(pdev, req);
 8006352:	4629      	mov	r1, r5
 8006354:	f7ff ff2a 	bl	80061ac <USBD_CtlError>
 8006358:	e76f      	b.n	800623a <USBD_GetDescriptor+0x7a>
        USBD_CtlError(pdev, req);
 800635a:	4629      	mov	r1, r5
 800635c:	4620      	mov	r0, r4
 800635e:	f7ff ff25 	bl	80061ac <USBD_CtlError>
 8006362:	e76a      	b.n	800623a <USBD_GetDescriptor+0x7a>
      (void)USBD_CtlSendStatus(pdev);
 8006364:	4620      	mov	r0, r4
 8006366:	f000 faa9 	bl	80068bc <USBD_CtlSendStatus>
 800636a:	e766      	b.n	800623a <USBD_GetDescriptor+0x7a>

0800636c <USBD_SetAddress>:
{
 800636c:	b538      	push	{r3, r4, r5, lr}
 800636e:	4604      	mov	r4, r0
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 8006370:	888b      	ldrh	r3, [r1, #4]
 8006372:	b9f3      	cbnz	r3, 80063b2 <USBD_SetAddress+0x46>
 8006374:	88cb      	ldrh	r3, [r1, #6]
 8006376:	b9e3      	cbnz	r3, 80063b2 <USBD_SetAddress+0x46>
 8006378:	884b      	ldrh	r3, [r1, #2]
 800637a:	2b7f      	cmp	r3, #127	; 0x7f
 800637c:	d819      	bhi.n	80063b2 <USBD_SetAddress+0x46>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 800637e:	f003 057f 	and.w	r5, r3, #127	; 0x7f
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8006382:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8006386:	2b03      	cmp	r3, #3
 8006388:	d00c      	beq.n	80063a4 <USBD_SetAddress+0x38>
      pdev->dev_address = dev_addr;
 800638a:	f880 529e 	strb.w	r5, [r0, #670]	; 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 800638e:	4629      	mov	r1, r5
 8006390:	f001 fb70 	bl	8007a74 <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 8006394:	4620      	mov	r0, r4
 8006396:	f000 fa91 	bl	80068bc <USBD_CtlSendStatus>
      if (dev_addr != 0U)
 800639a:	b135      	cbz	r5, 80063aa <USBD_SetAddress+0x3e>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 800639c:	2302      	movs	r3, #2
 800639e:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 80063a2:	e009      	b.n	80063b8 <USBD_SetAddress+0x4c>
      USBD_CtlError(pdev, req);
 80063a4:	f7ff ff02 	bl	80061ac <USBD_CtlError>
 80063a8:	e006      	b.n	80063b8 <USBD_SetAddress+0x4c>
        pdev->dev_state = USBD_STATE_DEFAULT;
 80063aa:	2301      	movs	r3, #1
 80063ac:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 80063b0:	e002      	b.n	80063b8 <USBD_SetAddress+0x4c>
    USBD_CtlError(pdev, req);
 80063b2:	4620      	mov	r0, r4
 80063b4:	f7ff fefa 	bl	80061ac <USBD_CtlError>
}
 80063b8:	bd38      	pop	{r3, r4, r5, pc}
	...

080063bc <USBD_SetConfig>:
{
 80063bc:	b570      	push	{r4, r5, r6, lr}
 80063be:	4604      	mov	r4, r0
 80063c0:	460d      	mov	r5, r1
  cfgidx = (uint8_t)(req->wValue);
 80063c2:	7889      	ldrb	r1, [r1, #2]
 80063c4:	4b2e      	ldr	r3, [pc, #184]	; (8006480 <USBD_SetConfig+0xc4>)
 80063c6:	7019      	strb	r1, [r3, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 80063c8:	2901      	cmp	r1, #1
 80063ca:	d80f      	bhi.n	80063ec <USBD_SetConfig+0x30>
  switch (pdev->dev_state)
 80063cc:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 80063d0:	2b02      	cmp	r3, #2
 80063d2:	d011      	beq.n	80063f8 <USBD_SetConfig+0x3c>
 80063d4:	2b03      	cmp	r3, #3
 80063d6:	d025      	beq.n	8006424 <USBD_SetConfig+0x68>
    USBD_CtlError(pdev, req);
 80063d8:	4629      	mov	r1, r5
 80063da:	f7ff fee7 	bl	80061ac <USBD_CtlError>
    (void)USBD_ClrClassConfig(pdev, cfgidx);
 80063de:	4b28      	ldr	r3, [pc, #160]	; (8006480 <USBD_SetConfig+0xc4>)
 80063e0:	7819      	ldrb	r1, [r3, #0]
 80063e2:	4620      	mov	r0, r4
 80063e4:	f7ff fd92 	bl	8005f0c <USBD_ClrClassConfig>
    ret = USBD_FAIL;
 80063e8:	2603      	movs	r6, #3
    break;
 80063ea:	e003      	b.n	80063f4 <USBD_SetConfig+0x38>
    USBD_CtlError(pdev, req);
 80063ec:	4629      	mov	r1, r5
 80063ee:	f7ff fedd 	bl	80061ac <USBD_CtlError>
    return USBD_FAIL;
 80063f2:	2603      	movs	r6, #3
}
 80063f4:	4630      	mov	r0, r6
 80063f6:	bd70      	pop	{r4, r5, r6, pc}
    if (cfgidx != 0U)
 80063f8:	b181      	cbz	r1, 800641c <USBD_SetConfig+0x60>
      pdev->dev_config = cfgidx;
 80063fa:	6041      	str	r1, [r0, #4]
      ret = USBD_SetClassConfig(pdev, cfgidx);
 80063fc:	f7ff fd7d 	bl	8005efa <USBD_SetClassConfig>
      if (ret != USBD_OK)
 8006400:	4606      	mov	r6, r0
 8006402:	b120      	cbz	r0, 800640e <USBD_SetConfig+0x52>
        USBD_CtlError(pdev, req);
 8006404:	4629      	mov	r1, r5
 8006406:	4620      	mov	r0, r4
 8006408:	f7ff fed0 	bl	80061ac <USBD_CtlError>
 800640c:	e7f2      	b.n	80063f4 <USBD_SetConfig+0x38>
        (void)USBD_CtlSendStatus(pdev);
 800640e:	4620      	mov	r0, r4
 8006410:	f000 fa54 	bl	80068bc <USBD_CtlSendStatus>
        pdev->dev_state = USBD_STATE_CONFIGURED;
 8006414:	2303      	movs	r3, #3
 8006416:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 800641a:	e7eb      	b.n	80063f4 <USBD_SetConfig+0x38>
      (void)USBD_CtlSendStatus(pdev);
 800641c:	f000 fa4e 	bl	80068bc <USBD_CtlSendStatus>
  USBD_StatusTypeDef ret = USBD_OK;
 8006420:	2600      	movs	r6, #0
 8006422:	e7e7      	b.n	80063f4 <USBD_SetConfig+0x38>
    if (cfgidx == 0U)
 8006424:	b1c9      	cbz	r1, 800645a <USBD_SetConfig+0x9e>
    else if (cfgidx != pdev->dev_config)
 8006426:	6843      	ldr	r3, [r0, #4]
 8006428:	4299      	cmp	r1, r3
 800642a:	d025      	beq.n	8006478 <USBD_SetConfig+0xbc>
      (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800642c:	b2d9      	uxtb	r1, r3
 800642e:	f7ff fd6d 	bl	8005f0c <USBD_ClrClassConfig>
      pdev->dev_config = cfgidx;
 8006432:	4b13      	ldr	r3, [pc, #76]	; (8006480 <USBD_SetConfig+0xc4>)
 8006434:	7819      	ldrb	r1, [r3, #0]
 8006436:	6061      	str	r1, [r4, #4]
      ret = USBD_SetClassConfig(pdev, cfgidx);
 8006438:	4620      	mov	r0, r4
 800643a:	f7ff fd5e 	bl	8005efa <USBD_SetClassConfig>
      if (ret != USBD_OK)
 800643e:	4606      	mov	r6, r0
 8006440:	b1b0      	cbz	r0, 8006470 <USBD_SetConfig+0xb4>
        USBD_CtlError(pdev, req);
 8006442:	4629      	mov	r1, r5
 8006444:	4620      	mov	r0, r4
 8006446:	f7ff feb1 	bl	80061ac <USBD_CtlError>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800644a:	7921      	ldrb	r1, [r4, #4]
 800644c:	4620      	mov	r0, r4
 800644e:	f7ff fd5d 	bl	8005f0c <USBD_ClrClassConfig>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 8006452:	2302      	movs	r3, #2
 8006454:	f884 329c 	strb.w	r3, [r4, #668]	; 0x29c
 8006458:	e7cc      	b.n	80063f4 <USBD_SetConfig+0x38>
      pdev->dev_state = USBD_STATE_ADDRESSED;
 800645a:	2302      	movs	r3, #2
 800645c:	f880 329c 	strb.w	r3, [r0, #668]	; 0x29c
      pdev->dev_config = cfgidx;
 8006460:	6041      	str	r1, [r0, #4]
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 8006462:	f7ff fd53 	bl	8005f0c <USBD_ClrClassConfig>
      (void)USBD_CtlSendStatus(pdev);
 8006466:	4620      	mov	r0, r4
 8006468:	f000 fa28 	bl	80068bc <USBD_CtlSendStatus>
  USBD_StatusTypeDef ret = USBD_OK;
 800646c:	2600      	movs	r6, #0
 800646e:	e7c1      	b.n	80063f4 <USBD_SetConfig+0x38>
        (void)USBD_CtlSendStatus(pdev);
 8006470:	4620      	mov	r0, r4
 8006472:	f000 fa23 	bl	80068bc <USBD_CtlSendStatus>
 8006476:	e7bd      	b.n	80063f4 <USBD_SetConfig+0x38>
      (void)USBD_CtlSendStatus(pdev);
 8006478:	f000 fa20 	bl	80068bc <USBD_CtlSendStatus>
  USBD_StatusTypeDef ret = USBD_OK;
 800647c:	2600      	movs	r6, #0
 800647e:	e7b9      	b.n	80063f4 <USBD_SetConfig+0x38>
 8006480:	20000466 	.word	0x20000466

08006484 <USBD_GetConfig>:
{
 8006484:	b508      	push	{r3, lr}
  if (req->wLength != 1U)
 8006486:	88cb      	ldrh	r3, [r1, #6]
 8006488:	2b01      	cmp	r3, #1
 800648a:	d10b      	bne.n	80064a4 <USBD_GetConfig+0x20>
    switch (pdev->dev_state)
 800648c:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8006490:	b19b      	cbz	r3, 80064ba <USBD_GetConfig+0x36>
 8006492:	2b02      	cmp	r3, #2
 8006494:	d909      	bls.n	80064aa <USBD_GetConfig+0x26>
 8006496:	2b03      	cmp	r3, #3
 8006498:	d10f      	bne.n	80064ba <USBD_GetConfig+0x36>
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 800649a:	2201      	movs	r2, #1
 800649c:	1d01      	adds	r1, r0, #4
 800649e:	f000 f9e1 	bl	8006864 <USBD_CtlSendData>
      break;
 80064a2:	e001      	b.n	80064a8 <USBD_GetConfig+0x24>
    USBD_CtlError(pdev, req);
 80064a4:	f7ff fe82 	bl	80061ac <USBD_CtlError>
}
 80064a8:	bd08      	pop	{r3, pc}
      pdev->dev_default_config = 0U;
 80064aa:	4601      	mov	r1, r0
 80064ac:	2300      	movs	r3, #0
 80064ae:	f841 3f08 	str.w	r3, [r1, #8]!
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 80064b2:	2201      	movs	r2, #1
 80064b4:	f000 f9d6 	bl	8006864 <USBD_CtlSendData>
      break;
 80064b8:	e7f6      	b.n	80064a8 <USBD_GetConfig+0x24>
      USBD_CtlError(pdev, req);
 80064ba:	f7ff fe77 	bl	80061ac <USBD_CtlError>
}
 80064be:	e7f3      	b.n	80064a8 <USBD_GetConfig+0x24>

080064c0 <USBD_GetStatus>:
{
 80064c0:	b508      	push	{r3, lr}
  switch (pdev->dev_state)
 80064c2:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 80064c6:	3b01      	subs	r3, #1
 80064c8:	2b02      	cmp	r3, #2
 80064ca:	d812      	bhi.n	80064f2 <USBD_GetStatus+0x32>
    if (req->wLength != 0x2U)
 80064cc:	88cb      	ldrh	r3, [r1, #6]
 80064ce:	2b02      	cmp	r3, #2
 80064d0:	d10c      	bne.n	80064ec <USBD_GetStatus+0x2c>
    pdev->dev_config_status = USB_CONFIG_SELF_POWERED;
 80064d2:	2301      	movs	r3, #1
 80064d4:	60c3      	str	r3, [r0, #12]
    if (pdev->dev_remote_wakeup != 0U)
 80064d6:	f8d0 32a4 	ldr.w	r3, [r0, #676]	; 0x2a4
 80064da:	b10b      	cbz	r3, 80064e0 <USBD_GetStatus+0x20>
      pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 80064dc:	2303      	movs	r3, #3
 80064de:	60c3      	str	r3, [r0, #12]
    (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 80064e0:	2202      	movs	r2, #2
 80064e2:	f100 010c 	add.w	r1, r0, #12
 80064e6:	f000 f9bd 	bl	8006864 <USBD_CtlSendData>
}
 80064ea:	bd08      	pop	{r3, pc}
      USBD_CtlError(pdev, req);
 80064ec:	f7ff fe5e 	bl	80061ac <USBD_CtlError>
      break;
 80064f0:	e7fb      	b.n	80064ea <USBD_GetStatus+0x2a>
    USBD_CtlError(pdev, req);
 80064f2:	f7ff fe5b 	bl	80061ac <USBD_CtlError>
}
 80064f6:	e7f8      	b.n	80064ea <USBD_GetStatus+0x2a>

080064f8 <USBD_ClrFeature>:
{
 80064f8:	b508      	push	{r3, lr}
  switch (pdev->dev_state)
 80064fa:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 80064fe:	3b01      	subs	r3, #1
 8006500:	2b02      	cmp	r3, #2
 8006502:	d809      	bhi.n	8006518 <USBD_ClrFeature+0x20>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8006504:	884b      	ldrh	r3, [r1, #2]
 8006506:	2b01      	cmp	r3, #1
 8006508:	d000      	beq.n	800650c <USBD_ClrFeature+0x14>
}
 800650a:	bd08      	pop	{r3, pc}
        pdev->dev_remote_wakeup = 0U;
 800650c:	2300      	movs	r3, #0
 800650e:	f8c0 32a4 	str.w	r3, [r0, #676]	; 0x2a4
        (void)USBD_CtlSendStatus(pdev);
 8006512:	f000 f9d3 	bl	80068bc <USBD_CtlSendStatus>
 8006516:	e7f8      	b.n	800650a <USBD_ClrFeature+0x12>
      USBD_CtlError(pdev, req);
 8006518:	f7ff fe48 	bl	80061ac <USBD_CtlError>
}
 800651c:	e7f5      	b.n	800650a <USBD_ClrFeature+0x12>

0800651e <USBD_StdDevReq>:
{
 800651e:	b508      	push	{r3, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8006520:	780b      	ldrb	r3, [r1, #0]
 8006522:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8006526:	2b20      	cmp	r3, #32
 8006528:	d006      	beq.n	8006538 <USBD_StdDevReq+0x1a>
 800652a:	2b40      	cmp	r3, #64	; 0x40
 800652c:	d004      	beq.n	8006538 <USBD_StdDevReq+0x1a>
 800652e:	b143      	cbz	r3, 8006542 <USBD_StdDevReq+0x24>
    USBD_CtlError(pdev, req);
 8006530:	f7ff fe3c 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8006534:	2000      	movs	r0, #0
    break;
 8006536:	e003      	b.n	8006540 <USBD_StdDevReq+0x22>
    ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 8006538:	f8d0 32b8 	ldr.w	r3, [r0, #696]	; 0x2b8
 800653c:	689b      	ldr	r3, [r3, #8]
 800653e:	4798      	blx	r3
}
 8006540:	bd08      	pop	{r3, pc}
    switch (req->bRequest)
 8006542:	784b      	ldrb	r3, [r1, #1]
 8006544:	2b09      	cmp	r3, #9
 8006546:	d821      	bhi.n	800658c <USBD_StdDevReq+0x6e>
 8006548:	e8df f003 	tbb	[pc, r3]
 800654c:	18201c14 	.word	0x18201c14
 8006550:	20050920 	.word	0x20050920
 8006554:	0d10      	.short	0x0d10
      USBD_GetDescriptor(pdev, req);
 8006556:	f7ff fe33 	bl	80061c0 <USBD_GetDescriptor>
  USBD_StatusTypeDef ret = USBD_OK;
 800655a:	2000      	movs	r0, #0
      break;
 800655c:	e7f0      	b.n	8006540 <USBD_StdDevReq+0x22>
      USBD_SetAddress(pdev, req);
 800655e:	f7ff ff05 	bl	800636c <USBD_SetAddress>
  USBD_StatusTypeDef ret = USBD_OK;
 8006562:	2000      	movs	r0, #0
      break;
 8006564:	e7ec      	b.n	8006540 <USBD_StdDevReq+0x22>
      ret = USBD_SetConfig(pdev, req);
 8006566:	f7ff ff29 	bl	80063bc <USBD_SetConfig>
      break;
 800656a:	e7e9      	b.n	8006540 <USBD_StdDevReq+0x22>
      USBD_GetConfig(pdev, req);
 800656c:	f7ff ff8a 	bl	8006484 <USBD_GetConfig>
  USBD_StatusTypeDef ret = USBD_OK;
 8006570:	2000      	movs	r0, #0
      break;
 8006572:	e7e5      	b.n	8006540 <USBD_StdDevReq+0x22>
      USBD_GetStatus(pdev, req);
 8006574:	f7ff ffa4 	bl	80064c0 <USBD_GetStatus>
  USBD_StatusTypeDef ret = USBD_OK;
 8006578:	2000      	movs	r0, #0
      break;
 800657a:	e7e1      	b.n	8006540 <USBD_StdDevReq+0x22>
      USBD_SetFeature(pdev, req);
 800657c:	f7ff fdf8 	bl	8006170 <USBD_SetFeature>
  USBD_StatusTypeDef ret = USBD_OK;
 8006580:	2000      	movs	r0, #0
      break;
 8006582:	e7dd      	b.n	8006540 <USBD_StdDevReq+0x22>
      USBD_ClrFeature(pdev, req);
 8006584:	f7ff ffb8 	bl	80064f8 <USBD_ClrFeature>
  USBD_StatusTypeDef ret = USBD_OK;
 8006588:	2000      	movs	r0, #0
      break;
 800658a:	e7d9      	b.n	8006540 <USBD_StdDevReq+0x22>
      USBD_CtlError(pdev, req);
 800658c:	f7ff fe0e 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8006590:	2000      	movs	r0, #0
      break;
 8006592:	e7d5      	b.n	8006540 <USBD_StdDevReq+0x22>

08006594 <USBD_StdItfReq>:
{
 8006594:	b570      	push	{r4, r5, r6, lr}
 8006596:	4605      	mov	r5, r0
 8006598:	460c      	mov	r4, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800659a:	780b      	ldrb	r3, [r1, #0]
 800659c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80065a0:	2b20      	cmp	r3, #32
 80065a2:	d007      	beq.n	80065b4 <USBD_StdItfReq+0x20>
 80065a4:	2b40      	cmp	r3, #64	; 0x40
 80065a6:	d005      	beq.n	80065b4 <USBD_StdItfReq+0x20>
 80065a8:	b123      	cbz	r3, 80065b4 <USBD_StdItfReq+0x20>
    USBD_CtlError(pdev, req);
 80065aa:	f7ff fdff 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 80065ae:	2600      	movs	r6, #0
}
 80065b0:	4630      	mov	r0, r6
 80065b2:	bd70      	pop	{r4, r5, r6, pc}
    switch (pdev->dev_state)
 80065b4:	f895 329c 	ldrb.w	r3, [r5, #668]	; 0x29c
 80065b8:	3b01      	subs	r3, #1
 80065ba:	2b02      	cmp	r3, #2
 80065bc:	d818      	bhi.n	80065f0 <USBD_StdItfReq+0x5c>
      if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 80065be:	7923      	ldrb	r3, [r4, #4]
 80065c0:	2b01      	cmp	r3, #1
 80065c2:	d80f      	bhi.n	80065e4 <USBD_StdItfReq+0x50>
        ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 80065c4:	f8d5 32b8 	ldr.w	r3, [r5, #696]	; 0x2b8
 80065c8:	689b      	ldr	r3, [r3, #8]
 80065ca:	4621      	mov	r1, r4
 80065cc:	4628      	mov	r0, r5
 80065ce:	4798      	blx	r3
 80065d0:	4606      	mov	r6, r0
        if ((req->wLength == 0U) && (ret == USBD_OK))
 80065d2:	88e3      	ldrh	r3, [r4, #6]
 80065d4:	2b00      	cmp	r3, #0
 80065d6:	d1eb      	bne.n	80065b0 <USBD_StdItfReq+0x1c>
 80065d8:	2800      	cmp	r0, #0
 80065da:	d1e9      	bne.n	80065b0 <USBD_StdItfReq+0x1c>
          (void)USBD_CtlSendStatus(pdev);
 80065dc:	4628      	mov	r0, r5
 80065de:	f000 f96d 	bl	80068bc <USBD_CtlSendStatus>
 80065e2:	e7e5      	b.n	80065b0 <USBD_StdItfReq+0x1c>
        USBD_CtlError(pdev, req);
 80065e4:	4621      	mov	r1, r4
 80065e6:	4628      	mov	r0, r5
 80065e8:	f7ff fde0 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 80065ec:	2600      	movs	r6, #0
 80065ee:	e7df      	b.n	80065b0 <USBD_StdItfReq+0x1c>
      USBD_CtlError(pdev, req);
 80065f0:	4621      	mov	r1, r4
 80065f2:	4628      	mov	r0, r5
 80065f4:	f7ff fdda 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 80065f8:	2600      	movs	r6, #0
      break;
 80065fa:	e7d9      	b.n	80065b0 <USBD_StdItfReq+0x1c>

080065fc <USBD_StdEPReq>:
{
 80065fc:	b538      	push	{r3, r4, r5, lr}
 80065fe:	4605      	mov	r5, r0
 8006600:	460c      	mov	r4, r1
  ep_addr = LOBYTE(req->wIndex);
 8006602:	888a      	ldrh	r2, [r1, #4]
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8006604:	780b      	ldrb	r3, [r1, #0]
 8006606:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800660a:	2b20      	cmp	r3, #32
 800660c:	d008      	beq.n	8006620 <USBD_StdEPReq+0x24>
 800660e:	b2d1      	uxtb	r1, r2
 8006610:	2b40      	cmp	r3, #64	; 0x40
 8006612:	d005      	beq.n	8006620 <USBD_StdEPReq+0x24>
 8006614:	b15b      	cbz	r3, 800662e <USBD_StdEPReq+0x32>
    USBD_CtlError(pdev, req);
 8006616:	4621      	mov	r1, r4
 8006618:	f7ff fdc8 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 800661c:	2000      	movs	r0, #0
    break;
 800661e:	e005      	b.n	800662c <USBD_StdEPReq+0x30>
    ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 8006620:	f8d5 32b8 	ldr.w	r3, [r5, #696]	; 0x2b8
 8006624:	689b      	ldr	r3, [r3, #8]
 8006626:	4621      	mov	r1, r4
 8006628:	4628      	mov	r0, r5
 800662a:	4798      	blx	r3
}
 800662c:	bd38      	pop	{r3, r4, r5, pc}
    switch (req->bRequest)
 800662e:	7863      	ldrb	r3, [r4, #1]
 8006630:	2b01      	cmp	r3, #1
 8006632:	d038      	beq.n	80066a6 <USBD_StdEPReq+0xaa>
 8006634:	2b00      	cmp	r3, #0
 8006636:	d06b      	beq.n	8006710 <USBD_StdEPReq+0x114>
 8006638:	2b03      	cmp	r3, #3
 800663a:	f040 80f0 	bne.w	800681e <USBD_StdEPReq+0x222>
      switch (pdev->dev_state)
 800663e:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8006642:	2b02      	cmp	r3, #2
 8006644:	d006      	beq.n	8006654 <USBD_StdEPReq+0x58>
 8006646:	2b03      	cmp	r3, #3
 8006648:	d019      	beq.n	800667e <USBD_StdEPReq+0x82>
        USBD_CtlError(pdev, req);
 800664a:	4621      	mov	r1, r4
 800664c:	f7ff fdae 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8006650:	2000      	movs	r0, #0
        break;
 8006652:	e7eb      	b.n	800662c <USBD_StdEPReq+0x30>
        if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8006654:	f1b1 0380 	subs.w	r3, r1, #128	; 0x80
 8006658:	bf18      	it	ne
 800665a:	2301      	movne	r3, #1
 800665c:	2900      	cmp	r1, #0
 800665e:	bf08      	it	eq
 8006660:	2300      	moveq	r3, #0
 8006662:	b13b      	cbz	r3, 8006674 <USBD_StdEPReq+0x78>
          (void)USBD_LL_StallEP(pdev, ep_addr);
 8006664:	f001 f9f6 	bl	8007a54 <USBD_LL_StallEP>
          (void)USBD_LL_StallEP(pdev, 0x80U);
 8006668:	2180      	movs	r1, #128	; 0x80
 800666a:	4628      	mov	r0, r5
 800666c:	f001 f9f2 	bl	8007a54 <USBD_LL_StallEP>
  USBD_StatusTypeDef ret = USBD_OK;
 8006670:	2000      	movs	r0, #0
 8006672:	e7db      	b.n	800662c <USBD_StdEPReq+0x30>
          USBD_CtlError(pdev, req);
 8006674:	4621      	mov	r1, r4
 8006676:	f7ff fd99 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 800667a:	2000      	movs	r0, #0
 800667c:	e7d6      	b.n	800662c <USBD_StdEPReq+0x30>
        if (req->wValue == USB_FEATURE_EP_HALT)
 800667e:	8863      	ldrh	r3, [r4, #2]
 8006680:	b94b      	cbnz	r3, 8006696 <USBD_StdEPReq+0x9a>
          if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 8006682:	f1b1 0380 	subs.w	r3, r1, #128	; 0x80
 8006686:	bf18      	it	ne
 8006688:	2301      	movne	r3, #1
 800668a:	2900      	cmp	r1, #0
 800668c:	bf08      	it	eq
 800668e:	2300      	moveq	r3, #0
 8006690:	b10b      	cbz	r3, 8006696 <USBD_StdEPReq+0x9a>
 8006692:	88e3      	ldrh	r3, [r4, #6]
 8006694:	b123      	cbz	r3, 80066a0 <USBD_StdEPReq+0xa4>
        (void)USBD_CtlSendStatus(pdev);
 8006696:	4628      	mov	r0, r5
 8006698:	f000 f910 	bl	80068bc <USBD_CtlSendStatus>
  USBD_StatusTypeDef ret = USBD_OK;
 800669c:	2000      	movs	r0, #0
        break;
 800669e:	e7c5      	b.n	800662c <USBD_StdEPReq+0x30>
            (void)USBD_LL_StallEP(pdev, ep_addr);
 80066a0:	f001 f9d8 	bl	8007a54 <USBD_LL_StallEP>
 80066a4:	e7f7      	b.n	8006696 <USBD_StdEPReq+0x9a>
      switch (pdev->dev_state)
 80066a6:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 80066aa:	2b02      	cmp	r3, #2
 80066ac:	d006      	beq.n	80066bc <USBD_StdEPReq+0xc0>
 80066ae:	2b03      	cmp	r3, #3
 80066b0:	d019      	beq.n	80066e6 <USBD_StdEPReq+0xea>
        USBD_CtlError(pdev, req);
 80066b2:	4621      	mov	r1, r4
 80066b4:	f7ff fd7a 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 80066b8:	2000      	movs	r0, #0
        break;
 80066ba:	e7b7      	b.n	800662c <USBD_StdEPReq+0x30>
        if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 80066bc:	f1b1 0380 	subs.w	r3, r1, #128	; 0x80
 80066c0:	bf18      	it	ne
 80066c2:	2301      	movne	r3, #1
 80066c4:	2900      	cmp	r1, #0
 80066c6:	bf08      	it	eq
 80066c8:	2300      	moveq	r3, #0
 80066ca:	b13b      	cbz	r3, 80066dc <USBD_StdEPReq+0xe0>
          (void)USBD_LL_StallEP(pdev, ep_addr);
 80066cc:	f001 f9c2 	bl	8007a54 <USBD_LL_StallEP>
          (void)USBD_LL_StallEP(pdev, 0x80U);
 80066d0:	2180      	movs	r1, #128	; 0x80
 80066d2:	4628      	mov	r0, r5
 80066d4:	f001 f9be 	bl	8007a54 <USBD_LL_StallEP>
  USBD_StatusTypeDef ret = USBD_OK;
 80066d8:	2000      	movs	r0, #0
 80066da:	e7a7      	b.n	800662c <USBD_StdEPReq+0x30>
          USBD_CtlError(pdev, req);
 80066dc:	4621      	mov	r1, r4
 80066de:	f7ff fd65 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 80066e2:	2000      	movs	r0, #0
 80066e4:	e7a2      	b.n	800662c <USBD_StdEPReq+0x30>
        if (req->wValue == USB_FEATURE_EP_HALT)
 80066e6:	8863      	ldrh	r3, [r4, #2]
 80066e8:	2b00      	cmp	r3, #0
 80066ea:	f040 809d 	bne.w	8006828 <USBD_StdEPReq+0x22c>
          if ((ep_addr & 0x7FU) != 0x00U)
 80066ee:	f011 0f7f 	tst.w	r1, #127	; 0x7f
 80066f2:	d10a      	bne.n	800670a <USBD_StdEPReq+0x10e>
          (void)USBD_CtlSendStatus(pdev);
 80066f4:	4628      	mov	r0, r5
 80066f6:	f000 f8e1 	bl	80068bc <USBD_CtlSendStatus>
          (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 80066fa:	f8d5 32b8 	ldr.w	r3, [r5, #696]	; 0x2b8
 80066fe:	689b      	ldr	r3, [r3, #8]
 8006700:	4621      	mov	r1, r4
 8006702:	4628      	mov	r0, r5
 8006704:	4798      	blx	r3
  USBD_StatusTypeDef ret = USBD_OK;
 8006706:	2000      	movs	r0, #0
 8006708:	e790      	b.n	800662c <USBD_StdEPReq+0x30>
            (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 800670a:	f001 f9ab 	bl	8007a64 <USBD_LL_ClearStallEP>
 800670e:	e7f1      	b.n	80066f4 <USBD_StdEPReq+0xf8>
      switch (pdev->dev_state)
 8006710:	f890 329c 	ldrb.w	r3, [r0, #668]	; 0x29c
 8006714:	2b02      	cmp	r3, #2
 8006716:	d006      	beq.n	8006726 <USBD_StdEPReq+0x12a>
 8006718:	2b03      	cmp	r3, #3
 800671a:	d02f      	beq.n	800677c <USBD_StdEPReq+0x180>
        USBD_CtlError(pdev, req);
 800671c:	4621      	mov	r1, r4
 800671e:	f7ff fd45 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8006722:	2000      	movs	r0, #0
        break;
 8006724:	e782      	b.n	800662c <USBD_StdEPReq+0x30>
        if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8006726:	f1b1 0380 	subs.w	r3, r1, #128	; 0x80
 800672a:	bf18      	it	ne
 800672c:	2301      	movne	r3, #1
 800672e:	2900      	cmp	r1, #0
 8006730:	bf08      	it	eq
 8006732:	2300      	moveq	r3, #0
 8006734:	b99b      	cbnz	r3, 800675e <USBD_StdEPReq+0x162>
        pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8006736:	f012 0f80 	tst.w	r2, #128	; 0x80
 800673a:	d115      	bne.n	8006768 <USBD_StdEPReq+0x16c>
              &pdev->ep_out[ep_addr & 0x7FU];
 800673c:	f001 017f 	and.w	r1, r1, #127	; 0x7f
        pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8006740:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8006744:	008b      	lsls	r3, r1, #2
 8006746:	f503 71a8 	add.w	r1, r3, #336	; 0x150
 800674a:	4401      	add	r1, r0
 800674c:	3104      	adds	r1, #4
        pep->status = 0x0000U;
 800674e:	2400      	movs	r4, #0
 8006750:	600c      	str	r4, [r1, #0]
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8006752:	2202      	movs	r2, #2
 8006754:	4628      	mov	r0, r5
 8006756:	f000 f885 	bl	8006864 <USBD_CtlSendData>
  USBD_StatusTypeDef ret = USBD_OK;
 800675a:	4620      	mov	r0, r4
        break;
 800675c:	e766      	b.n	800662c <USBD_StdEPReq+0x30>
          USBD_CtlError(pdev, req);
 800675e:	4621      	mov	r1, r4
 8006760:	f7ff fd24 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8006764:	2000      	movs	r0, #0
          break;
 8006766:	e761      	b.n	800662c <USBD_StdEPReq+0x30>
        pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8006768:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800676c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8006770:	008b      	lsls	r3, r1, #2
 8006772:	f103 0110 	add.w	r1, r3, #16
 8006776:	4401      	add	r1, r0
 8006778:	3104      	adds	r1, #4
 800677a:	e7e8      	b.n	800674e <USBD_StdEPReq+0x152>
        if ((ep_addr & 0x80U) == 0x80U)
 800677c:	b252      	sxtb	r2, r2
 800677e:	2a00      	cmp	r2, #0
 8006780:	db24      	blt.n	80067cc <USBD_StdEPReq+0x1d0>
          if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 8006782:	f001 030f 	and.w	r3, r1, #15
 8006786:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800678a:	0098      	lsls	r0, r3, #2
 800678c:	4428      	add	r0, r5
 800678e:	f8b0 3164 	ldrh.w	r3, [r0, #356]	; 0x164
 8006792:	b353      	cbz	r3, 80067ea <USBD_StdEPReq+0x1ee>
        pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8006794:	2a00      	cmp	r2, #0
 8006796:	db2e      	blt.n	80067f6 <USBD_StdEPReq+0x1fa>
              &pdev->ep_out[ep_addr & 0x7FU];
 8006798:	f001 027f 	and.w	r2, r1, #127	; 0x7f
        pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800679c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80067a0:	0093      	lsls	r3, r2, #2
 80067a2:	f503 74a8 	add.w	r4, r3, #336	; 0x150
 80067a6:	442c      	add	r4, r5
 80067a8:	3404      	adds	r4, #4
          if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 80067aa:	2980      	cmp	r1, #128	; 0x80
 80067ac:	bf14      	ite	ne
 80067ae:	2300      	movne	r3, #0
 80067b0:	2301      	moveq	r3, #1
 80067b2:	2900      	cmp	r1, #0
 80067b4:	bf08      	it	eq
 80067b6:	2301      	moveq	r3, #1
 80067b8:	b33b      	cbz	r3, 800680a <USBD_StdEPReq+0x20e>
            pep->status = 0x0000U;
 80067ba:	2300      	movs	r3, #0
 80067bc:	6023      	str	r3, [r4, #0]
          (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 80067be:	2202      	movs	r2, #2
 80067c0:	4621      	mov	r1, r4
 80067c2:	4628      	mov	r0, r5
 80067c4:	f000 f84e 	bl	8006864 <USBD_CtlSendData>
  USBD_StatusTypeDef ret = USBD_OK;
 80067c8:	2000      	movs	r0, #0
          break;
 80067ca:	e72f      	b.n	800662c <USBD_StdEPReq+0x30>
          if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 80067cc:	f001 030f 	and.w	r3, r1, #15
 80067d0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80067d4:	0098      	lsls	r0, r3, #2
 80067d6:	4428      	add	r0, r5
 80067d8:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80067da:	2b00      	cmp	r3, #0
 80067dc:	d1da      	bne.n	8006794 <USBD_StdEPReq+0x198>
            USBD_CtlError(pdev, req);
 80067de:	4621      	mov	r1, r4
 80067e0:	4628      	mov	r0, r5
 80067e2:	f7ff fce3 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 80067e6:	2000      	movs	r0, #0
            break;
 80067e8:	e720      	b.n	800662c <USBD_StdEPReq+0x30>
            USBD_CtlError(pdev, req);
 80067ea:	4621      	mov	r1, r4
 80067ec:	4628      	mov	r0, r5
 80067ee:	f7ff fcdd 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 80067f2:	2000      	movs	r0, #0
            break;
 80067f4:	e71a      	b.n	800662c <USBD_StdEPReq+0x30>
        pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 80067f6:	f001 027f 	and.w	r2, r1, #127	; 0x7f
 80067fa:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80067fe:	0093      	lsls	r3, r2, #2
 8006800:	f103 0410 	add.w	r4, r3, #16
 8006804:	442c      	add	r4, r5
 8006806:	3404      	adds	r4, #4
 8006808:	e7cf      	b.n	80067aa <USBD_StdEPReq+0x1ae>
          else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 800680a:	4628      	mov	r0, r5
 800680c:	f001 f8ae 	bl	800796c <USBD_LL_IsStallEP>
 8006810:	b110      	cbz	r0, 8006818 <USBD_StdEPReq+0x21c>
            pep->status = 0x0001U;
 8006812:	2301      	movs	r3, #1
 8006814:	6023      	str	r3, [r4, #0]
 8006816:	e7d2      	b.n	80067be <USBD_StdEPReq+0x1c2>
            pep->status = 0x0000U;
 8006818:	2300      	movs	r3, #0
 800681a:	6023      	str	r3, [r4, #0]
 800681c:	e7cf      	b.n	80067be <USBD_StdEPReq+0x1c2>
      USBD_CtlError(pdev, req);
 800681e:	4621      	mov	r1, r4
 8006820:	f7ff fcc4 	bl	80061ac <USBD_CtlError>
  USBD_StatusTypeDef ret = USBD_OK;
 8006824:	2000      	movs	r0, #0
      break;
 8006826:	e701      	b.n	800662c <USBD_StdEPReq+0x30>
  USBD_StatusTypeDef ret = USBD_OK;
 8006828:	2000      	movs	r0, #0
 800682a:	e6ff      	b.n	800662c <USBD_StdEPReq+0x30>

0800682c <USBD_GetString>:
  if (desc == NULL)
 800682c:	b1c8      	cbz	r0, 8006862 <USBD_GetString+0x36>
{
 800682e:	b570      	push	{r4, r5, r6, lr}
 8006830:	460d      	mov	r5, r1
 8006832:	4616      	mov	r6, r2
 8006834:	4604      	mov	r4, r0
  *len = ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U;
 8006836:	f7ff fc91 	bl	800615c <USBD_GetLen>
 800683a:	3001      	adds	r0, #1
 800683c:	0040      	lsls	r0, r0, #1
 800683e:	8030      	strh	r0, [r6, #0]
  unicode[idx] = *(uint8_t *)len;
 8006840:	7028      	strb	r0, [r5, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
 8006842:	2303      	movs	r3, #3
 8006844:	706b      	strb	r3, [r5, #1]
  idx++;
 8006846:	2302      	movs	r3, #2
  while (*pdesc != (uint8_t)'\0')
 8006848:	e007      	b.n	800685a <USBD_GetString+0x2e>
    unicode[idx] = *pdesc;
 800684a:	54ea      	strb	r2, [r5, r3]
    pdesc++;
 800684c:	3401      	adds	r4, #1
    idx++;
 800684e:	1c5a      	adds	r2, r3, #1
 8006850:	b2d2      	uxtb	r2, r2
    unicode[idx] = 0U;
 8006852:	2100      	movs	r1, #0
 8006854:	54a9      	strb	r1, [r5, r2]
    idx++;
 8006856:	3302      	adds	r3, #2
 8006858:	b2db      	uxtb	r3, r3
  while (*pdesc != (uint8_t)'\0')
 800685a:	7822      	ldrb	r2, [r4, #0]
 800685c:	2a00      	cmp	r2, #0
 800685e:	d1f4      	bne.n	800684a <USBD_GetString+0x1e>
}
 8006860:	bd70      	pop	{r4, r5, r6, pc}
 8006862:	4770      	bx	lr

08006864 <USBD_CtlSendData>:
* @param  len: length of data to be sent
* @retval status
*/
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 8006864:	b510      	push	{r4, lr}
 8006866:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 8006868:	2202      	movs	r2, #2
 800686a:	f8c0 2294 	str.w	r2, [r0, #660]	; 0x294
  pdev->ep_in[0].total_length = len;
 800686e:	6183      	str	r3, [r0, #24]
  pdev->ep_in[0].rem_length = len;
 8006870:	61c3      	str	r3, [r0, #28]

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8006872:	460a      	mov	r2, r1
 8006874:	2100      	movs	r1, #0
 8006876:	f001 f905 	bl	8007a84 <USBD_LL_Transmit>

  return USBD_OK;
}
 800687a:	2000      	movs	r0, #0
 800687c:	bd10      	pop	{r4, pc}

0800687e <USBD_CtlContinueSendData>:
* @param  len: length of data to be sent
* @retval status
*/
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 800687e:	b508      	push	{r3, lr}
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8006880:	4613      	mov	r3, r2
 8006882:	460a      	mov	r2, r1
 8006884:	2100      	movs	r1, #0
 8006886:	f001 f8fd 	bl	8007a84 <USBD_LL_Transmit>

  return USBD_OK;
}
 800688a:	2000      	movs	r0, #0
 800688c:	bd08      	pop	{r3, pc}

0800688e <USBD_CtlPrepareRx>:
* @param  len: length of data to be received
* @retval status
*/
USBD_StatusTypeDef USBD_CtlPrepareRx(USBD_HandleTypeDef *pdev,
                                     uint8_t *pbuf, uint32_t len)
{
 800688e:	b510      	push	{r4, lr}
 8006890:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_OUT;
 8006892:	2203      	movs	r2, #3
 8006894:	f8c0 2294 	str.w	r2, [r0, #660]	; 0x294
  pdev->ep_out[0].total_length = len;
 8006898:	f8c0 3158 	str.w	r3, [r0, #344]	; 0x158
  pdev->ep_out[0].rem_length = len;
 800689c:	f8c0 315c 	str.w	r3, [r0, #348]	; 0x15c

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 80068a0:	460a      	mov	r2, r1
 80068a2:	2100      	movs	r1, #0
 80068a4:	f001 f8f6 	bl	8007a94 <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 80068a8:	2000      	movs	r0, #0
 80068aa:	bd10      	pop	{r4, pc}

080068ac <USBD_CtlContinueRx>:
* @param  len: length of data to be received
* @retval status
*/
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 80068ac:	b508      	push	{r3, lr}
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 80068ae:	4613      	mov	r3, r2
 80068b0:	460a      	mov	r2, r1
 80068b2:	2100      	movs	r1, #0
 80068b4:	f001 f8ee 	bl	8007a94 <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 80068b8:	2000      	movs	r0, #0
 80068ba:	bd08      	pop	{r3, pc}

080068bc <USBD_CtlSendStatus>:
*         send zero lzngth packet on the ctl pipe
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 80068bc:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 80068be:	2304      	movs	r3, #4
 80068c0:	f8c0 3294 	str.w	r3, [r0, #660]	; 0x294

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 80068c4:	2300      	movs	r3, #0
 80068c6:	461a      	mov	r2, r3
 80068c8:	4619      	mov	r1, r3
 80068ca:	f001 f8db 	bl	8007a84 <USBD_LL_Transmit>

  return USBD_OK;
}
 80068ce:	2000      	movs	r0, #0
 80068d0:	bd08      	pop	{r3, pc}

080068d2 <USBD_CtlReceiveStatus>:
*         receive zero lzngth packet on the ctl pipe
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 80068d2:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 80068d4:	2305      	movs	r3, #5
 80068d6:	f8c0 3294 	str.w	r3, [r0, #660]	; 0x294

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 80068da:	2300      	movs	r3, #0
 80068dc:	461a      	mov	r2, r3
 80068de:	4619      	mov	r1, r3
 80068e0:	f001 f8d8 	bl	8007a94 <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 80068e4:	2000      	movs	r0, #0
 80068e6:	bd08      	pop	{r3, pc}

080068e8 <GUI_X_Config>:
 80068e8:	b508      	push	{r3, lr}
 80068ea:	f44f 31c8 	mov.w	r1, #102400	; 0x19000
 80068ee:	4803      	ldr	r0, [pc, #12]	; (80068fc <GUI_X_Config+0x14>)
 80068f0:	f009 fdcc 	bl	801048c <GUI_ALLOC_AssignMemory>
 80068f4:	4802      	ldr	r0, [pc, #8]	; (8006900 <GUI_X_Config+0x18>)
 80068f6:	f009 f953 	bl	800fba0 <GUI_SetDefaultFont>
 80068fa:	bd08      	pop	{r3, pc}
 80068fc:	20000468 	.word	0x20000468
 8006900:	080166b4 	.word	0x080166b4

08006904 <GUI_X_GetTime>:
 8006904:	4b01      	ldr	r3, [pc, #4]	; (800690c <GUI_X_GetTime+0x8>)
 8006906:	6818      	ldr	r0, [r3, #0]
 8006908:	4770      	bx	lr
 800690a:	bf00      	nop
 800690c:	200197b4 	.word	0x200197b4

08006910 <GUI_X_Delay>:
 8006910:	4b04      	ldr	r3, [pc, #16]	; (8006924 <GUI_X_Delay+0x14>)
 8006912:	681b      	ldr	r3, [r3, #0]
 8006914:	4418      	add	r0, r3
 8006916:	4b03      	ldr	r3, [pc, #12]	; (8006924 <GUI_X_Delay+0x14>)
 8006918:	681b      	ldr	r3, [r3, #0]
 800691a:	1ac3      	subs	r3, r0, r3
 800691c:	2b00      	cmp	r3, #0
 800691e:	dcfa      	bgt.n	8006916 <GUI_X_Delay+0x6>
 8006920:	4770      	bx	lr
 8006922:	bf00      	nop
 8006924:	200197b4 	.word	0x200197b4

08006928 <GUI_X_Init>:
 8006928:	4770      	bx	lr

0800692a <GUI_TOUCH_X_ActivateX>:



void GUI_TOUCH_X_ActivateX(void)
{
}
 800692a:	4770      	bx	lr

0800692c <GUI_TOUCH_X_ActivateY>:
void GUI_TOUCH_X_ActivateY(void)
{
}
 800692c:	4770      	bx	lr

0800692e <GUI_TOUCH_X_MeasureX>:
int  GUI_TOUCH_X_MeasureX(void)
{
 800692e:	b508      	push	{r3, lr}
  return STMPE610_GetX_TOUCH_RAW();
 8006930:	f7fa fd20 	bl	8001374 <STMPE610_GetX_TOUCH_RAW>
}
 8006934:	bd08      	pop	{r3, pc}

08006936 <GUI_TOUCH_X_MeasureY>:
int  GUI_TOUCH_X_MeasureY(void)
{
 8006936:	b508      	push	{r3, lr}
  return STMPE610_GetY_TOUCH_RAW();
 8006938:	f7fa fd22 	bl	8001380 <STMPE610_GetY_TOUCH_RAW>
}
 800693c:	bd08      	pop	{r3, pc}
	...

08006940 <LCD_X_Config>:
* Function description:
*   Called during the initialization process in order to set up the
*   display driver configuration.
*
*/
void LCD_X_Config(void) {
 8006940:	b530      	push	{r4, r5, lr}
 8006942:	b0a3      	sub	sp, #140	; 0x8c
  GUI_DEVICE * pDevice;
  CONFIG_FLEXCOLOR Config = {0};
 8006944:	2400      	movs	r4, #0
 8006946:	941d      	str	r4, [sp, #116]	; 0x74
 8006948:	941e      	str	r4, [sp, #120]	; 0x78
 800694a:	941f      	str	r4, [sp, #124]	; 0x7c
 800694c:	9420      	str	r4, [sp, #128]	; 0x80
 800694e:	9421      	str	r4, [sp, #132]	; 0x84
  GUI_PORT_API PortAPI = {0};
 8006950:	2268      	movs	r2, #104	; 0x68
 8006952:	4621      	mov	r1, r4
 8006954:	a803      	add	r0, sp, #12
 8006956:	f00f fc34 	bl	80161c2 <memset>
  //
  // Set display driver and color conversion
  //
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);
 800695a:	4623      	mov	r3, r4
 800695c:	4622      	mov	r2, r4
 800695e:	491d      	ldr	r1, [pc, #116]	; (80069d4 <LCD_X_Config+0x94>)
 8006960:	481d      	ldr	r0, [pc, #116]	; (80069d8 <LCD_X_Config+0x98>)
 8006962:	f009 f8b3 	bl	800facc <GUI_DEVICE_CreateAndLink>
 8006966:	4605      	mov	r5, r0
  //
  // Display driver configuration, required for Lin-driver
  //
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 8006968:	f44f 7288 	mov.w	r2, #272	; 0x110
 800696c:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8006970:	4620      	mov	r0, r4
 8006972:	f006 fd0b 	bl	800d38c <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, XSIZE_PHYS, YSIZE_PHYS);
 8006976:	f44f 7288 	mov.w	r2, #272	; 0x110
 800697a:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 800697e:	4620      	mov	r0, r4
 8006980:	f006 fcec 	bl	800d35c <LCD_SetVSizeEx>
  //
  // Orientation
  //
  Config.Orientation = 0;
 8006984:	941f      	str	r4, [sp, #124]	; 0x7c
  GUIDRV_FlexColor_Config(pDevice, &Config);
 8006986:	a91d      	add	r1, sp, #116	; 0x74
 8006988:	4628      	mov	r0, r5
 800698a:	f006 fc86 	bl	800d29a <GUIDRV_FlexColor_Config>
  //
  // Set controller and operation mode
  //
  PortAPI.pfWrite16_A0  = SSD1963_WriteCommand;
 800698e:	4b13      	ldr	r3, [pc, #76]	; (80069dc <LCD_X_Config+0x9c>)
 8006990:	930b      	str	r3, [sp, #44]	; 0x2c
  PortAPI.pfWrite16_A1  = SSD1963_WriteData;
 8006992:	4b13      	ldr	r3, [pc, #76]	; (80069e0 <LCD_X_Config+0xa0>)
 8006994:	930c      	str	r3, [sp, #48]	; 0x30
  PortAPI.pfWriteM16_A1 = SSD1963_WriteDataMultiple;
 8006996:	4b13      	ldr	r3, [pc, #76]	; (80069e4 <LCD_X_Config+0xa4>)
 8006998:	930e      	str	r3, [sp, #56]	; 0x38
 // PortAPI.pfReadM16_A1  = SSD1963_ReadData;
  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66720, GUIDRV_FLEXCOLOR_M16C0B16);
 800699a:	4b13      	ldr	r3, [pc, #76]	; (80069e8 <LCD_X_Config+0xa8>)
 800699c:	4a13      	ldr	r2, [pc, #76]	; (80069ec <LCD_X_Config+0xac>)
 800699e:	a903      	add	r1, sp, #12
 80069a0:	4628      	mov	r0, r5
 80069a2:	f006 fc98 	bl	800d2d6 <GUIDRV_FlexColor_SetFunc>

  GUI_TOUCH_Calibrate(GUI_COORD_X, 0, 480, GUI_TOUCH_AD_LEFT , GUI_TOUCH_AD_RIGHT);
 80069a6:	f640 7374 	movw	r3, #3956	; 0xf74
 80069aa:	9300      	str	r3, [sp, #0]
 80069ac:	2392      	movs	r3, #146	; 0x92
 80069ae:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80069b2:	4621      	mov	r1, r4
 80069b4:	4620      	mov	r0, r4
 80069b6:	f007 fe83 	bl	800e6c0 <GUI_TOUCH_Calibrate>
  GUI_TOUCH_Calibrate(GUI_COORD_Y, 0, 272, GUI_TOUCH_AD_TOP, GUI_TOUCH_AD_BOTTOM);
 80069ba:	f640 7303 	movw	r3, #3843	; 0xf03
 80069be:	9300      	str	r3, [sp, #0]
 80069c0:	f44f 7387 	mov.w	r3, #270	; 0x10e
 80069c4:	f44f 7288 	mov.w	r2, #272	; 0x110
 80069c8:	4621      	mov	r1, r4
 80069ca:	2001      	movs	r0, #1
 80069cc:	f007 fe78 	bl	800e6c0 <GUI_TOUCH_Calibrate>

}
 80069d0:	b023      	add	sp, #140	; 0x8c
 80069d2:	bd30      	pop	{r4, r5, pc}
 80069d4:	080177b4 	.word	0x080177b4
 80069d8:	08017628 	.word	0x08017628
 80069dc:	08000e95 	.word	0x08000e95
 80069e0:	08000eed 	.word	0x08000eed
 80069e4:	08000f45 	.word	0x08000f45
 80069e8:	0800cca1 	.word	0x0800cca1
 80069ec:	0800c605 	.word	0x0800c605

080069f0 <LCD_X_DisplayDriver>:
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
  int r;
  (void) LayerIndex;
  (void) pData;
  
  switch (Cmd) {
 80069f0:	2901      	cmp	r1, #1
 80069f2:	d106      	bne.n	8006a02 <LCD_X_DisplayDriver+0x12>
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
 80069f4:	b508      	push	{r3, lr}
    // display controller and put it into operation. If the display
    // controller is not initialized by any external routine this needs
    // to be adapted by the customer...
    //
    // ...
	  SSD1963_Init();
 80069f6:	f7fa fab1 	bl	8000f5c <SSD1963_Init>
	  STMPE610_Init();
 80069fa:	f7fa fbd5 	bl	80011a8 <STMPE610_Init>
    return 0;
 80069fe:	2000      	movs	r0, #0
  }
  default:
    r = -1;
  }
  return r;
}
 8006a00:	bd08      	pop	{r3, pc}
  return r;
 8006a02:	f04f 30ff 	mov.w	r0, #4294967295
}
 8006a06:	4770      	bx	lr

08006a08 <COLOR16_init>:
#include "color16.h"

I2C_HandleTypeDef hi2c2;

uint8_t COLOR16_init(I2C_HandleTypeDef i2c_handle)
{
 8006a08:	b084      	sub	sp, #16
 8006a0a:	b510      	push	{r4, lr}
 8006a0c:	ac02      	add	r4, sp, #8
 8006a0e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	hi2c2=i2c_handle;
 8006a12:	4c0a      	ldr	r4, [pc, #40]	; (8006a3c <COLOR16_init+0x34>)
 8006a14:	224c      	movs	r2, #76	; 0x4c
 8006a16:	a902      	add	r1, sp, #8
 8006a18:	4620      	mov	r0, r4
 8006a1a:	f00f fbae 	bl	801617a <memcpy>

	if(HAL_I2C_IsDeviceReady(&hi2c2,COLOR16_DEVICE_ADDRESS<<1, 5, 100) == HAL_OK )
 8006a1e:	2364      	movs	r3, #100	; 0x64
 8006a20:	2205      	movs	r2, #5
 8006a22:	2172      	movs	r1, #114	; 0x72
 8006a24:	4620      	mov	r0, r4
 8006a26:	f7fb fe23 	bl	8002670 <HAL_I2C_IsDeviceReady>
 8006a2a:	b120      	cbz	r0, 8006a36 <COLOR16_init+0x2e>
		return 1;
	else
		return 0;
 8006a2c:	2000      	movs	r0, #0
}
 8006a2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006a32:	b004      	add	sp, #16
 8006a34:	4770      	bx	lr
		return 1;
 8006a36:	2001      	movs	r0, #1
 8006a38:	e7f9      	b.n	8006a2e <COLOR16_init+0x26>
 8006a3a:	bf00      	nop
 8006a3c:	200197b8 	.word	0x200197b8

08006a40 <color16_write_register>:



void color16_write_register(uint8_t reg, uint8_t data_in) {
 8006a40:	b500      	push	{lr}
 8006a42:	b085      	sub	sp, #20

    uint8_t data_buf[2] = {0};

    // Form the data buffer
    data_buf[0] = reg;
 8006a44:	f88d 000c 	strb.w	r0, [sp, #12]
    data_buf[1] = data_in;
 8006a48:	f88d 100d 	strb.w	r1, [sp, #13]

    // Write the register via I2C
    HAL_I2C_Master_Transmit(&hi2c2, COLOR16_DEVICE_ADDRESS << 1, (uint8_t *)data_buf, 2, 1000);
 8006a4c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006a50:	9300      	str	r3, [sp, #0]
 8006a52:	2302      	movs	r3, #2
 8006a54:	aa03      	add	r2, sp, #12
 8006a56:	2172      	movs	r1, #114	; 0x72
 8006a58:	4802      	ldr	r0, [pc, #8]	; (8006a64 <color16_write_register+0x24>)
 8006a5a:	f7fb fad9 	bl	8002010 <HAL_I2C_Master_Transmit>


}
 8006a5e:	b005      	add	sp, #20
 8006a60:	f85d fb04 	ldr.w	pc, [sp], #4
 8006a64:	200197b8 	.word	0x200197b8

08006a68 <color16_read_register>:

void color16_read_register(uint8_t reg, uint8_t *data_out) {
 8006a68:	b570      	push	{r4, r5, r6, lr}
 8006a6a:	b084      	sub	sp, #16
 8006a6c:	460e      	mov	r6, r1
 8006a6e:	aa04      	add	r2, sp, #16
 8006a70:	f802 0d01 	strb.w	r0, [r2, #-1]!

    // Write the register address to the device
    HAL_I2C_Master_Transmit(&hi2c2, COLOR16_DEVICE_ADDRESS << 1, &reg, 1, 1000);
 8006a74:	4c08      	ldr	r4, [pc, #32]	; (8006a98 <color16_read_register+0x30>)
 8006a76:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
 8006a7a:	9500      	str	r5, [sp, #0]
 8006a7c:	2301      	movs	r3, #1
 8006a7e:	2172      	movs	r1, #114	; 0x72
 8006a80:	4620      	mov	r0, r4
 8006a82:	f7fb fac5 	bl	8002010 <HAL_I2C_Master_Transmit>

    // Read data from the device
    HAL_I2C_Master_Receive(&hi2c2, COLOR16_DEVICE_ADDRESS << 1, data_out, 1, 1000);
 8006a86:	9500      	str	r5, [sp, #0]
 8006a88:	2301      	movs	r3, #1
 8006a8a:	4632      	mov	r2, r6
 8006a8c:	2172      	movs	r1, #114	; 0x72
 8006a8e:	4620      	mov	r0, r4
 8006a90:	f7fb fb7c 	bl	800218c <HAL_I2C_Master_Receive>
}
 8006a94:	b004      	add	sp, #16
 8006a96:	bd70      	pop	{r4, r5, r6, pc}
 8006a98:	200197b8 	.word	0x200197b8

08006a9c <color16_write_register_word>:


void color16_write_register_word(uint8_t reg, uint16_t data_in) {
 8006a9c:	b500      	push	{lr}
 8006a9e:	b085      	sub	sp, #20

    uint8_t data_buf[3] = {0};

    // Form the data buffer
    data_buf[0] = reg;
 8006aa0:	f88d 000c 	strb.w	r0, [sp, #12]
    data_buf[1] = (uint8_t)(data_in & 0xFF);
 8006aa4:	f88d 100d 	strb.w	r1, [sp, #13]
    data_buf[2] = (uint8_t)((data_in >> 8) & 0xFF);
 8006aa8:	0a09      	lsrs	r1, r1, #8
 8006aaa:	f88d 100e 	strb.w	r1, [sp, #14]

    // Write the register via I2C
    HAL_I2C_Master_Transmit(&hi2c2, COLOR16_DEVICE_ADDRESS << 1, (uint8_t *)data_buf, 3, 1000);
 8006aae:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006ab2:	9300      	str	r3, [sp, #0]
 8006ab4:	2303      	movs	r3, #3
 8006ab6:	aa03      	add	r2, sp, #12
 8006ab8:	2172      	movs	r1, #114	; 0x72
 8006aba:	4803      	ldr	r0, [pc, #12]	; (8006ac8 <color16_write_register_word+0x2c>)
 8006abc:	f7fb faa8 	bl	8002010 <HAL_I2C_Master_Transmit>


}
 8006ac0:	b005      	add	sp, #20
 8006ac2:	f85d fb04 	ldr.w	pc, [sp], #4
 8006ac6:	bf00      	nop
 8006ac8:	200197b8 	.word	0x200197b8

08006acc <enable_register>:
    // Combine the received bytes into a 16-bit value
    *data_out = ((uint16_t)data_buf[1] << 8) | data_buf[0];

}

void enable_register(void){
 8006acc:	b508      	push	{r3, lr}

	color16_write_register(COLOR16_REG_ENABLE, 0x01);
 8006ace:	2101      	movs	r1, #1
 8006ad0:	2080      	movs	r0, #128	; 0x80
 8006ad2:	f7ff ffb5 	bl	8006a40 <color16_write_register>

}
 8006ad6:	bd08      	pop	{r3, pc}

08006ad8 <measure_enable>:

void measure_enable(void){
 8006ad8:	b508      	push	{r3, lr}

	color16_write_register(COLOR16_REG_ENABLE, 0x03);
 8006ada:	2103      	movs	r1, #3
 8006adc:	2080      	movs	r0, #128	; 0x80
 8006ade:	f7ff ffaf 	bl	8006a40 <color16_write_register>

}
 8006ae2:	bd08      	pop	{r3, pc}

08006ae4 <color16_generic_read>:

}
//HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
//HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)

void color16_generic_read(uint8_t reg, uint8_t *data_out, uint8_t len) {
 8006ae4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006ae8:	b084      	sub	sp, #16
 8006aea:	460f      	mov	r7, r1
 8006aec:	4690      	mov	r8, r2

    // Transmit register address
    HAL_I2C_Mem_Write(&hi2c2, COLOR16_DEVICE_ADDRESS << 1, reg, 1, NULL, 0, 1000);
 8006aee:	4605      	mov	r5, r0
 8006af0:	4c0c      	ldr	r4, [pc, #48]	; (8006b24 <color16_generic_read+0x40>)
 8006af2:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8006af6:	9602      	str	r6, [sp, #8]
 8006af8:	2300      	movs	r3, #0
 8006afa:	9301      	str	r3, [sp, #4]
 8006afc:	9300      	str	r3, [sp, #0]
 8006afe:	2301      	movs	r3, #1
 8006b00:	4602      	mov	r2, r0
 8006b02:	2172      	movs	r1, #114	; 0x72
 8006b04:	4620      	mov	r0, r4
 8006b06:	f7fb fbff 	bl	8002308 <HAL_I2C_Mem_Write>

    // Receive data
    HAL_I2C_Mem_Read(&hi2c2, COLOR16_DEVICE_ADDRESS << 1, reg, 1, data_out, len, 1000);
 8006b0a:	9602      	str	r6, [sp, #8]
 8006b0c:	f8cd 8004 	str.w	r8, [sp, #4]
 8006b10:	9700      	str	r7, [sp, #0]
 8006b12:	2301      	movs	r3, #1
 8006b14:	462a      	mov	r2, r5
 8006b16:	2172      	movs	r1, #114	; 0x72
 8006b18:	4620      	mov	r0, r4
 8006b1a:	f7fb fccd 	bl	80024b8 <HAL_I2C_Mem_Read>


}
 8006b1e:	b004      	add	sp, #16
 8006b20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006b24:	200197b8 	.word	0x200197b8

08006b28 <color16_set_reg_bank_access>:

//PODESAVANJE REG BANKE Register Bank Access
//0: Register access to register 0x80 and above
//1: Register access to register 0x20 to 0x7F
void color16_set_reg_bank_access ( uint8_t reg_bank )
{
 8006b28:	b510      	push	{r4, lr}
 8006b2a:	b082      	sub	sp, #8
 8006b2c:	4604      	mov	r4, r0
    uint8_t cfg_0;
    color16_read_register ( COLOR16_REG_CFG_0, &cfg_0 );
 8006b2e:	f10d 0107 	add.w	r1, sp, #7
 8006b32:	20bf      	movs	r0, #191	; 0xbf
 8006b34:	f7ff ff98 	bl	8006a68 <color16_read_register>

    if ( reg_bank && ( COLOR16_CFG_0_REG_BANK != ( cfg_0 & COLOR16_CFG_0_REG_BANK ) ) )
 8006b38:	b124      	cbz	r4, 8006b44 <color16_set_reg_bank_access+0x1c>
 8006b3a:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8006b3e:	f011 0f10 	tst.w	r1, #16
 8006b42:	d007      	beq.n	8006b54 <color16_set_reg_bank_access+0x2c>
    {
        cfg_0 |= COLOR16_CFG_0_REG_BANK;
        color16_write_register ( COLOR16_REG_CFG_0, cfg_0 );
    }
    if ( !reg_bank && ( COLOR16_CFG_0_REG_BANK == ( cfg_0 & COLOR16_CFG_0_REG_BANK ) ) )
 8006b44:	b924      	cbnz	r4, 8006b50 <color16_set_reg_bank_access+0x28>
 8006b46:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8006b4a:	f011 0f10 	tst.w	r1, #16
 8006b4e:	d109      	bne.n	8006b64 <color16_set_reg_bank_access+0x3c>
    {
        cfg_0 &= ~COLOR16_CFG_0_REG_BANK;
        color16_write_register ( COLOR16_REG_CFG_0, cfg_0 );
    }

}
 8006b50:	b002      	add	sp, #8
 8006b52:	bd10      	pop	{r4, pc}
        cfg_0 |= COLOR16_CFG_0_REG_BANK;
 8006b54:	f041 0110 	orr.w	r1, r1, #16
 8006b58:	f88d 1007 	strb.w	r1, [sp, #7]
        color16_write_register ( COLOR16_REG_CFG_0, cfg_0 );
 8006b5c:	20bf      	movs	r0, #191	; 0xbf
 8006b5e:	f7ff ff6f 	bl	8006a40 <color16_write_register>
 8006b62:	e7ef      	b.n	8006b44 <color16_set_reg_bank_access+0x1c>
        cfg_0 &= ~COLOR16_CFG_0_REG_BANK;
 8006b64:	f001 01ef 	and.w	r1, r1, #239	; 0xef
 8006b68:	f88d 1007 	strb.w	r1, [sp, #7]
        color16_write_register ( COLOR16_REG_CFG_0, cfg_0 );
 8006b6c:	20bf      	movs	r0, #191	; 0xbf
 8006b6e:	f7ff ff67 	bl	8006a40 <color16_write_register>
}
 8006b72:	e7ed      	b.n	8006b50 <color16_set_reg_bank_access+0x28>

08006b74 <color16_set_integration_time_ms>:

void color16_set_integration_time_ms(float int_time_ms )
{
    if ( ( int_time_ms > COLOR16_INTEGRATION_TIME_MIN ) && ( int_time_ms < COLOR16_INTEGRATION_TIME_MAX ) )
 8006b74:	eddf 7a1d 	vldr	s15, [pc, #116]	; 8006bec <color16_set_integration_time_ms+0x78>
 8006b78:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8006b7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b80:	dd33      	ble.n	8006bea <color16_set_integration_time_ms+0x76>
 8006b82:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8006bf0 <color16_set_integration_time_ms+0x7c>
 8006b86:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8006b8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b8e:	d514      	bpl.n	8006bba <color16_set_integration_time_ms+0x46>
{
 8006b90:	b510      	push	{r4, lr}
    {

    	uint16_t astep = 0;
    	uint16_t atime = 0;
    	for ( uint16_t cnt = 0; cnt <= COLOR16_ATIME_MAX; cnt++ )
 8006b92:	2100      	movs	r1, #0
 8006b94:	29ff      	cmp	r1, #255	; 0xff
 8006b96:	d825      	bhi.n	8006be4 <color16_set_integration_time_ms+0x70>
    	{
        	if ( ( int_time_ms / ( cnt + 1 ) ) < ( ( COLOR16_ASTEP_MAX + 1 ) * COLOR16_SINGLE_STEP_MS ) )
 8006b98:	1c4b      	adds	r3, r1, #1
 8006b9a:	ee07 3a90 	vmov	s15, r3
 8006b9e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006ba2:	eec0 6a27 	vdiv.f32	s13, s0, s15
 8006ba6:	ed9f 7a13 	vldr	s14, [pc, #76]	; 8006bf4 <color16_set_integration_time_ms+0x80>
 8006baa:	eef4 6ac7 	vcmpe.f32	s13, s14
 8006bae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006bb2:	d403      	bmi.n	8006bbc <color16_set_integration_time_ms+0x48>
    	for ( uint16_t cnt = 0; cnt <= COLOR16_ATIME_MAX; cnt++ )
 8006bb4:	3101      	adds	r1, #1
 8006bb6:	b289      	uxth	r1, r1
 8006bb8:	e7ec      	b.n	8006b94 <color16_set_integration_time_ms+0x20>
 8006bba:	4770      	bx	lr
        	{
            	atime = cnt;
            	astep = ( uint16_t ) ( int_time_ms / ( ( atime + 1 ) * COLOR16_SINGLE_STEP_MS ) );
 8006bbc:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8006bec <color16_set_integration_time_ms+0x78>
 8006bc0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006bc4:	ee80 7a27 	vdiv.f32	s14, s0, s15
 8006bc8:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 8006bcc:	ee17 3a90 	vmov	r3, s15
 8006bd0:	b29c      	uxth	r4, r3
            	break;
        	}
    	}
    	color16_write_register ( COLOR16_REG_ATIME, ( uint8_t ) ( atime & 0xFF ) );
 8006bd2:	b2c9      	uxtb	r1, r1
 8006bd4:	2081      	movs	r0, #129	; 0x81
 8006bd6:	f7ff ff33 	bl	8006a40 <color16_write_register>
    	color16_write_register_word ( COLOR16_REG_ASTEP_LSB, astep ) ;
 8006bda:	4621      	mov	r1, r4
 8006bdc:	20d4      	movs	r0, #212	; 0xd4
 8006bde:	f7ff ff5d 	bl	8006a9c <color16_write_register_word>
	}

}
 8006be2:	bd10      	pop	{r4, pc}
    	uint16_t atime = 0;
 8006be4:	2100      	movs	r1, #0
    	uint16_t astep = 0;
 8006be6:	460c      	mov	r4, r1
 8006be8:	e7f3      	b.n	8006bd2 <color16_set_integration_time_ms+0x5e>
 8006bea:	4770      	bx	lr
 8006bec:	3b3630a9 	.word	0x3b3630a9
 8006bf0:	47362ff3 	.word	0x47362ff3
 8006bf4:	43362ff3 	.word	0x43362ff3

08006bf8 <color16_set_wait_time_ms>:

void color16_set_wait_time_ms(float wait_time_ms )
{
    if ( ( wait_time_ms > COLOR16_WAIT_TIME_MIN ) && ( wait_time_ms < COLOR16_WAIT_TIME_MAX ) )
 8006bf8:	eddf 7a10 	vldr	s15, [pc, #64]	; 8006c3c <color16_set_wait_time_ms+0x44>
 8006bfc:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8006c00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c04:	dd18      	ble.n	8006c38 <color16_set_wait_time_ms+0x40>
 8006c06:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8006c40 <color16_set_wait_time_ms+0x48>
 8006c0a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8006c0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c12:	d511      	bpl.n	8006c38 <color16_set_wait_time_ms+0x40>
{
 8006c14:	b508      	push	{r3, lr}
    {
        uint16_t wtime = ( wait_time_ms / COLOR16_WAIT_STEP_MS );
 8006c16:	ed9f 7a09 	vldr	s14, [pc, #36]	; 8006c3c <color16_set_wait_time_ms+0x44>
 8006c1a:	eec0 7a07 	vdiv.f32	s15, s0, s14
 8006c1e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006c22:	ee17 3a90 	vmov	r3, s15
 8006c26:	b299      	uxth	r1, r3
    	if ( wtime )
 8006c28:	b109      	cbz	r1, 8006c2e <color16_set_wait_time_ms+0x36>
    	{
        	wtime--;
 8006c2a:	3901      	subs	r1, #1
 8006c2c:	b289      	uxth	r1, r1
    	}
    	color16_write_register ( COLOR16_REG_WTIME, ( uint8_t ) ( wtime & 0xFF ) );
 8006c2e:	b2c9      	uxtb	r1, r1
 8006c30:	2083      	movs	r0, #131	; 0x83
 8006c32:	f7ff ff05 	bl	8006a40 <color16_write_register>
    }
}
 8006c36:	bd08      	pop	{r3, pc}
 8006c38:	4770      	bx	lr
 8006c3a:	bf00      	nop
 8006c3c:	4031eb85 	.word	0x4031eb85
 8006c40:	4431eb85 	.word	0x4431eb85

08006c44 <color16_default_cfg>:

void color16_default_cfg ( void )
{
 8006c44:	b508      	push	{r3, lr}
	color16_set_reg_bank_access (COLOR16_ACCESS_REG_BANK_20H_7FH );
 8006c46:	2001      	movs	r0, #1
 8006c48:	f7ff ff6e 	bl	8006b28 <color16_set_reg_bank_access>

    color16_set_reg_bank_access (COLOR16_ACCESS_REG_BANK_ABOVE_80H );
 8006c4c:	2000      	movs	r0, #0
 8006c4e:	f7ff ff6b 	bl	8006b28 <color16_set_reg_bank_access>

    color16_write_register (COLOR16_REG_ENABLE, COLOR16_ENABLE_POFF );
 8006c52:	2100      	movs	r1, #0
 8006c54:	2080      	movs	r0, #128	; 0x80
 8006c56:	f7ff fef3 	bl	8006a40 <color16_write_register>
    GUI_Delay(100);
 8006c5a:	2064      	movs	r0, #100	; 0x64
 8006c5c:	f007 fd1c 	bl	800e698 <GUI_Delay>
    color16_write_register (COLOR16_REG_ENABLE, COLOR16_ENABLE_PON );
 8006c60:	2101      	movs	r1, #1
 8006c62:	2080      	movs	r0, #128	; 0x80
 8006c64:	f7ff feec 	bl	8006a40 <color16_write_register>
    GUI_Delay(100);
 8006c68:	2064      	movs	r0, #100	; 0x64
 8006c6a:	f007 fd15 	bl	800e698 <GUI_Delay>
    color16_write_register (COLOR16_REG_CONTROL, COLOR16_CONTROL_SW_RESET );
 8006c6e:	2108      	movs	r1, #8
 8006c70:	20fa      	movs	r0, #250	; 0xfa
 8006c72:	f7ff fee5 	bl	8006a40 <color16_write_register>
    GUI_Delay(100);
 8006c76:	2064      	movs	r0, #100	; 0x64
 8006c78:	f007 fd0e 	bl	800e698 <GUI_Delay>
    //color16_enable_ext_led ( ctx, COLOR16_LED_DRIVE_CURR_DEFAULT );

    color16_set_integration_time_ms (COLOR16_INTEGRATION_TIME_DEFAULT );
 8006c7c:	ed9f 0a0a 	vldr	s0, [pc, #40]	; 8006ca8 <color16_default_cfg+0x64>
 8006c80:	f7ff ff78 	bl	8006b74 <color16_set_integration_time_ms>

    color16_set_wait_time_ms (COLOR16_WAIT_TIME_DEFAULT );
 8006c84:	ed9f 0a09 	vldr	s0, [pc, #36]	; 8006cac <color16_default_cfg+0x68>
 8006c88:	f7ff ffb6 	bl	8006bf8 <color16_set_wait_time_ms>

    color16_write_register (COLOR16_REG_CFG_1, COLOR16_CFG_1_AGAIN_4 );
 8006c8c:	2103      	movs	r1, #3
 8006c8e:	20c6      	movs	r0, #198	; 0xc6
 8006c90:	f7ff fed6 	bl	8006a40 <color16_write_register>

    color16_write_register (COLOR16_REG_CFG_20, COLOR16_CFG_20_AUTO_SMUX_18CH );
 8006c94:	2160      	movs	r1, #96	; 0x60
 8006c96:	20d6      	movs	r0, #214	; 0xd6
 8006c98:	f7ff fed2 	bl	8006a40 <color16_write_register>

    color16_write_register (COLOR16_REG_ENABLE, COLOR16_ENABLE_WEN |COLOR16_ENABLE_PON);// |COLOR16_ENABLE_SP_EN |COLOR16_ENABLE_PON );
 8006c9c:	2109      	movs	r1, #9
 8006c9e:	2080      	movs	r0, #128	; 0x80
 8006ca0:	f7ff fece 	bl	8006a40 <color16_write_register>

}
 8006ca4:	bd08      	pop	{r3, pc}
 8006ca6:	bf00      	nop
 8006ca8:	42b40000 	.word	0x42b40000
 8006cac:	42c80000 	.word	0x42c80000

08006cb0 <color16_read_data>:

void color16_read_data (color16_data_t *data_out)
{
 8006cb0:	b510      	push	{r4, lr}
 8006cb2:	b08a      	sub	sp, #40	; 0x28
 8006cb4:	4604      	mov	r4, r0

	uint8_t status2;
	   	color16_read_register(COLOR16_REG_STATUS_2, &status2 );
 8006cb6:	f10d 0127 	add.w	r1, sp, #39	; 0x27
 8006cba:	2090      	movs	r0, #144	; 0x90
 8006cbc:	f7ff fed4 	bl	8006a68 <color16_read_register>

	        if ( status2 & COLOR16_STATUS_2_AVALID )
 8006cc0:	f89d 3027 	ldrb.w	r3, [sp, #39]	; 0x27
 8006cc4:	f013 0f40 	tst.w	r3, #64	; 0x40
 8006cc8:	d101      	bne.n	8006cce <color16_read_data+0x1e>
	                data_out->ch_f8 = ( ( uint16_t ) data_buf[ 33 ] << 8 ) | data_buf[ 32 ];
	                data_out->ch_2x_vis_3 = ( ( uint16_t ) data_buf[ 35 ] << 8 ) | data_buf[ 34 ];
	                data_out->ch_fd_3 = ( ( uint16_t ) data_buf[ 37 ] << 8 ) | data_buf[ 36 ];
        }

}
 8006cca:	b00a      	add	sp, #40	; 0x28
 8006ccc:	bd10      	pop	{r4, pc}
	        	HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_3);
 8006cce:	2108      	movs	r1, #8
 8006cd0:	4846      	ldr	r0, [pc, #280]	; (8006dec <color16_read_data+0x13c>)
 8006cd2:	f7fa ff2f 	bl	8001b34 <HAL_GPIO_TogglePin>
	            color16_generic_read (COLOR16_REG_STATUS, data_buf, 38 );
 8006cd6:	2226      	movs	r2, #38	; 0x26
 8006cd8:	4669      	mov	r1, sp
 8006cda:	2093      	movs	r0, #147	; 0x93
 8006cdc:	f7ff ff02 	bl	8006ae4 <color16_generic_read>
	                data_out->status = data_buf[ 0 ];
 8006ce0:	f89d 3000 	ldrb.w	r3, [sp]
 8006ce4:	7023      	strb	r3, [r4, #0]
	                data_out->astatus = data_buf[ 1 ];
 8006ce6:	f89d 3001 	ldrb.w	r3, [sp, #1]
 8006cea:	7063      	strb	r3, [r4, #1]
	                data_out->ch_fz = ( ( uint16_t ) data_buf[ 3 ] << 8 ) | data_buf[ 2 ];
 8006cec:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8006cf0:	f89d 3002 	ldrb.w	r3, [sp, #2]
 8006cf4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006cf8:	8063      	strh	r3, [r4, #2]
	                data_out->ch_fy = ( ( uint16_t ) data_buf[ 5 ] << 8 ) | data_buf[ 4 ];
 8006cfa:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8006cfe:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8006d02:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006d06:	80a3      	strh	r3, [r4, #4]
	                data_out->ch_fxl = ( ( uint16_t ) data_buf[ 7 ] << 8 ) | data_buf[ 6 ];
 8006d08:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8006d0c:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8006d10:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006d14:	80e3      	strh	r3, [r4, #6]
	                data_out->ch_nir = ( ( uint16_t ) data_buf[ 9 ] << 8 ) | data_buf[ 8 ];
 8006d16:	f89d 2009 	ldrb.w	r2, [sp, #9]
 8006d1a:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8006d1e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006d22:	8123      	strh	r3, [r4, #8]
	                data_out->ch_2x_vis_1 = ( ( uint16_t ) data_buf[ 11 ] << 8 ) | data_buf[ 10 ];
 8006d24:	f89d 200b 	ldrb.w	r2, [sp, #11]
 8006d28:	f89d 300a 	ldrb.w	r3, [sp, #10]
 8006d2c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006d30:	8163      	strh	r3, [r4, #10]
	                data_out->ch_fd_1 = ( ( uint16_t ) data_buf[ 13 ] << 8 ) | data_buf[ 12 ];
 8006d32:	f89d 200d 	ldrb.w	r2, [sp, #13]
 8006d36:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8006d3a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006d3e:	81a3      	strh	r3, [r4, #12]
	                data_out->ch_f2 = ( ( uint16_t ) data_buf[ 15 ] << 8 ) | data_buf[ 14 ];
 8006d40:	f89d 200f 	ldrb.w	r2, [sp, #15]
 8006d44:	f89d 300e 	ldrb.w	r3, [sp, #14]
 8006d48:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006d4c:	81e3      	strh	r3, [r4, #14]
	                data_out->ch_f3 = ( ( uint16_t ) data_buf[ 17 ] << 8 ) | data_buf[ 16 ];
 8006d4e:	f89d 2011 	ldrb.w	r2, [sp, #17]
 8006d52:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8006d56:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006d5a:	8223      	strh	r3, [r4, #16]
	                data_out->ch_f4 = ( ( uint16_t ) data_buf[ 19 ] << 8 ) | data_buf[ 18 ];
 8006d5c:	f89d 2013 	ldrb.w	r2, [sp, #19]
 8006d60:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8006d64:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006d68:	8263      	strh	r3, [r4, #18]
	                data_out->ch_f6 = ( ( uint16_t ) data_buf[ 21 ] << 8 ) | data_buf[ 20 ];
 8006d6a:	f89d 2015 	ldrb.w	r2, [sp, #21]
 8006d6e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8006d72:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006d76:	82a3      	strh	r3, [r4, #20]
	                data_out->ch_2x_vis_2 = ( ( uint16_t ) data_buf[ 23 ] << 8 ) | data_buf[ 22 ];
 8006d78:	f89d 2017 	ldrb.w	r2, [sp, #23]
 8006d7c:	f89d 3016 	ldrb.w	r3, [sp, #22]
 8006d80:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006d84:	82e3      	strh	r3, [r4, #22]
	                data_out->ch_fd_2 = ( ( uint16_t ) data_buf[ 25 ] << 8 ) | data_buf[ 24 ];
 8006d86:	f89d 2019 	ldrb.w	r2, [sp, #25]
 8006d8a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8006d8e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006d92:	8323      	strh	r3, [r4, #24]
	                data_out->ch_f1 = ( ( uint16_t ) data_buf[ 27 ] << 8 ) | data_buf[ 26 ];
 8006d94:	f89d 201b 	ldrb.w	r2, [sp, #27]
 8006d98:	f89d 301a 	ldrb.w	r3, [sp, #26]
 8006d9c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006da0:	8363      	strh	r3, [r4, #26]
	                data_out->ch_f5 = ( ( uint16_t ) data_buf[ 29 ] << 8 ) | data_buf[ 28 ];
 8006da2:	f89d 201d 	ldrb.w	r2, [sp, #29]
 8006da6:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8006daa:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006dae:	83a3      	strh	r3, [r4, #28]
	                data_out->ch_f7 = ( ( uint16_t ) data_buf[ 31 ] << 8 ) | data_buf[ 30 ];
 8006db0:	f89d 201f 	ldrb.w	r2, [sp, #31]
 8006db4:	f89d 301e 	ldrb.w	r3, [sp, #30]
 8006db8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006dbc:	83e3      	strh	r3, [r4, #30]
	                data_out->ch_f8 = ( ( uint16_t ) data_buf[ 33 ] << 8 ) | data_buf[ 32 ];
 8006dbe:	f89d 2021 	ldrb.w	r2, [sp, #33]	; 0x21
 8006dc2:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8006dc6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006dca:	8423      	strh	r3, [r4, #32]
	                data_out->ch_2x_vis_3 = ( ( uint16_t ) data_buf[ 35 ] << 8 ) | data_buf[ 34 ];
 8006dcc:	f89d 2023 	ldrb.w	r2, [sp, #35]	; 0x23
 8006dd0:	f89d 3022 	ldrb.w	r3, [sp, #34]	; 0x22
 8006dd4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006dd8:	8463      	strh	r3, [r4, #34]	; 0x22
	                data_out->ch_fd_3 = ( ( uint16_t ) data_buf[ 37 ] << 8 ) | data_buf[ 36 ];
 8006dda:	f89d 2025 	ldrb.w	r2, [sp, #37]	; 0x25
 8006dde:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8006de2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006de6:	84a3      	strh	r3, [r4, #36]	; 0x24
}
 8006de8:	e76f      	b.n	8006cca <color16_read_data+0x1a>
 8006dea:	bf00      	nop
 8006dec:	40020400 	.word	0x40020400

08006df0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8006df0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006df2:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006df4:	2400      	movs	r4, #0
 8006df6:	9407      	str	r4, [sp, #28]
 8006df8:	9408      	str	r4, [sp, #32]
 8006dfa:	9409      	str	r4, [sp, #36]	; 0x24
 8006dfc:	940a      	str	r4, [sp, #40]	; 0x28
 8006dfe:	940b      	str	r4, [sp, #44]	; 0x2c

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8006e00:	4b37      	ldr	r3, [pc, #220]	; (8006ee0 <MX_GPIO_Init+0xf0>)
 8006e02:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006e04:	f042 0210 	orr.w	r2, r2, #16
 8006e08:	631a      	str	r2, [r3, #48]	; 0x30
 8006e0a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006e0c:	f002 0210 	and.w	r2, r2, #16
 8006e10:	9201      	str	r2, [sp, #4]
 8006e12:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8006e14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006e16:	f042 0204 	orr.w	r2, r2, #4
 8006e1a:	631a      	str	r2, [r3, #48]	; 0x30
 8006e1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006e1e:	f002 0204 	and.w	r2, r2, #4
 8006e22:	9202      	str	r2, [sp, #8]
 8006e24:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8006e26:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006e28:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8006e2c:	631a      	str	r2, [r3, #48]	; 0x30
 8006e2e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006e30:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8006e34:	9203      	str	r2, [sp, #12]
 8006e36:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8006e38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006e3a:	f042 0202 	orr.w	r2, r2, #2
 8006e3e:	631a      	str	r2, [r3, #48]	; 0x30
 8006e40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006e42:	f002 0202 	and.w	r2, r2, #2
 8006e46:	9204      	str	r2, [sp, #16]
 8006e48:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8006e4a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006e4c:	f042 0201 	orr.w	r2, r2, #1
 8006e50:	631a      	str	r2, [r3, #48]	; 0x30
 8006e52:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006e54:	f002 0201 	and.w	r2, r2, #1
 8006e58:	9205      	str	r2, [sp, #20]
 8006e5a:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8006e5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006e5e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006e62:	631a      	str	r2, [r3, #48]	; 0x30
 8006e64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e66:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006e6a:	9306      	str	r3, [sp, #24]
 8006e6c:	9b06      	ldr	r3, [sp, #24]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14|GPIO_PIN_3|GPIO_PIN_4, GPIO_PIN_RESET);
 8006e6e:	4f1d      	ldr	r7, [pc, #116]	; (8006ee4 <MX_GPIO_Init+0xf4>)
 8006e70:	4622      	mov	r2, r4
 8006e72:	f244 0118 	movw	r1, #16408	; 0x4018
 8006e76:	4638      	mov	r0, r7
 8006e78:	f7fa fe56 	bl	8001b28 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_15, GPIO_PIN_RESET);
 8006e7c:	4d1a      	ldr	r5, [pc, #104]	; (8006ee8 <MX_GPIO_Init+0xf8>)
 8006e7e:	4622      	mov	r2, r4
 8006e80:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8006e84:	4628      	mov	r0, r5
 8006e86:	f7fa fe4f 	bl	8001b28 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PE2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8006e8a:	2304      	movs	r3, #4
 8006e8c:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8006e8e:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8006e92:	9308      	str	r3, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006e94:	9409      	str	r4, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8006e96:	4e15      	ldr	r6, [pc, #84]	; (8006eec <MX_GPIO_Init+0xfc>)
 8006e98:	a907      	add	r1, sp, #28
 8006e9a:	4630      	mov	r0, r6
 8006e9c:	f7fa fd50 	bl	8001940 <HAL_GPIO_Init>

  /*Configure GPIO pin : PE3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8006ea0:	2308      	movs	r3, #8
 8006ea2:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8006ea4:	9408      	str	r4, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006ea6:	9409      	str	r4, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8006ea8:	a907      	add	r1, sp, #28
 8006eaa:	4630      	mov	r0, r6
 8006eac:	f7fa fd48 	bl	8001940 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB14 PB3 PB4 */
  GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_3|GPIO_PIN_4;
 8006eb0:	f244 0318 	movw	r3, #16408	; 0x4018
 8006eb4:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8006eb6:	2601      	movs	r6, #1
 8006eb8:	9608      	str	r6, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006eba:	9409      	str	r4, [sp, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006ebc:	940a      	str	r4, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8006ebe:	a907      	add	r1, sp, #28
 8006ec0:	4638      	mov	r0, r7
 8006ec2:	f7fa fd3d 	bl	8001940 <HAL_GPIO_Init>

  /*Configure GPIO pin : PG15 */
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8006ec6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8006eca:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8006ecc:	9608      	str	r6, [sp, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006ece:	9409      	str	r4, [sp, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006ed0:	940a      	str	r4, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8006ed2:	a907      	add	r1, sp, #28
 8006ed4:	4628      	mov	r0, r5
 8006ed6:	f7fa fd33 	bl	8001940 <HAL_GPIO_Init>

}
 8006eda:	b00d      	add	sp, #52	; 0x34
 8006edc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006ede:	bf00      	nop
 8006ee0:	40023800 	.word	0x40023800
 8006ee4:	40020400 	.word	0x40020400
 8006ee8:	40021800 	.word	0x40021800
 8006eec:	40021000 	.word	0x40021000

08006ef0 <MX_DMA_Init>:
{
 8006ef0:	b500      	push	{lr}
 8006ef2:	b083      	sub	sp, #12
  __HAL_RCC_DMA1_CLK_ENABLE();
 8006ef4:	4b0e      	ldr	r3, [pc, #56]	; (8006f30 <MX_DMA_Init+0x40>)
 8006ef6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006ef8:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8006efc:	631a      	str	r2, [r3, #48]	; 0x30
 8006efe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f00:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8006f04:	9301      	str	r3, [sp, #4]
 8006f06:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 8006f08:	2200      	movs	r2, #0
 8006f0a:	4611      	mov	r1, r2
 8006f0c:	200b      	movs	r0, #11
 8006f0e:	f7fa faa7 	bl	8001460 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 8006f12:	200b      	movs	r0, #11
 8006f14:	f7fa fad6 	bl	80014c4 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 8006f18:	2200      	movs	r2, #0
 8006f1a:	4611      	mov	r1, r2
 8006f1c:	2011      	movs	r0, #17
 8006f1e:	f7fa fa9f 	bl	8001460 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 8006f22:	2011      	movs	r0, #17
 8006f24:	f7fa face 	bl	80014c4 <HAL_NVIC_EnableIRQ>
}
 8006f28:	b003      	add	sp, #12
 8006f2a:	f85d fb04 	ldr.w	pc, [sp], #4
 8006f2e:	bf00      	nop
 8006f30:	40023800 	.word	0x40023800

08006f34 <MX_I2C1_Init>:
{
 8006f34:	b538      	push	{r3, r4, r5, lr}
  hi2c1.Instance = I2C1;
 8006f36:	4c0d      	ldr	r4, [pc, #52]	; (8006f6c <MX_I2C1_Init+0x38>)
 8006f38:	4b0d      	ldr	r3, [pc, #52]	; (8006f70 <MX_I2C1_Init+0x3c>)
 8006f3a:	6023      	str	r3, [r4, #0]
  hi2c1.Init.Timing = 0x20303E5D;
 8006f3c:	4b0d      	ldr	r3, [pc, #52]	; (8006f74 <MX_I2C1_Init+0x40>)
 8006f3e:	6063      	str	r3, [r4, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8006f40:	2500      	movs	r5, #0
 8006f42:	60a5      	str	r5, [r4, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8006f44:	2301      	movs	r3, #1
 8006f46:	60e3      	str	r3, [r4, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8006f48:	6125      	str	r5, [r4, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8006f4a:	6165      	str	r5, [r4, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8006f4c:	61a5      	str	r5, [r4, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8006f4e:	61e5      	str	r5, [r4, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8006f50:	6225      	str	r5, [r4, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8006f52:	4620      	mov	r0, r4
 8006f54:	f7fa fffe 	bl	8001f54 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8006f58:	4629      	mov	r1, r5
 8006f5a:	4620      	mov	r0, r4
 8006f5c:	f7fb fc40 	bl	80027e0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8006f60:	4629      	mov	r1, r5
 8006f62:	4620      	mov	r0, r4
 8006f64:	f7fb fc6a 	bl	800283c <HAL_I2CEx_ConfigDigitalFilter>
}
 8006f68:	bd38      	pop	{r3, r4, r5, pc}
 8006f6a:	bf00      	nop
 8006f6c:	2001983c 	.word	0x2001983c
 8006f70:	40005400 	.word	0x40005400
 8006f74:	20303e5d 	.word	0x20303e5d

08006f78 <MX_RTC_Init>:
{
 8006f78:	b570      	push	{r4, r5, r6, lr}
 8006f7a:	b092      	sub	sp, #72	; 0x48
  RTC_TimeTypeDef sTime = {0};
 8006f7c:	2400      	movs	r4, #0
 8006f7e:	940c      	str	r4, [sp, #48]	; 0x30
 8006f80:	940d      	str	r4, [sp, #52]	; 0x34
 8006f82:	940e      	str	r4, [sp, #56]	; 0x38
 8006f84:	940f      	str	r4, [sp, #60]	; 0x3c
 8006f86:	9410      	str	r4, [sp, #64]	; 0x40
 8006f88:	9411      	str	r4, [sp, #68]	; 0x44
  RTC_DateTypeDef sDate = {0};
 8006f8a:	940b      	str	r4, [sp, #44]	; 0x2c
  RTC_AlarmTypeDef sAlarm = {0};
 8006f8c:	222c      	movs	r2, #44	; 0x2c
 8006f8e:	4621      	mov	r1, r4
 8006f90:	4668      	mov	r0, sp
 8006f92:	f00f f916 	bl	80161c2 <memset>
  hrtc.Instance = RTC;
 8006f96:	4d23      	ldr	r5, [pc, #140]	; (8007024 <MX_RTC_Init+0xac>)
 8006f98:	4b23      	ldr	r3, [pc, #140]	; (8007028 <MX_RTC_Init+0xb0>)
 8006f9a:	602b      	str	r3, [r5, #0]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 8006f9c:	606c      	str	r4, [r5, #4]
  hrtc.Init.AsynchPrediv = 127;
 8006f9e:	237f      	movs	r3, #127	; 0x7f
 8006fa0:	60ab      	str	r3, [r5, #8]
  hrtc.Init.SynchPrediv = 255;
 8006fa2:	23ff      	movs	r3, #255	; 0xff
 8006fa4:	60eb      	str	r3, [r5, #12]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 8006fa6:	612c      	str	r4, [r5, #16]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8006fa8:	616c      	str	r4, [r5, #20]
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8006faa:	61ac      	str	r4, [r5, #24]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 8006fac:	4628      	mov	r0, r5
 8006fae:	f7fd f90b 	bl	80041c8 <HAL_RTC_Init>
  sTime.Hours = 0x12;
 8006fb2:	2312      	movs	r3, #18
 8006fb4:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
  sTime.Minutes = 0x12;
 8006fb8:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
  sTime.Seconds = 0x12;
 8006fbc:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 8006fc0:	9410      	str	r4, [sp, #64]	; 0x40
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 8006fc2:	9411      	str	r4, [sp, #68]	; 0x44
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 8006fc4:	2201      	movs	r2, #1
 8006fc6:	a90c      	add	r1, sp, #48	; 0x30
 8006fc8:	4628      	mov	r0, r5
 8006fca:	f7fd f96b 	bl	80042a4 <HAL_RTC_SetTime>
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 8006fce:	2601      	movs	r6, #1
 8006fd0:	f88d 602c 	strb.w	r6, [sp, #44]	; 0x2c
  sDate.Month = RTC_MONTH_JANUARY;
 8006fd4:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  sDate.Date = 0x11;
 8006fd8:	2311      	movs	r3, #17
 8006fda:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
  sDate.Year = 0x24;
 8006fde:	2324      	movs	r3, #36	; 0x24
 8006fe0:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 8006fe4:	4632      	mov	r2, r6
 8006fe6:	a90b      	add	r1, sp, #44	; 0x2c
 8006fe8:	4628      	mov	r0, r5
 8006fea:	f7fd f9db 	bl	80043a4 <HAL_RTC_SetDate>
  sAlarm.AlarmTime.Hours = 0x0;
 8006fee:	f88d 4000 	strb.w	r4, [sp]
  sAlarm.AlarmTime.Minutes = 0x0;
 8006ff2:	f88d 4001 	strb.w	r4, [sp, #1]
  sAlarm.AlarmTime.Seconds = 0x0;
 8006ff6:	f88d 4002 	strb.w	r4, [sp, #2]
  sAlarm.AlarmTime.SubSeconds = 0x0;
 8006ffa:	9401      	str	r4, [sp, #4]
  sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 8006ffc:	9404      	str	r4, [sp, #16]
  sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 8006ffe:	9405      	str	r4, [sp, #20]
  sAlarm.AlarmMask = RTC_ALARMMASK_DATEWEEKDAY;
 8007000:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007004:	9306      	str	r3, [sp, #24]
  sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 8007006:	9407      	str	r4, [sp, #28]
  sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 8007008:	9408      	str	r4, [sp, #32]
  sAlarm.AlarmDateWeekDay = 0x1;
 800700a:	f88d 6024 	strb.w	r6, [sp, #36]	; 0x24
  sAlarm.Alarm = RTC_ALARM_A;
 800700e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007012:	930a      	str	r3, [sp, #40]	; 0x28
  if (HAL_RTC_SetAlarm_IT(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 8007014:	4632      	mov	r2, r6
 8007016:	4669      	mov	r1, sp
 8007018:	4628      	mov	r0, r5
 800701a:	f7fd fa31 	bl	8004480 <HAL_RTC_SetAlarm_IT>
}
 800701e:	b012      	add	sp, #72	; 0x48
 8007020:	bd70      	pop	{r4, r5, r6, pc}
 8007022:	bf00      	nop
 8007024:	2001995c 	.word	0x2001995c
 8007028:	40002800 	.word	0x40002800

0800702c <MX_UART8_Init>:
{
 800702c:	b508      	push	{r3, lr}
  huart8.Instance = UART8;
 800702e:	4809      	ldr	r0, [pc, #36]	; (8007054 <MX_UART8_Init+0x28>)
 8007030:	4b09      	ldr	r3, [pc, #36]	; (8007058 <MX_UART8_Init+0x2c>)
 8007032:	6003      	str	r3, [r0, #0]
  huart8.Init.BaudRate = 9600;
 8007034:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8007038:	6043      	str	r3, [r0, #4]
  huart8.Init.WordLength = UART_WORDLENGTH_8B;
 800703a:	2300      	movs	r3, #0
 800703c:	6083      	str	r3, [r0, #8]
  huart8.Init.StopBits = UART_STOPBITS_1;
 800703e:	60c3      	str	r3, [r0, #12]
  huart8.Init.Parity = UART_PARITY_NONE;
 8007040:	6103      	str	r3, [r0, #16]
  huart8.Init.Mode = UART_MODE_TX_RX;
 8007042:	220c      	movs	r2, #12
 8007044:	6142      	str	r2, [r0, #20]
  huart8.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8007046:	6183      	str	r3, [r0, #24]
  huart8.Init.OverSampling = UART_OVERSAMPLING_16;
 8007048:	61c3      	str	r3, [r0, #28]
  huart8.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800704a:	6203      	str	r3, [r0, #32]
  huart8.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800704c:	6243      	str	r3, [r0, #36]	; 0x24
  if (HAL_UART_Init(&huart8) != HAL_OK)
 800704e:	f7fd ff91 	bl	8004f74 <HAL_UART_Init>
}
 8007052:	bd08      	pop	{r3, pc}
 8007054:	200199a4 	.word	0x200199a4
 8007058:	40007c00 	.word	0x40007c00

0800705c <HAL_SYSTICK_Callback>:
	OS_TimeMS++;
 800705c:	4a02      	ldr	r2, [pc, #8]	; (8007068 <HAL_SYSTICK_Callback+0xc>)
 800705e:	6813      	ldr	r3, [r2, #0]
 8007060:	3301      	adds	r3, #1
 8007062:	6013      	str	r3, [r2, #0]
}
 8007064:	4770      	bx	lr
 8007066:	bf00      	nop
 8007068:	200197b4 	.word	0x200197b4

0800706c <SystemClock_Config>:
{
 800706c:	b530      	push	{r4, r5, lr}
 800706e:	b0b5      	sub	sp, #212	; 0xd4
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8007070:	2230      	movs	r2, #48	; 0x30
 8007072:	2100      	movs	r1, #0
 8007074:	a828      	add	r0, sp, #160	; 0xa0
 8007076:	f00f f8a4 	bl	80161c2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800707a:	2400      	movs	r4, #0
 800707c:	9423      	str	r4, [sp, #140]	; 0x8c
 800707e:	9424      	str	r4, [sp, #144]	; 0x90
 8007080:	9425      	str	r4, [sp, #148]	; 0x94
 8007082:	9426      	str	r4, [sp, #152]	; 0x98
 8007084:	9427      	str	r4, [sp, #156]	; 0x9c
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8007086:	2284      	movs	r2, #132	; 0x84
 8007088:	4621      	mov	r1, r4
 800708a:	a802      	add	r0, sp, #8
 800708c:	f00f f899 	bl	80161c2 <memset>
  HAL_PWR_EnableBkUpAccess();
 8007090:	f7fc f9d0 	bl	8003434 <HAL_PWR_EnableBkUpAccess>
  __HAL_RCC_PWR_CLK_ENABLE();
 8007094:	4b23      	ldr	r3, [pc, #140]	; (8007124 <SystemClock_Config+0xb8>)
 8007096:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007098:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800709c:	641a      	str	r2, [r3, #64]	; 0x40
 800709e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80070a0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80070a4:	9300      	str	r3, [sp, #0]
 80070a6:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80070a8:	4b1f      	ldr	r3, [pc, #124]	; (8007128 <SystemClock_Config+0xbc>)
 80070aa:	681a      	ldr	r2, [r3, #0]
 80070ac:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80070b0:	601a      	str	r2, [r3, #0]
 80070b2:	681b      	ldr	r3, [r3, #0]
 80070b4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80070b8:	9301      	str	r3, [sp, #4]
 80070ba:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 80070bc:	2309      	movs	r3, #9
 80070be:	9328      	str	r3, [sp, #160]	; 0xa0
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80070c0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80070c4:	9329      	str	r3, [sp, #164]	; 0xa4
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 80070c6:	2301      	movs	r3, #1
 80070c8:	932d      	str	r3, [sp, #180]	; 0xb4
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80070ca:	2502      	movs	r5, #2
 80070cc:	952e      	str	r5, [sp, #184]	; 0xb8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80070ce:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80070d2:	932f      	str	r3, [sp, #188]	; 0xbc
  RCC_OscInitStruct.PLL.PLLM = 25;
 80070d4:	2319      	movs	r3, #25
 80070d6:	9330      	str	r3, [sp, #192]	; 0xc0
  RCC_OscInitStruct.PLL.PLLN = 384;
 80070d8:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80070dc:	9331      	str	r3, [sp, #196]	; 0xc4
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80070de:	9532      	str	r5, [sp, #200]	; 0xc8
  RCC_OscInitStruct.PLL.PLLQ = 8;
 80070e0:	2308      	movs	r3, #8
 80070e2:	9333      	str	r3, [sp, #204]	; 0xcc
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80070e4:	a828      	add	r0, sp, #160	; 0xa0
 80070e6:	f7fc f9eb 	bl	80034c0 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80070ea:	f7fc f9ab 	bl	8003444 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80070ee:	230f      	movs	r3, #15
 80070f0:	9323      	str	r3, [sp, #140]	; 0x8c
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80070f2:	9524      	str	r5, [sp, #144]	; 0x90
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80070f4:	9425      	str	r4, [sp, #148]	; 0x94
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80070f6:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80070fa:	9326      	str	r3, [sp, #152]	; 0x98
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80070fc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8007100:	9327      	str	r3, [sp, #156]	; 0x9c
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 8007102:	2106      	movs	r1, #6
 8007104:	a823      	add	r0, sp, #140	; 0x8c
 8007106:	f7fc fc49 	bl	800399c <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_UART8
 800710a:	4b08      	ldr	r3, [pc, #32]	; (800712c <SystemClock_Config+0xc0>)
 800710c:	9302      	str	r3, [sp, #8]
  PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 800710e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007112:	930e      	str	r3, [sp, #56]	; 0x38
  PeriphClkInitStruct.Uart8ClockSelection = RCC_UART8CLKSOURCE_PCLK1;
 8007114:	941a      	str	r4, [sp, #104]	; 0x68
  PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8007116:	941b      	str	r4, [sp, #108]	; 0x6c
  PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 8007118:	9421      	str	r4, [sp, #132]	; 0x84
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800711a:	a802      	add	r0, sp, #8
 800711c:	f7fc fd18 	bl	8003b50 <HAL_RCCEx_PeriphCLKConfig>
}
 8007120:	b035      	add	sp, #212	; 0xd4
 8007122:	bd30      	pop	{r4, r5, pc}
 8007124:	40023800 	.word	0x40023800
 8007128:	40007000 	.word	0x40007000
 800712c:	00206020 	.word	0x00206020

08007130 <draw_data_xy>:
/* USER CODE BEGIN 4 */




void draw_data_xy(WM_HWIN hGraph) {
 8007130:	b530      	push	{r4, r5, lr}
 8007132:	b08d      	sub	sp, #52	; 0x34
 8007134:	4605      	mov	r5, r0

    GUI_POINT aPoints[11];
    aPoints[0].x = 20;
 8007136:	2314      	movs	r3, #20
 8007138:	f8ad 3004 	strh.w	r3, [sp, #4]
    aPoints[0].y=0;
 800713c:	2200      	movs	r2, #0
 800713e:	f8ad 2006 	strh.w	r2, [sp, #6]

    aPoints[1].x = 30;
 8007142:	231e      	movs	r3, #30
 8007144:	f8ad 3008 	strh.w	r3, [sp, #8]
    aPoints[1].y=podaci.ch_f1;
 8007148:	4b2c      	ldr	r3, [pc, #176]	; (80071fc <draw_data_xy+0xcc>)
 800714a:	f9b3 101a 	ldrsh.w	r1, [r3, #26]
 800714e:	f8ad 100a 	strh.w	r1, [sp, #10]

    aPoints[2].x = 50;
 8007152:	2132      	movs	r1, #50	; 0x32
 8007154:	f8ad 100c 	strh.w	r1, [sp, #12]
    aPoints[2].y=podaci.ch_f2;
 8007158:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800715c:	f8ad 100e 	strh.w	r1, [sp, #14]

    aPoints[3].x = 75;
 8007160:	214b      	movs	r1, #75	; 0x4b
 8007162:	f8ad 1010 	strh.w	r1, [sp, #16]
    aPoints[3].y=podaci.ch_f3;
 8007166:	f9b3 1010 	ldrsh.w	r1, [r3, #16]
 800716a:	f8ad 1012 	strh.w	r1, [sp, #18]

    aPoints[4].x = 100;
 800716e:	2164      	movs	r1, #100	; 0x64
 8007170:	f8ad 1014 	strh.w	r1, [sp, #20]
    aPoints[4].y=podaci.ch_f4;
 8007174:	f9b3 1012 	ldrsh.w	r1, [r3, #18]
 8007178:	f8ad 1016 	strh.w	r1, [sp, #22]

    aPoints[5].x = 130;
 800717c:	2182      	movs	r1, #130	; 0x82
 800717e:	f8ad 1018 	strh.w	r1, [sp, #24]
    aPoints[5].y=podaci.ch_f5;
 8007182:	f9b3 101c 	ldrsh.w	r1, [r3, #28]
 8007186:	f8ad 101a 	strh.w	r1, [sp, #26]

    aPoints[6].x = 180;
 800718a:	21b4      	movs	r1, #180	; 0xb4
 800718c:	f8ad 101c 	strh.w	r1, [sp, #28]
    aPoints[6].y=podaci.ch_f6;
 8007190:	f9b3 1014 	ldrsh.w	r1, [r3, #20]
 8007194:	f8ad 101e 	strh.w	r1, [sp, #30]

    aPoints[7].x = 270;
 8007198:	f44f 7187 	mov.w	r1, #270	; 0x10e
 800719c:	f8ad 1020 	strh.w	r1, [sp, #32]
    aPoints[7].y=podaci.ch_f7;
 80071a0:	f9b3 101e 	ldrsh.w	r1, [r3, #30]
 80071a4:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22

    aPoints[8].x = 300;
 80071a8:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80071ac:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
    aPoints[8].y=podaci.ch_f8;

    aPoints[9].x = 350;
 80071b0:	f44f 71af 	mov.w	r1, #350	; 0x15e
 80071b4:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
    aPoints[8].y=podaci.ch_nir;
 80071b8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80071bc:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
    aPoints[9].y=0;
 80071c0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a

    aPoints[10].x = 390;
 80071c4:	f44f 73c3 	mov.w	r3, #390	; 0x186
 80071c8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
    aPoints[10].y=0;
 80071cc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e

    GRAPH_DATA_Handle hDataObj = GRAPH_DATA_XY_Create(GUI_GREEN, GUI_COUNTOF(aPoints), aPoints, GUI_COUNTOF(aPoints));
 80071d0:	230b      	movs	r3, #11
 80071d2:	aa01      	add	r2, sp, #4
 80071d4:	4619      	mov	r1, r3
 80071d6:	f44f 407f 	mov.w	r0, #65280	; 0xff00
 80071da:	f001 fb79 	bl	80088d0 <GRAPH_DATA_XY_Create>
    if (hDataObj) {
 80071de:	4604      	mov	r4, r0
 80071e0:	b938      	cbnz	r0, 80071f2 <draw_data_xy+0xc2>
        GRAPH_AttachData(hGraph, hDataObj);
    }
    GUI_Delay(10);
 80071e2:	200a      	movs	r0, #10
 80071e4:	f007 fa58 	bl	800e698 <GUI_Delay>
    GRAPH_DATA_XY_Clear(hDataObj);
 80071e8:	4620      	mov	r0, r4
 80071ea:	f001 fbad 	bl	8008948 <GRAPH_DATA_XY_Clear>
}
 80071ee:	b00d      	add	sp, #52	; 0x34
 80071f0:	bd30      	pop	{r4, r5, pc}
        GRAPH_AttachData(hGraph, hDataObj);
 80071f2:	4601      	mov	r1, r0
 80071f4:	4628      	mov	r0, r5
 80071f6:	f001 ff05 	bl	8009004 <GRAPH_AttachData>
 80071fa:	e7f2      	b.n	80071e2 <draw_data_xy+0xb2>
 80071fc:	2001980c 	.word	0x2001980c

08007200 <main>:
{
 8007200:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007202:	b091      	sub	sp, #68	; 0x44
  HAL_Init();
 8007204:	f7fa f8e8 	bl	80013d8 <HAL_Init>
  SystemClock_Config();
 8007208:	f7ff ff30 	bl	800706c <SystemClock_Config>
  MX_GPIO_Init();
 800720c:	f7ff fdf0 	bl	8006df0 <MX_GPIO_Init>
  MX_DMA_Init();
 8007210:	f7ff fe6e 	bl	8006ef0 <MX_DMA_Init>
  MX_I2C1_Init();
 8007214:	f7ff fe8e 	bl	8006f34 <MX_I2C1_Init>
  MX_USB_DEVICE_Init();
 8007218:	f000 fa68 	bl	80076ec <MX_USB_DEVICE_Init>
  MX_RTC_Init();
 800721c:	f7ff feac 	bl	8006f78 <MX_RTC_Init>
  MX_UART8_Init();
 8007220:	f7ff ff04 	bl	800702c <MX_UART8_Init>
  Init_LCD_GPIO();
 8007224:	f7f9 fdbe 	bl	8000da4 <Init_LCD_GPIO>
  Init_TOUCH_GPIO(hi2c1);
 8007228:	4f7a      	ldr	r7, [pc, #488]	; (8007414 <main+0x214>)
 800722a:	466d      	mov	r5, sp
 800722c:	f107 0410 	add.w	r4, r7, #16
 8007230:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007232:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8007234:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007236:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8007238:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800723a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800723c:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8007240:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8007244:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8007248:	f7f9 ff34 	bl	80010b4 <Init_TOUCH_GPIO>
  STMPE610_Init();
 800724c:	f7f9 ffac 	bl	80011a8 <STMPE610_Init>
  WM_SetCreateFlags(WM_CF_MEMDEV); // eliminise flickering
 8007250:	2004      	movs	r0, #4
 8007252:	f002 fa8b 	bl	800976c <WM_SetCreateFlags>
  GUI_Init();
 8007256:	f008 fd15 	bl	800fc84 <GUI_Init>
  GUI_SetBkColor(GUI_YELLOW);
 800725a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800725e:	f007 fe25 	bl	800eeac <GUI_SetBkColor>
  GUI_Clear();
 8007262:	f008 fcd5 	bl	800fc10 <GUI_Clear>
  CreateProjekat();
 8007266:	f000 fcc9 	bl	8007bfc <CreateProjekat>
  WM_HWIN hDialog = CreateProjekat();
 800726a:	f000 fcc7 	bl	8007bfc <CreateProjekat>
 800726e:	4605      	mov	r5, r0
  hButton0 = WM_GetDialogItem(hDialog, ID_BUTTON_0);
 8007270:	f640 0102 	movw	r1, #2050	; 0x802
 8007274:	f002 fd2e 	bl	8009cd4 <WM_GetDialogItem>
 8007278:	4b67      	ldr	r3, [pc, #412]	; (8007418 <main+0x218>)
 800727a:	6018      	str	r0, [r3, #0]
  hButton1 = WM_GetDialogItem(hDialog, ID_BUTTON_1);
 800727c:	f640 0104 	movw	r1, #2052	; 0x804
 8007280:	4628      	mov	r0, r5
 8007282:	f002 fd27 	bl	8009cd4 <WM_GetDialogItem>
 8007286:	4b65      	ldr	r3, [pc, #404]	; (800741c <main+0x21c>)
 8007288:	6018      	str	r0, [r3, #0]
  hSlider = WM_GetDialogItem(hDialog, ID_SLIDER_0);
 800728a:	f640 0101 	movw	r1, #2049	; 0x801
 800728e:	4628      	mov	r0, r5
 8007290:	f002 fd20 	bl	8009cd4 <WM_GetDialogItem>
 8007294:	4b62      	ldr	r3, [pc, #392]	; (8007420 <main+0x220>)
 8007296:	6018      	str	r0, [r3, #0]
  hGraph = WM_GetDialogItem(hDialog, ID_GRAPH_0);
 8007298:	f640 0103 	movw	r1, #2051	; 0x803
 800729c:	4628      	mov	r0, r5
 800729e:	f002 fd19 	bl	8009cd4 <WM_GetDialogItem>
 80072a2:	4b60      	ldr	r3, [pc, #384]	; (8007424 <main+0x224>)
 80072a4:	6018      	str	r0, [r3, #0]
  hText0 = WM_GetDialogItem(hDialog, ID_TEXT_0);
 80072a6:	f640 0105 	movw	r1, #2053	; 0x805
 80072aa:	4628      	mov	r0, r5
 80072ac:	f002 fd12 	bl	8009cd4 <WM_GetDialogItem>
 80072b0:	4b5d      	ldr	r3, [pc, #372]	; (8007428 <main+0x228>)
 80072b2:	6018      	str	r0, [r3, #0]
  hText1 = WM_GetDialogItem(hDialog, ID_TEXT_1);
 80072b4:	f640 0106 	movw	r1, #2054	; 0x806
 80072b8:	4628      	mov	r0, r5
 80072ba:	f002 fd0b 	bl	8009cd4 <WM_GetDialogItem>
 80072be:	4b5b      	ldr	r3, [pc, #364]	; (800742c <main+0x22c>)
 80072c0:	6018      	str	r0, [r3, #0]
  hText2 = WM_GetDialogItem(hDialog, ID_TEXT_2);
 80072c2:	f640 0107 	movw	r1, #2055	; 0x807
 80072c6:	4628      	mov	r0, r5
 80072c8:	f002 fd04 	bl	8009cd4 <WM_GetDialogItem>
 80072cc:	4b58      	ldr	r3, [pc, #352]	; (8007430 <main+0x230>)
 80072ce:	6018      	str	r0, [r3, #0]
  hText3 = WM_GetDialogItem(hDialog, ID_TEXT_3);
 80072d0:	f640 0108 	movw	r1, #2056	; 0x808
 80072d4:	4628      	mov	r0, r5
 80072d6:	f002 fcfd 	bl	8009cd4 <WM_GetDialogItem>
 80072da:	4b56      	ldr	r3, [pc, #344]	; (8007434 <main+0x234>)
 80072dc:	6018      	str	r0, [r3, #0]
  hText4 = WM_GetDialogItem(hDialog, ID_TEXT_4);
 80072de:	f640 0109 	movw	r1, #2057	; 0x809
 80072e2:	4628      	mov	r0, r5
 80072e4:	f002 fcf6 	bl	8009cd4 <WM_GetDialogItem>
 80072e8:	4b53      	ldr	r3, [pc, #332]	; (8007438 <main+0x238>)
 80072ea:	6018      	str	r0, [r3, #0]
  hText5 = WM_GetDialogItem(hDialog, ID_TEXT_5);
 80072ec:	f640 010a 	movw	r1, #2058	; 0x80a
 80072f0:	4628      	mov	r0, r5
 80072f2:	f002 fcef 	bl	8009cd4 <WM_GetDialogItem>
 80072f6:	4b51      	ldr	r3, [pc, #324]	; (800743c <main+0x23c>)
 80072f8:	6018      	str	r0, [r3, #0]
  hText6 = WM_GetDialogItem(hDialog, ID_TEXT_6);
 80072fa:	f640 010c 	movw	r1, #2060	; 0x80c
 80072fe:	4628      	mov	r0, r5
 8007300:	f002 fce8 	bl	8009cd4 <WM_GetDialogItem>
 8007304:	4b4e      	ldr	r3, [pc, #312]	; (8007440 <main+0x240>)
 8007306:	6018      	str	r0, [r3, #0]
  hText7 = WM_GetDialogItem(hDialog, ID_TEXT_7);
 8007308:	f640 010d 	movw	r1, #2061	; 0x80d
 800730c:	4628      	mov	r0, r5
 800730e:	f002 fce1 	bl	8009cd4 <WM_GetDialogItem>
 8007312:	4b4c      	ldr	r3, [pc, #304]	; (8007444 <main+0x244>)
 8007314:	6018      	str	r0, [r3, #0]
  hText8 = WM_GetDialogItem(hDialog, ID_TEXT_8);
 8007316:	f640 010f 	movw	r1, #2063	; 0x80f
 800731a:	4628      	mov	r0, r5
 800731c:	f002 fcda 	bl	8009cd4 <WM_GetDialogItem>
 8007320:	4b49      	ldr	r3, [pc, #292]	; (8007448 <main+0x248>)
 8007322:	6018      	str	r0, [r3, #0]
  hText9 = WM_GetDialogItem(hDialog, ID_TEXT_9);
 8007324:	f44f 6101 	mov.w	r1, #2064	; 0x810
 8007328:	4628      	mov	r0, r5
 800732a:	f002 fcd3 	bl	8009cd4 <WM_GetDialogItem>
 800732e:	4b47      	ldr	r3, [pc, #284]	; (800744c <main+0x24c>)
 8007330:	6018      	str	r0, [r3, #0]
  if(COLOR16_init(hi2c1)) {
 8007332:	466d      	mov	r5, sp
 8007334:	f107 0610 	add.w	r6, r7, #16
 8007338:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800733a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800733c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800733e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8007340:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8007342:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8007344:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8007348:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800734c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8007350:	f7ff fb5a 	bl	8006a08 <COLOR16_init>
 8007354:	b920      	cbnz	r0, 8007360 <main+0x160>
  color16_default_cfg();
 8007356:	f7ff fc75 	bl	8006c44 <color16_default_cfg>
  measure_enable(); // SP_EN i PON = 1
 800735a:	f7ff fbbd 	bl	8006ad8 <measure_enable>
 800735e:	e019      	b.n	8007394 <main+0x194>
	  HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_4);
 8007360:	2110      	movs	r1, #16
 8007362:	483b      	ldr	r0, [pc, #236]	; (8007450 <main+0x250>)
 8007364:	f7fa fbe6 	bl	8001b34 <HAL_GPIO_TogglePin>
 8007368:	e7f5      	b.n	8007356 <main+0x156>
                        	 HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_4);
 800736a:	2110      	movs	r1, #16
 800736c:	4838      	ldr	r0, [pc, #224]	; (8007450 <main+0x250>)
 800736e:	f7fa fbe1 	bl	8001b34 <HAL_GPIO_TogglePin>
     		            	 GUI_Delay(10);
 8007372:	200a      	movs	r0, #10
 8007374:	f007 f990 	bl	800e698 <GUI_Delay>
     		            	 fleg1 = 1;
 8007378:	4b36      	ldr	r3, [pc, #216]	; (8007454 <main+0x254>)
 800737a:	2201      	movs	r2, #1
 800737c:	701a      	strb	r2, [r3, #0]
     		            	measure_enable();
 800737e:	f7ff fbab 	bl	8006ad8 <measure_enable>
     if (fleg1 == 1) {
 8007382:	4b34      	ldr	r3, [pc, #208]	; (8007454 <main+0x254>)
 8007384:	781b      	ldrb	r3, [r3, #0]
 8007386:	2b01      	cmp	r3, #1
 8007388:	d03c      	beq.n	8007404 <main+0x204>
    	 color16_write_register(COLOR16_REG_CFG_1,slider );
 800738a:	4b33      	ldr	r3, [pc, #204]	; (8007458 <main+0x258>)
 800738c:	7819      	ldrb	r1, [r3, #0]
 800738e:	20c6      	movs	r0, #198	; 0xc6
 8007390:	f7ff fb56 	bl	8006a40 <color16_write_register>
	  STMPE610_read_xyz();
 8007394:	f7f9 ff50 	bl	8001238 <STMPE610_read_xyz>
      GUI_TOUCH_Exec();
 8007398:	f007 f9f0 	bl	800e77c <GUI_TOUCH_Exec>
      keyPressed=GUI_GetKey();
 800739c:	f007 fe94 	bl	800f0c8 <GUI_GetKey>
 80073a0:	4c2e      	ldr	r4, [pc, #184]	; (800745c <main+0x25c>)
 80073a2:	8020      	strh	r0, [r4, #0]
      GUI_Delay(1);
 80073a4:	2001      	movs	r0, #1
 80073a6:	f007 f977 	bl	800e698 <GUI_Delay>
      X_koordinata=STMPE610_GetX_TOUCH();
 80073aa:	f7f9 ff85 	bl	80012b8 <STMPE610_GetX_TOUCH>
 80073ae:	4b2c      	ldr	r3, [pc, #176]	; (8007460 <main+0x260>)
 80073b0:	8018      	strh	r0, [r3, #0]
      Y_koordinata=STMPE610_GetY_TOUCH();
 80073b2:	f7f9 ffb1 	bl	8001318 <STMPE610_GetY_TOUCH>
 80073b6:	4b2b      	ldr	r3, [pc, #172]	; (8007464 <main+0x264>)
 80073b8:	8018      	strh	r0, [r3, #0]
      SLIDER_SetRange(hSlider, 0, 12);
 80073ba:	4d19      	ldr	r5, [pc, #100]	; (8007420 <main+0x220>)
 80073bc:	220c      	movs	r2, #12
 80073be:	2100      	movs	r1, #0
 80073c0:	6828      	ldr	r0, [r5, #0]
 80073c2:	f001 f93f 	bl	8008644 <SLIDER_SetRange>
      slider = SLIDER_GetValue(hSlider);
 80073c6:	6828      	ldr	r0, [r5, #0]
 80073c8:	f001 f95a 	bl	8008680 <SLIDER_GetValue>
 80073cc:	4922      	ldr	r1, [pc, #136]	; (8007458 <main+0x258>)
 80073ce:	7008      	strb	r0, [r1, #0]
      HAL_UART_Transmit_IT(&huart8, (uint8_t *)&slider, sizeof(uint8_t));
 80073d0:	2201      	movs	r2, #1
 80073d2:	4825      	ldr	r0, [pc, #148]	; (8007468 <main+0x268>)
 80073d4:	f7fd f9a2 	bl	800471c <HAL_UART_Transmit_IT>
      switch(keyPressed)
 80073d8:	8823      	ldrh	r3, [r4, #0]
 80073da:	f640 0202 	movw	r2, #2050	; 0x802
 80073de:	4293      	cmp	r3, r2
 80073e0:	d0c3      	beq.n	800736a <main+0x16a>
 80073e2:	f640 0204 	movw	r2, #2052	; 0x804
 80073e6:	4293      	cmp	r3, r2
 80073e8:	d1cb      	bne.n	8007382 <main+0x182>
                        	  HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_4);
 80073ea:	2110      	movs	r1, #16
 80073ec:	4818      	ldr	r0, [pc, #96]	; (8007450 <main+0x250>)
 80073ee:	f7fa fba1 	bl	8001b34 <HAL_GPIO_TogglePin>
                              GUI_Delay(10);
 80073f2:	200a      	movs	r0, #10
 80073f4:	f007 f950 	bl	800e698 <GUI_Delay>
                              fleg1 = 0;
 80073f8:	4b16      	ldr	r3, [pc, #88]	; (8007454 <main+0x254>)
 80073fa:	2200      	movs	r2, #0
 80073fc:	701a      	strb	r2, [r3, #0]
                              enable_register();
 80073fe:	f7ff fb65 	bl	8006acc <enable_register>
       			  break;
 8007402:	e7be      	b.n	8007382 <main+0x182>
     color16_read_data (&podaci);
 8007404:	4819      	ldr	r0, [pc, #100]	; (800746c <main+0x26c>)
 8007406:	f7ff fc53 	bl	8006cb0 <color16_read_data>
     draw_data_xy(hGraph);
 800740a:	4b06      	ldr	r3, [pc, #24]	; (8007424 <main+0x224>)
 800740c:	6818      	ldr	r0, [r3, #0]
 800740e:	f7ff fe8f 	bl	8007130 <draw_data_xy>
 8007412:	e7bf      	b.n	8007394 <main+0x194>
 8007414:	2001983c 	.word	0x2001983c
 8007418:	2001999c 	.word	0x2001999c
 800741c:	20019958 	.word	0x20019958
 8007420:	2001997c 	.word	0x2001997c
 8007424:	20019834 	.word	0x20019834
 8007428:	20019808 	.word	0x20019808
 800742c:	20019980 	.word	0x20019980
 8007430:	20019990 	.word	0x20019990
 8007434:	20019804 	.word	0x20019804
 8007438:	200198f4 	.word	0x200198f4
 800743c:	20019838 	.word	0x20019838
 8007440:	20019a28 	.word	0x20019a28
 8007444:	20019890 	.word	0x20019890
 8007448:	2001988c 	.word	0x2001988c
 800744c:	200199a0 	.word	0x200199a0
 8007450:	40020400 	.word	0x40020400
 8007454:	2001946c 	.word	0x2001946c
 8007458:	20019832 	.word	0x20019832
 800745c:	20019996 	.word	0x20019996
 8007460:	20019468 	.word	0x20019468
 8007464:	2001946a 	.word	0x2001946a
 8007468:	200199a4 	.word	0x200199a4
 800746c:	2001980c 	.word	0x2001980c

08007470 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8007470:	4770      	bx	lr
	...

08007474 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8007474:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8007476:	4b0a      	ldr	r3, [pc, #40]	; (80074a0 <HAL_MspInit+0x2c>)
 8007478:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800747a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800747e:	641a      	str	r2, [r3, #64]	; 0x40
 8007480:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007482:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8007486:	9200      	str	r2, [sp, #0]
 8007488:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800748a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800748c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8007490:	645a      	str	r2, [r3, #68]	; 0x44
 8007492:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007494:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8007498:	9301      	str	r3, [sp, #4]
 800749a:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800749c:	b002      	add	sp, #8
 800749e:	4770      	bx	lr
 80074a0:	40023800 	.word	0x40023800

080074a4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80074a4:	b510      	push	{r4, lr}
 80074a6:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80074a8:	2300      	movs	r3, #0
 80074aa:	9303      	str	r3, [sp, #12]
 80074ac:	9304      	str	r3, [sp, #16]
 80074ae:	9305      	str	r3, [sp, #20]
 80074b0:	9306      	str	r3, [sp, #24]
 80074b2:	9307      	str	r3, [sp, #28]
  if(hi2c->Instance==I2C1)
 80074b4:	6802      	ldr	r2, [r0, #0]
 80074b6:	4b13      	ldr	r3, [pc, #76]	; (8007504 <HAL_I2C_MspInit+0x60>)
 80074b8:	429a      	cmp	r2, r3
 80074ba:	d001      	beq.n	80074c0 <HAL_I2C_MspInit+0x1c>
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 80074bc:	b008      	add	sp, #32
 80074be:	bd10      	pop	{r4, pc}
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80074c0:	4c11      	ldr	r4, [pc, #68]	; (8007508 <HAL_I2C_MspInit+0x64>)
 80074c2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80074c4:	f043 0302 	orr.w	r3, r3, #2
 80074c8:	6323      	str	r3, [r4, #48]	; 0x30
 80074ca:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80074cc:	f003 0302 	and.w	r3, r3, #2
 80074d0:	9301      	str	r3, [sp, #4]
 80074d2:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80074d4:	23c0      	movs	r3, #192	; 0xc0
 80074d6:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80074d8:	2312      	movs	r3, #18
 80074da:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80074dc:	2301      	movs	r3, #1
 80074de:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80074e0:	2303      	movs	r3, #3
 80074e2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 80074e4:	2304      	movs	r3, #4
 80074e6:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80074e8:	a903      	add	r1, sp, #12
 80074ea:	4808      	ldr	r0, [pc, #32]	; (800750c <HAL_I2C_MspInit+0x68>)
 80074ec:	f7fa fa28 	bl	8001940 <HAL_GPIO_Init>
    __HAL_RCC_I2C1_CLK_ENABLE();
 80074f0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80074f2:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80074f6:	6423      	str	r3, [r4, #64]	; 0x40
 80074f8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80074fa:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80074fe:	9302      	str	r3, [sp, #8]
 8007500:	9b02      	ldr	r3, [sp, #8]
}
 8007502:	e7db      	b.n	80074bc <HAL_I2C_MspInit+0x18>
 8007504:	40005400 	.word	0x40005400
 8007508:	40023800 	.word	0x40023800
 800750c:	40020400 	.word	0x40020400

08007510 <HAL_RTC_MspInit>:
* This function configures the hardware resources used in this example
* @param hrtc: RTC handle pointer
* @retval None
*/
void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
{
 8007510:	b508      	push	{r3, lr}
  if(hrtc->Instance==RTC)
 8007512:	6802      	ldr	r2, [r0, #0]
 8007514:	4b08      	ldr	r3, [pc, #32]	; (8007538 <HAL_RTC_MspInit+0x28>)
 8007516:	429a      	cmp	r2, r3
 8007518:	d000      	beq.n	800751c <HAL_RTC_MspInit+0xc>
  /* USER CODE BEGIN RTC_MspInit 1 */

  /* USER CODE END RTC_MspInit 1 */
  }

}
 800751a:	bd08      	pop	{r3, pc}
    __HAL_RCC_RTC_ENABLE();
 800751c:	4a07      	ldr	r2, [pc, #28]	; (800753c <HAL_RTC_MspInit+0x2c>)
 800751e:	6f13      	ldr	r3, [r2, #112]	; 0x70
 8007520:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007524:	6713      	str	r3, [r2, #112]	; 0x70
    HAL_NVIC_SetPriority(RTC_Alarm_IRQn, 0, 0);
 8007526:	2200      	movs	r2, #0
 8007528:	4611      	mov	r1, r2
 800752a:	2029      	movs	r0, #41	; 0x29
 800752c:	f7f9 ff98 	bl	8001460 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(RTC_Alarm_IRQn);
 8007530:	2029      	movs	r0, #41	; 0x29
 8007532:	f7f9 ffc7 	bl	80014c4 <HAL_NVIC_EnableIRQ>
}
 8007536:	e7f0      	b.n	800751a <HAL_RTC_MspInit+0xa>
 8007538:	40002800 	.word	0x40002800
 800753c:	40023800 	.word	0x40023800

08007540 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8007540:	b510      	push	{r4, lr}
 8007542:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8007544:	2300      	movs	r3, #0
 8007546:	9303      	str	r3, [sp, #12]
 8007548:	9304      	str	r3, [sp, #16]
 800754a:	9305      	str	r3, [sp, #20]
 800754c:	9306      	str	r3, [sp, #24]
 800754e:	9307      	str	r3, [sp, #28]
  if(huart->Instance==UART8)
 8007550:	6802      	ldr	r2, [r0, #0]
 8007552:	4b31      	ldr	r3, [pc, #196]	; (8007618 <HAL_UART_MspInit+0xd8>)
 8007554:	429a      	cmp	r2, r3
 8007556:	d001      	beq.n	800755c <HAL_UART_MspInit+0x1c>
  /* USER CODE BEGIN UART8_MspInit 1 */

  /* USER CODE END UART8_MspInit 1 */
  }

}
 8007558:	b008      	add	sp, #32
 800755a:	bd10      	pop	{r4, pc}
 800755c:	4604      	mov	r4, r0
    __HAL_RCC_UART8_CLK_ENABLE();
 800755e:	f503 33de 	add.w	r3, r3, #113664	; 0x1bc00
 8007562:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007564:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8007568:	641a      	str	r2, [r3, #64]	; 0x40
 800756a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800756c:	f002 4200 	and.w	r2, r2, #2147483648	; 0x80000000
 8007570:	9201      	str	r2, [sp, #4]
 8007572:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8007574:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007576:	f042 0210 	orr.w	r2, r2, #16
 800757a:	631a      	str	r2, [r3, #48]	; 0x30
 800757c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800757e:	f003 0310 	and.w	r3, r3, #16
 8007582:	9302      	str	r3, [sp, #8]
 8007584:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8007586:	2303      	movs	r3, #3
 8007588:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800758a:	2202      	movs	r2, #2
 800758c:	9204      	str	r2, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800758e:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF8_UART8;
 8007590:	2308      	movs	r3, #8
 8007592:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8007594:	a903      	add	r1, sp, #12
 8007596:	4821      	ldr	r0, [pc, #132]	; (800761c <HAL_UART_MspInit+0xdc>)
 8007598:	f7fa f9d2 	bl	8001940 <HAL_GPIO_Init>
    hdma_uart8_rx.Instance = DMA1_Stream6;
 800759c:	4820      	ldr	r0, [pc, #128]	; (8007620 <HAL_UART_MspInit+0xe0>)
 800759e:	4b21      	ldr	r3, [pc, #132]	; (8007624 <HAL_UART_MspInit+0xe4>)
 80075a0:	6003      	str	r3, [r0, #0]
    hdma_uart8_rx.Init.Channel = DMA_CHANNEL_5;
 80075a2:	f04f 6320 	mov.w	r3, #167772160	; 0xa000000
 80075a6:	6043      	str	r3, [r0, #4]
    hdma_uart8_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80075a8:	2300      	movs	r3, #0
 80075aa:	6083      	str	r3, [r0, #8]
    hdma_uart8_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 80075ac:	60c3      	str	r3, [r0, #12]
    hdma_uart8_rx.Init.MemInc = DMA_MINC_ENABLE;
 80075ae:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80075b2:	6102      	str	r2, [r0, #16]
    hdma_uart8_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80075b4:	6143      	str	r3, [r0, #20]
    hdma_uart8_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80075b6:	6183      	str	r3, [r0, #24]
    hdma_uart8_rx.Init.Mode = DMA_NORMAL;
 80075b8:	61c3      	str	r3, [r0, #28]
    hdma_uart8_rx.Init.Priority = DMA_PRIORITY_LOW;
 80075ba:	6203      	str	r3, [r0, #32]
    hdma_uart8_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80075bc:	6243      	str	r3, [r0, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_uart8_rx) != HAL_OK)
 80075be:	f7fa f80d 	bl	80015dc <HAL_DMA_Init>
 80075c2:	bb18      	cbnz	r0, 800760c <HAL_UART_MspInit+0xcc>
    __HAL_LINKDMA(huart,hdmarx,hdma_uart8_rx);
 80075c4:	4b16      	ldr	r3, [pc, #88]	; (8007620 <HAL_UART_MspInit+0xe0>)
 80075c6:	6723      	str	r3, [r4, #112]	; 0x70
 80075c8:	639c      	str	r4, [r3, #56]	; 0x38
    hdma_uart8_tx.Instance = DMA1_Stream0;
 80075ca:	4817      	ldr	r0, [pc, #92]	; (8007628 <HAL_UART_MspInit+0xe8>)
 80075cc:	4b17      	ldr	r3, [pc, #92]	; (800762c <HAL_UART_MspInit+0xec>)
 80075ce:	6003      	str	r3, [r0, #0]
    hdma_uart8_tx.Init.Channel = DMA_CHANNEL_5;
 80075d0:	f04f 6320 	mov.w	r3, #167772160	; 0xa000000
 80075d4:	6043      	str	r3, [r0, #4]
    hdma_uart8_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80075d6:	2340      	movs	r3, #64	; 0x40
 80075d8:	6083      	str	r3, [r0, #8]
    hdma_uart8_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80075da:	2300      	movs	r3, #0
 80075dc:	60c3      	str	r3, [r0, #12]
    hdma_uart8_tx.Init.MemInc = DMA_MINC_ENABLE;
 80075de:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80075e2:	6102      	str	r2, [r0, #16]
    hdma_uart8_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80075e4:	6143      	str	r3, [r0, #20]
    hdma_uart8_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80075e6:	6183      	str	r3, [r0, #24]
    hdma_uart8_tx.Init.Mode = DMA_NORMAL;
 80075e8:	61c3      	str	r3, [r0, #28]
    hdma_uart8_tx.Init.Priority = DMA_PRIORITY_LOW;
 80075ea:	6203      	str	r3, [r0, #32]
    hdma_uart8_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80075ec:	6243      	str	r3, [r0, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_uart8_tx) != HAL_OK)
 80075ee:	f7f9 fff5 	bl	80015dc <HAL_DMA_Init>
 80075f2:	b970      	cbnz	r0, 8007612 <HAL_UART_MspInit+0xd2>
    __HAL_LINKDMA(huart,hdmatx,hdma_uart8_tx);
 80075f4:	4b0c      	ldr	r3, [pc, #48]	; (8007628 <HAL_UART_MspInit+0xe8>)
 80075f6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80075f8:	639c      	str	r4, [r3, #56]	; 0x38
    HAL_NVIC_SetPriority(UART8_IRQn, 0, 0);
 80075fa:	2200      	movs	r2, #0
 80075fc:	4611      	mov	r1, r2
 80075fe:	2053      	movs	r0, #83	; 0x53
 8007600:	f7f9 ff2e 	bl	8001460 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART8_IRQn);
 8007604:	2053      	movs	r0, #83	; 0x53
 8007606:	f7f9 ff5d 	bl	80014c4 <HAL_NVIC_EnableIRQ>
}
 800760a:	e7a5      	b.n	8007558 <HAL_UART_MspInit+0x18>
      Error_Handler();
 800760c:	f7ff ff30 	bl	8007470 <Error_Handler>
 8007610:	e7d8      	b.n	80075c4 <HAL_UART_MspInit+0x84>
      Error_Handler();
 8007612:	f7ff ff2d 	bl	8007470 <Error_Handler>
 8007616:	e7ed      	b.n	80075f4 <HAL_UART_MspInit+0xb4>
 8007618:	40007c00 	.word	0x40007c00
 800761c:	40021000 	.word	0x40021000
 8007620:	20019894 	.word	0x20019894
 8007624:	400260a0 	.word	0x400260a0
 8007628:	200198f8 	.word	0x200198f8
 800762c:	40026010 	.word	0x40026010

08007630 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8007630:	4770      	bx	lr

08007632 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8007632:	e7fe      	b.n	8007632 <HardFault_Handler>

08007634 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8007634:	e7fe      	b.n	8007634 <MemManage_Handler>

08007636 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8007636:	e7fe      	b.n	8007636 <BusFault_Handler>

08007638 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8007638:	e7fe      	b.n	8007638 <UsageFault_Handler>

0800763a <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800763a:	4770      	bx	lr

0800763c <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800763c:	4770      	bx	lr

0800763e <PendSV_Handler>:

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800763e:	4770      	bx	lr

08007640 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8007640:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8007642:	f7f9 fed5 	bl	80013f0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */
  HAL_SYSTICK_IRQHandler();
 8007646:	f7f9 ff61 	bl	800150c <HAL_SYSTICK_IRQHandler>
  /* USER CODE END SysTick_IRQn 1 */
}
 800764a:	bd08      	pop	{r3, pc}

0800764c <DMA1_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA1 stream0 global interrupt.
  */
void DMA1_Stream0_IRQHandler(void)
{
 800764c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */

  /* USER CODE END DMA1_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart8_tx);
 800764e:	4802      	ldr	r0, [pc, #8]	; (8007658 <DMA1_Stream0_IRQHandler+0xc>)
 8007650:	f7fa f888 	bl	8001764 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */

  /* USER CODE END DMA1_Stream0_IRQn 1 */
}
 8007654:	bd08      	pop	{r3, pc}
 8007656:	bf00      	nop
 8007658:	200198f8 	.word	0x200198f8

0800765c <DMA1_Stream6_IRQHandler>:

/**
  * @brief This function handles DMA1 stream6 global interrupt.
  */
void DMA1_Stream6_IRQHandler(void)
{
 800765c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */

  /* USER CODE END DMA1_Stream6_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart8_rx);
 800765e:	4802      	ldr	r0, [pc, #8]	; (8007668 <DMA1_Stream6_IRQHandler+0xc>)
 8007660:	f7fa f880 	bl	8001764 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream6_IRQn 1 */

  /* USER CODE END DMA1_Stream6_IRQn 1 */
}
 8007664:	bd08      	pop	{r3, pc}
 8007666:	bf00      	nop
 8007668:	20019894 	.word	0x20019894

0800766c <RTC_Alarm_IRQHandler>:

/**
  * @brief This function handles RTC alarms (A and B) interrupt through EXTI line 17.
  */
void RTC_Alarm_IRQHandler(void)
{
 800766c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN RTC_Alarm_IRQn 0 */

  /* USER CODE END RTC_Alarm_IRQn 0 */
  HAL_RTC_AlarmIRQHandler(&hrtc);
 800766e:	4802      	ldr	r0, [pc, #8]	; (8007678 <RTC_Alarm_IRQHandler+0xc>)
 8007670:	f7fc fd42 	bl	80040f8 <HAL_RTC_AlarmIRQHandler>
  /* USER CODE BEGIN RTC_Alarm_IRQn 1 */

  /* USER CODE END RTC_Alarm_IRQn 1 */
}
 8007674:	bd08      	pop	{r3, pc}
 8007676:	bf00      	nop
 8007678:	2001995c 	.word	0x2001995c

0800767c <OTG_FS_IRQHandler>:

/**
  * @brief This function handles USB On The Go FS global interrupt.
  */
void OTG_FS_IRQHandler(void)
{
 800767c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN OTG_FS_IRQn 0 */

  /* USER CODE END OTG_FS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 800767e:	4802      	ldr	r0, [pc, #8]	; (8007688 <OTG_FS_IRQHandler+0xc>)
 8007680:	f7fb fac8 	bl	8002c14 <HAL_PCD_IRQHandler>
  /* USER CODE BEGIN OTG_FS_IRQn 1 */

  /* USER CODE END OTG_FS_IRQn 1 */
}
 8007684:	bd08      	pop	{r3, pc}
 8007686:	bf00      	nop
 8007688:	2001ad14 	.word	0x2001ad14

0800768c <UART8_IRQHandler>:

/**
  * @brief This function handles UART8 global interrupt.
  */
void UART8_IRQHandler(void)
{
 800768c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN UART8_IRQn 0 */

  /* USER CODE END UART8_IRQn 0 */
  HAL_UART_IRQHandler(&huart8);
 800768e:	4802      	ldr	r0, [pc, #8]	; (8007698 <UART8_IRQHandler+0xc>)
 8007690:	f7fd f8a2 	bl	80047d8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN UART8_IRQn 1 */

  /* USER CODE END UART8_IRQn 1 */
}
 8007694:	bd08      	pop	{r3, pc}
 8007696:	bf00      	nop
 8007698:	200199a4 	.word	0x200199a4

0800769c <_sbrk>:
 800769c:	b508      	push	{r3, lr}
 800769e:	4603      	mov	r3, r0
 80076a0:	4a0b      	ldr	r2, [pc, #44]	; (80076d0 <_sbrk+0x34>)
 80076a2:	6812      	ldr	r2, [r2, #0]
 80076a4:	b142      	cbz	r2, 80076b8 <_sbrk+0x1c>
 80076a6:	4a0a      	ldr	r2, [pc, #40]	; (80076d0 <_sbrk+0x34>)
 80076a8:	6810      	ldr	r0, [r2, #0]
 80076aa:	4403      	add	r3, r0
 80076ac:	466a      	mov	r2, sp
 80076ae:	4293      	cmp	r3, r2
 80076b0:	d806      	bhi.n	80076c0 <_sbrk+0x24>
 80076b2:	4a07      	ldr	r2, [pc, #28]	; (80076d0 <_sbrk+0x34>)
 80076b4:	6013      	str	r3, [r2, #0]
 80076b6:	bd08      	pop	{r3, pc}
 80076b8:	4a05      	ldr	r2, [pc, #20]	; (80076d0 <_sbrk+0x34>)
 80076ba:	4906      	ldr	r1, [pc, #24]	; (80076d4 <_sbrk+0x38>)
 80076bc:	6011      	str	r1, [r2, #0]
 80076be:	e7f2      	b.n	80076a6 <_sbrk+0xa>
 80076c0:	f00e fd12 	bl	80160e8 <__errno>
 80076c4:	230c      	movs	r3, #12
 80076c6:	6003      	str	r3, [r0, #0]
 80076c8:	f04f 30ff 	mov.w	r0, #4294967295
 80076cc:	e7f3      	b.n	80076b6 <_sbrk+0x1a>
 80076ce:	bf00      	nop
 80076d0:	20019470 	.word	0x20019470
 80076d4:	2001b4a8 	.word	0x2001b4a8

080076d8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80076d8:	4a03      	ldr	r2, [pc, #12]	; (80076e8 <SystemInit+0x10>)
 80076da:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80076de:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80076e2:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80076e6:	4770      	bx	lr
 80076e8:	e000ed00 	.word	0xe000ed00

080076ec <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 80076ec:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */
  
  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceFS, &FS_Desc, DEVICE_FS) != USBD_OK)
 80076ee:	2200      	movs	r2, #0
 80076f0:	490f      	ldr	r1, [pc, #60]	; (8007730 <MX_USB_DEVICE_Init+0x44>)
 80076f2:	4810      	ldr	r0, [pc, #64]	; (8007734 <MX_USB_DEVICE_Init+0x48>)
 80076f4:	f7fe fbcd 	bl	8005e92 <USBD_Init>
 80076f8:	b970      	cbnz	r0, 8007718 <MX_USB_DEVICE_Init+0x2c>
  {
    Error_Handler();
  }
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_CDC) != USBD_OK)
 80076fa:	490f      	ldr	r1, [pc, #60]	; (8007738 <MX_USB_DEVICE_Init+0x4c>)
 80076fc:	480d      	ldr	r0, [pc, #52]	; (8007734 <MX_USB_DEVICE_Init+0x48>)
 80076fe:	f7fe fbe4 	bl	8005eca <USBD_RegisterClass>
 8007702:	b960      	cbnz	r0, 800771e <MX_USB_DEVICE_Init+0x32>
  {
    Error_Handler();
  }
  if (USBD_CDC_RegisterInterface(&hUsbDeviceFS, &USBD_Interface_fops_FS) != USBD_OK)
 8007704:	490d      	ldr	r1, [pc, #52]	; (800773c <MX_USB_DEVICE_Init+0x50>)
 8007706:	480b      	ldr	r0, [pc, #44]	; (8007734 <MX_USB_DEVICE_Init+0x48>)
 8007708:	f7fe fb95 	bl	8005e36 <USBD_CDC_RegisterInterface>
 800770c:	b950      	cbnz	r0, 8007724 <MX_USB_DEVICE_Init+0x38>
  {
    Error_Handler();
  }
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
 800770e:	4809      	ldr	r0, [pc, #36]	; (8007734 <MX_USB_DEVICE_Init+0x48>)
 8007710:	f7fe fbef 	bl	8005ef2 <USBD_Start>
 8007714:	b948      	cbnz	r0, 800772a <MX_USB_DEVICE_Init+0x3e>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */
  
  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 8007716:	bd08      	pop	{r3, pc}
    Error_Handler();
 8007718:	f7ff feaa 	bl	8007470 <Error_Handler>
 800771c:	e7ed      	b.n	80076fa <MX_USB_DEVICE_Init+0xe>
    Error_Handler();
 800771e:	f7ff fea7 	bl	8007470 <Error_Handler>
 8007722:	e7ef      	b.n	8007704 <MX_USB_DEVICE_Init+0x18>
    Error_Handler();
 8007724:	f7ff fea4 	bl	8007470 <Error_Handler>
 8007728:	e7f1      	b.n	800770e <MX_USB_DEVICE_Init+0x22>
    Error_Handler();
 800772a:	f7ff fea1 	bl	8007470 <Error_Handler>
}
 800772e:	e7f2      	b.n	8007716 <MX_USB_DEVICE_Init+0x2a>
 8007730:	20000130 	.word	0x20000130
 8007734:	20019a44 	.word	0x20019a44
 8007738:	20000008 	.word	0x20000008
 800773c:	2000011c 	.word	0x2000011c

08007740 <CDC_DeInit_FS>:
static int8_t CDC_DeInit_FS(void)
{
  /* USER CODE BEGIN 4 */
  return (USBD_OK);
  /* USER CODE END 4 */
}
 8007740:	2000      	movs	r0, #0
 8007742:	4770      	bx	lr

08007744 <CDC_Control_FS>:
    break;
  }

  return (USBD_OK);
  /* USER CODE END 5 */
}
 8007744:	2000      	movs	r0, #0
 8007746:	4770      	bx	lr

08007748 <CDC_TransmitCplt_FS>:
  UNUSED(Buf);
  UNUSED(Len);
  UNUSED(epnum);
  /* USER CODE END 13 */
  return result;
}
 8007748:	2000      	movs	r0, #0
 800774a:	4770      	bx	lr

0800774c <CDC_Receive_FS>:
{
 800774c:	b510      	push	{r4, lr}
  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
 800774e:	4c05      	ldr	r4, [pc, #20]	; (8007764 <CDC_Receive_FS+0x18>)
 8007750:	4601      	mov	r1, r0
 8007752:	4620      	mov	r0, r4
 8007754:	f7fe fb7e 	bl	8005e54 <USBD_CDC_SetRxBuffer>
  USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 8007758:	4620      	mov	r0, r4
 800775a:	f7fe fb81 	bl	8005e60 <USBD_CDC_ReceivePacket>
}
 800775e:	2000      	movs	r0, #0
 8007760:	bd10      	pop	{r4, pc}
 8007762:	bf00      	nop
 8007764:	20019a44 	.word	0x20019a44

08007768 <CDC_Init_FS>:
{
 8007768:	b510      	push	{r4, lr}
  USBD_CDC_SetTxBuffer(&hUsbDeviceFS, UserTxBufferFS, 0);
 800776a:	4c06      	ldr	r4, [pc, #24]	; (8007784 <CDC_Init_FS+0x1c>)
 800776c:	2200      	movs	r2, #0
 800776e:	4906      	ldr	r1, [pc, #24]	; (8007788 <CDC_Init_FS+0x20>)
 8007770:	4620      	mov	r0, r4
 8007772:	f7fe fb67 	bl	8005e44 <USBD_CDC_SetTxBuffer>
  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 8007776:	4905      	ldr	r1, [pc, #20]	; (800778c <CDC_Init_FS+0x24>)
 8007778:	4620      	mov	r0, r4
 800777a:	f7fe fb6b 	bl	8005e54 <USBD_CDC_SetRxBuffer>
}
 800777e:	2000      	movs	r0, #0
 8007780:	bd10      	pop	{r4, pc}
 8007782:	bf00      	nop
 8007784:	20019a44 	.word	0x20019a44
 8007788:	2001a514 	.word	0x2001a514
 800778c:	20019d14 	.word	0x20019d14

08007790 <SystemClockConfig_Resume>:
  * @brief  Configures system clock after wake-up from USB resume callBack:
  *         enable HSI, PLL and select PLL as system clock source.
  * @retval None
  */
static void SystemClockConfig_Resume(void)
{
 8007790:	b508      	push	{r3, lr}
  SystemClock_Config();
 8007792:	f7ff fc6b 	bl	800706c <SystemClock_Config>
}
 8007796:	bd08      	pop	{r3, pc}

08007798 <HAL_PCD_MspInit>:
{
 8007798:	b510      	push	{r4, lr}
 800779a:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800779c:	2300      	movs	r3, #0
 800779e:	9303      	str	r3, [sp, #12]
 80077a0:	9304      	str	r3, [sp, #16]
 80077a2:	9305      	str	r3, [sp, #20]
 80077a4:	9306      	str	r3, [sp, #24]
 80077a6:	9307      	str	r3, [sp, #28]
  if(pcdHandle->Instance==USB_OTG_FS)
 80077a8:	6803      	ldr	r3, [r0, #0]
 80077aa:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80077ae:	d001      	beq.n	80077b4 <HAL_PCD_MspInit+0x1c>
}
 80077b0:	b008      	add	sp, #32
 80077b2:	bd10      	pop	{r4, pc}
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80077b4:	4c18      	ldr	r4, [pc, #96]	; (8007818 <HAL_PCD_MspInit+0x80>)
 80077b6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80077b8:	f043 0301 	orr.w	r3, r3, #1
 80077bc:	6323      	str	r3, [r4, #48]	; 0x30
 80077be:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80077c0:	f003 0301 	and.w	r3, r3, #1
 80077c4:	9300      	str	r3, [sp, #0]
 80077c6:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 80077c8:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 80077cc:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80077ce:	2302      	movs	r3, #2
 80077d0:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80077d2:	2303      	movs	r3, #3
 80077d4:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 80077d6:	230a      	movs	r3, #10
 80077d8:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80077da:	a903      	add	r1, sp, #12
 80077dc:	480f      	ldr	r0, [pc, #60]	; (800781c <HAL_PCD_MspInit+0x84>)
 80077de:	f7fa f8af 	bl	8001940 <HAL_GPIO_Init>
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
 80077e2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80077e8:	6363      	str	r3, [r4, #52]	; 0x34
 80077ea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077ec:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80077f0:	9301      	str	r3, [sp, #4]
 80077f2:	9b01      	ldr	r3, [sp, #4]
 80077f4:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80077f6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80077fa:	6463      	str	r3, [r4, #68]	; 0x44
 80077fc:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80077fe:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8007802:	9302      	str	r3, [sp, #8]
 8007804:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 0, 0);
 8007806:	2200      	movs	r2, #0
 8007808:	4611      	mov	r1, r2
 800780a:	2043      	movs	r0, #67	; 0x43
 800780c:	f7f9 fe28 	bl	8001460 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
 8007810:	2043      	movs	r0, #67	; 0x43
 8007812:	f7f9 fe57 	bl	80014c4 <HAL_NVIC_EnableIRQ>
}
 8007816:	e7cb      	b.n	80077b0 <HAL_PCD_MspInit+0x18>
 8007818:	40023800 	.word	0x40023800
 800781c:	40020000 	.word	0x40020000

08007820 <HAL_PCD_SetupStageCallback>:
{
 8007820:	b508      	push	{r3, lr}
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 8007822:	f500 7171 	add.w	r1, r0, #964	; 0x3c4
 8007826:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 800782a:	f7fe fb77 	bl	8005f1c <USBD_LL_SetupStage>
}
 800782e:	bd08      	pop	{r3, pc}

08007830 <HAL_PCD_DataOutStageCallback>:
{
 8007830:	b508      	push	{r3, lr}
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 8007832:	ebc1 02c1 	rsb	r2, r1, r1, lsl #3
 8007836:	0093      	lsls	r3, r2, #2
 8007838:	4403      	add	r3, r0
 800783a:	f8d3 2208 	ldr.w	r2, [r3, #520]	; 0x208
 800783e:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 8007842:	f7fe fb97 	bl	8005f74 <USBD_LL_DataOutStage>
}
 8007846:	bd08      	pop	{r3, pc}

08007848 <HAL_PCD_DataInStageCallback>:
{
 8007848:	b508      	push	{r3, lr}
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 800784a:	ebc1 02c1 	rsb	r2, r1, r1, lsl #3
 800784e:	0093      	lsls	r3, r2, #2
 8007850:	4403      	add	r3, r0
 8007852:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8007854:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 8007858:	f7fe fbc5 	bl	8005fe6 <USBD_LL_DataInStage>
}
 800785c:	bd08      	pop	{r3, pc}

0800785e <HAL_PCD_SOFCallback>:
{
 800785e:	b508      	push	{r3, lr}
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 8007860:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 8007864:	f7fe fc5a 	bl	800611c <USBD_LL_SOF>
}
 8007868:	bd08      	pop	{r3, pc}

0800786a <HAL_PCD_ResetCallback>:
{
 800786a:	b510      	push	{r4, lr}
 800786c:	4604      	mov	r4, r0
  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 800786e:	68c3      	ldr	r3, [r0, #12]
 8007870:	b12b      	cbz	r3, 800787e <HAL_PCD_ResetCallback+0x14>
  else if ( hpcd->Init.speed == PCD_SPEED_FULL)
 8007872:	2b02      	cmp	r3, #2
 8007874:	d00d      	beq.n	8007892 <HAL_PCD_ResetCallback+0x28>
    Error_Handler();
 8007876:	f7ff fdfb 	bl	8007470 <Error_Handler>
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 800787a:	2101      	movs	r1, #1
 800787c:	e000      	b.n	8007880 <HAL_PCD_ResetCallback+0x16>
    speed = USBD_SPEED_HIGH;
 800787e:	2100      	movs	r1, #0
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 8007880:	f8d4 0400 	ldr.w	r0, [r4, #1024]	; 0x400
 8007884:	f7fe fc33 	bl	80060ee <USBD_LL_SetSpeed>
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 8007888:	f8d4 0400 	ldr.w	r0, [r4, #1024]	; 0x400
 800788c:	f7fe fc06 	bl	800609c <USBD_LL_Reset>
}
 8007890:	bd10      	pop	{r4, pc}
    speed = USBD_SPEED_FULL;
 8007892:	2101      	movs	r1, #1
 8007894:	e7f4      	b.n	8007880 <HAL_PCD_ResetCallback+0x16>
	...

08007898 <HAL_PCD_SuspendCallback>:
{
 8007898:	b510      	push	{r4, lr}
 800789a:	4604      	mov	r4, r0
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 800789c:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 80078a0:	f7fe fc28 	bl	80060f4 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
 80078a4:	6822      	ldr	r2, [r4, #0]
 80078a6:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	; 0xe00
 80078aa:	f043 0301 	orr.w	r3, r3, #1
 80078ae:	f8c2 3e00 	str.w	r3, [r2, #3584]	; 0xe00
  if (hpcd->Init.low_power_enable)
 80078b2:	6a23      	ldr	r3, [r4, #32]
 80078b4:	b123      	cbz	r3, 80078c0 <HAL_PCD_SuspendCallback+0x28>
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 80078b6:	4a03      	ldr	r2, [pc, #12]	; (80078c4 <HAL_PCD_SuspendCallback+0x2c>)
 80078b8:	6913      	ldr	r3, [r2, #16]
 80078ba:	f043 0306 	orr.w	r3, r3, #6
 80078be:	6113      	str	r3, [r2, #16]
}
 80078c0:	bd10      	pop	{r4, pc}
 80078c2:	bf00      	nop
 80078c4:	e000ed00 	.word	0xe000ed00

080078c8 <HAL_PCD_ResumeCallback>:
{
 80078c8:	b508      	push	{r3, lr}
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 80078ca:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 80078ce:	f7fe fc1a 	bl	8006106 <USBD_LL_Resume>
}
 80078d2:	bd08      	pop	{r3, pc}

080078d4 <HAL_PCD_ISOOUTIncompleteCallback>:
{
 80078d4:	b508      	push	{r3, lr}
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 80078d6:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 80078da:	f7fe fc2f 	bl	800613c <USBD_LL_IsoOUTIncomplete>
}
 80078de:	bd08      	pop	{r3, pc}

080078e0 <HAL_PCD_ISOINIncompleteCallback>:
{
 80078e0:	b508      	push	{r3, lr}
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 80078e2:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 80078e6:	f7fe fc27 	bl	8006138 <USBD_LL_IsoINIncomplete>
}
 80078ea:	bd08      	pop	{r3, pc}

080078ec <HAL_PCD_ConnectCallback>:
{
 80078ec:	b508      	push	{r3, lr}
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 80078ee:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 80078f2:	f7fe fc25 	bl	8006140 <USBD_LL_DevConnected>
}
 80078f6:	bd08      	pop	{r3, pc}

080078f8 <HAL_PCD_DisconnectCallback>:
{
 80078f8:	b508      	push	{r3, lr}
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 80078fa:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 80078fe:	f7fe fc21 	bl	8006144 <USBD_LL_DevDisconnected>
}
 8007902:	bd08      	pop	{r3, pc}

08007904 <USBD_LL_Init>:
  if (pdev->id == DEVICE_FS) {
 8007904:	7803      	ldrb	r3, [r0, #0]
 8007906:	b10b      	cbz	r3, 800790c <USBD_LL_Init+0x8>
}
 8007908:	2000      	movs	r0, #0
 800790a:	4770      	bx	lr
{
 800790c:	b510      	push	{r4, lr}
 800790e:	4603      	mov	r3, r0
  hpcd_USB_OTG_FS.pData = pdev;
 8007910:	4815      	ldr	r0, [pc, #84]	; (8007968 <USBD_LL_Init+0x64>)
 8007912:	f8c0 3400 	str.w	r3, [r0, #1024]	; 0x400
  pdev->pData = &hpcd_USB_OTG_FS;
 8007916:	f8c3 02c4 	str.w	r0, [r3, #708]	; 0x2c4
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 800791a:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 800791e:	6003      	str	r3, [r0, #0]
  hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 8007920:	2306      	movs	r3, #6
 8007922:	6043      	str	r3, [r0, #4]
  hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 8007924:	2202      	movs	r2, #2
 8007926:	60c2      	str	r2, [r0, #12]
  hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 8007928:	2300      	movs	r3, #0
 800792a:	6103      	str	r3, [r0, #16]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 800792c:	6182      	str	r2, [r0, #24]
  hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 800792e:	61c3      	str	r3, [r0, #28]
  hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 8007930:	6203      	str	r3, [r0, #32]
  hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 8007932:	6243      	str	r3, [r0, #36]	; 0x24
  hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 8007934:	62c3      	str	r3, [r0, #44]	; 0x2c
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 8007936:	6303      	str	r3, [r0, #48]	; 0x30
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 8007938:	f7fb f816 	bl	8002968 <HAL_PCD_Init>
 800793c:	b980      	cbnz	r0, 8007960 <USBD_LL_Init+0x5c>
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_FS, 0x80);
 800793e:	4c0a      	ldr	r4, [pc, #40]	; (8007968 <USBD_LL_Init+0x64>)
 8007940:	2180      	movs	r1, #128	; 0x80
 8007942:	4620      	mov	r0, r4
 8007944:	f7fb fd5d 	bl	8003402 <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 0, 0x40);
 8007948:	2240      	movs	r2, #64	; 0x40
 800794a:	2100      	movs	r1, #0
 800794c:	4620      	mov	r0, r4
 800794e:	f7fb fd34 	bl	80033ba <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 1, 0x80);
 8007952:	2280      	movs	r2, #128	; 0x80
 8007954:	2101      	movs	r1, #1
 8007956:	4620      	mov	r0, r4
 8007958:	f7fb fd2f 	bl	80033ba <HAL_PCDEx_SetTxFiFo>
}
 800795c:	2000      	movs	r0, #0
 800795e:	bd10      	pop	{r4, pc}
    Error_Handler( );
 8007960:	f7ff fd86 	bl	8007470 <Error_Handler>
 8007964:	e7eb      	b.n	800793e <USBD_LL_Init+0x3a>
 8007966:	bf00      	nop
 8007968:	2001ad14 	.word	0x2001ad14

0800796c <USBD_LL_IsStallEP>:
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 800796c:	f8d0 32c4 	ldr.w	r3, [r0, #708]	; 0x2c4
  if((ep_addr & 0x80) == 0x80)
 8007970:	f011 0f80 	tst.w	r1, #128	; 0x80
 8007974:	d108      	bne.n	8007988 <USBD_LL_IsStallEP+0x1c>
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 8007976:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800797a:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 800797e:	008a      	lsls	r2, r1, #2
 8007980:	4413      	add	r3, r2
 8007982:	f893 01fe 	ldrb.w	r0, [r3, #510]	; 0x1fe
}
 8007986:	4770      	bx	lr
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 8007988:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800798c:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 8007990:	008a      	lsls	r2, r1, #2
 8007992:	4413      	add	r3, r2
 8007994:	f893 003e 	ldrb.w	r0, [r3, #62]	; 0x3e
 8007998:	4770      	bx	lr

0800799a <USBD_LL_GetRxDataSize>:
{
 800799a:	b508      	push	{r3, lr}
  return HAL_PCD_EP_GetRxCount((PCD_HandleTypeDef*) pdev->pData, ep_addr);
 800799c:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 80079a0:	f7fb fc60 	bl	8003264 <HAL_PCD_EP_GetRxCount>
}
 80079a4:	bd08      	pop	{r3, pc}
	...

080079a8 <HAL_PCDEx_LPM_Callback>:
{
 80079a8:	b510      	push	{r4, lr}
 80079aa:	4604      	mov	r4, r0
  switch (msg)
 80079ac:	b111      	cbz	r1, 80079b4 <HAL_PCDEx_LPM_Callback+0xc>
 80079ae:	2901      	cmp	r1, #1
 80079b0:	d016      	beq.n	80079e0 <HAL_PCDEx_LPM_Callback+0x38>
}
 80079b2:	bd10      	pop	{r4, pc}
    if (hpcd->Init.low_power_enable)
 80079b4:	6a03      	ldr	r3, [r0, #32]
 80079b6:	b95b      	cbnz	r3, 80079d0 <HAL_PCDEx_LPM_Callback+0x28>
    __HAL_PCD_UNGATE_PHYCLOCK(hpcd);
 80079b8:	6822      	ldr	r2, [r4, #0]
 80079ba:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	; 0xe00
 80079be:	f023 0301 	bic.w	r3, r3, #1
 80079c2:	f8c2 3e00 	str.w	r3, [r2, #3584]	; 0xe00
    USBD_LL_Resume(hpcd->pData);
 80079c6:	f8d4 0400 	ldr.w	r0, [r4, #1024]	; 0x400
 80079ca:	f7fe fb9c 	bl	8006106 <USBD_LL_Resume>
    break;
 80079ce:	e7f0      	b.n	80079b2 <HAL_PCDEx_LPM_Callback+0xa>
      SystemClockConfig_Resume();
 80079d0:	f7ff fede 	bl	8007790 <SystemClockConfig_Resume>
      SCB->SCR &= (uint32_t)~((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 80079d4:	4a0c      	ldr	r2, [pc, #48]	; (8007a08 <HAL_PCDEx_LPM_Callback+0x60>)
 80079d6:	6913      	ldr	r3, [r2, #16]
 80079d8:	f023 0306 	bic.w	r3, r3, #6
 80079dc:	6113      	str	r3, [r2, #16]
 80079de:	e7eb      	b.n	80079b8 <HAL_PCDEx_LPM_Callback+0x10>
    __HAL_PCD_GATE_PHYCLOCK(hpcd);
 80079e0:	6802      	ldr	r2, [r0, #0]
 80079e2:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	; 0xe00
 80079e6:	f043 0301 	orr.w	r3, r3, #1
 80079ea:	f8c2 3e00 	str.w	r3, [r2, #3584]	; 0xe00
    USBD_LL_Suspend(hpcd->pData);
 80079ee:	f8d0 0400 	ldr.w	r0, [r0, #1024]	; 0x400
 80079f2:	f7fe fb7f 	bl	80060f4 <USBD_LL_Suspend>
    if (hpcd->Init.low_power_enable)
 80079f6:	6a23      	ldr	r3, [r4, #32]
 80079f8:	2b00      	cmp	r3, #0
 80079fa:	d0da      	beq.n	80079b2 <HAL_PCDEx_LPM_Callback+0xa>
      SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 80079fc:	4a02      	ldr	r2, [pc, #8]	; (8007a08 <HAL_PCDEx_LPM_Callback+0x60>)
 80079fe:	6913      	ldr	r3, [r2, #16]
 8007a00:	f043 0306 	orr.w	r3, r3, #6
 8007a04:	6113      	str	r3, [r2, #16]
}
 8007a06:	e7d4      	b.n	80079b2 <HAL_PCDEx_LPM_Callback+0xa>
 8007a08:	e000ed00 	.word	0xe000ed00

08007a0c <USBD_Get_USB_Status>:
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 8007a0c:	b118      	cbz	r0, 8007a16 <USBD_Get_USB_Status+0xa>
 8007a0e:	2802      	cmp	r0, #2
 8007a10:	d003      	beq.n	8007a1a <USBD_Get_USB_Status+0xe>
  {
    case HAL_OK :
      usb_status = USBD_OK;
    break;
    case HAL_ERROR :
      usb_status = USBD_FAIL;
 8007a12:	2003      	movs	r0, #3
    default :
      usb_status = USBD_FAIL;
    break;
  }
  return usb_status;
}
 8007a14:	4770      	bx	lr
      usb_status = USBD_OK;
 8007a16:	2000      	movs	r0, #0
 8007a18:	4770      	bx	lr
      usb_status = USBD_BUSY;
 8007a1a:	2001      	movs	r0, #1
    break;
 8007a1c:	4770      	bx	lr

08007a1e <USBD_LL_Start>:
{
 8007a1e:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
 8007a20:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 8007a24:	f7fb f838 	bl	8002a98 <HAL_PCD_Start>
  usb_status =  USBD_Get_USB_Status(hal_status);
 8007a28:	f7ff fff0 	bl	8007a0c <USBD_Get_USB_Status>
}
 8007a2c:	bd08      	pop	{r3, pc}

08007a2e <USBD_LL_OpenEP>:
{
 8007a2e:	b510      	push	{r4, lr}
 8007a30:	461c      	mov	r4, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 8007a32:	4613      	mov	r3, r2
 8007a34:	4622      	mov	r2, r4
 8007a36:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 8007a3a:	f7fb fb6d 	bl	8003118 <HAL_PCD_EP_Open>
  usb_status =  USBD_Get_USB_Status(hal_status);
 8007a3e:	f7ff ffe5 	bl	8007a0c <USBD_Get_USB_Status>
}
 8007a42:	bd10      	pop	{r4, pc}

08007a44 <USBD_LL_CloseEP>:
{
 8007a44:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 8007a46:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 8007a4a:	f7fb fba6 	bl	800319a <HAL_PCD_EP_Close>
  usb_status =  USBD_Get_USB_Status(hal_status);
 8007a4e:	f7ff ffdd 	bl	8007a0c <USBD_Get_USB_Status>
}
 8007a52:	bd08      	pop	{r3, pc}

08007a54 <USBD_LL_StallEP>:
{
 8007a54:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 8007a56:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 8007a5a:	f7fb fc36 	bl	80032ca <HAL_PCD_EP_SetStall>
  usb_status =  USBD_Get_USB_Status(hal_status);
 8007a5e:	f7ff ffd5 	bl	8007a0c <USBD_Get_USB_Status>
}
 8007a62:	bd08      	pop	{r3, pc}

08007a64 <USBD_LL_ClearStallEP>:
{
 8007a64:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 8007a66:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 8007a6a:	f7fb fc6f 	bl	800334c <HAL_PCD_EP_ClrStall>
  usb_status =  USBD_Get_USB_Status(hal_status);
 8007a6e:	f7ff ffcd 	bl	8007a0c <USBD_Get_USB_Status>
}
 8007a72:	bd08      	pop	{r3, pc}

08007a74 <USBD_LL_SetUSBAddress>:
{
 8007a74:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 8007a76:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 8007a7a:	f7fb fb39 	bl	80030f0 <HAL_PCD_SetAddress>
  usb_status =  USBD_Get_USB_Status(hal_status);
 8007a7e:	f7ff ffc5 	bl	8007a0c <USBD_Get_USB_Status>
}
 8007a82:	bd08      	pop	{r3, pc}

08007a84 <USBD_LL_Transmit>:
{
 8007a84:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 8007a86:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 8007a8a:	f7fb fbf4 	bl	8003276 <HAL_PCD_EP_Transmit>
  usb_status =  USBD_Get_USB_Status(hal_status);
 8007a8e:	f7ff ffbd 	bl	8007a0c <USBD_Get_USB_Status>
}
 8007a92:	bd08      	pop	{r3, pc}

08007a94 <USBD_LL_PrepareReceive>:
{
 8007a94:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 8007a96:	f8d0 02c4 	ldr.w	r0, [r0, #708]	; 0x2c4
 8007a9a:	f7fb fbb5 	bl	8003208 <HAL_PCD_EP_Receive>
  usb_status =  USBD_Get_USB_Status(hal_status);
 8007a9e:	f7ff ffb5 	bl	8007a0c <USBD_Get_USB_Status>
}
 8007aa2:	bd08      	pop	{r3, pc}

08007aa4 <USBD_FS_DeviceDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_FS_DeviceDesc);
 8007aa4:	2312      	movs	r3, #18
 8007aa6:	800b      	strh	r3, [r1, #0]
  return USBD_FS_DeviceDesc;
}
 8007aa8:	4800      	ldr	r0, [pc, #0]	; (8007aac <USBD_FS_DeviceDescriptor+0x8>)
 8007aaa:	4770      	bx	lr
 8007aac:	2000015c 	.word	0x2000015c

08007ab0 <USBD_FS_LangIDStrDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 8007ab0:	2304      	movs	r3, #4
 8007ab2:	800b      	strh	r3, [r1, #0]
  return USBD_LangIDDesc;
}
 8007ab4:	4800      	ldr	r0, [pc, #0]	; (8007ab8 <USBD_FS_LangIDStrDescriptor+0x8>)
 8007ab6:	4770      	bx	lr
 8007ab8:	20000170 	.word	0x20000170

08007abc <USBD_FS_USR_BOSDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_USR_BOSDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_FS_BOSDesc);
 8007abc:	230c      	movs	r3, #12
 8007abe:	800b      	strh	r3, [r1, #0]
  return (uint8_t*)USBD_FS_BOSDesc;
}
 8007ac0:	4800      	ldr	r0, [pc, #0]	; (8007ac4 <USBD_FS_USR_BOSDescriptor+0x8>)
 8007ac2:	4770      	bx	lr
 8007ac4:	20000150 	.word	0x20000150

08007ac8 <IntToUnicode>:
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
  uint8_t idx = 0;

  for (idx = 0; idx < len; idx++)
 8007ac8:	2300      	movs	r3, #0
 8007aca:	4293      	cmp	r3, r2
 8007acc:	d216      	bcs.n	8007afc <IntToUnicode+0x34>
{
 8007ace:	b430      	push	{r4, r5}
 8007ad0:	e00b      	b.n	8007aea <IntToUnicode+0x22>
    {
      pbuf[2 * idx] = (value >> 28) + '0';
    }
    else
    {
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 8007ad2:	3437      	adds	r4, #55	; 0x37
 8007ad4:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
    }

    value = value << 4;
 8007ad8:	0100      	lsls	r0, r0, #4

    pbuf[2 * idx + 1] = 0;
 8007ada:	005c      	lsls	r4, r3, #1
 8007adc:	3401      	adds	r4, #1
 8007ade:	2500      	movs	r5, #0
 8007ae0:	550d      	strb	r5, [r1, r4]
  for (idx = 0; idx < len; idx++)
 8007ae2:	3301      	adds	r3, #1
 8007ae4:	b2db      	uxtb	r3, r3
 8007ae6:	4293      	cmp	r3, r2
 8007ae8:	d206      	bcs.n	8007af8 <IntToUnicode+0x30>
    if (((value >> 28)) < 0xA)
 8007aea:	0f04      	lsrs	r4, r0, #28
 8007aec:	2c09      	cmp	r4, #9
 8007aee:	d8f0      	bhi.n	8007ad2 <IntToUnicode+0xa>
      pbuf[2 * idx] = (value >> 28) + '0';
 8007af0:	3430      	adds	r4, #48	; 0x30
 8007af2:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
 8007af6:	e7ef      	b.n	8007ad8 <IntToUnicode+0x10>
  }
}
 8007af8:	bc30      	pop	{r4, r5}
 8007afa:	4770      	bx	lr
 8007afc:	4770      	bx	lr
	...

08007b00 <Get_SerialNum>:
{
 8007b00:	b538      	push	{r3, r4, r5, lr}
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 8007b02:	4b0a      	ldr	r3, [pc, #40]	; (8007b2c <Get_SerialNum+0x2c>)
 8007b04:	6818      	ldr	r0, [r3, #0]
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 8007b06:	3304      	adds	r3, #4
 8007b08:	681c      	ldr	r4, [r3, #0]
  deviceserial2 = *(uint32_t *) DEVICE_ID3;
 8007b0a:	3304      	adds	r3, #4
 8007b0c:	681b      	ldr	r3, [r3, #0]
  if (deviceserial0 != 0)
 8007b0e:	18c0      	adds	r0, r0, r3
 8007b10:	d100      	bne.n	8007b14 <Get_SerialNum+0x14>
}
 8007b12:	bd38      	pop	{r3, r4, r5, pc}
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 8007b14:	4d06      	ldr	r5, [pc, #24]	; (8007b30 <Get_SerialNum+0x30>)
 8007b16:	2208      	movs	r2, #8
 8007b18:	1ca9      	adds	r1, r5, #2
 8007b1a:	f7ff ffd5 	bl	8007ac8 <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 8007b1e:	2204      	movs	r2, #4
 8007b20:	f105 0112 	add.w	r1, r5, #18
 8007b24:	4620      	mov	r0, r4
 8007b26:	f7ff ffcf 	bl	8007ac8 <IntToUnicode>
}
 8007b2a:	e7f2      	b.n	8007b12 <Get_SerialNum+0x12>
 8007b2c:	1ff0f420 	.word	0x1ff0f420
 8007b30:	20000174 	.word	0x20000174

08007b34 <USBD_FS_SerialStrDescriptor>:
{
 8007b34:	b508      	push	{r3, lr}
  *length = USB_SIZ_STRING_SERIAL;
 8007b36:	231a      	movs	r3, #26
 8007b38:	800b      	strh	r3, [r1, #0]
  Get_SerialNum();
 8007b3a:	f7ff ffe1 	bl	8007b00 <Get_SerialNum>
}
 8007b3e:	4801      	ldr	r0, [pc, #4]	; (8007b44 <USBD_FS_SerialStrDescriptor+0x10>)
 8007b40:	bd08      	pop	{r3, pc}
 8007b42:	bf00      	nop
 8007b44:	20000174 	.word	0x20000174

08007b48 <USBD_FS_ProductStrDescriptor>:
{
 8007b48:	b508      	push	{r3, lr}
 8007b4a:	460a      	mov	r2, r1
  if(speed == 0)
 8007b4c:	b128      	cbz	r0, 8007b5a <USBD_FS_ProductStrDescriptor+0x12>
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 8007b4e:	4905      	ldr	r1, [pc, #20]	; (8007b64 <USBD_FS_ProductStrDescriptor+0x1c>)
 8007b50:	4805      	ldr	r0, [pc, #20]	; (8007b68 <USBD_FS_ProductStrDescriptor+0x20>)
 8007b52:	f7fe fe6b 	bl	800682c <USBD_GetString>
}
 8007b56:	4803      	ldr	r0, [pc, #12]	; (8007b64 <USBD_FS_ProductStrDescriptor+0x1c>)
 8007b58:	bd08      	pop	{r3, pc}
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 8007b5a:	4902      	ldr	r1, [pc, #8]	; (8007b64 <USBD_FS_ProductStrDescriptor+0x1c>)
 8007b5c:	4802      	ldr	r0, [pc, #8]	; (8007b68 <USBD_FS_ProductStrDescriptor+0x20>)
 8007b5e:	f7fe fe65 	bl	800682c <USBD_GetString>
 8007b62:	e7f8      	b.n	8007b56 <USBD_FS_ProductStrDescriptor+0xe>
 8007b64:	2001b118 	.word	0x2001b118
 8007b68:	08016408 	.word	0x08016408

08007b6c <USBD_FS_ManufacturerStrDescriptor>:
{
 8007b6c:	b510      	push	{r4, lr}
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8007b6e:	4c04      	ldr	r4, [pc, #16]	; (8007b80 <USBD_FS_ManufacturerStrDescriptor+0x14>)
 8007b70:	460a      	mov	r2, r1
 8007b72:	4621      	mov	r1, r4
 8007b74:	4803      	ldr	r0, [pc, #12]	; (8007b84 <USBD_FS_ManufacturerStrDescriptor+0x18>)
 8007b76:	f7fe fe59 	bl	800682c <USBD_GetString>
}
 8007b7a:	4620      	mov	r0, r4
 8007b7c:	bd10      	pop	{r4, pc}
 8007b7e:	bf00      	nop
 8007b80:	2001b118 	.word	0x2001b118
 8007b84:	080163f4 	.word	0x080163f4

08007b88 <USBD_FS_ConfigStrDescriptor>:
{
 8007b88:	b508      	push	{r3, lr}
 8007b8a:	460a      	mov	r2, r1
  if(speed == USBD_SPEED_HIGH)
 8007b8c:	b128      	cbz	r0, 8007b9a <USBD_FS_ConfigStrDescriptor+0x12>
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 8007b8e:	4905      	ldr	r1, [pc, #20]	; (8007ba4 <USBD_FS_ConfigStrDescriptor+0x1c>)
 8007b90:	4805      	ldr	r0, [pc, #20]	; (8007ba8 <USBD_FS_ConfigStrDescriptor+0x20>)
 8007b92:	f7fe fe4b 	bl	800682c <USBD_GetString>
}
 8007b96:	4803      	ldr	r0, [pc, #12]	; (8007ba4 <USBD_FS_ConfigStrDescriptor+0x1c>)
 8007b98:	bd08      	pop	{r3, pc}
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 8007b9a:	4902      	ldr	r1, [pc, #8]	; (8007ba4 <USBD_FS_ConfigStrDescriptor+0x1c>)
 8007b9c:	4802      	ldr	r0, [pc, #8]	; (8007ba8 <USBD_FS_ConfigStrDescriptor+0x20>)
 8007b9e:	f7fe fe45 	bl	800682c <USBD_GetString>
 8007ba2:	e7f8      	b.n	8007b96 <USBD_FS_ConfigStrDescriptor+0xe>
 8007ba4:	2001b118 	.word	0x2001b118
 8007ba8:	080163d8 	.word	0x080163d8

08007bac <USBD_FS_InterfaceStrDescriptor>:
{
 8007bac:	b508      	push	{r3, lr}
 8007bae:	460a      	mov	r2, r1
  if(speed == 0)
 8007bb0:	b128      	cbz	r0, 8007bbe <USBD_FS_InterfaceStrDescriptor+0x12>
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 8007bb2:	4905      	ldr	r1, [pc, #20]	; (8007bc8 <USBD_FS_InterfaceStrDescriptor+0x1c>)
 8007bb4:	4805      	ldr	r0, [pc, #20]	; (8007bcc <USBD_FS_InterfaceStrDescriptor+0x20>)
 8007bb6:	f7fe fe39 	bl	800682c <USBD_GetString>
}
 8007bba:	4803      	ldr	r0, [pc, #12]	; (8007bc8 <USBD_FS_InterfaceStrDescriptor+0x1c>)
 8007bbc:	bd08      	pop	{r3, pc}
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 8007bbe:	4902      	ldr	r1, [pc, #8]	; (8007bc8 <USBD_FS_InterfaceStrDescriptor+0x1c>)
 8007bc0:	4802      	ldr	r0, [pc, #8]	; (8007bcc <USBD_FS_InterfaceStrDescriptor+0x20>)
 8007bc2:	f7fe fe33 	bl	800682c <USBD_GetString>
 8007bc6:	e7f8      	b.n	8007bba <USBD_FS_InterfaceStrDescriptor+0xe>
 8007bc8:	2001b118 	.word	0x2001b118
 8007bcc:	080163e4 	.word	0x080163e4

08007bd0 <_cbDialog>:

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg) {
 8007bd0:	b508      	push	{r3, lr}
  int     NCode;
  int     Id;
  // USER START (Optionally insert additional variables)
  // USER END

  switch (pMsg->MsgId) {
 8007bd2:	6803      	ldr	r3, [r0, #0]
 8007bd4:	2b1d      	cmp	r3, #29
 8007bd6:	d004      	beq.n	8007be2 <_cbDialog+0x12>
 8007bd8:	2b26      	cmp	r3, #38	; 0x26
 8007bda:	d00b      	beq.n	8007bf4 <_cbDialog+0x24>
    }
    break;
  // USER START (Optionally insert additional message handling)
  // USER END
  default:
    WM_DefaultProc(pMsg);
 8007bdc:	f003 f9d4 	bl	800af88 <WM_DefaultProc>
    break;
  }
}
 8007be0:	e007      	b.n	8007bf2 <_cbDialog+0x22>
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_2);
 8007be2:	f640 0107 	movw	r1, #2055	; 0x807
 8007be6:	6840      	ldr	r0, [r0, #4]
 8007be8:	f002 f874 	bl	8009cd4 <WM_GetDialogItem>
    TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
 8007bec:	210e      	movs	r1, #14
 8007bee:	f000 facc 	bl	800818a <TEXT_SetTextAlign>
}
 8007bf2:	bd08      	pop	{r3, pc}
    Id    = WM_GetId(pMsg->hWinSrc);
 8007bf4:	6880      	ldr	r0, [r0, #8]
 8007bf6:	f002 f827 	bl	8009c48 <WM_GetId>
 8007bfa:	e7fa      	b.n	8007bf2 <_cbDialog+0x22>

08007bfc <CreateProjekat>:
/*********************************************************************
*
*       CreateProjekat
*/
WM_HWIN CreateProjekat(void);
WM_HWIN CreateProjekat(void) {
 8007bfc:	b500      	push	{lr}
 8007bfe:	b083      	sub	sp, #12
  WM_HWIN hWin;

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), _cbDialog, WM_HBKWIN, 0, 0);
 8007c00:	f002 f86c 	bl	8009cdc <WM_GetDesktopWindow>
 8007c04:	2300      	movs	r3, #0
 8007c06:	9301      	str	r3, [sp, #4]
 8007c08:	9300      	str	r3, [sp, #0]
 8007c0a:	4603      	mov	r3, r0
 8007c0c:	4a03      	ldr	r2, [pc, #12]	; (8007c1c <CreateProjekat+0x20>)
 8007c0e:	210f      	movs	r1, #15
 8007c10:	4803      	ldr	r0, [pc, #12]	; (8007c20 <CreateProjekat+0x24>)
 8007c12:	f001 fa19 	bl	8009048 <GUI_CreateDialogBox>
  return hWin;
}
 8007c16:	b003      	add	sp, #12
 8007c18:	f85d fb04 	ldr.w	pc, [sp], #4
 8007c1c:	08007bd1 	.word	0x08007bd1
 8007c20:	08016420 	.word	0x08016420

08007c24 <Reset_Handler>:
 8007c24:	f8df d034 	ldr.w	sp, [pc, #52]	; 8007c5c <LoopFillZerobss+0x12>
 8007c28:	480d      	ldr	r0, [pc, #52]	; (8007c60 <LoopFillZerobss+0x16>)
 8007c2a:	490e      	ldr	r1, [pc, #56]	; (8007c64 <LoopFillZerobss+0x1a>)
 8007c2c:	4a0e      	ldr	r2, [pc, #56]	; (8007c68 <LoopFillZerobss+0x1e>)
 8007c2e:	2300      	movs	r3, #0
 8007c30:	e002      	b.n	8007c38 <LoopCopyDataInit>

08007c32 <CopyDataInit>:
 8007c32:	58d4      	ldr	r4, [r2, r3]
 8007c34:	50c4      	str	r4, [r0, r3]
 8007c36:	3304      	adds	r3, #4

08007c38 <LoopCopyDataInit>:
 8007c38:	18c4      	adds	r4, r0, r3
 8007c3a:	428c      	cmp	r4, r1
 8007c3c:	d3f9      	bcc.n	8007c32 <CopyDataInit>
 8007c3e:	4a0b      	ldr	r2, [pc, #44]	; (8007c6c <LoopFillZerobss+0x22>)
 8007c40:	4c0b      	ldr	r4, [pc, #44]	; (8007c70 <LoopFillZerobss+0x26>)
 8007c42:	2300      	movs	r3, #0
 8007c44:	e001      	b.n	8007c4a <LoopFillZerobss>

08007c46 <FillZerobss>:
 8007c46:	6013      	str	r3, [r2, #0]
 8007c48:	3204      	adds	r2, #4

08007c4a <LoopFillZerobss>:
 8007c4a:	42a2      	cmp	r2, r4
 8007c4c:	d3fb      	bcc.n	8007c46 <FillZerobss>
 8007c4e:	f7ff fd43 	bl	80076d8 <SystemInit>
 8007c52:	f00e fa4f 	bl	80160f4 <__libc_init_array>
 8007c56:	f7ff fad3 	bl	8007200 <main>
 8007c5a:	4770      	bx	lr
 8007c5c:	20050000 	.word	0x20050000
 8007c60:	20000000 	.word	0x20000000
 8007c64:	20000444 	.word	0x20000444
 8007c68:	08018338 	.word	0x08018338
 8007c6c:	20000444 	.word	0x20000444
 8007c70:	2001b4a4 	.word	0x2001b4a4

08007c74 <ADC_IRQHandler>:
 8007c74:	e7fe      	b.n	8007c74 <ADC_IRQHandler>

08007c76 <WINDOW_Callback>:
 8007c76:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007c7a:	6845      	ldr	r5, [r0, #4]
 8007c7c:	4604      	mov	r4, r0
 8007c7e:	4628      	mov	r0, r5
 8007c80:	f008 fbde 	bl	8010440 <GUI_ALLOC_LockH>
 8007c84:	af02      	add	r7, sp, #8
 8007c86:	6b86      	ldr	r6, [r0, #56]	; 0x38
 8007c88:	f847 0d08 	str.w	r0, [r7, #-8]!
 8007c8c:	f8d0 9034 	ldr.w	r9, [r0, #52]	; 0x34
 8007c90:	f8d0 8040 	ldr.w	r8, [r0, #64]	; 0x40
 8007c94:	4668      	mov	r0, sp
 8007c96:	f008 fbe1 	bl	801045c <GUI_ALLOC_UnlockH>
 8007c9a:	6823      	ldr	r3, [r4, #0]
 8007c9c:	2b1f      	cmp	r3, #31
 8007c9e:	d02f      	beq.n	8007d00 <WINDOW_Callback+0x8a>
 8007ca0:	dc06      	bgt.n	8007cb0 <WINDOW_Callback+0x3a>
 8007ca2:	2b0f      	cmp	r3, #15
 8007ca4:	d060      	beq.n	8007d68 <WINDOW_Callback+0xf2>
 8007ca6:	2b1e      	cmp	r3, #30
 8007ca8:	d015      	beq.n	8007cd6 <WINDOW_Callback+0x60>
 8007caa:	2b0e      	cmp	r3, #14
 8007cac:	d169      	bne.n	8007d82 <WINDOW_Callback+0x10c>
 8007cae:	e04a      	b.n	8007d46 <WINDOW_Callback+0xd0>
 8007cb0:	2b22      	cmp	r3, #34	; 0x22
 8007cb2:	d063      	beq.n	8007d7c <WINDOW_Callback+0x106>
 8007cb4:	2b2a      	cmp	r3, #42	; 0x2a
 8007cb6:	d002      	beq.n	8007cbe <WINDOW_Callback+0x48>
 8007cb8:	2b20      	cmp	r3, #32
 8007cba:	d162      	bne.n	8007d82 <WINDOW_Callback+0x10c>
 8007cbc:	e025      	b.n	8007d0a <WINDOW_Callback+0x94>
 8007cbe:	4628      	mov	r0, r5
 8007cc0:	f008 fbbe 	bl	8010440 <GUI_ALLOC_LockH>
 8007cc4:	68e3      	ldr	r3, [r4, #12]
 8007cc6:	9000      	str	r0, [sp, #0]
 8007cc8:	b10b      	cbz	r3, 8007cce <WINDOW_Callback+0x58>
 8007cca:	63c3      	str	r3, [r0, #60]	; 0x3c
 8007ccc:	e001      	b.n	8007cd2 <WINDOW_Callback+0x5c>
 8007cce:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8007cd0:	60e3      	str	r3, [r4, #12]
 8007cd2:	4668      	mov	r0, sp
 8007cd4:	e034      	b.n	8007d40 <WINDOW_Callback+0xca>
 8007cd6:	68e4      	ldr	r4, [r4, #12]
 8007cd8:	2c01      	cmp	r4, #1
 8007cda:	d15b      	bne.n	8007d94 <WINDOW_Callback+0x11e>
 8007cdc:	4630      	mov	r0, r6
 8007cde:	f001 fe96 	bl	8009a0e <WM_IsWindow>
 8007ce2:	2800      	cmp	r0, #0
 8007ce4:	d03c      	beq.n	8007d60 <WINDOW_Callback+0xea>
 8007ce6:	4630      	mov	r0, r6
 8007ce8:	f001 fcf2 	bl	80096d0 <WM_SetFocus>
 8007cec:	4630      	mov	r0, r6
 8007cee:	f001 febf 	bl	8009a70 <WM_HasFocus>
 8007cf2:	2800      	cmp	r0, #0
 8007cf4:	d04e      	beq.n	8007d94 <WINDOW_Callback+0x11e>
 8007cf6:	4630      	mov	r0, r6
 8007cf8:	4621      	mov	r1, r4
 8007cfa:	f000 f928 	bl	8007f4e <WIDGET_OrState>
 8007cfe:	e049      	b.n	8007d94 <WINDOW_Callback+0x11e>
 8007d00:	4628      	mov	r0, r5
 8007d02:	4621      	mov	r1, r4
 8007d04:	f000 f956 	bl	8007fb4 <WIDGET_HandleActive>
 8007d08:	e044      	b.n	8007d94 <WINDOW_Callback+0x11e>
 8007d0a:	4628      	mov	r0, r5
 8007d0c:	f008 fb98 	bl	8010440 <GUI_ALLOC_LockH>
 8007d10:	68e4      	ldr	r4, [r4, #12]
 8007d12:	9001      	str	r0, [sp, #4]
 8007d14:	b19c      	cbz	r4, 8007d3e <WINDOW_Callback+0xc8>
 8007d16:	6860      	ldr	r0, [r4, #4]
 8007d18:	4629      	mov	r1, r5
 8007d1a:	f001 fbc6 	bl	80094aa <WM__IsAncestorOrSelf>
 8007d1e:	b930      	cbnz	r0, 8007d2e <WINDOW_Callback+0xb8>
 8007d20:	6820      	ldr	r0, [r4, #0]
 8007d22:	4629      	mov	r1, r5
 8007d24:	f001 fbb0 	bl	8009488 <WM__IsAncestor>
 8007d28:	b148      	cbz	r0, 8007d3e <WINDOW_Callback+0xc8>
 8007d2a:	6822      	ldr	r2, [r4, #0]
 8007d2c:	e005      	b.n	8007d3a <WINDOW_Callback+0xc4>
 8007d2e:	6860      	ldr	r0, [r4, #4]
 8007d30:	4629      	mov	r1, r5
 8007d32:	f001 fba9 	bl	8009488 <WM__IsAncestor>
 8007d36:	b110      	cbz	r0, 8007d3e <WINDOW_Callback+0xc8>
 8007d38:	6862      	ldr	r2, [r4, #4]
 8007d3a:	9b01      	ldr	r3, [sp, #4]
 8007d3c:	639a      	str	r2, [r3, #56]	; 0x38
 8007d3e:	a801      	add	r0, sp, #4
 8007d40:	f008 fb8c 	bl	801045c <GUI_ALLOC_UnlockH>
 8007d44:	e026      	b.n	8007d94 <WINDOW_Callback+0x11e>
 8007d46:	68e3      	ldr	r3, [r4, #12]
 8007d48:	685a      	ldr	r2, [r3, #4]
 8007d4a:	2a00      	cmp	r2, #0
 8007d4c:	dd19      	ble.n	8007d82 <WINDOW_Callback+0x10c>
 8007d4e:	681b      	ldr	r3, [r3, #0]
 8007d50:	2b09      	cmp	r3, #9
 8007d52:	d005      	beq.n	8007d60 <WINDOW_Callback+0xea>
 8007d54:	2b0a      	cmp	r3, #10
 8007d56:	d114      	bne.n	8007d82 <WINDOW_Callback+0x10c>
 8007d58:	4628      	mov	r0, r5
 8007d5a:	f001 fc58 	bl	800960e <WM_SetFocusOnPrevChild>
 8007d5e:	e019      	b.n	8007d94 <WINDOW_Callback+0x11e>
 8007d60:	4628      	mov	r0, r5
 8007d62:	f001 fc83 	bl	800966c <WM_SetFocusOnNextChild>
 8007d66:	e015      	b.n	8007d94 <WINDOW_Callback+0x11e>
 8007d68:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8007d6c:	4598      	cmp	r8, r3
 8007d6e:	d008      	beq.n	8007d82 <WINDOW_Callback+0x10c>
 8007d70:	4640      	mov	r0, r8
 8007d72:	f005 ffb5 	bl	800dce0 <LCD_SetBkColor>
 8007d76:	f007 ff4b 	bl	800fc10 <GUI_Clear>
 8007d7a:	e002      	b.n	8007d82 <WINDOW_Callback+0x10c>
 8007d7c:	f8c4 800c 	str.w	r8, [r4, #12]
 8007d80:	e008      	b.n	8007d94 <WINDOW_Callback+0x11e>
 8007d82:	f1b9 0f00 	cmp.w	r9, #0
 8007d86:	d002      	beq.n	8007d8e <WINDOW_Callback+0x118>
 8007d88:	4620      	mov	r0, r4
 8007d8a:	47c8      	blx	r9
 8007d8c:	e002      	b.n	8007d94 <WINDOW_Callback+0x11e>
 8007d8e:	4620      	mov	r0, r4
 8007d90:	f003 f8fa 	bl	800af88 <WM_DefaultProc>
 8007d94:	b003      	add	sp, #12
 8007d96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08007d9c <WINDOW_CreateUser>:
 8007d9c:	b510      	push	{r4, lr}
 8007d9e:	b086      	sub	sp, #24
 8007da0:	9c08      	ldr	r4, [sp, #32]
 8007da2:	9400      	str	r4, [sp, #0]
 8007da4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8007da6:	9401      	str	r4, [sp, #4]
 8007da8:	4c0f      	ldr	r4, [pc, #60]	; (8007de8 <WINDOW_CreateUser+0x4c>)
 8007daa:	9402      	str	r4, [sp, #8]
 8007dac:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8007dae:	3418      	adds	r4, #24
 8007db0:	9403      	str	r4, [sp, #12]
 8007db2:	f002 fcf9 	bl	800a7a8 <WM_CreateWindowAsChild>
 8007db6:	4604      	mov	r4, r0
 8007db8:	b190      	cbz	r0, 8007de0 <WINDOW_CreateUser+0x44>
 8007dba:	f008 fb41 	bl	8010440 <GUI_ALLOC_LockH>
 8007dbe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007dc0:	9005      	str	r0, [sp, #20]
 8007dc2:	2210      	movs	r2, #16
 8007dc4:	f000 f8ee 	bl	8007fa4 <WIDGET__Init>
 8007dc8:	a806      	add	r0, sp, #24
 8007dca:	990c      	ldr	r1, [sp, #48]	; 0x30
 8007dcc:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 8007dd0:	6351      	str	r1, [r2, #52]	; 0x34
 8007dd2:	2100      	movs	r1, #0
 8007dd4:	6391      	str	r1, [r2, #56]	; 0x38
 8007dd6:	4905      	ldr	r1, [pc, #20]	; (8007dec <WINDOW_CreateUser+0x50>)
 8007dd8:	6809      	ldr	r1, [r1, #0]
 8007dda:	6411      	str	r1, [r2, #64]	; 0x40
 8007ddc:	f008 fb3e 	bl	801045c <GUI_ALLOC_UnlockH>
 8007de0:	4620      	mov	r0, r4
 8007de2:	b006      	add	sp, #24
 8007de4:	bd10      	pop	{r4, pc}
 8007de6:	bf00      	nop
 8007de8:	08007c77 	.word	0x08007c77
 8007dec:	20000190 	.word	0x20000190

08007df0 <WINDOW_CreateIndirect>:
 8007df0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007df2:	b087      	sub	sp, #28
 8007df4:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8007df8:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8007dfc:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8007e00:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8007e04:	9100      	str	r1, [sp, #0]
 8007e06:	8a41      	ldrh	r1, [r0, #18]
 8007e08:	9101      	str	r1, [sp, #4]
 8007e0a:	2100      	movs	r1, #0
 8007e0c:	9102      	str	r1, [sp, #8]
 8007e0e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8007e12:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8007e14:	9103      	str	r1, [sp, #12]
 8007e16:	9404      	str	r4, [sp, #16]
 8007e18:	6984      	ldr	r4, [r0, #24]
 8007e1a:	9405      	str	r4, [sp, #20]
 8007e1c:	eb0e 0002 	add.w	r0, lr, r2
 8007e20:	18f9      	adds	r1, r7, r3
 8007e22:	4632      	mov	r2, r6
 8007e24:	462b      	mov	r3, r5
 8007e26:	f7ff ffb9 	bl	8007d9c <WINDOW_CreateUser>
 8007e2a:	b007      	add	sp, #28
 8007e2c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007e2e <_EffectRequiresRedraw>:
 8007e2e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007e30:	460d      	mov	r5, r1
 8007e32:	f100 0108 	add.w	r1, r0, #8
 8007e36:	4602      	mov	r2, r0
 8007e38:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8007e3a:	c903      	ldmia	r1, {r0, r1}
 8007e3c:	681c      	ldr	r4, [r3, #0]
 8007e3e:	e88d 0003 	stmia.w	sp, {r0, r1}
 8007e42:	4610      	mov	r0, r2
 8007e44:	4669      	mov	r1, sp
 8007e46:	f001 fb16 	bl	8009476 <WM__Screen2Client>
 8007e4a:	f9b5 2000 	ldrsh.w	r2, [r5]
 8007e4e:	f9bd 3000 	ldrsh.w	r3, [sp]
 8007e52:	4422      	add	r2, r4
 8007e54:	429a      	cmp	r2, r3
 8007e56:	dc17      	bgt.n	8007e88 <_EffectRequiresRedraw+0x5a>
 8007e58:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8007e5c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8007e60:	1b12      	subs	r2, r2, r4
 8007e62:	429a      	cmp	r2, r3
 8007e64:	db10      	blt.n	8007e88 <_EffectRequiresRedraw+0x5a>
 8007e66:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8007e6a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8007e6e:	4422      	add	r2, r4
 8007e70:	429a      	cmp	r2, r3
 8007e72:	dc09      	bgt.n	8007e88 <_EffectRequiresRedraw+0x5a>
 8007e74:	f9b5 0006 	ldrsh.w	r0, [r5, #6]
 8007e78:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8007e7c:	1b04      	subs	r4, r0, r4
 8007e7e:	429c      	cmp	r4, r3
 8007e80:	bfac      	ite	ge
 8007e82:	2000      	movge	r0, #0
 8007e84:	2001      	movlt	r0, #1
 8007e86:	e000      	b.n	8007e8a <_EffectRequiresRedraw+0x5c>
 8007e88:	2001      	movs	r0, #1
 8007e8a:	b003      	add	sp, #12
 8007e8c:	bd30      	pop	{r4, r5, pc}

08007e8e <WIDGET__RotateRect90>:
 8007e8e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8007e92:	b570      	push	{r4, r5, r6, lr}
 8007e94:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8007e98:	8815      	ldrh	r5, [r2, #0]
 8007e9a:	88d0      	ldrh	r0, [r2, #6]
 8007e9c:	8894      	ldrh	r4, [r2, #4]
 8007e9e:	8852      	ldrh	r2, [r2, #2]
 8007ea0:	804d      	strh	r5, [r1, #2]
 8007ea2:	1af3      	subs	r3, r6, r3
 8007ea4:	b29b      	uxth	r3, r3
 8007ea6:	1a18      	subs	r0, r3, r0
 8007ea8:	1a9b      	subs	r3, r3, r2
 8007eaa:	8008      	strh	r0, [r1, #0]
 8007eac:	808b      	strh	r3, [r1, #4]
 8007eae:	80cc      	strh	r4, [r1, #6]
 8007eb0:	bd70      	pop	{r4, r5, r6, pc}

08007eb2 <WIDGET__GetClientRect>:
 8007eb2:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8007eb4:	071b      	lsls	r3, r3, #28
 8007eb6:	b513      	push	{r0, r1, r4, lr}
 8007eb8:	460c      	mov	r4, r1
 8007eba:	d50f      	bpl.n	8007edc <WIDGET__GetClientRect+0x2a>
 8007ebc:	4668      	mov	r0, sp
 8007ebe:	f001 ff3b 	bl	8009d38 <WM_GetClientRect>
 8007ec2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8007ec6:	8023      	strh	r3, [r4, #0]
 8007ec8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8007ecc:	80a3      	strh	r3, [r4, #4]
 8007ece:	f8bd 3000 	ldrh.w	r3, [sp]
 8007ed2:	8063      	strh	r3, [r4, #2]
 8007ed4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8007ed8:	80e3      	strh	r3, [r4, #6]
 8007eda:	e002      	b.n	8007ee2 <WIDGET__GetClientRect+0x30>
 8007edc:	4608      	mov	r0, r1
 8007ede:	f001 ff2b 	bl	8009d38 <WM_GetClientRect>
 8007ee2:	b002      	add	sp, #8
 8007ee4:	bd10      	pop	{r4, pc}

08007ee6 <WIDGET__GetInsideRect>:
 8007ee6:	b538      	push	{r3, r4, r5, lr}
 8007ee8:	4604      	mov	r4, r0
 8007eea:	460d      	mov	r5, r1
 8007eec:	f002 fbd3 	bl	800a696 <WM__GetClientRectWin>
 8007ef0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007ef2:	4628      	mov	r0, r5
 8007ef4:	4629      	mov	r1, r5
 8007ef6:	681a      	ldr	r2, [r3, #0]
 8007ef8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007efc:	f005 bf93 	b.w	800de26 <GUI__ReduceRect>

08007f00 <WIDGET__GetWindowSizeX>:
 8007f00:	b513      	push	{r0, r1, r4, lr}
 8007f02:	4604      	mov	r4, r0
 8007f04:	f008 fa9c 	bl	8010440 <GUI_ALLOC_LockH>
 8007f08:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8007f0a:	9001      	str	r0, [sp, #4]
 8007f0c:	071b      	lsls	r3, r3, #28
 8007f0e:	4620      	mov	r0, r4
 8007f10:	d502      	bpl.n	8007f18 <WIDGET__GetWindowSizeX+0x18>
 8007f12:	f001 fdd0 	bl	8009ab6 <WM_GetWindowSizeY>
 8007f16:	e001      	b.n	8007f1c <WIDGET__GetWindowSizeX+0x1c>
 8007f18:	f001 fdb8 	bl	8009a8c <WM_GetWindowSizeX>
 8007f1c:	4604      	mov	r4, r0
 8007f1e:	a801      	add	r0, sp, #4
 8007f20:	f008 fa9c 	bl	801045c <GUI_ALLOC_UnlockH>
 8007f24:	4620      	mov	r0, r4
 8007f26:	b002      	add	sp, #8
 8007f28:	bd10      	pop	{r4, pc}

08007f2a <WIDGET_SetState>:
 8007f2a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007f2c:	460c      	mov	r4, r1
 8007f2e:	4605      	mov	r5, r0
 8007f30:	f008 fa86 	bl	8010440 <GUI_ALLOC_LockH>
 8007f34:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8007f36:	9001      	str	r0, [sp, #4]
 8007f38:	4294      	cmp	r4, r2
 8007f3a:	d003      	beq.n	8007f44 <WIDGET_SetState+0x1a>
 8007f3c:	8644      	strh	r4, [r0, #50]	; 0x32
 8007f3e:	4628      	mov	r0, r5
 8007f40:	f002 fbf1 	bl	800a726 <WM_InvalidateWindow>
 8007f44:	a801      	add	r0, sp, #4
 8007f46:	f008 fa89 	bl	801045c <GUI_ALLOC_UnlockH>
 8007f4a:	b003      	add	sp, #12
 8007f4c:	bd30      	pop	{r4, r5, pc}

08007f4e <WIDGET_OrState>:
 8007f4e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007f50:	460c      	mov	r4, r1
 8007f52:	4605      	mov	r5, r0
 8007f54:	b178      	cbz	r0, 8007f76 <WIDGET_OrState+0x28>
 8007f56:	f008 fa73 	bl	8010440 <GUI_ALLOC_LockH>
 8007f5a:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8007f5c:	9001      	str	r0, [sp, #4]
 8007f5e:	ea04 0102 	and.w	r1, r4, r2
 8007f62:	428c      	cmp	r4, r1
 8007f64:	d004      	beq.n	8007f70 <WIDGET_OrState+0x22>
 8007f66:	4314      	orrs	r4, r2
 8007f68:	8644      	strh	r4, [r0, #50]	; 0x32
 8007f6a:	4628      	mov	r0, r5
 8007f6c:	f002 fbdb 	bl	800a726 <WM_InvalidateWindow>
 8007f70:	a801      	add	r0, sp, #4
 8007f72:	f008 fa73 	bl	801045c <GUI_ALLOC_UnlockH>
 8007f76:	b003      	add	sp, #12
 8007f78:	bd30      	pop	{r4, r5, pc}

08007f7a <WIDGET_AndState>:
 8007f7a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007f7c:	460d      	mov	r5, r1
 8007f7e:	4604      	mov	r4, r0
 8007f80:	b170      	cbz	r0, 8007fa0 <WIDGET_AndState+0x26>
 8007f82:	f008 fa5d 	bl	8010440 <GUI_ALLOC_LockH>
 8007f86:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8007f88:	9001      	str	r0, [sp, #4]
 8007f8a:	ea22 0105 	bic.w	r1, r2, r5
 8007f8e:	428a      	cmp	r2, r1
 8007f90:	d003      	beq.n	8007f9a <WIDGET_AndState+0x20>
 8007f92:	8641      	strh	r1, [r0, #50]	; 0x32
 8007f94:	4620      	mov	r0, r4
 8007f96:	f002 fbc6 	bl	800a726 <WM_InvalidateWindow>
 8007f9a:	a801      	add	r0, sp, #4
 8007f9c:	f008 fa5e 	bl	801045c <GUI_ALLOC_UnlockH>
 8007fa0:	b003      	add	sp, #12
 8007fa2:	bd30      	pop	{r4, r5, pc}

08007fa4 <WIDGET__Init>:
 8007fa4:	4b02      	ldr	r3, [pc, #8]	; (8007fb0 <WIDGET__Init+0xc>)
 8007fa6:	8642      	strh	r2, [r0, #50]	; 0x32
 8007fa8:	681b      	ldr	r3, [r3, #0]
 8007faa:	62c3      	str	r3, [r0, #44]	; 0x2c
 8007fac:	8601      	strh	r1, [r0, #48]	; 0x30
 8007fae:	4770      	bx	lr
 8007fb0:	20000194 	.word	0x20000194

08007fb4 <WIDGET_HandleActive>:
 8007fb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007fb6:	460d      	mov	r5, r1
 8007fb8:	b085      	sub	sp, #20
 8007fba:	4606      	mov	r6, r0
 8007fbc:	2800      	cmp	r0, #0
 8007fbe:	f000 8093 	beq.w	80080e8 <WIDGET_HandleActive+0x134>
 8007fc2:	f008 fa3d 	bl	8010440 <GUI_ALLOC_LockH>
 8007fc6:	682b      	ldr	r3, [r5, #0]
 8007fc8:	9002      	str	r0, [sp, #8]
 8007fca:	2b16      	cmp	r3, #22
 8007fcc:	d052      	beq.n	8008074 <WIDGET_HandleActive+0xc0>
 8007fce:	dc0c      	bgt.n	8007fea <WIDGET_HandleActive+0x36>
 8007fd0:	2b11      	cmp	r3, #17
 8007fd2:	d033      	beq.n	800803c <WIDGET_HandleActive+0x88>
 8007fd4:	dc02      	bgt.n	8007fdc <WIDGET_HandleActive+0x28>
 8007fd6:	2b0d      	cmp	r3, #13
 8007fd8:	d03e      	beq.n	8008058 <WIDGET_HandleActive+0xa4>
 8007fda:	e07e      	b.n	80080da <WIDGET_HandleActive+0x126>
 8007fdc:	2b14      	cmp	r3, #20
 8007fde:	d077      	beq.n	80080d0 <WIDGET_HandleActive+0x11c>
 8007fe0:	2b15      	cmp	r3, #21
 8007fe2:	d17a      	bne.n	80080da <WIDGET_HandleActive+0x126>
 8007fe4:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8007fe8:	e070      	b.n	80080cc <WIDGET_HandleActive+0x118>
 8007fea:	2b1f      	cmp	r3, #31
 8007fec:	d06b      	beq.n	80080c6 <WIDGET_HandleActive+0x112>
 8007fee:	dc02      	bgt.n	8007ff6 <WIDGET_HandleActive+0x42>
 8007ff0:	2b1e      	cmp	r3, #30
 8007ff2:	d042      	beq.n	800807a <WIDGET_HandleActive+0xc6>
 8007ff4:	e071      	b.n	80080da <WIDGET_HandleActive+0x126>
 8007ff6:	2b31      	cmp	r3, #49	; 0x31
 8007ff8:	d01e      	beq.n	8008038 <WIDGET_HandleActive+0x84>
 8007ffa:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8007ffe:	d16c      	bne.n	80080da <WIDGET_HandleActive+0x126>
 8008000:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008002:	6819      	ldr	r1, [r3, #0]
 8008004:	68eb      	ldr	r3, [r5, #12]
 8008006:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008008:	681b      	ldr	r3, [r3, #0]
 800800a:	a802      	add	r0, sp, #8
 800800c:	1acd      	subs	r5, r1, r3
 800800e:	f008 fa25 	bl	801045c <GUI_ALLOC_UnlockH>
 8008012:	4630      	mov	r0, r6
 8008014:	f008 fa14 	bl	8010440 <GUI_ALLOC_LockH>
 8008018:	ac04      	add	r4, sp, #16
 800801a:	4269      	negs	r1, r5
 800801c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8008020:	460a      	mov	r2, r1
 8008022:	462b      	mov	r3, r5
 8008024:	9500      	str	r5, [sp, #0]
 8008026:	f001 f9ac 	bl	8009382 <WM__UpdateChildPositions>
 800802a:	4620      	mov	r0, r4
 800802c:	f008 fa16 	bl	801045c <GUI_ALLOC_UnlockH>
 8008030:	4630      	mov	r0, r6
 8008032:	f002 fb78 	bl	800a726 <WM_InvalidateWindow>
 8008036:	e04e      	b.n	80080d6 <WIDGET_HandleActive+0x122>
 8008038:	2400      	movs	r4, #0
 800803a:	e03f      	b.n	80080bc <WIDGET_HandleActive+0x108>
 800803c:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800803e:	06d9      	lsls	r1, r3, #27
 8008040:	d54b      	bpl.n	80080da <WIDGET_HandleActive+0x126>
 8008042:	68eb      	ldr	r3, [r5, #12]
 8008044:	7a1b      	ldrb	r3, [r3, #8]
 8008046:	2b00      	cmp	r3, #0
 8008048:	d047      	beq.n	80080da <WIDGET_HandleActive+0x126>
 800804a:	a802      	add	r0, sp, #8
 800804c:	f008 fa06 	bl	801045c <GUI_ALLOC_UnlockH>
 8008050:	4630      	mov	r0, r6
 8008052:	f001 fb3d 	bl	80096d0 <WM_SetFocus>
 8008056:	e040      	b.n	80080da <WIDGET_HandleActive+0x126>
 8008058:	68eb      	ldr	r3, [r5, #12]
 800805a:	68db      	ldr	r3, [r3, #12]
 800805c:	2b00      	cmp	r3, #0
 800805e:	d03c      	beq.n	80080da <WIDGET_HandleActive+0x126>
 8008060:	7a1b      	ldrb	r3, [r3, #8]
 8008062:	2b00      	cmp	r3, #0
 8008064:	d039      	beq.n	80080da <WIDGET_HandleActive+0x126>
 8008066:	a802      	add	r0, sp, #8
 8008068:	f008 f9f8 	bl	801045c <GUI_ALLOC_UnlockH>
 800806c:	4630      	mov	r0, r6
 800806e:	f001 fe83 	bl	8009d78 <WM_BringToTop>
 8008072:	e030      	b.n	80080d6 <WIDGET_HandleActive+0x122>
 8008074:	68eb      	ldr	r3, [r5, #12]
 8008076:	8603      	strh	r3, [r0, #48]	; 0x30
 8008078:	e02d      	b.n	80080d6 <WIDGET_HandleActive+0x122>
 800807a:	68eb      	ldr	r3, [r5, #12]
 800807c:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 800807e:	2b01      	cmp	r3, #1
 8008080:	d108      	bne.n	8008094 <WIDGET_HandleActive+0xe0>
 8008082:	06ca      	lsls	r2, r1, #27
 8008084:	d50d      	bpl.n	80080a2 <WIDGET_HandleActive+0xee>
 8008086:	4630      	mov	r0, r6
 8008088:	f041 0101 	orr.w	r1, r1, #1
 800808c:	f7ff ff4d 	bl	8007f2a <WIDGET_SetState>
 8008090:	2708      	movs	r7, #8
 8008092:	e008      	b.n	80080a6 <WIDGET_HandleActive+0xf2>
 8008094:	f021 0101 	bic.w	r1, r1, #1
 8008098:	4630      	mov	r0, r6
 800809a:	f7ff ff46 	bl	8007f2a <WIDGET_SetState>
 800809e:	2709      	movs	r7, #9
 80080a0:	e001      	b.n	80080a6 <WIDGET_HandleActive+0xf2>
 80080a2:	f04f 37ff 	mov.w	r7, #4294967295
 80080a6:	a802      	add	r0, sp, #8
 80080a8:	f008 f9d8 	bl	801045c <GUI_ALLOC_UnlockH>
 80080ac:	1c7b      	adds	r3, r7, #1
 80080ae:	f04f 0400 	mov.w	r4, #0
 80080b2:	d005      	beq.n	80080c0 <WIDGET_HandleActive+0x10c>
 80080b4:	4630      	mov	r0, r6
 80080b6:	4639      	mov	r1, r7
 80080b8:	f001 fc13 	bl	80098e2 <WM_NotifyParent>
 80080bc:	60ec      	str	r4, [r5, #12]
 80080be:	e00d      	b.n	80080dc <WIDGET_HandleActive+0x128>
 80080c0:	2301      	movs	r3, #1
 80080c2:	60eb      	str	r3, [r5, #12]
 80080c4:	e00a      	b.n	80080dc <WIDGET_HandleActive+0x128>
 80080c6:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80080c8:	f3c3 1300 	ubfx	r3, r3, #4, #1
 80080cc:	60eb      	str	r3, [r5, #12]
 80080ce:	e002      	b.n	80080d6 <WIDGET_HandleActive+0x122>
 80080d0:	68e9      	ldr	r1, [r5, #12]
 80080d2:	f7ff ff08 	bl	8007ee6 <WIDGET__GetInsideRect>
 80080d6:	2400      	movs	r4, #0
 80080d8:	e000      	b.n	80080dc <WIDGET_HandleActive+0x128>
 80080da:	2401      	movs	r4, #1
 80080dc:	9b02      	ldr	r3, [sp, #8]
 80080de:	b123      	cbz	r3, 80080ea <WIDGET_HandleActive+0x136>
 80080e0:	a802      	add	r0, sp, #8
 80080e2:	f008 f9bb 	bl	801045c <GUI_ALLOC_UnlockH>
 80080e6:	e000      	b.n	80080ea <WIDGET_HandleActive+0x136>
 80080e8:	2401      	movs	r4, #1
 80080ea:	4620      	mov	r0, r4
 80080ec:	b005      	add	sp, #20
 80080ee:	bdf0      	pop	{r4, r5, r6, r7, pc}

080080f0 <WIDGET__SetScrollState>:
 80080f0:	b570      	push	{r4, r5, r6, lr}
 80080f2:	460d      	mov	r5, r1
 80080f4:	21fe      	movs	r1, #254	; 0xfe
 80080f6:	4616      	mov	r6, r2
 80080f8:	4604      	mov	r4, r0
 80080fa:	f001 fdeb 	bl	8009cd4 <WM_GetDialogItem>
 80080fe:	4629      	mov	r1, r5
 8008100:	f001 fa6a 	bl	80095d8 <WM_SetScrollState>
 8008104:	4620      	mov	r0, r4
 8008106:	21ff      	movs	r1, #255	; 0xff
 8008108:	f001 fde4 	bl	8009cd4 <WM_GetDialogItem>
 800810c:	4631      	mov	r1, r6
 800810e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008112:	f001 ba61 	b.w	80095d8 <WM_SetScrollState>

08008116 <WIDGET__DrawTriangle>:
 8008116:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008118:	461c      	mov	r4, r3
 800811a:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800811c:	9f06      	ldr	r7, [sp, #24]
 800811e:	071b      	lsls	r3, r3, #28
 8008120:	460d      	mov	r5, r1
 8008122:	4616      	mov	r6, r2
 8008124:	d50a      	bpl.n	800813c <WIDGET__DrawTriangle+0x26>
 8008126:	2c00      	cmp	r4, #0
 8008128:	db07      	blt.n	800813a <WIDGET__DrawTriangle+0x24>
 800812a:	4628      	mov	r0, r5
 800812c:	1b31      	subs	r1, r6, r4
 800812e:	19a2      	adds	r2, r4, r6
 8008130:	f007 fb22 	bl	800f778 <GUI_DrawHLine>
 8008134:	3c01      	subs	r4, #1
 8008136:	443d      	add	r5, r7
 8008138:	e7f5      	b.n	8008126 <WIDGET__DrawTriangle+0x10>
 800813a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800813c:	2c00      	cmp	r4, #0
 800813e:	db07      	blt.n	8008150 <WIDGET__DrawTriangle+0x3a>
 8008140:	4628      	mov	r0, r5
 8008142:	1b31      	subs	r1, r6, r4
 8008144:	19a2      	adds	r2, r4, r6
 8008146:	f007 f889 	bl	800f25c <GUI_DrawVLine>
 800814a:	3c01      	subs	r4, #1
 800814c:	443d      	add	r5, r7
 800814e:	e7f5      	b.n	800813c <WIDGET__DrawTriangle+0x26>
 8008150:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08008152 <WIDGET__EFFECT_DrawDownRect>:
 8008152:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008154:	4605      	mov	r5, r0
 8008156:	460c      	mov	r4, r1
 8008158:	b919      	cbnz	r1, 8008162 <WIDGET__EFFECT_DrawDownRect+0x10>
 800815a:	4668      	mov	r0, sp
 800815c:	f001 fdec 	bl	8009d38 <WM_GetClientRect>
 8008160:	466c      	mov	r4, sp
 8008162:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 8008164:	071b      	lsls	r3, r3, #28
 8008166:	d505      	bpl.n	8008174 <WIDGET__EFFECT_DrawDownRect+0x22>
 8008168:	4622      	mov	r2, r4
 800816a:	4628      	mov	r0, r5
 800816c:	4669      	mov	r1, sp
 800816e:	f7ff fe8e 	bl	8007e8e <WIDGET__RotateRect90>
 8008172:	466c      	mov	r4, sp
 8008174:	4628      	mov	r0, r5
 8008176:	4621      	mov	r1, r4
 8008178:	f7ff fe59 	bl	8007e2e <_EffectRequiresRedraw>
 800817c:	b118      	cbz	r0, 8008186 <WIDGET__EFFECT_DrawDownRect+0x34>
 800817e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8008180:	4620      	mov	r0, r4
 8008182:	691b      	ldr	r3, [r3, #16]
 8008184:	4798      	blx	r3
 8008186:	b003      	add	sp, #12
 8008188:	bd30      	pop	{r4, r5, pc}

0800818a <TEXT_SetTextAlign>:
 800818a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800818c:	460d      	mov	r5, r1
 800818e:	4604      	mov	r4, r0
 8008190:	b160      	cbz	r0, 80081ac <TEXT_SetTextAlign+0x22>
 8008192:	f008 f955 	bl	8010440 <GUI_ALLOC_LockH>
 8008196:	4602      	mov	r2, r0
 8008198:	a802      	add	r0, sp, #8
 800819a:	f8a2 5048 	strh.w	r5, [r2, #72]	; 0x48
 800819e:	f840 2d04 	str.w	r2, [r0, #-4]!
 80081a2:	f008 f95b 	bl	801045c <GUI_ALLOC_UnlockH>
 80081a6:	4620      	mov	r0, r4
 80081a8:	f002 fabd 	bl	800a726 <WM_InvalidateWindow>
 80081ac:	b003      	add	sp, #12
 80081ae:	bd30      	pop	{r4, r5, pc}

080081b0 <TEXT_CreateIndirect>:
 80081b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80081b2:	b087      	sub	sp, #28
 80081b4:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 80081b8:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 80081bc:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 80081c0:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 80081c4:	9100      	str	r1, [sp, #0]
 80081c6:	2102      	movs	r1, #2
 80081c8:	9101      	str	r1, [sp, #4]
 80081ca:	8a41      	ldrh	r1, [r0, #18]
 80081cc:	9102      	str	r1, [sp, #8]
 80081ce:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80081d2:	9103      	str	r1, [sp, #12]
 80081d4:	6844      	ldr	r4, [r0, #4]
 80081d6:	9404      	str	r4, [sp, #16]
 80081d8:	6984      	ldr	r4, [r0, #24]
 80081da:	9405      	str	r4, [sp, #20]
 80081dc:	eb0e 0002 	add.w	r0, lr, r2
 80081e0:	18f9      	adds	r1, r7, r3
 80081e2:	4632      	mov	r2, r6
 80081e4:	462b      	mov	r3, r5
 80081e6:	f000 f865 	bl	80082b4 <TEXT_CreateUser>
 80081ea:	b007      	add	sp, #28
 80081ec:	bdf0      	pop	{r4, r5, r6, r7, pc}

080081ee <TEXT_Callback>:
 80081ee:	b530      	push	{r4, r5, lr}
 80081f0:	6845      	ldr	r5, [r0, #4]
 80081f2:	4604      	mov	r4, r0
 80081f4:	b085      	sub	sp, #20
 80081f6:	4628      	mov	r0, r5
 80081f8:	4621      	mov	r1, r4
 80081fa:	f7ff fedb 	bl	8007fb4 <WIDGET_HandleActive>
 80081fe:	2800      	cmp	r0, #0
 8008200:	d056      	beq.n	80082b0 <TEXT_Callback+0xc2>
 8008202:	6823      	ldr	r3, [r4, #0]
 8008204:	2b0f      	cmp	r3, #15
 8008206:	d01e      	beq.n	8008246 <TEXT_Callback+0x58>
 8008208:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800820c:	d00e      	beq.n	800822c <TEXT_Callback+0x3e>
 800820e:	2b0b      	cmp	r3, #11
 8008210:	d14b      	bne.n	80082aa <TEXT_Callback+0xbc>
 8008212:	4628      	mov	r0, r5
 8008214:	f008 f914 	bl	8010440 <GUI_ALLOC_LockH>
 8008218:	ad04      	add	r5, sp, #16
 800821a:	f845 0d08 	str.w	r0, [r5, #-8]!
 800821e:	3044      	adds	r0, #68	; 0x44
 8008220:	f008 fb66 	bl	80108f0 <GUI_ALLOC_FreePtr>
 8008224:	4628      	mov	r0, r5
 8008226:	f008 f919 	bl	801045c <GUI_ALLOC_UnlockH>
 800822a:	e03e      	b.n	80082aa <TEXT_Callback+0xbc>
 800822c:	68e3      	ldr	r3, [r4, #12]
 800822e:	b12b      	cbz	r3, 800823c <TEXT_Callback+0x4e>
 8008230:	7a1b      	ldrb	r3, [r3, #8]
 8008232:	2b00      	cmp	r3, #0
 8008234:	bf0c      	ite	eq
 8008236:	2102      	moveq	r1, #2
 8008238:	2101      	movne	r1, #1
 800823a:	e000      	b.n	800823e <TEXT_Callback+0x50>
 800823c:	2103      	movs	r1, #3
 800823e:	4628      	mov	r0, r5
 8008240:	f001 fb4f 	bl	80098e2 <WM_NotifyParent>
 8008244:	e031      	b.n	80082aa <TEXT_Callback+0xbc>
 8008246:	4628      	mov	r0, r5
 8008248:	f008 f8fa 	bl	8010440 <GUI_ALLOC_LockH>
 800824c:	9000      	str	r0, [sp, #0]
 800824e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8008250:	f005 fd4e 	bl	800dcf0 <LCD_SetColor>
 8008254:	9b00      	ldr	r3, [sp, #0]
 8008256:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8008258:	f006 fdfc 	bl	800ee54 <GUI_SetFont>
 800825c:	4628      	mov	r0, r5
 800825e:	f001 f97d 	bl	800955c <WM_GetHasTrans>
 8008262:	b928      	cbnz	r0, 8008270 <TEXT_Callback+0x82>
 8008264:	9b00      	ldr	r3, [sp, #0]
 8008266:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8008268:	f005 fd3a 	bl	800dce0 <LCD_SetBkColor>
 800826c:	f007 fcd0 	bl	800fc10 <GUI_Clear>
 8008270:	9b00      	ldr	r3, [sp, #0]
 8008272:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008274:	b1ab      	cbz	r3, 80082a2 <TEXT_Callback+0xb4>
 8008276:	2002      	movs	r0, #2
 8008278:	f006 fdda 	bl	800ee30 <GUI_SetTextMode>
 800827c:	a802      	add	r0, sp, #8
 800827e:	f001 fd5b 	bl	8009d38 <WM_GetClientRect>
 8008282:	9b00      	ldr	r3, [sp, #0]
 8008284:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8008286:	f008 f8db 	bl	8010440 <GUI_ALLOC_LockH>
 800828a:	9b00      	ldr	r3, [sp, #0]
 800828c:	9001      	str	r0, [sp, #4]
 800828e:	f9b3 2048 	ldrsh.w	r2, [r3, #72]	; 0x48
 8008292:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8008296:	a902      	add	r1, sp, #8
 8008298:	f007 faf2 	bl	800f880 <GUI_DispStringInRectWrap>
 800829c:	a801      	add	r0, sp, #4
 800829e:	f008 f8dd 	bl	801045c <GUI_ALLOC_UnlockH>
 80082a2:	4668      	mov	r0, sp
 80082a4:	f008 f8da 	bl	801045c <GUI_ALLOC_UnlockH>
 80082a8:	e002      	b.n	80082b0 <TEXT_Callback+0xc2>
 80082aa:	4620      	mov	r0, r4
 80082ac:	f002 fe6c 	bl	800af88 <WM_DefaultProc>
 80082b0:	b005      	add	sp, #20
 80082b2:	bd30      	pop	{r4, r5, pc}

080082b4 <TEXT_CreateUser>:
 80082b4:	b570      	push	{r4, r5, r6, lr}
 80082b6:	b086      	sub	sp, #24
 80082b8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80082ba:	9500      	str	r5, [sp, #0]
 80082bc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80082be:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80082c0:	f045 0501 	orr.w	r5, r5, #1
 80082c4:	9501      	str	r5, [sp, #4]
 80082c6:	4d1a      	ldr	r5, [pc, #104]	; (8008330 <TEXT_CreateUser+0x7c>)
 80082c8:	9502      	str	r5, [sp, #8]
 80082ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80082cc:	3520      	adds	r5, #32
 80082ce:	9503      	str	r5, [sp, #12]
 80082d0:	f002 fa6a 	bl	800a7a8 <WM_CreateWindowAsChild>
 80082d4:	4605      	mov	r5, r0
 80082d6:	b340      	cbz	r0, 800832a <TEXT_CreateUser+0x76>
 80082d8:	b18c      	cbz	r4, 80082fe <TEXT_CreateUser+0x4a>
 80082da:	4620      	mov	r0, r4
 80082dc:	f7f7 ff94 	bl	8000208 <strlen>
 80082e0:	3001      	adds	r0, #1
 80082e2:	f008 fb1a 	bl	801091a <GUI_ALLOC_AllocZero>
 80082e6:	4606      	mov	r6, r0
 80082e8:	b150      	cbz	r0, 8008300 <TEXT_CreateUser+0x4c>
 80082ea:	f008 f8a9 	bl	8010440 <GUI_ALLOC_LockH>
 80082ee:	4621      	mov	r1, r4
 80082f0:	9005      	str	r0, [sp, #20]
 80082f2:	f00e f827 	bl	8016344 <strcpy>
 80082f6:	a805      	add	r0, sp, #20
 80082f8:	f008 f8b0 	bl	801045c <GUI_ALLOC_UnlockH>
 80082fc:	e000      	b.n	8008300 <TEXT_CreateUser+0x4c>
 80082fe:	4626      	mov	r6, r4
 8008300:	4628      	mov	r0, r5
 8008302:	f008 f89d 	bl	8010440 <GUI_ALLOC_LockH>
 8008306:	990d      	ldr	r1, [sp, #52]	; 0x34
 8008308:	9005      	str	r0, [sp, #20]
 800830a:	2200      	movs	r2, #0
 800830c:	f7ff fe4a 	bl	8007fa4 <WIDGET__Init>
 8008310:	9c05      	ldr	r4, [sp, #20]
 8008312:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008314:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 8008318:	4b06      	ldr	r3, [pc, #24]	; (8008334 <TEXT_CreateUser+0x80>)
 800831a:	6466      	str	r6, [r4, #68]	; 0x44
 800831c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800831e:	3434      	adds	r4, #52	; 0x34
 8008320:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008324:	a805      	add	r0, sp, #20
 8008326:	f008 f899 	bl	801045c <GUI_ALLOC_UnlockH>
 800832a:	4628      	mov	r0, r5
 800832c:	b006      	add	sp, #24
 800832e:	bd70      	pop	{r4, r5, r6, pc}
 8008330:	080081ef 	.word	0x080081ef
 8008334:	20000198 	.word	0x20000198

08008338 <SLIDER_CreateIndirect>:
 8008338:	b5f0      	push	{r4, r5, r6, r7, lr}
 800833a:	b087      	sub	sp, #28
 800833c:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8008340:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8008344:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8008348:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 800834c:	9100      	str	r1, [sp, #0]
 800834e:	2100      	movs	r1, #0
 8008350:	9101      	str	r1, [sp, #4]
 8008352:	8a41      	ldrh	r1, [r0, #18]
 8008354:	9102      	str	r1, [sp, #8]
 8008356:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800835a:	9103      	str	r1, [sp, #12]
 800835c:	6984      	ldr	r4, [r0, #24]
 800835e:	9404      	str	r4, [sp, #16]
 8008360:	eb0e 0002 	add.w	r0, lr, r2
 8008364:	18f9      	adds	r1, r7, r3
 8008366:	4632      	mov	r2, r6
 8008368:	462b      	mov	r3, r5
 800836a:	f000 f803 	bl	8008374 <SLIDER_CreateUser>
 800836e:	b007      	add	sp, #28
 8008370:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08008374 <SLIDER_CreateUser>:
 8008374:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008378:	b086      	sub	sp, #24
 800837a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800837c:	9400      	str	r4, [sp, #0]
 800837e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8008380:	f044 0401 	orr.w	r4, r4, #1
 8008384:	9401      	str	r4, [sp, #4]
 8008386:	4c1c      	ldr	r4, [pc, #112]	; (80083f8 <SLIDER_CreateUser+0x84>)
 8008388:	9402      	str	r4, [sp, #8]
 800838a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800838c:	3438      	adds	r4, #56	; 0x38
 800838e:	9403      	str	r4, [sp, #12]
 8008390:	f002 fa0a 	bl	800a7a8 <WM_CreateWindowAsChild>
 8008394:	4680      	mov	r8, r0
 8008396:	b358      	cbz	r0, 80083f0 <SLIDER_CreateUser+0x7c>
 8008398:	f008 f852 	bl	8010440 <GUI_ALLOC_LockH>
 800839c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800839e:	4d17      	ldr	r5, [pc, #92]	; (80083fc <SLIDER_CreateUser+0x88>)
 80083a0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80083a2:	9005      	str	r0, [sp, #20]
 80083a4:	f013 0f08 	tst.w	r3, #8
 80083a8:	bf14      	ite	ne
 80083aa:	2218      	movne	r2, #24
 80083ac:	2210      	moveq	r2, #16
 80083ae:	f7ff fdf9 	bl	8007fa4 <WIDGET__Init>
 80083b2:	af06      	add	r7, sp, #24
 80083b4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80083b6:	f857 6d04 	ldr.w	r6, [r7, #-4]!
 80083ba:	f106 0434 	add.w	r4, r6, #52	; 0x34
 80083be:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80083c0:	e895 0003 	ldmia.w	r5, {r0, r1}
 80083c4:	e884 0003 	stmia.w	r4, {r0, r1}
 80083c8:	4c0d      	ldr	r4, [pc, #52]	; (8008400 <SLIDER_CreateUser+0x8c>)
 80083ca:	6823      	ldr	r3, [r4, #0]
 80083cc:	64f3      	str	r3, [r6, #76]	; 0x4c
 80083ce:	2308      	movs	r3, #8
 80083d0:	f8a6 3060 	strh.w	r3, [r6, #96]	; 0x60
 80083d4:	2364      	movs	r3, #100	; 0x64
 80083d6:	6573      	str	r3, [r6, #84]	; 0x54
 80083d8:	2300      	movs	r3, #0
 80083da:	65b3      	str	r3, [r6, #88]	; 0x58
 80083dc:	f04f 33ff 	mov.w	r3, #4294967295
 80083e0:	6533      	str	r3, [r6, #80]	; 0x50
 80083e2:	4638      	mov	r0, r7
 80083e4:	f008 f83a 	bl	801045c <GUI_ALLOC_UnlockH>
 80083e8:	6823      	ldr	r3, [r4, #0]
 80083ea:	4640      	mov	r0, r8
 80083ec:	685b      	ldr	r3, [r3, #4]
 80083ee:	4798      	blx	r3
 80083f0:	4640      	mov	r0, r8
 80083f2:	b006      	add	sp, #24
 80083f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80083f8:	080084ed 	.word	0x080084ed
 80083fc:	200001ac 	.word	0x200001ac
 8008400:	200001a8 	.word	0x200001a8

08008404 <SLIDER_Dec>:
 8008404:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008406:	4605      	mov	r5, r0
 8008408:	b1c0      	cbz	r0, 800843c <SLIDER_Dec+0x38>
 800840a:	f008 f819 	bl	8010440 <GUI_ALLOC_LockH>
 800840e:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8008410:	6d81      	ldr	r1, [r0, #88]	; 0x58
 8008412:	ac02      	add	r4, sp, #8
 8008414:	428a      	cmp	r2, r1
 8008416:	f844 0d04 	str.w	r0, [r4, #-4]!
 800841a:	dd0c      	ble.n	8008436 <SLIDER_Dec+0x32>
 800841c:	3a01      	subs	r2, #1
 800841e:	65c2      	str	r2, [r0, #92]	; 0x5c
 8008420:	4628      	mov	r0, r5
 8008422:	f002 f980 	bl	800a726 <WM_InvalidateWindow>
 8008426:	4620      	mov	r0, r4
 8008428:	f008 f818 	bl	801045c <GUI_ALLOC_UnlockH>
 800842c:	4628      	mov	r0, r5
 800842e:	2105      	movs	r1, #5
 8008430:	f001 fa57 	bl	80098e2 <WM_NotifyParent>
 8008434:	e002      	b.n	800843c <SLIDER_Dec+0x38>
 8008436:	4620      	mov	r0, r4
 8008438:	f008 f810 	bl	801045c <GUI_ALLOC_UnlockH>
 800843c:	b003      	add	sp, #12
 800843e:	bd30      	pop	{r4, r5, pc}

08008440 <SLIDER_GetFlag>:
 8008440:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008442:	460d      	mov	r5, r1
 8008444:	4604      	mov	r4, r0
 8008446:	b150      	cbz	r0, 800845e <SLIDER_GetFlag+0x1e>
 8008448:	f007 fffa 	bl	8010440 <GUI_ALLOC_LockH>
 800844c:	ab02      	add	r3, sp, #8
 800844e:	f890 4034 	ldrb.w	r4, [r0, #52]	; 0x34
 8008452:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008456:	4618      	mov	r0, r3
 8008458:	402c      	ands	r4, r5
 800845a:	f007 ffff 	bl	801045c <GUI_ALLOC_UnlockH>
 800845e:	4620      	mov	r0, r4
 8008460:	b003      	add	sp, #12
 8008462:	bd30      	pop	{r4, r5, pc}

08008464 <SLIDER_Inc>:
 8008464:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008466:	4605      	mov	r5, r0
 8008468:	b1c0      	cbz	r0, 800849c <SLIDER_Inc+0x38>
 800846a:	f007 ffe9 	bl	8010440 <GUI_ALLOC_LockH>
 800846e:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8008470:	6d41      	ldr	r1, [r0, #84]	; 0x54
 8008472:	ac02      	add	r4, sp, #8
 8008474:	428a      	cmp	r2, r1
 8008476:	f844 0d04 	str.w	r0, [r4, #-4]!
 800847a:	da0c      	bge.n	8008496 <SLIDER_Inc+0x32>
 800847c:	3201      	adds	r2, #1
 800847e:	65c2      	str	r2, [r0, #92]	; 0x5c
 8008480:	4628      	mov	r0, r5
 8008482:	f002 f950 	bl	800a726 <WM_InvalidateWindow>
 8008486:	4620      	mov	r0, r4
 8008488:	f007 ffe8 	bl	801045c <GUI_ALLOC_UnlockH>
 800848c:	4628      	mov	r0, r5
 800848e:	2105      	movs	r1, #5
 8008490:	f001 fa27 	bl	80098e2 <WM_NotifyParent>
 8008494:	e002      	b.n	800849c <SLIDER_Inc+0x38>
 8008496:	4620      	mov	r0, r4
 8008498:	f007 ffe0 	bl	801045c <GUI_ALLOC_UnlockH>
 800849c:	b003      	add	sp, #12
 800849e:	bd30      	pop	{r4, r5, pc}

080084a0 <SLIDER_SetValue>:
 80084a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80084a2:	460e      	mov	r6, r1
 80084a4:	4605      	mov	r5, r0
 80084a6:	b1f8      	cbz	r0, 80084e8 <SLIDER_SetValue+0x48>
 80084a8:	f007 ffca 	bl	8010440 <GUI_ALLOC_LockH>
 80084ac:	6d82      	ldr	r2, [r0, #88]	; 0x58
 80084ae:	4296      	cmp	r6, r2
 80084b0:	bfac      	ite	ge
 80084b2:	4631      	movge	r1, r6
 80084b4:	4611      	movlt	r1, r2
 80084b6:	6d42      	ldr	r2, [r0, #84]	; 0x54
 80084b8:	4291      	cmp	r1, r2
 80084ba:	bfa8      	it	ge
 80084bc:	4611      	movge	r1, r2
 80084be:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 80084c0:	ac02      	add	r4, sp, #8
 80084c2:	428a      	cmp	r2, r1
 80084c4:	f844 0d04 	str.w	r0, [r4, #-4]!
 80084c8:	d00b      	beq.n	80084e2 <SLIDER_SetValue+0x42>
 80084ca:	65c1      	str	r1, [r0, #92]	; 0x5c
 80084cc:	4628      	mov	r0, r5
 80084ce:	f002 f92a 	bl	800a726 <WM_InvalidateWindow>
 80084d2:	4620      	mov	r0, r4
 80084d4:	f007 ffc2 	bl	801045c <GUI_ALLOC_UnlockH>
 80084d8:	4628      	mov	r0, r5
 80084da:	2105      	movs	r1, #5
 80084dc:	f001 fa01 	bl	80098e2 <WM_NotifyParent>
 80084e0:	e002      	b.n	80084e8 <SLIDER_SetValue+0x48>
 80084e2:	4620      	mov	r0, r4
 80084e4:	f007 ffba 	bl	801045c <GUI_ALLOC_UnlockH>
 80084e8:	b002      	add	sp, #8
 80084ea:	bd70      	pop	{r4, r5, r6, pc}

080084ec <SLIDER_Callback>:
 80084ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80084f0:	6844      	ldr	r4, [r0, #4]
 80084f2:	4605      	mov	r5, r0
 80084f4:	b085      	sub	sp, #20
 80084f6:	4620      	mov	r0, r4
 80084f8:	4629      	mov	r1, r5
 80084fa:	f7ff fd5b 	bl	8007fb4 <WIDGET_HandleActive>
 80084fe:	2800      	cmp	r0, #0
 8008500:	f000 809d 	beq.w	800863e <SLIDER_Callback+0x152>
 8008504:	682b      	ldr	r3, [r5, #0]
 8008506:	2b0f      	cmp	r3, #15
 8008508:	d006      	beq.n	8008518 <SLIDER_Callback+0x2c>
 800850a:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800850e:	d014      	beq.n	800853a <SLIDER_Callback+0x4e>
 8008510:	2b0e      	cmp	r3, #14
 8008512:	f040 8091 	bne.w	8008638 <SLIDER_Callback+0x14c>
 8008516:	e07f      	b.n	8008618 <SLIDER_Callback+0x12c>
 8008518:	4620      	mov	r0, r4
 800851a:	f007 ff91 	bl	8010440 <GUI_ALLOC_LockH>
 800851e:	ab04      	add	r3, sp, #16
 8008520:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008524:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8008526:	6815      	ldr	r5, [r2, #0]
 8008528:	4618      	mov	r0, r3
 800852a:	f007 ff97 	bl	801045c <GUI_ALLOC_UnlockH>
 800852e:	2d00      	cmp	r5, #0
 8008530:	f000 8085 	beq.w	800863e <SLIDER_Callback+0x152>
 8008534:	4620      	mov	r0, r4
 8008536:	47a8      	blx	r5
 8008538:	e081      	b.n	800863e <SLIDER_Callback+0x152>
 800853a:	68ef      	ldr	r7, [r5, #12]
 800853c:	2f00      	cmp	r7, #0
 800853e:	d07b      	beq.n	8008638 <SLIDER_Callback+0x14c>
 8008540:	4620      	mov	r0, r4
 8008542:	f007 ff7d 	bl	8010440 <GUI_ALLOC_LockH>
 8008546:	4603      	mov	r3, r0
 8008548:	a804      	add	r0, sp, #16
 800854a:	8e5a      	ldrh	r2, [r3, #50]	; 0x32
 800854c:	f840 3d04 	str.w	r3, [r0, #-4]!
 8008550:	6d9e      	ldr	r6, [r3, #88]	; 0x58
 8008552:	f8d3 9054 	ldr.w	r9, [r3, #84]	; 0x54
 8008556:	f8b3 b060 	ldrh.w	fp, [r3, #96]	; 0x60
 800855a:	f8b3 8028 	ldrh.w	r8, [r3, #40]	; 0x28
 800855e:	9201      	str	r2, [sp, #4]
 8008560:	f007 ff7c 	bl	801045c <GUI_ALLOC_UnlockH>
 8008564:	9a01      	ldr	r2, [sp, #4]
 8008566:	7a3b      	ldrb	r3, [r7, #8]
 8008568:	f402 7a80 	and.w	sl, r2, #256	; 0x100
 800856c:	2b00      	cmp	r3, #0
 800856e:	d043      	beq.n	80085f8 <SLIDER_Callback+0x10c>
 8008570:	cf82      	ldmia	r7, {r1, r7}
 8008572:	fa0f f38b 	sxth.w	r3, fp
 8008576:	f04f 0b02 	mov.w	fp, #2
 800857a:	f012 0f08 	tst.w	r2, #8
 800857e:	fb93 f3fb 	sdiv	r3, r3, fp
 8008582:	f103 0301 	add.w	r3, r3, #1
 8008586:	bf08      	it	eq
 8008588:	460f      	moveq	r7, r1
 800858a:	1aff      	subs	r7, r7, r3
 800858c:	4620      	mov	r0, r4
 800858e:	9301      	str	r3, [sp, #4]
 8008590:	f7ff fcb6 	bl	8007f00 <WIDGET__GetWindowSizeX>
 8008594:	2f00      	cmp	r7, #0
 8008596:	9b01      	ldr	r3, [sp, #4]
 8008598:	dd11      	ble.n	80085be <SLIDER_Callback+0xd2>
 800859a:	eba0 0043 	sub.w	r0, r0, r3, lsl #1
 800859e:	4287      	cmp	r7, r0
 80085a0:	da0c      	bge.n	80085bc <SLIDER_Callback+0xd0>
 80085a2:	2800      	cmp	r0, #0
 80085a4:	bf08      	it	eq
 80085a6:	2001      	moveq	r0, #1
 80085a8:	fb90 fbfb 	sdiv	fp, r0, fp
 80085ac:	ebc6 0909 	rsb	r9, r6, r9
 80085b0:	fb09 b707 	mla	r7, r9, r7, fp
 80085b4:	fbb7 f0f0 	udiv	r0, r7, r0
 80085b8:	4406      	add	r6, r0
 80085ba:	e000      	b.n	80085be <SLIDER_Callback+0xd2>
 80085bc:	464e      	mov	r6, r9
 80085be:	4620      	mov	r0, r4
 80085c0:	f001 fa27 	bl	8009a12 <WM_IsFocussable>
 80085c4:	b110      	cbz	r0, 80085cc <SLIDER_Callback+0xe0>
 80085c6:	4620      	mov	r0, r4
 80085c8:	f001 f882 	bl	80096d0 <WM_SetFocus>
 80085cc:	4620      	mov	r0, r4
 80085ce:	2101      	movs	r1, #1
 80085d0:	f001 f8ee 	bl	80097b0 <WM_SetCapture>
 80085d4:	4620      	mov	r0, r4
 80085d6:	4631      	mov	r1, r6
 80085d8:	f7ff ff62 	bl	80084a0 <SLIDER_SetValue>
 80085dc:	f1ba 0f00 	cmp.w	sl, #0
 80085e0:	d12a      	bne.n	8008638 <SLIDER_Callback+0x14c>
 80085e2:	4620      	mov	r0, r4
 80085e4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80085e8:	f7ff fcb1 	bl	8007f4e <WIDGET_OrState>
 80085ec:	f018 0f02 	tst.w	r8, #2
 80085f0:	d022      	beq.n	8008638 <SLIDER_Callback+0x14c>
 80085f2:	4620      	mov	r0, r4
 80085f4:	2101      	movs	r1, #1
 80085f6:	e00c      	b.n	8008612 <SLIDER_Callback+0x126>
 80085f8:	f1ba 0f00 	cmp.w	sl, #0
 80085fc:	d01c      	beq.n	8008638 <SLIDER_Callback+0x14c>
 80085fe:	4620      	mov	r0, r4
 8008600:	f44f 7180 	mov.w	r1, #256	; 0x100
 8008604:	f7ff fcb9 	bl	8007f7a <WIDGET_AndState>
 8008608:	f018 0f02 	tst.w	r8, #2
 800860c:	d014      	beq.n	8008638 <SLIDER_Callback+0x14c>
 800860e:	4620      	mov	r0, r4
 8008610:	2102      	movs	r1, #2
 8008612:	f001 f966 	bl	80098e2 <WM_NotifyParent>
 8008616:	e00f      	b.n	8008638 <SLIDER_Callback+0x14c>
 8008618:	68ea      	ldr	r2, [r5, #12]
 800861a:	6813      	ldr	r3, [r2, #0]
 800861c:	6852      	ldr	r2, [r2, #4]
 800861e:	2a00      	cmp	r2, #0
 8008620:	dd0a      	ble.n	8008638 <SLIDER_Callback+0x14c>
 8008622:	2b10      	cmp	r3, #16
 8008624:	d005      	beq.n	8008632 <SLIDER_Callback+0x146>
 8008626:	2b12      	cmp	r3, #18
 8008628:	d106      	bne.n	8008638 <SLIDER_Callback+0x14c>
 800862a:	4620      	mov	r0, r4
 800862c:	f7ff ff1a 	bl	8008464 <SLIDER_Inc>
 8008630:	e002      	b.n	8008638 <SLIDER_Callback+0x14c>
 8008632:	4620      	mov	r0, r4
 8008634:	f7ff fee6 	bl	8008404 <SLIDER_Dec>
 8008638:	4628      	mov	r0, r5
 800863a:	f002 fca5 	bl	800af88 <WM_DefaultProc>
 800863e:	b005      	add	sp, #20
 8008640:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08008644 <SLIDER_SetRange>:
 8008644:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008646:	460c      	mov	r4, r1
 8008648:	4616      	mov	r6, r2
 800864a:	4605      	mov	r5, r0
 800864c:	b1b0      	cbz	r0, 800867c <SLIDER_SetRange+0x38>
 800864e:	f007 fef7 	bl	8010440 <GUI_ALLOC_LockH>
 8008652:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8008654:	9001      	str	r0, [sp, #4]
 8008656:	42a6      	cmp	r6, r4
 8008658:	bfac      	ite	ge
 800865a:	4632      	movge	r2, r6
 800865c:	4622      	movlt	r2, r4
 800865e:	42a1      	cmp	r1, r4
 8008660:	bfb8      	it	lt
 8008662:	65c4      	strlt	r4, [r0, #92]	; 0x5c
 8008664:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8008666:	6584      	str	r4, [r0, #88]	; 0x58
 8008668:	4291      	cmp	r1, r2
 800866a:	6542      	str	r2, [r0, #84]	; 0x54
 800866c:	bfc8      	it	gt
 800866e:	65c2      	strgt	r2, [r0, #92]	; 0x5c
 8008670:	a801      	add	r0, sp, #4
 8008672:	f007 fef3 	bl	801045c <GUI_ALLOC_UnlockH>
 8008676:	4628      	mov	r0, r5
 8008678:	f002 f855 	bl	800a726 <WM_InvalidateWindow>
 800867c:	b002      	add	sp, #8
 800867e:	bd70      	pop	{r4, r5, r6, pc}

08008680 <SLIDER_GetValue>:
 8008680:	b513      	push	{r0, r1, r4, lr}
 8008682:	4604      	mov	r4, r0
 8008684:	b140      	cbz	r0, 8008698 <SLIDER_GetValue+0x18>
 8008686:	f007 fedb 	bl	8010440 <GUI_ALLOC_LockH>
 800868a:	ab02      	add	r3, sp, #8
 800868c:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 800868e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008692:	4618      	mov	r0, r3
 8008694:	f007 fee2 	bl	801045c <GUI_ALLOC_UnlockH>
 8008698:	4620      	mov	r0, r4
 800869a:	b002      	add	sp, #8
 800869c:	bd10      	pop	{r4, pc}

0800869e <_OnDelete>:
 800869e:	b513      	push	{r0, r1, r4, lr}
 80086a0:	4604      	mov	r4, r0
 80086a2:	f007 fecd 	bl	8010440 <GUI_ALLOC_LockH>
 80086a6:	9001      	str	r0, [sp, #4]
 80086a8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80086aa:	b120      	cbz	r0, 80086b6 <_OnDelete+0x18>
 80086ac:	f007 ff02 	bl	80104b4 <GUI_ALLOC_Free>
 80086b0:	9b01      	ldr	r3, [sp, #4]
 80086b2:	2200      	movs	r2, #0
 80086b4:	625a      	str	r2, [r3, #36]	; 0x24
 80086b6:	a801      	add	r0, sp, #4
 80086b8:	f007 fed0 	bl	801045c <GUI_ALLOC_UnlockH>
 80086bc:	4620      	mov	r0, r4
 80086be:	f007 fef9 	bl	80104b4 <GUI_ALLOC_Free>
 80086c2:	b002      	add	sp, #8
 80086c4:	bd10      	pop	{r4, pc}
	...

080086c8 <_OnPaint>:
 80086c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086cc:	b099      	sub	sp, #100	; 0x64
 80086ce:	4604      	mov	r4, r0
 80086d0:	f007 feb6 	bl	8010440 <GUI_ALLOC_LockH>
 80086d4:	9008      	str	r0, [sp, #32]
 80086d6:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80086d8:	2800      	cmp	r0, #0
 80086da:	f000 80f1 	beq.w	80088c0 <_OnPaint+0x1f8>
 80086de:	f007 feaf 	bl	8010440 <GUI_ALLOC_LockH>
 80086e2:	9b08      	ldr	r3, [sp, #32]
 80086e4:	9007      	str	r0, [sp, #28]
 80086e6:	6898      	ldr	r0, [r3, #8]
 80086e8:	f007 feaa 	bl	8010440 <GUI_ALLOC_LockH>
 80086ec:	9b08      	ldr	r3, [sp, #32]
 80086ee:	f8d0 8054 	ldr.w	r8, [r0, #84]	; 0x54
 80086f2:	6d87      	ldr	r7, [r0, #88]	; 0x58
 80086f4:	6dc6      	ldr	r6, [r0, #92]	; 0x5c
 80086f6:	6e05      	ldr	r5, [r0, #96]	; 0x60
 80086f8:	9009      	str	r0, [sp, #36]	; 0x24
 80086fa:	a90d      	add	r1, sp, #52	; 0x34
 80086fc:	6898      	ldr	r0, [r3, #8]
 80086fe:	f001 fa43 	bl	8009b88 <WM_GetInsideRectExScrollbar>
 8008702:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8008706:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 800870a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 800870e:	441f      	add	r7, r3
 8008710:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8008714:	f8ad 7036 	strh.w	r7, [sp, #54]	; 0x36
 8008718:	1b9e      	subs	r6, r3, r6
 800871a:	9b08      	ldr	r3, [sp, #32]
 800871c:	f8ad 6038 	strh.w	r6, [sp, #56]	; 0x38
 8008720:	69d8      	ldr	r0, [r3, #28]
 8008722:	4441      	add	r1, r8
 8008724:	b289      	uxth	r1, r1
 8008726:	1b52      	subs	r2, r2, r5
 8008728:	fa00 f081 	sxtah	r0, r0, r1
 800872c:	f8ad 1034 	strh.w	r1, [sp, #52]	; 0x34
 8008730:	b292      	uxth	r2, r2
 8008732:	6a19      	ldr	r1, [r3, #32]
 8008734:	f8ad 203a 	strh.w	r2, [sp, #58]	; 0x3a
 8008738:	b212      	sxth	r2, r2
 800873a:	1a51      	subs	r1, r2, r1
 800873c:	9002      	str	r0, [sp, #8]
 800873e:	6998      	ldr	r0, [r3, #24]
 8008740:	9103      	str	r1, [sp, #12]
 8008742:	f006 fbb5 	bl	800eeb0 <GUI_SetColor>
 8008746:	9b08      	ldr	r3, [sp, #32]
 8008748:	f893 002d 	ldrb.w	r0, [r3, #45]	; 0x2d
 800874c:	f006 fc2c 	bl	800efa8 <GUI_SetPenSize>
 8008750:	9b08      	ldr	r3, [sp, #32]
 8008752:	f893 002e 	ldrb.w	r0, [r3, #46]	; 0x2e
 8008756:	f006 fb75 	bl	800ee44 <GUI_SetLineStyle>
 800875a:	9b08      	ldr	r3, [sp, #32]
 800875c:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8008760:	0799      	lsls	r1, r3, #30
 8008762:	d56e      	bpl.n	8008842 <_OnPaint+0x17a>
 8008764:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008766:	9a02      	ldr	r2, [sp, #8]
 8008768:	f8d3 708c 	ldr.w	r7, [r3, #140]	; 0x8c
 800876c:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8008770:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8008774:	940a      	str	r4, [sp, #40]	; 0x28
 8008776:	4620      	mov	r0, r4
 8008778:	4498      	add	r8, r3
 800877a:	4417      	add	r7, r2
 800877c:	f007 fe60 	bl	8010440 <GUI_ALLOC_LockH>
 8008780:	900b      	str	r0, [sp, #44]	; 0x2c
 8008782:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8008784:	f007 fe5c 	bl	8010440 <GUI_ALLOC_LockH>
 8008788:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800878a:	900c      	str	r0, [sp, #48]	; 0x30
 800878c:	4606      	mov	r6, r0
 800878e:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8008790:	691c      	ldr	r4, [r3, #16]
 8008792:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8008794:	b1e8      	cbz	r0, 80087d2 <_OnPaint+0x10a>
 8008796:	2301      	movs	r3, #1
 8008798:	9310      	str	r3, [sp, #64]	; 0x40
 800879a:	ab0a      	add	r3, sp, #40	; 0x28
 800879c:	9317      	str	r3, [sp, #92]	; 0x5c
 800879e:	3604      	adds	r6, #4
 80087a0:	f936 3c04 	ldrsh.w	r3, [r6, #-4]
 80087a4:	443b      	add	r3, r7
 80087a6:	9313      	str	r3, [sp, #76]	; 0x4c
 80087a8:	f936 3c02 	ldrsh.w	r3, [r6, #-2]
 80087ac:	ebc3 0308 	rsb	r3, r3, r8
 80087b0:	9314      	str	r3, [sp, #80]	; 0x50
 80087b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80087b4:	a80f      	add	r0, sp, #60	; 0x3c
 80087b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80087b8:	3c01      	subs	r4, #1
 80087ba:	4798      	blx	r3
 80087bc:	2c00      	cmp	r4, #0
 80087be:	f106 0604 	add.w	r6, r6, #4
 80087c2:	dced      	bgt.n	80087a0 <_OnPaint+0xd8>
 80087c4:	a80c      	add	r0, sp, #48	; 0x30
 80087c6:	f007 fe49 	bl	801045c <GUI_ALLOC_UnlockH>
 80087ca:	a80b      	add	r0, sp, #44	; 0x2c
 80087cc:	f007 fe46 	bl	801045c <GUI_ALLOC_UnlockH>
 80087d0:	e037      	b.n	8008842 <_OnPaint+0x17a>
 80087d2:	4b3e      	ldr	r3, [pc, #248]	; (80088cc <_OnPaint+0x204>)
 80087d4:	681b      	ldr	r3, [r3, #0]
 80087d6:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80087d8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80087da:	9204      	str	r2, [sp, #16]
 80087dc:	9305      	str	r3, [sp, #20]
 80087de:	f002 f9df 	bl	800aba0 <WM__InitIVRSearch>
 80087e2:	2800      	cmp	r0, #0
 80087e4:	d0ee      	beq.n	80087c4 <_OnPaint+0xfc>
 80087e6:	3d01      	subs	r5, #1
 80087e8:	086d      	lsrs	r5, r5, #1
 80087ea:	3604      	adds	r6, #4
 80087ec:	f8dd a010 	ldr.w	sl, [sp, #16]
 80087f0:	f936 3c04 	ldrsh.w	r3, [r6, #-4]
 80087f4:	f8dd b014 	ldr.w	fp, [sp, #20]
 80087f8:	44ba      	add	sl, r7
 80087fa:	449a      	add	sl, r3
 80087fc:	f936 3c02 	ldrsh.w	r3, [r6, #-2]
 8008800:	44c3      	add	fp, r8
 8008802:	ebc3 0b0b 	rsb	fp, r3, fp
 8008806:	ebc5 0c0a 	rsb	ip, r5, sl
 800880a:	ebc5 090b 	rsb	r9, r5, fp
 800880e:	44aa      	add	sl, r5
 8008810:	44ab      	add	fp, r5
 8008812:	4660      	mov	r0, ip
 8008814:	4649      	mov	r1, r9
 8008816:	4652      	mov	r2, sl
 8008818:	465b      	mov	r3, fp
 800881a:	f8cd c004 	str.w	ip, [sp, #4]
 800881e:	f006 ff6b 	bl	800f6f8 <GL_DrawLine>
 8008822:	f8dd c004 	ldr.w	ip, [sp, #4]
 8008826:	4659      	mov	r1, fp
 8008828:	4660      	mov	r0, ip
 800882a:	4652      	mov	r2, sl
 800882c:	464b      	mov	r3, r9
 800882e:	3c01      	subs	r4, #1
 8008830:	f006 ff62 	bl	800f6f8 <GL_DrawLine>
 8008834:	2c00      	cmp	r4, #0
 8008836:	dcd8      	bgt.n	80087ea <_OnPaint+0x122>
 8008838:	f002 f8f0 	bl	800aa1c <WM__GetNextIVR>
 800883c:	2800      	cmp	r0, #0
 800883e:	d1d4      	bne.n	80087ea <_OnPaint+0x122>
 8008840:	e7c0      	b.n	80087c4 <_OnPaint+0xfc>
 8008842:	9b08      	ldr	r3, [sp, #32]
 8008844:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
 8008848:	07d2      	lsls	r2, r2, #31
 800884a:	d533      	bpl.n	80088b4 <_OnPaint+0x1ec>
 800884c:	691e      	ldr	r6, [r3, #16]
 800884e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008850:	9d07      	ldr	r5, [sp, #28]
 8008852:	f8d3 908c 	ldr.w	r9, [r3, #140]	; 0x8c
 8008856:	f8d3 8080 	ldr.w	r8, [r3, #128]	; 0x80
 800885a:	4b1c      	ldr	r3, [pc, #112]	; (80088cc <_OnPaint+0x204>)
 800885c:	2000      	movs	r0, #0
 800885e:	681b      	ldr	r3, [r3, #0]
 8008860:	900f      	str	r0, [sp, #60]	; 0x3c
 8008862:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 8008864:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 8008866:	f002 f99b 	bl	800aba0 <WM__InitIVRSearch>
 800886a:	b318      	cbz	r0, 80088b4 <_OnPaint+0x1ec>
 800886c:	9b02      	ldr	r3, [sp, #8]
 800886e:	9a03      	ldr	r2, [sp, #12]
 8008870:	4499      	add	r9, r3
 8008872:	4490      	add	r8, r2
 8008874:	444f      	add	r7, r9
 8008876:	44a0      	add	r8, r4
 8008878:	f9b5 0000 	ldrsh.w	r0, [r5]
 800887c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8008880:	4438      	add	r0, r7
 8008882:	ebc1 0108 	rsb	r1, r1, r8
 8008886:	f008 f85d 	bl	8010944 <GL_MoveTo>
 800888a:	462c      	mov	r4, r5
 800888c:	3e01      	subs	r6, #1
 800888e:	2e00      	cmp	r6, #0
 8008890:	4625      	mov	r5, r4
 8008892:	dd0b      	ble.n	80088ac <_OnPaint+0x1e4>
 8008894:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8008898:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800889c:	4438      	add	r0, r7
 800889e:	ebc1 0108 	rsb	r1, r1, r8
 80088a2:	aa0f      	add	r2, sp, #60	; 0x3c
 80088a4:	f006 ff52 	bl	800f74c <GL_DrawLineToEx>
 80088a8:	3404      	adds	r4, #4
 80088aa:	e7ef      	b.n	800888c <_OnPaint+0x1c4>
 80088ac:	f002 f8b6 	bl	800aa1c <WM__GetNextIVR>
 80088b0:	2800      	cmp	r0, #0
 80088b2:	d1e1      	bne.n	8008878 <_OnPaint+0x1b0>
 80088b4:	a809      	add	r0, sp, #36	; 0x24
 80088b6:	f007 fdd1 	bl	801045c <GUI_ALLOC_UnlockH>
 80088ba:	a807      	add	r0, sp, #28
 80088bc:	f007 fdce 	bl	801045c <GUI_ALLOC_UnlockH>
 80088c0:	a808      	add	r0, sp, #32
 80088c2:	f007 fdcb 	bl	801045c <GUI_ALLOC_UnlockH>
 80088c6:	b019      	add	sp, #100	; 0x64
 80088c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80088cc:	20000254 	.word	0x20000254

080088d0 <GRAPH_DATA_XY_Create>:
 80088d0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80088d4:	4680      	mov	r8, r0
 80088d6:	2034      	movs	r0, #52	; 0x34
 80088d8:	460e      	mov	r6, r1
 80088da:	4617      	mov	r7, r2
 80088dc:	461d      	mov	r5, r3
 80088de:	f008 f81c 	bl	801091a <GUI_ALLOC_AllocZero>
 80088e2:	4604      	mov	r4, r0
 80088e4:	b340      	cbz	r0, 8008938 <GRAPH_DATA_XY_Create+0x68>
 80088e6:	00b0      	lsls	r0, r6, #2
 80088e8:	f008 f817 	bl	801091a <GUI_ALLOC_AllocZero>
 80088ec:	4681      	mov	r9, r0
 80088ee:	b158      	cbz	r0, 8008908 <GRAPH_DATA_XY_Create+0x38>
 80088f0:	b157      	cbz	r7, 8008908 <GRAPH_DATA_XY_Create+0x38>
 80088f2:	b14d      	cbz	r5, 8008908 <GRAPH_DATA_XY_Create+0x38>
 80088f4:	f007 fda4 	bl	8010440 <GUI_ALLOC_LockH>
 80088f8:	4639      	mov	r1, r7
 80088fa:	00aa      	lsls	r2, r5, #2
 80088fc:	9001      	str	r0, [sp, #4]
 80088fe:	f00d fc3c 	bl	801617a <memcpy>
 8008902:	a801      	add	r0, sp, #4
 8008904:	f007 fdaa 	bl	801045c <GUI_ALLOC_UnlockH>
 8008908:	4620      	mov	r0, r4
 800890a:	f007 fd99 	bl	8010440 <GUI_ALLOC_LockH>
 800890e:	2301      	movs	r3, #1
 8008910:	9001      	str	r0, [sp, #4]
 8008912:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8008916:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800891a:	4b09      	ldr	r3, [pc, #36]	; (8008940 <GRAPH_DATA_XY_Create+0x70>)
 800891c:	6003      	str	r3, [r0, #0]
 800891e:	2105      	movs	r1, #5
 8008920:	4b08      	ldr	r3, [pc, #32]	; (8008944 <GRAPH_DATA_XY_Create+0x74>)
 8008922:	f8c0 9024 	str.w	r9, [r0, #36]	; 0x24
 8008926:	6281      	str	r1, [r0, #40]	; 0x28
 8008928:	f8c0 8018 	str.w	r8, [r0, #24]
 800892c:	6146      	str	r6, [r0, #20]
 800892e:	6105      	str	r5, [r0, #16]
 8008930:	6043      	str	r3, [r0, #4]
 8008932:	a801      	add	r0, sp, #4
 8008934:	f007 fd92 	bl	801045c <GUI_ALLOC_UnlockH>
 8008938:	4620      	mov	r0, r4
 800893a:	b003      	add	sp, #12
 800893c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008940:	080086c9 	.word	0x080086c9
 8008944:	0800869f 	.word	0x0800869f

08008948 <GRAPH_DATA_XY_Clear>:
 8008948:	b513      	push	{r0, r1, r4, lr}
 800894a:	b160      	cbz	r0, 8008966 <GRAPH_DATA_XY_Clear+0x1e>
 800894c:	f007 fd78 	bl	8010440 <GUI_ALLOC_LockH>
 8008950:	ac02      	add	r4, sp, #8
 8008952:	2300      	movs	r3, #0
 8008954:	f844 0d04 	str.w	r0, [r4, #-4]!
 8008958:	6103      	str	r3, [r0, #16]
 800895a:	6880      	ldr	r0, [r0, #8]
 800895c:	f001 fee3 	bl	800a726 <WM_InvalidateWindow>
 8008960:	4620      	mov	r0, r4
 8008962:	f007 fd7b 	bl	801045c <GUI_ALLOC_UnlockH>
 8008966:	b002      	add	sp, #8
 8008968:	bd10      	pop	{r4, pc}

0800896a <GRAPH_CreateIndirect>:
 800896a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800896c:	b087      	sub	sp, #28
 800896e:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8008972:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8008976:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 800897a:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 800897e:	9100      	str	r1, [sp, #0]
 8008980:	2100      	movs	r1, #0
 8008982:	9101      	str	r1, [sp, #4]
 8008984:	8a41      	ldrh	r1, [r0, #18]
 8008986:	9102      	str	r1, [sp, #8]
 8008988:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800898c:	9103      	str	r1, [sp, #12]
 800898e:	6984      	ldr	r4, [r0, #24]
 8008990:	9404      	str	r4, [sp, #16]
 8008992:	eb0e 0002 	add.w	r0, lr, r2
 8008996:	18f9      	adds	r1, r7, r3
 8008998:	4632      	mov	r2, r6
 800899a:	462b      	mov	r3, r5
 800899c:	f000 faf8 	bl	8008f90 <GRAPH_CreateUser>
 80089a0:	b007      	add	sp, #28
 80089a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080089a4 <_ManageScrollbars>:
 80089a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80089a6:	b08b      	sub	sp, #44	; 0x2c
 80089a8:	a902      	add	r1, sp, #8
 80089aa:	4604      	mov	r4, r0
 80089ac:	f001 f8ec 	bl	8009b88 <WM_GetInsideRectExScrollbar>
 80089b0:	4620      	mov	r0, r4
 80089b2:	f007 fd45 	bl	8010440 <GUI_ALLOC_LockH>
 80089b6:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80089ba:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80089be:	9001      	str	r0, [sp, #4]
 80089c0:	1ab6      	subs	r6, r6, r2
 80089c2:	6d82      	ldr	r2, [r0, #88]	; 0x58
 80089c4:	6d45      	ldr	r5, [r0, #84]	; 0x54
 80089c6:	6dc7      	ldr	r7, [r0, #92]	; 0x5c
 80089c8:	1ab6      	subs	r6, r6, r2
 80089ca:	6e02      	ldr	r2, [r0, #96]	; 0x60
 80089cc:	1ab6      	subs	r6, r6, r2
 80089ce:	f8b0 2078 	ldrh.w	r2, [r0, #120]	; 0x78
 80089d2:	0751      	lsls	r1, r2, #29
 80089d4:	d407      	bmi.n	80089e6 <_ManageScrollbars+0x42>
 80089d6:	6f41      	ldr	r1, [r0, #116]	; 0x74
 80089d8:	42b1      	cmp	r1, r6
 80089da:	4620      	mov	r0, r4
 80089dc:	bfd4      	ite	le
 80089de:	2100      	movle	r1, #0
 80089e0:	2101      	movgt	r1, #1
 80089e2:	f000 fdf7 	bl	80095d4 <WM_SetScrollbarV>
 80089e6:	9b01      	ldr	r3, [sp, #4]
 80089e8:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 80089ec:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80089ee:	67da      	str	r2, [r3, #124]	; 0x7c
 80089f0:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80089f4:	f8c3 6084 	str.w	r6, [r3, #132]	; 0x84
 80089f8:	1a8a      	subs	r2, r1, r2
 80089fa:	1b55      	subs	r5, r2, r5
 80089fc:	f8b3 2078 	ldrh.w	r2, [r3, #120]	; 0x78
 8008a00:	0792      	lsls	r2, r2, #30
 8008a02:	ebc7 0505 	rsb	r5, r7, r5
 8008a06:	d407      	bmi.n	8008a18 <_ManageScrollbars+0x74>
 8008a08:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8008a0a:	42a9      	cmp	r1, r5
 8008a0c:	4620      	mov	r0, r4
 8008a0e:	bfd4      	ite	le
 8008a10:	2100      	movle	r1, #0
 8008a12:	2101      	movgt	r1, #1
 8008a14:	f000 fddc 	bl	80095d0 <WM_SetScrollbarH>
 8008a18:	9801      	ldr	r0, [sp, #4]
 8008a1a:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8008a1c:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 8008a20:	f8c0 5090 	str.w	r5, [r0, #144]	; 0x90
 8008a24:	307c      	adds	r0, #124	; 0x7c
 8008a26:	f001 f995 	bl	8009d54 <WM_CheckScrollBounds>
 8008a2a:	9801      	ldr	r0, [sp, #4]
 8008a2c:	3088      	adds	r0, #136	; 0x88
 8008a2e:	f001 f991 	bl	8009d54 <WM_CheckScrollBounds>
 8008a32:	9b01      	ldr	r3, [sp, #4]
 8008a34:	f103 027c 	add.w	r2, r3, #124	; 0x7c
 8008a38:	ca07      	ldmia	r2, {r0, r1, r2}
 8008a3a:	3388      	adds	r3, #136	; 0x88
 8008a3c:	ae07      	add	r6, sp, #28
 8008a3e:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8008a42:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8008a46:	ad04      	add	r5, sp, #16
 8008a48:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8008a4c:	a801      	add	r0, sp, #4
 8008a4e:	f007 fd05 	bl	801045c <GUI_ALLOC_UnlockH>
 8008a52:	4620      	mov	r0, r4
 8008a54:	4631      	mov	r1, r6
 8008a56:	462a      	mov	r2, r5
 8008a58:	f7ff fb4a 	bl	80080f0 <WIDGET__SetScrollState>
 8008a5c:	b00b      	add	sp, #44	; 0x2c
 8008a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008a60 <_OnScrollValueChanged>:
 8008a60:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008a62:	460c      	mov	r4, r1
 8008a64:	4606      	mov	r6, r0
 8008a66:	f007 fceb 	bl	8010440 <GUI_ALLOC_LockH>
 8008a6a:	9001      	str	r0, [sp, #4]
 8008a6c:	4620      	mov	r0, r4
 8008a6e:	f008 fb71 	bl	8011154 <SCROLLBAR_GetValue>
 8008a72:	4605      	mov	r5, r0
 8008a74:	4620      	mov	r0, r4
 8008a76:	f001 f8e7 	bl	8009c48 <WM_GetId>
 8008a7a:	9b01      	ldr	r3, [sp, #4]
 8008a7c:	28fe      	cmp	r0, #254	; 0xfe
 8008a7e:	bf0c      	ite	eq
 8008a80:	f8c3 5080 	streq.w	r5, [r3, #128]	; 0x80
 8008a84:	f8c3 508c 	strne.w	r5, [r3, #140]	; 0x8c
 8008a88:	4630      	mov	r0, r6
 8008a8a:	f001 fe4c 	bl	800a726 <WM_InvalidateWindow>
 8008a8e:	a801      	add	r0, sp, #4
 8008a90:	f007 fce4 	bl	801045c <GUI_ALLOC_UnlockH>
 8008a94:	b002      	add	sp, #8
 8008a96:	bd70      	pop	{r4, r5, r6, pc}

08008a98 <GRAPH_Callback>:
 8008a98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008a9c:	6844      	ldr	r4, [r0, #4]
 8008a9e:	6806      	ldr	r6, [r0, #0]
 8008aa0:	4605      	mov	r5, r0
 8008aa2:	b097      	sub	sp, #92	; 0x5c
 8008aa4:	4620      	mov	r0, r4
 8008aa6:	4629      	mov	r1, r5
 8008aa8:	f7ff fa84 	bl	8007fb4 <WIDGET_HandleActive>
 8008aac:	f5b6 7f40 	cmp.w	r6, #768	; 0x300
 8008ab0:	4607      	mov	r7, r0
 8008ab2:	d102      	bne.n	8008aba <GRAPH_Callback+0x22>
 8008ab4:	4620      	mov	r0, r4
 8008ab6:	f7ff ff75 	bl	80089a4 <_ManageScrollbars>
 8008aba:	2f00      	cmp	r7, #0
 8008abc:	f000 8264 	beq.w	8008f88 <GRAPH_Callback+0x4f0>
 8008ac0:	682b      	ldr	r3, [r5, #0]
 8008ac2:	2b0b      	cmp	r3, #11
 8008ac4:	f000 8200 	beq.w	8008ec8 <GRAPH_Callback+0x430>
 8008ac8:	dc06      	bgt.n	8008ad8 <GRAPH_Callback+0x40>
 8008aca:	2b05      	cmp	r3, #5
 8008acc:	f040 8259 	bne.w	8008f82 <GRAPH_Callback+0x4ea>
 8008ad0:	4620      	mov	r0, r4
 8008ad2:	f7ff ff67 	bl	80089a4 <_ManageScrollbars>
 8008ad6:	e254      	b.n	8008f82 <GRAPH_Callback+0x4ea>
 8008ad8:	2b0f      	cmp	r3, #15
 8008ada:	d003      	beq.n	8008ae4 <GRAPH_Callback+0x4c>
 8008adc:	2b26      	cmp	r3, #38	; 0x26
 8008ade:	f000 823d 	beq.w	8008f5c <GRAPH_Callback+0x4c4>
 8008ae2:	e24e      	b.n	8008f82 <GRAPH_Callback+0x4ea>
 8008ae4:	68ed      	ldr	r5, [r5, #12]
 8008ae6:	9502      	str	r5, [sp, #8]
 8008ae8:	4620      	mov	r0, r4
 8008aea:	f007 fca9 	bl	8010440 <GUI_ALLOC_LockH>
 8008aee:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008af0:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8008af2:	681b      	ldr	r3, [r3, #0]
 8008af4:	f8d0 9054 	ldr.w	r9, [r0, #84]	; 0x54
 8008af8:	f8d0 b058 	ldr.w	fp, [r0, #88]	; 0x58
 8008afc:	f8d0 a060 	ldr.w	sl, [r0, #96]	; 0x60
 8008b00:	900d      	str	r0, [sp, #52]	; 0x34
 8008b02:	ad0e      	add	r5, sp, #56	; 0x38
 8008b04:	4628      	mov	r0, r5
 8008b06:	9303      	str	r3, [sp, #12]
 8008b08:	9101      	str	r1, [sp, #4]
 8008b0a:	f001 f915 	bl	8009d38 <WM_GetClientRect>
 8008b0e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8008b10:	4629      	mov	r1, r5
 8008b12:	f7ff fb1e 	bl	8008152 <WIDGET__EFFECT_DrawDownRect>
 8008b16:	e895 0003 	ldmia.w	r5, {r0, r1}
 8008b1a:	ab12      	add	r3, sp, #72	; 0x48
 8008b1c:	e883 0003 	stmia.w	r3, {r0, r1}
 8008b20:	9803      	ldr	r0, [sp, #12]
 8008b22:	f8bd 104a 	ldrh.w	r1, [sp, #74]	; 0x4a
 8008b26:	b282      	uxth	r2, r0
 8008b28:	4459      	add	r1, fp
 8008b2a:	f8bd 004e 	ldrh.w	r0, [sp, #78]	; 0x4e
 8008b2e:	4411      	add	r1, r2
 8008b30:	f8ad 104a 	strh.w	r1, [sp, #74]	; 0x4a
 8008b34:	eb02 010a 	add.w	r1, r2, sl
 8008b38:	1a41      	subs	r1, r0, r1
 8008b3a:	f8ad 104e 	strh.w	r1, [sp, #78]	; 0x4e
 8008b3e:	f8bd 1048 	ldrh.w	r1, [sp, #72]	; 0x48
 8008b42:	4411      	add	r1, r2
 8008b44:	4449      	add	r1, r9
 8008b46:	f8ad 1048 	strh.w	r1, [sp, #72]	; 0x48
 8008b4a:	9901      	ldr	r1, [sp, #4]
 8008b4c:	440a      	add	r2, r1
 8008b4e:	f8bd 104c 	ldrh.w	r1, [sp, #76]	; 0x4c
 8008b52:	1a8a      	subs	r2, r1, r2
 8008b54:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
 8008b58:	e893 0003 	ldmia.w	r3, {r0, r1}
 8008b5c:	aa10      	add	r2, sp, #64	; 0x40
 8008b5e:	e882 0003 	stmia.w	r2, {r0, r1}
 8008b62:	4610      	mov	r0, r2
 8008b64:	f000 fcce 	bl	8009504 <WM_SetUserClipRect>
 8008b68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008b6a:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8008b6c:	f006 f99e 	bl	800eeac <GUI_SetBkColor>
 8008b70:	f007 f84e 	bl	800fc10 <GUI_Clear>
 8008b74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008b76:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8008b7a:	b113      	cbz	r3, 8008b82 <GRAPH_Callback+0xea>
 8008b7c:	4620      	mov	r0, r4
 8008b7e:	2100      	movs	r1, #0
 8008b80:	4798      	blx	r3
 8008b82:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8008b84:	f895 306c 	ldrb.w	r3, [r5, #108]	; 0x6c
 8008b88:	2b00      	cmp	r3, #0
 8008b8a:	f000 808d 	beq.w	8008ca8 <GRAPH_Callback+0x210>
 8008b8e:	4620      	mov	r0, r4
 8008b90:	a914      	add	r1, sp, #80	; 0x50
 8008b92:	f000 fff9 	bl	8009b88 <WM_GetInsideRectExScrollbar>
 8008b96:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8008b98:	f8bd 0056 	ldrh.w	r0, [sp, #86]	; 0x56
 8008b9c:	681b      	ldr	r3, [r3, #0]
 8008b9e:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8008ba2:	f8bd 1052 	ldrh.w	r1, [sp, #82]	; 0x52
 8008ba6:	9304      	str	r3, [sp, #16]
 8008ba8:	9007      	str	r0, [sp, #28]
 8008baa:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8008bae:	6c28      	ldr	r0, [r5, #64]	; 0x40
 8008bb0:	9205      	str	r2, [sp, #20]
 8008bb2:	9306      	str	r3, [sp, #24]
 8008bb4:	9108      	str	r1, [sp, #32]
 8008bb6:	6c6e      	ldr	r6, [r5, #68]	; 0x44
 8008bb8:	6caf      	ldr	r7, [r5, #72]	; 0x48
 8008bba:	f006 f979 	bl	800eeb0 <GUI_SetColor>
 8008bbe:	f006 fb01 	bl	800f1c4 <GUI_GetLineStyle>
 8008bc2:	9009      	str	r0, [sp, #36]	; 0x24
 8008bc4:	b916      	cbnz	r6, 8008bcc <GRAPH_Callback+0x134>
 8008bc6:	2f00      	cmp	r7, #0
 8008bc8:	d14b      	bne.n	8008c62 <GRAPH_Callback+0x1ca>
 8008bca:	e046      	b.n	8008c5a <GRAPH_Callback+0x1c2>
 8008bcc:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8008bce:	eb06 0c03 	add.w	ip, r6, r3
 8008bd2:	f8b5 3078 	ldrh.w	r3, [r5, #120]	; 0x78
 8008bd6:	07db      	lsls	r3, r3, #31
 8008bd8:	bf54      	ite	pl
 8008bda:	f8d5 308c 	ldrpl.w	r3, [r5, #140]	; 0x8c
 8008bde:	2300      	movmi	r3, #0
 8008be0:	eb0c 0803 	add.w	r8, ip, r3
 8008be4:	45b0      	cmp	r8, r6
 8008be6:	db02      	blt.n	8008bee <GRAPH_Callback+0x156>
 8008be8:	ebc6 0808 	rsb	r8, r6, r8
 8008bec:	e7fa      	b.n	8008be4 <GRAPH_Callback+0x14c>
 8008bee:	f895 007a 	ldrb.w	r0, [r5, #122]	; 0x7a
 8008bf2:	f006 f927 	bl	800ee44 <GUI_SetLineStyle>
 8008bf6:	9805      	ldr	r0, [sp, #20]
 8008bf8:	9a01      	ldr	r2, [sp, #4]
 8008bfa:	b203      	sxth	r3, r0
 8008bfc:	9806      	ldr	r0, [sp, #24]
 8008bfe:	444a      	add	r2, r9
 8008c00:	b201      	sxth	r1, r0
 8008c02:	f1c2 0201 	rsb	r2, r2, #1
 8008c06:	1a5b      	subs	r3, r3, r1
 8008c08:	4413      	add	r3, r2
 8008c0a:	4598      	cmp	r8, r3
 8008c0c:	dadb      	bge.n	8008bc6 <GRAPH_Callback+0x12e>
 8008c0e:	9804      	ldr	r0, [sp, #16]
 8008c10:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 8008c14:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8008c18:	f895 207a 	ldrb.w	r2, [r5, #122]	; 0x7a
 8008c1c:	4448      	add	r0, r9
 8008c1e:	4440      	add	r0, r8
 8008c20:	4459      	add	r1, fp
 8008c22:	ebca 0303 	rsb	r3, sl, r3
 8008c26:	b11a      	cbz	r2, 8008c30 <GRAPH_Callback+0x198>
 8008c28:	4602      	mov	r2, r0
 8008c2a:	f006 fd71 	bl	800f710 <GUI_DrawLine>
 8008c2e:	e002      	b.n	8008c36 <GRAPH_Callback+0x19e>
 8008c30:	461a      	mov	r2, r3
 8008c32:	f006 fb13 	bl	800f25c <GUI_DrawVLine>
 8008c36:	44b0      	add	r8, r6
 8008c38:	e7dd      	b.n	8008bf6 <GRAPH_Callback+0x15e>
 8008c3a:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 8008c3e:	f006 f901 	bl	800ee44 <GUI_SetLineStyle>
 8008c42:	9907      	ldr	r1, [sp, #28]
 8008c44:	9808      	ldr	r0, [sp, #32]
 8008c46:	b20b      	sxth	r3, r1
 8008c48:	eb0b 020a 	add.w	r2, fp, sl
 8008c4c:	b201      	sxth	r1, r0
 8008c4e:	f1c2 0201 	rsb	r2, r2, #1
 8008c52:	1a5b      	subs	r3, r3, r1
 8008c54:	4413      	add	r3, r2
 8008c56:	429e      	cmp	r6, r3
 8008c58:	db0c      	blt.n	8008c74 <GRAPH_Callback+0x1dc>
 8008c5a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8008c5c:	f006 f8f2 	bl	800ee44 <GUI_SetLineStyle>
 8008c60:	e022      	b.n	8008ca8 <GRAPH_Callback+0x210>
 8008c62:	6d2e      	ldr	r6, [r5, #80]	; 0x50
 8008c64:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
 8008c68:	443e      	add	r6, r7
 8008c6a:	1af6      	subs	r6, r6, r3
 8008c6c:	42be      	cmp	r6, r7
 8008c6e:	dbe4      	blt.n	8008c3a <GRAPH_Callback+0x1a2>
 8008c70:	1bf6      	subs	r6, r6, r7
 8008c72:	e7fb      	b.n	8008c6c <GRAPH_Callback+0x1d4>
 8008c74:	9801      	ldr	r0, [sp, #4]
 8008c76:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8008c7a:	f9bd 1056 	ldrsh.w	r1, [sp, #86]	; 0x56
 8008c7e:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 8008c82:	1a12      	subs	r2, r2, r0
 8008c84:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 8008c88:	ebca 0101 	rsb	r1, sl, r1
 8008c8c:	1b89      	subs	r1, r1, r6
 8008c8e:	444b      	add	r3, r9
 8008c90:	b120      	cbz	r0, 8008c9c <GRAPH_Callback+0x204>
 8008c92:	4618      	mov	r0, r3
 8008c94:	460b      	mov	r3, r1
 8008c96:	f006 fd3b 	bl	800f710 <GUI_DrawLine>
 8008c9a:	e003      	b.n	8008ca4 <GRAPH_Callback+0x20c>
 8008c9c:	4608      	mov	r0, r1
 8008c9e:	4619      	mov	r1, r3
 8008ca0:	f006 fd6a 	bl	800f778 <GUI_DrawHLine>
 8008ca4:	443e      	add	r6, r7
 8008ca6:	e7cc      	b.n	8008c42 <GRAPH_Callback+0x1aa>
 8008ca8:	9a03      	ldr	r2, [sp, #12]
 8008caa:	a812      	add	r0, sp, #72	; 0x48
 8008cac:	a90e      	add	r1, sp, #56	; 0x38
 8008cae:	f005 f8ba 	bl	800de26 <GUI__ReduceRect>
 8008cb2:	a812      	add	r0, sp, #72	; 0x48
 8008cb4:	f000 fc26 	bl	8009504 <WM_SetUserClipRect>
 8008cb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008cba:	f893 203b 	ldrb.w	r2, [r3, #59]	; 0x3b
 8008cbe:	2aff      	cmp	r2, #255	; 0xff
 8008cc0:	f000 80a3 	beq.w	8008e0a <GRAPH_Callback+0x372>
 8008cc4:	f1b9 0f00 	cmp.w	r9, #0
 8008cc8:	d108      	bne.n	8008cdc <GRAPH_Callback+0x244>
 8008cca:	f1bb 0f00 	cmp.w	fp, #0
 8008cce:	d105      	bne.n	8008cdc <GRAPH_Callback+0x244>
 8008cd0:	9901      	ldr	r1, [sp, #4]
 8008cd2:	b919      	cbnz	r1, 8008cdc <GRAPH_Callback+0x244>
 8008cd4:	f1ba 0f00 	cmp.w	sl, #0
 8008cd8:	f000 8097 	beq.w	8008e0a <GRAPH_Callback+0x372>
 8008cdc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008cde:	a914      	add	r1, sp, #80	; 0x50
 8008ce0:	4620      	mov	r0, r4
 8008ce2:	6815      	ldr	r5, [r2, #0]
 8008ce4:	9300      	str	r3, [sp, #0]
 8008ce6:	f000 ff4f 	bl	8009b88 <WM_GetInsideRectExScrollbar>
 8008cea:	f000 ff3d 	bl	8009b68 <WM_GetOrgX>
 8008cee:	9004      	str	r0, [sp, #16]
 8008cf0:	f000 ff42 	bl	8009b78 <WM_GetOrgY>
 8008cf4:	f9bd 2052 	ldrsh.w	r2, [sp, #82]	; 0x52
 8008cf8:	9b00      	ldr	r3, [sp, #0]
 8008cfa:	f9bd 6054 	ldrsh.w	r6, [sp, #84]	; 0x54
 8008cfe:	9005      	str	r0, [sp, #20]
 8008d00:	445a      	add	r2, fp
 8008d02:	9203      	str	r2, [sp, #12]
 8008d04:	9a01      	ldr	r2, [sp, #4]
 8008d06:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8008d08:	f9bd 7050 	ldrsh.w	r7, [sp, #80]	; 0x50
 8008d0c:	f9bd 8056 	ldrsh.w	r8, [sp, #86]	; 0x56
 8008d10:	1ab6      	subs	r6, r6, r2
 8008d12:	f006 f8cb 	bl	800eeac <GUI_SetBkColor>
 8008d16:	9b00      	ldr	r3, [sp, #0]
 8008d18:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8008d1a:	444f      	add	r7, r9
 8008d1c:	ebca 0808 	rsb	r8, sl, r8
 8008d20:	f006 f8c6 	bl	800eeb0 <GUI_SetColor>
 8008d24:	f1b9 0f00 	cmp.w	r9, #0
 8008d28:	d01b      	beq.n	8008d62 <GRAPH_Callback+0x2ca>
 8008d2a:	9802      	ldr	r0, [sp, #8]
 8008d2c:	9904      	ldr	r1, [sp, #16]
 8008d2e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8008d32:	f109 32ff 	add.w	r2, r9, #4294967295
 8008d36:	442a      	add	r2, r5
 8008d38:	1a5b      	subs	r3, r3, r1
 8008d3a:	4293      	cmp	r3, r2
 8008d3c:	dc11      	bgt.n	8008d62 <GRAPH_Callback+0x2ca>
 8008d3e:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8008d42:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 8008d46:	ebca 0303 	rsb	r3, sl, r3
 8008d4a:	eb05 010b 	add.w	r1, r5, fp
 8008d4e:	3301      	adds	r3, #1
 8008d50:	f006 ff2c 	bl	800fbac <GUI_ClearRect>
 8008d54:	9a03      	ldr	r2, [sp, #12]
 8008d56:	1e78      	subs	r0, r7, #1
 8008d58:	1e51      	subs	r1, r2, #1
 8008d5a:	f108 0201 	add.w	r2, r8, #1
 8008d5e:	f006 fa7d 	bl	800f25c <GUI_DrawVLine>
 8008d62:	f1bb 0f00 	cmp.w	fp, #0
 8008d66:	d017      	beq.n	8008d98 <GRAPH_Callback+0x300>
 8008d68:	9802      	ldr	r0, [sp, #8]
 8008d6a:	9905      	ldr	r1, [sp, #20]
 8008d6c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8008d70:	f10b 33ff 	add.w	r3, fp, #4294967295
 8008d74:	442b      	add	r3, r5
 8008d76:	1a52      	subs	r2, r2, r1
 8008d78:	429a      	cmp	r2, r3
 8008d7a:	dc0d      	bgt.n	8008d98 <GRAPH_Callback+0x300>
 8008d7c:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 8008d80:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 8008d84:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8008d88:	f006 ff10 	bl	800fbac <GUI_ClearRect>
 8008d8c:	9a03      	ldr	r2, [sp, #12]
 8008d8e:	1e79      	subs	r1, r7, #1
 8008d90:	1e50      	subs	r0, r2, #1
 8008d92:	1c72      	adds	r2, r6, #1
 8008d94:	f006 fcf0 	bl	800f778 <GUI_DrawHLine>
 8008d98:	9b01      	ldr	r3, [sp, #4]
 8008d9a:	b1d3      	cbz	r3, 8008dd2 <GRAPH_Callback+0x33a>
 8008d9c:	9902      	ldr	r1, [sp, #8]
 8008d9e:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8008da2:	1ad0      	subs	r0, r2, r3
 8008da4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8008da8:	9904      	ldr	r1, [sp, #16]
 8008daa:	3001      	adds	r0, #1
 8008dac:	1a5b      	subs	r3, r3, r1
 8008dae:	4283      	cmp	r3, r0
 8008db0:	db0f      	blt.n	8008dd2 <GRAPH_Callback+0x33a>
 8008db2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8008db6:	ebca 0303 	rsb	r3, sl, r3
 8008dba:	eb05 010b 	add.w	r1, r5, fp
 8008dbe:	3301      	adds	r3, #1
 8008dc0:	f006 fef4 	bl	800fbac <GUI_ClearRect>
 8008dc4:	9a03      	ldr	r2, [sp, #12]
 8008dc6:	1c70      	adds	r0, r6, #1
 8008dc8:	1e51      	subs	r1, r2, #1
 8008dca:	f108 0201 	add.w	r2, r8, #1
 8008dce:	f006 fa45 	bl	800f25c <GUI_DrawVLine>
 8008dd2:	f1ba 0f00 	cmp.w	sl, #0
 8008dd6:	d018      	beq.n	8008e0a <GRAPH_Callback+0x372>
 8008dd8:	9802      	ldr	r0, [sp, #8]
 8008dda:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8008dde:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8008de2:	9805      	ldr	r0, [sp, #20]
 8008de4:	ebca 0103 	rsb	r1, sl, r3
 8008de8:	3101      	adds	r1, #1
 8008dea:	ebc0 0a02 	rsb	sl, r0, r2
 8008dee:	458a      	cmp	sl, r1
 8008df0:	db0b      	blt.n	8008e0a <GRAPH_Callback+0x372>
 8008df2:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 8008df6:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8008dfa:	f006 fed7 	bl	800fbac <GUI_ClearRect>
 8008dfe:	f108 0001 	add.w	r0, r8, #1
 8008e02:	1e79      	subs	r1, r7, #1
 8008e04:	1c72      	adds	r2, r6, #1
 8008e06:	f006 fcb7 	bl	800f778 <GUI_DrawHLine>
 8008e0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008e0c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8008e10:	b113      	cbz	r3, 8008e18 <GRAPH_Callback+0x380>
 8008e12:	4620      	mov	r0, r4
 8008e14:	2101      	movs	r1, #1
 8008e16:	4798      	blx	r3
 8008e18:	a810      	add	r0, sp, #64	; 0x40
 8008e1a:	f000 fb73 	bl	8009504 <WM_SetUserClipRect>
 8008e1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008e20:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8008e22:	f008 fca3 	bl	801176c <GUI_ARRAY_GetNumItems>
 8008e26:	2500      	movs	r5, #0
 8008e28:	4607      	mov	r7, r0
 8008e2a:	42bd      	cmp	r5, r7
 8008e2c:	d01a      	beq.n	8008e64 <GRAPH_Callback+0x3cc>
 8008e2e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008e30:	4629      	mov	r1, r5
 8008e32:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8008e34:	f008 fd1c 	bl	8011870 <GUI_ARRAY_GethItem>
 8008e38:	f007 fb02 	bl	8010440 <GUI_ALLOC_LockH>
 8008e3c:	9014      	str	r0, [sp, #80]	; 0x50
 8008e3e:	b178      	cbz	r0, 8008e60 <GRAPH_Callback+0x3c8>
 8008e40:	6806      	ldr	r6, [r0, #0]
 8008e42:	4630      	mov	r0, r6
 8008e44:	f007 fafc 	bl	8010440 <GUI_ALLOC_LockH>
 8008e48:	900c      	str	r0, [sp, #48]	; 0x30
 8008e4a:	b130      	cbz	r0, 8008e5a <GRAPH_Callback+0x3c2>
 8008e4c:	6803      	ldr	r3, [r0, #0]
 8008e4e:	9902      	ldr	r1, [sp, #8]
 8008e50:	4630      	mov	r0, r6
 8008e52:	4798      	blx	r3
 8008e54:	a80c      	add	r0, sp, #48	; 0x30
 8008e56:	f007 fb01 	bl	801045c <GUI_ALLOC_UnlockH>
 8008e5a:	a814      	add	r0, sp, #80	; 0x50
 8008e5c:	f007 fafe 	bl	801045c <GUI_ALLOC_UnlockH>
 8008e60:	3501      	adds	r5, #1
 8008e62:	e7e2      	b.n	8008e2a <GRAPH_Callback+0x392>
 8008e64:	a812      	add	r0, sp, #72	; 0x48
 8008e66:	f000 fb4d 	bl	8009504 <WM_SetUserClipRect>
 8008e6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008e6c:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8008e6e:	f008 fc7d 	bl	801176c <GUI_ARRAY_GetNumItems>
 8008e72:	2500      	movs	r5, #0
 8008e74:	4607      	mov	r7, r0
 8008e76:	42bd      	cmp	r5, r7
 8008e78:	d01a      	beq.n	8008eb0 <GRAPH_Callback+0x418>
 8008e7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008e7c:	4629      	mov	r1, r5
 8008e7e:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8008e80:	f008 fcf6 	bl	8011870 <GUI_ARRAY_GethItem>
 8008e84:	f007 fadc 	bl	8010440 <GUI_ALLOC_LockH>
 8008e88:	9014      	str	r0, [sp, #80]	; 0x50
 8008e8a:	b178      	cbz	r0, 8008eac <GRAPH_Callback+0x414>
 8008e8c:	6806      	ldr	r6, [r0, #0]
 8008e8e:	4630      	mov	r0, r6
 8008e90:	f007 fad6 	bl	8010440 <GUI_ALLOC_LockH>
 8008e94:	900b      	str	r0, [sp, #44]	; 0x2c
 8008e96:	b130      	cbz	r0, 8008ea6 <GRAPH_Callback+0x40e>
 8008e98:	6803      	ldr	r3, [r0, #0]
 8008e9a:	9902      	ldr	r1, [sp, #8]
 8008e9c:	4630      	mov	r0, r6
 8008e9e:	4798      	blx	r3
 8008ea0:	a80b      	add	r0, sp, #44	; 0x2c
 8008ea2:	f007 fadb 	bl	801045c <GUI_ALLOC_UnlockH>
 8008ea6:	a814      	add	r0, sp, #80	; 0x50
 8008ea8:	f007 fad8 	bl	801045c <GUI_ALLOC_UnlockH>
 8008eac:	3501      	adds	r5, #1
 8008eae:	e7e2      	b.n	8008e76 <GRAPH_Callback+0x3de>
 8008eb0:	2000      	movs	r0, #0
 8008eb2:	f000 fb27 	bl	8009504 <WM_SetUserClipRect>
 8008eb6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008eb8:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8008ebc:	b113      	cbz	r3, 8008ec4 <GRAPH_Callback+0x42c>
 8008ebe:	4620      	mov	r0, r4
 8008ec0:	2102      	movs	r1, #2
 8008ec2:	4798      	blx	r3
 8008ec4:	a80d      	add	r0, sp, #52	; 0x34
 8008ec6:	e046      	b.n	8008f56 <GRAPH_Callback+0x4be>
 8008ec8:	4620      	mov	r0, r4
 8008eca:	f007 fab9 	bl	8010440 <GUI_ALLOC_LockH>
 8008ece:	9012      	str	r0, [sp, #72]	; 0x48
 8008ed0:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8008ed2:	f008 fc4b 	bl	801176c <GUI_ARRAY_GetNumItems>
 8008ed6:	2400      	movs	r4, #0
 8008ed8:	4606      	mov	r6, r0
 8008eda:	42b4      	cmp	r4, r6
 8008edc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008ede:	da18      	bge.n	8008f12 <GRAPH_Callback+0x47a>
 8008ee0:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8008ee2:	4621      	mov	r1, r4
 8008ee4:	f008 fcc4 	bl	8011870 <GUI_ARRAY_GethItem>
 8008ee8:	f007 faaa 	bl	8010440 <GUI_ALLOC_LockH>
 8008eec:	9014      	str	r0, [sp, #80]	; 0x50
 8008eee:	b170      	cbz	r0, 8008f0e <GRAPH_Callback+0x476>
 8008ef0:	6805      	ldr	r5, [r0, #0]
 8008ef2:	4628      	mov	r0, r5
 8008ef4:	f007 faa4 	bl	8010440 <GUI_ALLOC_LockH>
 8008ef8:	9010      	str	r0, [sp, #64]	; 0x40
 8008efa:	b128      	cbz	r0, 8008f08 <GRAPH_Callback+0x470>
 8008efc:	6847      	ldr	r7, [r0, #4]
 8008efe:	a810      	add	r0, sp, #64	; 0x40
 8008f00:	f007 faac 	bl	801045c <GUI_ALLOC_UnlockH>
 8008f04:	4628      	mov	r0, r5
 8008f06:	47b8      	blx	r7
 8008f08:	a814      	add	r0, sp, #80	; 0x50
 8008f0a:	f007 faa7 	bl	801045c <GUI_ALLOC_UnlockH>
 8008f0e:	3401      	adds	r4, #1
 8008f10:	e7e3      	b.n	8008eda <GRAPH_Callback+0x442>
 8008f12:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8008f14:	f008 fc2a 	bl	801176c <GUI_ARRAY_GetNumItems>
 8008f18:	2400      	movs	r4, #0
 8008f1a:	4605      	mov	r5, r0
 8008f1c:	42ac      	cmp	r4, r5
 8008f1e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8008f20:	da0f      	bge.n	8008f42 <GRAPH_Callback+0x4aa>
 8008f22:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8008f24:	4621      	mov	r1, r4
 8008f26:	f008 fca3 	bl	8011870 <GUI_ARRAY_GethItem>
 8008f2a:	f007 fa89 	bl	8010440 <GUI_ALLOC_LockH>
 8008f2e:	9014      	str	r0, [sp, #80]	; 0x50
 8008f30:	b128      	cbz	r0, 8008f3e <GRAPH_Callback+0x4a6>
 8008f32:	6800      	ldr	r0, [r0, #0]
 8008f34:	f007 fabe 	bl	80104b4 <GUI_ALLOC_Free>
 8008f38:	a814      	add	r0, sp, #80	; 0x50
 8008f3a:	f007 fa8f 	bl	801045c <GUI_ALLOC_UnlockH>
 8008f3e:	3401      	adds	r4, #1
 8008f40:	e7ec      	b.n	8008f1c <GRAPH_Callback+0x484>
 8008f42:	ac16      	add	r4, sp, #88	; 0x58
 8008f44:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8008f46:	f008 fc6a 	bl	801181e <GUI_ARRAY_Delete>
 8008f4a:	f854 3d10 	ldr.w	r3, [r4, #-16]!
 8008f4e:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8008f50:	f008 fc65 	bl	801181e <GUI_ARRAY_Delete>
 8008f54:	4620      	mov	r0, r4
 8008f56:	f007 fa81 	bl	801045c <GUI_ALLOC_UnlockH>
 8008f5a:	e015      	b.n	8008f88 <GRAPH_Callback+0x4f0>
 8008f5c:	68eb      	ldr	r3, [r5, #12]
 8008f5e:	2b05      	cmp	r3, #5
 8008f60:	d10f      	bne.n	8008f82 <GRAPH_Callback+0x4ea>
 8008f62:	4620      	mov	r0, r4
 8008f64:	68ae      	ldr	r6, [r5, #8]
 8008f66:	f000 fde2 	bl	8009b2e <WM_GetScrollbarV>
 8008f6a:	4286      	cmp	r6, r0
 8008f6c:	d005      	beq.n	8008f7a <GRAPH_Callback+0x4e2>
 8008f6e:	4620      	mov	r0, r4
 8008f70:	68ae      	ldr	r6, [r5, #8]
 8008f72:	f000 fdd7 	bl	8009b24 <WM_GetScrollbarH>
 8008f76:	4286      	cmp	r6, r0
 8008f78:	d103      	bne.n	8008f82 <GRAPH_Callback+0x4ea>
 8008f7a:	6868      	ldr	r0, [r5, #4]
 8008f7c:	68a9      	ldr	r1, [r5, #8]
 8008f7e:	f7ff fd6f 	bl	8008a60 <_OnScrollValueChanged>
 8008f82:	4628      	mov	r0, r5
 8008f84:	f002 f800 	bl	800af88 <WM_DefaultProc>
 8008f88:	b017      	add	sp, #92	; 0x5c
 8008f8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08008f90 <GRAPH_CreateUser>:
 8008f90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f92:	b087      	sub	sp, #28
 8008f94:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8008f96:	9400      	str	r4, [sp, #0]
 8008f98:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8008f9a:	9401      	str	r4, [sp, #4]
 8008f9c:	4c17      	ldr	r4, [pc, #92]	; (8008ffc <GRAPH_CreateUser+0x6c>)
 8008f9e:	9402      	str	r4, [sp, #8]
 8008fa0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8008fa2:	346c      	adds	r4, #108	; 0x6c
 8008fa4:	9403      	str	r4, [sp, #12]
 8008fa6:	f001 fbff 	bl	800a7a8 <WM_CreateWindowAsChild>
 8008faa:	4606      	mov	r6, r0
 8008fac:	b318      	cbz	r0, 8008ff6 <GRAPH_CreateUser+0x66>
 8008fae:	f008 fc72 	bl	8011896 <GUI_ARRAY_Create>
 8008fb2:	4605      	mov	r5, r0
 8008fb4:	f008 fc6f 	bl	8011896 <GUI_ARRAY_Create>
 8008fb8:	4604      	mov	r4, r0
 8008fba:	4630      	mov	r0, r6
 8008fbc:	f007 fa40 	bl	8010440 <GUI_ALLOC_LockH>
 8008fc0:	6645      	str	r5, [r0, #100]	; 0x64
 8008fc2:	4d0f      	ldr	r5, [pc, #60]	; (8009000 <GRAPH_CreateUser+0x70>)
 8008fc4:	6684      	str	r4, [r0, #104]	; 0x68
 8008fc6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8008fc8:	9005      	str	r0, [sp, #20]
 8008fca:	2200      	movs	r2, #0
 8008fcc:	f7fe ffea 	bl	8007fa4 <WIDGET__Init>
 8008fd0:	af06      	add	r7, sp, #24
 8008fd2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008fd4:	f857 ed04 	ldr.w	lr, [r7, #-4]!
 8008fd8:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 8008fdc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008fde:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008fe0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008fe2:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8008fe6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008fea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008fec:	f8ae 3078 	strh.w	r3, [lr, #120]	; 0x78
 8008ff0:	4638      	mov	r0, r7
 8008ff2:	f007 fa33 	bl	801045c <GUI_ALLOC_UnlockH>
 8008ff6:	4630      	mov	r0, r6
 8008ff8:	b007      	add	sp, #28
 8008ffa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008ffc:	08008a99 	.word	0x08008a99
 8009000:	200001c4 	.word	0x200001c4

08009004 <GRAPH_AttachData>:
 8009004:	b530      	push	{r4, r5, lr}
 8009006:	b085      	sub	sp, #20
 8009008:	4604      	mov	r4, r0
 800900a:	9101      	str	r1, [sp, #4]
 800900c:	b1d0      	cbz	r0, 8009044 <GRAPH_AttachData+0x40>
 800900e:	f007 fa17 	bl	8010440 <GUI_ALLOC_LockH>
 8009012:	ab04      	add	r3, sp, #16
 8009014:	6e45      	ldr	r5, [r0, #100]	; 0x64
 8009016:	f843 0d04 	str.w	r0, [r3, #-4]!
 800901a:	4618      	mov	r0, r3
 800901c:	f007 fa1e 	bl	801045c <GUI_ALLOC_UnlockH>
 8009020:	9801      	ldr	r0, [sp, #4]
 8009022:	f007 fa0d 	bl	8010440 <GUI_ALLOC_LockH>
 8009026:	4602      	mov	r2, r0
 8009028:	a804      	add	r0, sp, #16
 800902a:	6094      	str	r4, [r2, #8]
 800902c:	f840 2d08 	str.w	r2, [r0, #-8]!
 8009030:	f007 fa14 	bl	801045c <GUI_ALLOC_UnlockH>
 8009034:	4628      	mov	r0, r5
 8009036:	a901      	add	r1, sp, #4
 8009038:	2204      	movs	r2, #4
 800903a:	f008 fba6 	bl	801178a <GUI_ARRAY_AddItem>
 800903e:	4620      	mov	r0, r4
 8009040:	f001 fb71 	bl	800a726 <WM_InvalidateWindow>
 8009044:	b005      	add	sp, #20
 8009046:	bd30      	pop	{r4, r5, pc}

08009048 <GUI_CreateDialogBox>:
 8009048:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800904c:	4606      	mov	r6, r0
 800904e:	4688      	mov	r8, r1
 8009050:	4614      	mov	r4, r2
 8009052:	461d      	mov	r5, r3
 8009054:	b913      	cbnz	r3, 800905c <GUI_CreateDialogBox+0x14>
 8009056:	f000 fe41 	bl	8009cdc <WM_GetDesktopWindow>
 800905a:	4605      	mov	r5, r0
 800905c:	9400      	str	r4, [sp, #0]
 800905e:	4630      	mov	r0, r6
 8009060:	6834      	ldr	r4, [r6, #0]
 8009062:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009064:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009066:	4629      	mov	r1, r5
 8009068:	47a0      	blx	r4
 800906a:	4604      	mov	r4, r0
 800906c:	2800      	cmp	r0, #0
 800906e:	d039      	beq.n	80090e4 <GUI_CreateDialogBox+0x9c>
 8009070:	f000 fe40 	bl	8009cf4 <WM_GetClientWindow>
 8009074:	8a71      	ldrh	r1, [r6, #18]
 8009076:	4607      	mov	r7, r0
 8009078:	4620      	mov	r0, r4
 800907a:	f7fe ff68 	bl	8007f4e <WIDGET_OrState>
 800907e:	4620      	mov	r0, r4
 8009080:	f000 fa2c 	bl	80094dc <WM_ShowWindow>
 8009084:	4638      	mov	r0, r7
 8009086:	f108 38ff 	add.w	r8, r8, #4294967295
 800908a:	f000 fa27 	bl	80094dc <WM_ShowWindow>
 800908e:	f1b8 0f00 	cmp.w	r8, #0
 8009092:	dd0f      	ble.n	80090b4 <GUI_CreateDialogBox+0x6c>
 8009094:	f856 cf1c 	ldr.w	ip, [r6, #28]!
 8009098:	2200      	movs	r2, #0
 800909a:	9200      	str	r2, [sp, #0]
 800909c:	4630      	mov	r0, r6
 800909e:	4639      	mov	r1, r7
 80090a0:	4613      	mov	r3, r2
 80090a2:	47e0      	blx	ip
 80090a4:	4681      	mov	r9, r0
 80090a6:	2800      	cmp	r0, #0
 80090a8:	d1ed      	bne.n	8009086 <GUI_CreateDialogBox+0x3e>
 80090aa:	4620      	mov	r0, r4
 80090ac:	f001 fc26 	bl	800a8fc <WM_DeleteWindow>
 80090b0:	4648      	mov	r0, r9
 80090b2:	e018      	b.n	80090e6 <GUI_CreateDialogBox+0x9e>
 80090b4:	4638      	mov	r0, r7
 80090b6:	211d      	movs	r1, #29
 80090b8:	f000 fb96 	bl	80097e8 <WM_SendMessageNoPara>
 80090bc:	1c6b      	adds	r3, r5, #1
 80090be:	d011      	beq.n	80090e4 <GUI_CreateDialogBox+0x9c>
 80090c0:	f000 fdd2 	bl	8009c68 <WM_GetFocussedWindow>
 80090c4:	b150      	cbz	r0, 80090dc <GUI_CreateDialogBox+0x94>
 80090c6:	f007 f9b1 	bl	801042c <GUI_ALLOC_h2p>
 80090ca:	6980      	ldr	r0, [r0, #24]
 80090cc:	42a0      	cmp	r0, r4
 80090ce:	d00a      	beq.n	80090e6 <GUI_CreateDialogBox+0x9e>
 80090d0:	2800      	cmp	r0, #0
 80090d2:	d1f8      	bne.n	80090c6 <GUI_CreateDialogBox+0x7e>
 80090d4:	4620      	mov	r0, r4
 80090d6:	f000 fac9 	bl	800966c <WM_SetFocusOnNextChild>
 80090da:	e003      	b.n	80090e4 <GUI_CreateDialogBox+0x9c>
 80090dc:	42a5      	cmp	r5, r4
 80090de:	d1f9      	bne.n	80090d4 <GUI_CreateDialogBox+0x8c>
 80090e0:	4628      	mov	r0, r5
 80090e2:	e000      	b.n	80090e6 <GUI_CreateDialogBox+0x9e>
 80090e4:	4620      	mov	r0, r4
 80090e6:	b003      	add	sp, #12
 80090e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080090ec <BUTTON_CreateIndirect>:
 80090ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80090ee:	b087      	sub	sp, #28
 80090f0:	4604      	mov	r4, r0
 80090f2:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 80090f6:	9100      	str	r1, [sp, #0]
 80090f8:	2100      	movs	r1, #0
 80090fa:	f9b4 e00c 	ldrsh.w	lr, [r4, #12]
 80090fe:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
 8009102:	f9b4 6010 	ldrsh.w	r6, [r4, #16]
 8009106:	9101      	str	r1, [sp, #4]
 8009108:	8a61      	ldrh	r1, [r4, #18]
 800910a:	69a5      	ldr	r5, [r4, #24]
 800910c:	9102      	str	r1, [sp, #8]
 800910e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8009112:	9103      	str	r1, [sp, #12]
 8009114:	9504      	str	r5, [sp, #16]
 8009116:	eb0e 0103 	add.w	r1, lr, r3
 800911a:	4410      	add	r0, r2
 800911c:	4633      	mov	r3, r6
 800911e:	463a      	mov	r2, r7
 8009120:	f000 f8ce 	bl	80092c0 <BUTTON_CreateUser>
 8009124:	6861      	ldr	r1, [r4, #4]
 8009126:	4605      	mov	r5, r0
 8009128:	f000 f902 	bl	8009330 <BUTTON_SetText>
 800912c:	4628      	mov	r0, r5
 800912e:	b007      	add	sp, #28
 8009130:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009132 <_OnButtonPressed>:
 8009132:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009134:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009138:	4604      	mov	r4, r0
 800913a:	f7fe ff08 	bl	8007f4e <WIDGET_OrState>
 800913e:	4620      	mov	r0, r4
 8009140:	f007 f97e 	bl	8010440 <GUI_ALLOC_LockH>
 8009144:	ab02      	add	r3, sp, #8
 8009146:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8009148:	f843 0d04 	str.w	r0, [r3, #-4]!
 800914c:	4618      	mov	r0, r3
 800914e:	f007 f985 	bl	801045c <GUI_ALLOC_UnlockH>
 8009152:	07ab      	lsls	r3, r5, #30
 8009154:	d503      	bpl.n	800915e <_OnButtonPressed+0x2c>
 8009156:	4620      	mov	r0, r4
 8009158:	2101      	movs	r1, #1
 800915a:	f000 fbc2 	bl	80098e2 <WM_NotifyParent>
 800915e:	b003      	add	sp, #12
 8009160:	bd30      	pop	{r4, r5, pc}

08009162 <_OnButtonReleased>:
 8009162:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009164:	4605      	mov	r5, r0
 8009166:	460c      	mov	r4, r1
 8009168:	f44f 7180 	mov.w	r1, #256	; 0x100
 800916c:	f7fe ff05 	bl	8007f7a <WIDGET_AndState>
 8009170:	4628      	mov	r0, r5
 8009172:	f007 f965 	bl	8010440 <GUI_ALLOC_LockH>
 8009176:	4602      	mov	r2, r0
 8009178:	a802      	add	r0, sp, #8
 800917a:	6a96      	ldr	r6, [r2, #40]	; 0x28
 800917c:	f840 2d04 	str.w	r2, [r0, #-4]!
 8009180:	8e17      	ldrh	r7, [r2, #48]	; 0x30
 8009182:	f007 f96b 	bl	801045c <GUI_ALLOC_UnlockH>
 8009186:	2c02      	cmp	r4, #2
 8009188:	d102      	bne.n	8009190 <_OnButtonReleased+0x2e>
 800918a:	4638      	mov	r0, r7
 800918c:	f005 ffa4 	bl	800f0d8 <GUI_StoreKey>
 8009190:	07b3      	lsls	r3, r6, #30
 8009192:	d503      	bpl.n	800919c <_OnButtonReleased+0x3a>
 8009194:	4628      	mov	r0, r5
 8009196:	4621      	mov	r1, r4
 8009198:	f000 fba3 	bl	80098e2 <WM_NotifyParent>
 800919c:	b003      	add	sp, #12
 800919e:	bdf0      	pop	{r4, r5, r6, r7, pc}

080091a0 <_OnTouchDefault>:
 80091a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80091a2:	460d      	mov	r5, r1
 80091a4:	4604      	mov	r4, r0
 80091a6:	f007 f94b 	bl	8010440 <GUI_ALLOC_LockH>
 80091aa:	ab02      	add	r3, sp, #8
 80091ac:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 80091ae:	f843 0d04 	str.w	r0, [r3, #-4]!
 80091b2:	4618      	mov	r0, r3
 80091b4:	f007 f952 	bl	801045c <GUI_ALLOC_UnlockH>
 80091b8:	68ea      	ldr	r2, [r5, #12]
 80091ba:	b162      	cbz	r2, 80091d6 <_OnTouchDefault+0x36>
 80091bc:	7a12      	ldrb	r2, [r2, #8]
 80091be:	f406 7380 	and.w	r3, r6, #256	; 0x100
 80091c2:	b122      	cbz	r2, 80091ce <_OnTouchDefault+0x2e>
 80091c4:	b95b      	cbnz	r3, 80091de <_OnTouchDefault+0x3e>
 80091c6:	4620      	mov	r0, r4
 80091c8:	f7ff ffb3 	bl	8009132 <_OnButtonPressed>
 80091cc:	e007      	b.n	80091de <_OnTouchDefault+0x3e>
 80091ce:	b133      	cbz	r3, 80091de <_OnTouchDefault+0x3e>
 80091d0:	4620      	mov	r0, r4
 80091d2:	2102      	movs	r1, #2
 80091d4:	e001      	b.n	80091da <_OnTouchDefault+0x3a>
 80091d6:	4620      	mov	r0, r4
 80091d8:	2103      	movs	r1, #3
 80091da:	f7ff ffc2 	bl	8009162 <_OnButtonReleased>
 80091de:	b002      	add	sp, #8
 80091e0:	bd70      	pop	{r4, r5, r6, pc}
	...

080091e4 <BUTTON_Callback>:
 80091e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80091e6:	6844      	ldr	r4, [r0, #4]
 80091e8:	4605      	mov	r5, r0
 80091ea:	4629      	mov	r1, r5
 80091ec:	4620      	mov	r0, r4
 80091ee:	f7fe fee1 	bl	8007fb4 <WIDGET_HandleActive>
 80091f2:	2800      	cmp	r0, #0
 80091f4:	d05d      	beq.n	80092b2 <BUTTON_Callback+0xce>
 80091f6:	682b      	ldr	r3, [r5, #0]
 80091f8:	2b0f      	cmp	r3, #15
 80091fa:	d016      	beq.n	800922a <BUTTON_Callback+0x46>
 80091fc:	dc04      	bgt.n	8009208 <BUTTON_Callback+0x24>
 80091fe:	2b0b      	cmp	r3, #11
 8009200:	d023      	beq.n	800924a <BUTTON_Callback+0x66>
 8009202:	2b0e      	cmp	r3, #14
 8009204:	d033      	beq.n	800926e <BUTTON_Callback+0x8a>
 8009206:	e051      	b.n	80092ac <BUTTON_Callback+0xc8>
 8009208:	2b28      	cmp	r3, #40	; 0x28
 800920a:	d048      	beq.n	800929e <BUTTON_Callback+0xba>
 800920c:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8009210:	d005      	beq.n	800921e <BUTTON_Callback+0x3a>
 8009212:	2b11      	cmp	r3, #17
 8009214:	d14a      	bne.n	80092ac <BUTTON_Callback+0xc8>
 8009216:	4b28      	ldr	r3, [pc, #160]	; (80092b8 <BUTTON_Callback+0xd4>)
 8009218:	681b      	ldr	r3, [r3, #0]
 800921a:	b913      	cbnz	r3, 8009222 <BUTTON_Callback+0x3e>
 800921c:	e049      	b.n	80092b2 <BUTTON_Callback+0xce>
 800921e:	4b27      	ldr	r3, [pc, #156]	; (80092bc <BUTTON_Callback+0xd8>)
 8009220:	681b      	ldr	r3, [r3, #0]
 8009222:	4620      	mov	r0, r4
 8009224:	4629      	mov	r1, r5
 8009226:	4798      	blx	r3
 8009228:	e043      	b.n	80092b2 <BUTTON_Callback+0xce>
 800922a:	4620      	mov	r0, r4
 800922c:	f007 f908 	bl	8010440 <GUI_ALLOC_LockH>
 8009230:	ab02      	add	r3, sp, #8
 8009232:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009236:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8009238:	6815      	ldr	r5, [r2, #0]
 800923a:	4618      	mov	r0, r3
 800923c:	f007 f90e 	bl	801045c <GUI_ALLOC_UnlockH>
 8009240:	2d00      	cmp	r5, #0
 8009242:	d036      	beq.n	80092b2 <BUTTON_Callback+0xce>
 8009244:	4620      	mov	r0, r4
 8009246:	47a8      	blx	r5
 8009248:	e033      	b.n	80092b2 <BUTTON_Callback+0xce>
 800924a:	4620      	mov	r0, r4
 800924c:	f007 f8f8 	bl	8010440 <GUI_ALLOC_LockH>
 8009250:	ac02      	add	r4, sp, #8
 8009252:	9001      	str	r0, [sp, #4]
 8009254:	3068      	adds	r0, #104	; 0x68
 8009256:	f007 fb4b 	bl	80108f0 <GUI_ALLOC_FreePtr>
 800925a:	f854 0d04 	ldr.w	r0, [r4, #-4]!
 800925e:	2103      	movs	r1, #3
 8009260:	306c      	adds	r0, #108	; 0x6c
 8009262:	f007 fb4d 	bl	8010900 <GUI_ALLOC_FreePtrArray>
 8009266:	4620      	mov	r0, r4
 8009268:	f007 f8f8 	bl	801045c <GUI_ALLOC_UnlockH>
 800926c:	e01e      	b.n	80092ac <BUTTON_Callback+0xc8>
 800926e:	68ea      	ldr	r2, [r5, #12]
 8009270:	ca0c      	ldmia	r2, {r2, r3}
 8009272:	2a0d      	cmp	r2, #13
 8009274:	d002      	beq.n	800927c <BUTTON_Callback+0x98>
 8009276:	2a20      	cmp	r2, #32
 8009278:	d007      	beq.n	800928a <BUTTON_Callback+0xa6>
 800927a:	e010      	b.n	800929e <BUTTON_Callback+0xba>
 800927c:	2b00      	cmp	r3, #0
 800927e:	dd0e      	ble.n	800929e <BUTTON_Callback+0xba>
 8009280:	4620      	mov	r0, r4
 8009282:	f7ff ff56 	bl	8009132 <_OnButtonPressed>
 8009286:	4620      	mov	r0, r4
 8009288:	e005      	b.n	8009296 <BUTTON_Callback+0xb2>
 800928a:	2b00      	cmp	r3, #0
 800928c:	4620      	mov	r0, r4
 800928e:	dd02      	ble.n	8009296 <BUTTON_Callback+0xb2>
 8009290:	f7ff ff4f 	bl	8009132 <_OnButtonPressed>
 8009294:	e00d      	b.n	80092b2 <BUTTON_Callback+0xce>
 8009296:	2102      	movs	r1, #2
 8009298:	f7ff ff63 	bl	8009162 <_OnButtonReleased>
 800929c:	e009      	b.n	80092b2 <BUTTON_Callback+0xce>
 800929e:	68eb      	ldr	r3, [r5, #12]
 80092a0:	b923      	cbnz	r3, 80092ac <BUTTON_Callback+0xc8>
 80092a2:	4620      	mov	r0, r4
 80092a4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80092a8:	f7fe fe67 	bl	8007f7a <WIDGET_AndState>
 80092ac:	4628      	mov	r0, r5
 80092ae:	f001 fe6b 	bl	800af88 <WM_DefaultProc>
 80092b2:	b003      	add	sp, #12
 80092b4:	bd30      	pop	{r4, r5, pc}
 80092b6:	bf00      	nop
 80092b8:	20019474 	.word	0x20019474
 80092bc:	200001f4 	.word	0x200001f4

080092c0 <BUTTON_CreateUser>:
 80092c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80092c2:	b087      	sub	sp, #28
 80092c4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80092c6:	9400      	str	r4, [sp, #0]
 80092c8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80092ca:	9401      	str	r4, [sp, #4]
 80092cc:	4c15      	ldr	r4, [pc, #84]	; (8009324 <BUTTON_CreateUser+0x64>)
 80092ce:	9402      	str	r4, [sp, #8]
 80092d0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80092d2:	344c      	adds	r4, #76	; 0x4c
 80092d4:	9403      	str	r4, [sp, #12]
 80092d6:	f001 fa67 	bl	800a7a8 <WM_CreateWindowAsChild>
 80092da:	4607      	mov	r7, r0
 80092dc:	b1f8      	cbz	r0, 800931e <BUTTON_CreateUser+0x5e>
 80092de:	f007 f8af 	bl	8010440 <GUI_ALLOC_LockH>
 80092e2:	4d11      	ldr	r5, [pc, #68]	; (8009328 <BUTTON_CreateUser+0x68>)
 80092e4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80092e6:	9005      	str	r0, [sp, #20]
 80092e8:	2210      	movs	r2, #16
 80092ea:	f7fe fe5b 	bl	8007fa4 <WIDGET__Init>
 80092ee:	ae06      	add	r6, sp, #24
 80092f0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80092f2:	f856 ed04 	ldr.w	lr, [r6, #-4]!
 80092f6:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 80092fa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80092fc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80092fe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009300:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8009304:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009308:	4c08      	ldr	r4, [pc, #32]	; (800932c <BUTTON_CreateUser+0x6c>)
 800930a:	6823      	ldr	r3, [r4, #0]
 800930c:	f8ce 3064 	str.w	r3, [lr, #100]	; 0x64
 8009310:	4630      	mov	r0, r6
 8009312:	f007 f8a3 	bl	801045c <GUI_ALLOC_UnlockH>
 8009316:	6823      	ldr	r3, [r4, #0]
 8009318:	4638      	mov	r0, r7
 800931a:	685b      	ldr	r3, [r3, #4]
 800931c:	4798      	blx	r3
 800931e:	4638      	mov	r0, r7
 8009320:	b007      	add	sp, #28
 8009322:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009324:	080091e5 	.word	0x080091e5
 8009328:	200001f8 	.word	0x200001f8
 800932c:	20000228 	.word	0x20000228

08009330 <BUTTON_SetText>:
 8009330:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009332:	460c      	mov	r4, r1
 8009334:	4605      	mov	r5, r0
 8009336:	b300      	cbz	r0, 800937a <BUTTON_SetText+0x4a>
 8009338:	f007 f882 	bl	8010440 <GUI_ALLOC_LockH>
 800933c:	6e86      	ldr	r6, [r0, #104]	; 0x68
 800933e:	9000      	str	r0, [sp, #0]
 8009340:	4668      	mov	r0, sp
 8009342:	9601      	str	r6, [sp, #4]
 8009344:	f007 f88a 	bl	801045c <GUI_ALLOC_UnlockH>
 8009348:	4621      	mov	r1, r4
 800934a:	a801      	add	r0, sp, #4
 800934c:	f004 fd30 	bl	800ddb0 <GUI__SetText>
 8009350:	f1d0 0401 	rsbs	r4, r0, #1
 8009354:	bf38      	it	cc
 8009356:	2400      	movcc	r4, #0
 8009358:	b984      	cbnz	r4, 800937c <BUTTON_SetText+0x4c>
 800935a:	9b01      	ldr	r3, [sp, #4]
 800935c:	42b3      	cmp	r3, r6
 800935e:	d008      	beq.n	8009372 <BUTTON_SetText+0x42>
 8009360:	4628      	mov	r0, r5
 8009362:	f007 f86d 	bl	8010440 <GUI_ALLOC_LockH>
 8009366:	9b01      	ldr	r3, [sp, #4]
 8009368:	9000      	str	r0, [sp, #0]
 800936a:	6683      	str	r3, [r0, #104]	; 0x68
 800936c:	4668      	mov	r0, sp
 800936e:	f007 f875 	bl	801045c <GUI_ALLOC_UnlockH>
 8009372:	4628      	mov	r0, r5
 8009374:	f001 f9d7 	bl	800a726 <WM_InvalidateWindow>
 8009378:	e000      	b.n	800937c <BUTTON_SetText+0x4c>
 800937a:	2401      	movs	r4, #1
 800937c:	4620      	mov	r0, r4
 800937e:	b002      	add	sp, #8
 8009380:	bd70      	pop	{r4, r5, r6, pc}

08009382 <WM__UpdateChildPositions>:
 8009382:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009386:	b087      	sub	sp, #28
 8009388:	69c4      	ldr	r4, [r0, #28]
 800938a:	9303      	str	r3, [sp, #12]
 800938c:	468a      	mov	sl, r1
 800938e:	4693      	mov	fp, r2
 8009390:	2c00      	cmp	r4, #0
 8009392:	d06d      	beq.n	8009470 <WM__UpdateChildPositions+0xee>
 8009394:	4620      	mov	r0, r4
 8009396:	f007 f853 	bl	8010440 <GUI_ALLOC_LockH>
 800939a:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800939c:	9005      	str	r0, [sp, #20]
 800939e:	f401 7320 	and.w	r3, r1, #640	; 0x280
 80093a2:	2b80      	cmp	r3, #128	; 0x80
 80093a4:	f8b0 8000 	ldrh.w	r8, [r0]
 80093a8:	8842      	ldrh	r2, [r0, #2]
 80093aa:	8886      	ldrh	r6, [r0, #4]
 80093ac:	88c5      	ldrh	r5, [r0, #6]
 80093ae:	d008      	beq.n	80093c2 <WM__UpdateChildPositions+0x40>
 80093b0:	f5b3 7f20 	cmp.w	r3, #640	; 0x280
 80093b4:	d108      	bne.n	80093c8 <WM__UpdateChildPositions+0x46>
 80093b6:	eb08 090a 	add.w	r9, r8, sl
 80093ba:	fa1f f989 	uxth.w	r9, r9
 80093be:	9b03      	ldr	r3, [sp, #12]
 80093c0:	e008      	b.n	80093d4 <WM__UpdateChildPositions+0x52>
 80093c2:	9803      	ldr	r0, [sp, #12]
 80093c4:	b283      	uxth	r3, r0
 80093c6:	e001      	b.n	80093cc <WM__UpdateChildPositions+0x4a>
 80093c8:	fa1f f38a 	uxth.w	r3, sl
 80093cc:	eb03 0908 	add.w	r9, r3, r8
 80093d0:	fa1f f989 	uxth.w	r9, r9
 80093d4:	f401 61a0 	and.w	r1, r1, #1280	; 0x500
 80093d8:	4433      	add	r3, r6
 80093da:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 80093de:	b29b      	uxth	r3, r3
 80093e0:	d008      	beq.n	80093f4 <WM__UpdateChildPositions+0x72>
 80093e2:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 80093e6:	d108      	bne.n	80093fa <WM__UpdateChildPositions+0x78>
 80093e8:	eb02 0c0b 	add.w	ip, r2, fp
 80093ec:	fa1f fc8c 	uxth.w	ip, ip
 80093f0:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80093f2:	e008      	b.n	8009406 <WM__UpdateChildPositions+0x84>
 80093f4:	9910      	ldr	r1, [sp, #64]	; 0x40
 80093f6:	b28f      	uxth	r7, r1
 80093f8:	e001      	b.n	80093fe <WM__UpdateChildPositions+0x7c>
 80093fa:	fa1f f78b 	uxth.w	r7, fp
 80093fe:	eb07 0c02 	add.w	ip, r7, r2
 8009402:	fa1f fc8c 	uxth.w	ip, ip
 8009406:	fa0f f989 	sxth.w	r9, r9
 800940a:	fa0f f888 	sxth.w	r8, r8
 800940e:	b212      	sxth	r2, r2
 8009410:	442f      	add	r7, r5
 8009412:	fa0f fc8c 	sxth.w	ip, ip
 8009416:	ebb9 0108 	subs.w	r1, r9, r8
 800941a:	9202      	str	r2, [sp, #8]
 800941c:	b2bf      	uxth	r7, r7
 800941e:	ebc2 020c 	rsb	r2, r2, ip
 8009422:	d100      	bne.n	8009426 <WM__UpdateChildPositions+0xa4>
 8009424:	b142      	cbz	r2, 8009438 <WM__UpdateChildPositions+0xb6>
 8009426:	4620      	mov	r0, r4
 8009428:	9301      	str	r3, [sp, #4]
 800942a:	f8cd c000 	str.w	ip, [sp]
 800942e:	f000 faec 	bl	8009a0a <WM_MoveWindow>
 8009432:	f8dd c000 	ldr.w	ip, [sp]
 8009436:	9b01      	ldr	r3, [sp, #4]
 8009438:	b21b      	sxth	r3, r3
 800943a:	ebc9 0903 	rsb	r9, r9, r3
 800943e:	b236      	sxth	r6, r6
 8009440:	9b02      	ldr	r3, [sp, #8]
 8009442:	ebc6 0808 	rsb	r8, r6, r8
 8009446:	b23f      	sxth	r7, r7
 8009448:	b22d      	sxth	r5, r5
 800944a:	ebcc 0c07 	rsb	ip, ip, r7
 800944e:	1b5d      	subs	r5, r3, r5
 8009450:	eb19 0108 	adds.w	r1, r9, r8
 8009454:	eb0c 0205 	add.w	r2, ip, r5
 8009458:	d100      	bne.n	800945c <WM__UpdateChildPositions+0xda>
 800945a:	b112      	cbz	r2, 8009462 <WM__UpdateChildPositions+0xe0>
 800945c:	4620      	mov	r0, r4
 800945e:	f000 f9c5 	bl	80097ec <WM_ResizeWindow>
 8009462:	a806      	add	r0, sp, #24
 8009464:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8009468:	6a1c      	ldr	r4, [r3, #32]
 800946a:	f006 fff7 	bl	801045c <GUI_ALLOC_UnlockH>
 800946e:	e78f      	b.n	8009390 <WM__UpdateChildPositions+0xe>
 8009470:	b007      	add	sp, #28
 8009472:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08009476 <WM__Screen2Client>:
 8009476:	f9b0 3000 	ldrsh.w	r3, [r0]
 800947a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800947e:	4608      	mov	r0, r1
 8009480:	4252      	negs	r2, r2
 8009482:	4259      	negs	r1, r3
 8009484:	f005 be4c 	b.w	800f120 <GUI_MoveRect>

08009488 <WM__IsAncestor>:
 8009488:	b510      	push	{r4, lr}
 800948a:	460c      	mov	r4, r1
 800948c:	b908      	cbnz	r0, 8009492 <WM__IsAncestor+0xa>
 800948e:	2000      	movs	r0, #0
 8009490:	bd10      	pop	{r4, pc}
 8009492:	2900      	cmp	r1, #0
 8009494:	d0fb      	beq.n	800948e <WM__IsAncestor+0x6>
 8009496:	f006 ffc9 	bl	801042c <GUI_ALLOC_h2p>
 800949a:	6980      	ldr	r0, [r0, #24]
 800949c:	42a0      	cmp	r0, r4
 800949e:	d002      	beq.n	80094a6 <WM__IsAncestor+0x1e>
 80094a0:	2800      	cmp	r0, #0
 80094a2:	d1f8      	bne.n	8009496 <WM__IsAncestor+0xe>
 80094a4:	e7f3      	b.n	800948e <WM__IsAncestor+0x6>
 80094a6:	2001      	movs	r0, #1
 80094a8:	bd10      	pop	{r4, pc}

080094aa <WM__IsAncestorOrSelf>:
 80094aa:	4288      	cmp	r0, r1
 80094ac:	d001      	beq.n	80094b2 <WM__IsAncestorOrSelf+0x8>
 80094ae:	f7ff bfeb 	b.w	8009488 <WM__IsAncestor>
 80094b2:	2001      	movs	r0, #1
 80094b4:	4770      	bx	lr

080094b6 <WM_InvalidateWindowAndDescs>:
 80094b6:	b510      	push	{r4, lr}
 80094b8:	4604      	mov	r4, r0
 80094ba:	b170      	cbz	r0, 80094da <WM_InvalidateWindowAndDescs+0x24>
 80094bc:	f001 f933 	bl	800a726 <WM_InvalidateWindow>
 80094c0:	4620      	mov	r0, r4
 80094c2:	f000 fbe2 	bl	8009c8a <WM_GetFirstChild>
 80094c6:	4604      	mov	r4, r0
 80094c8:	b13c      	cbz	r4, 80094da <WM_InvalidateWindowAndDescs+0x24>
 80094ca:	4620      	mov	r0, r4
 80094cc:	f7ff fff3 	bl	80094b6 <WM_InvalidateWindowAndDescs>
 80094d0:	4620      	mov	r0, r4
 80094d2:	f006 ffab 	bl	801042c <GUI_ALLOC_h2p>
 80094d6:	6a04      	ldr	r4, [r0, #32]
 80094d8:	e7f6      	b.n	80094c8 <WM_InvalidateWindowAndDescs+0x12>
 80094da:	bd10      	pop	{r4, pc}

080094dc <WM_ShowWindow>:
 80094dc:	b513      	push	{r0, r1, r4, lr}
 80094de:	4604      	mov	r4, r0
 80094e0:	b170      	cbz	r0, 8009500 <WM_ShowWindow+0x24>
 80094e2:	f006 ffad 	bl	8010440 <GUI_ALLOC_LockH>
 80094e6:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80094e8:	9001      	str	r0, [sp, #4]
 80094ea:	0793      	lsls	r3, r2, #30
 80094ec:	d405      	bmi.n	80094fa <WM_ShowWindow+0x1e>
 80094ee:	f042 0202 	orr.w	r2, r2, #2
 80094f2:	6282      	str	r2, [r0, #40]	; 0x28
 80094f4:	4620      	mov	r0, r4
 80094f6:	f7ff ffde 	bl	80094b6 <WM_InvalidateWindowAndDescs>
 80094fa:	a801      	add	r0, sp, #4
 80094fc:	f006 ffae 	bl	801045c <GUI_ALLOC_UnlockH>
 8009500:	b002      	add	sp, #8
 8009502:	bd10      	pop	{r4, pc}

08009504 <WM_SetUserClipRect>:
 8009504:	4b04      	ldr	r3, [pc, #16]	; (8009518 <WM_SetUserClipRect+0x14>)
 8009506:	b510      	push	{r4, lr}
 8009508:	681b      	ldr	r3, [r3, #0]
 800950a:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 800950c:	6458      	str	r0, [r3, #68]	; 0x44
 800950e:	f000 ff63 	bl	800a3d8 <WM__ActivateClipRect>
 8009512:	4620      	mov	r0, r4
 8009514:	bd10      	pop	{r4, pc}
 8009516:	bf00      	nop
 8009518:	20000254 	.word	0x20000254

0800951c <WM_SetHasTrans>:
 800951c:	b513      	push	{r0, r1, r4, lr}
 800951e:	4604      	mov	r4, r0
 8009520:	b1b8      	cbz	r0, 8009552 <WM_SetHasTrans+0x36>
 8009522:	f006 ff8d 	bl	8010440 <GUI_ALLOC_LockH>
 8009526:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009528:	9001      	str	r0, [sp, #4]
 800952a:	07db      	lsls	r3, r3, #31
 800952c:	d40e      	bmi.n	800954c <WM_SetHasTrans+0x30>
 800952e:	4620      	mov	r0, r4
 8009530:	f008 fba0 	bl	8011c74 <WM_ValidateWindow>
 8009534:	9b01      	ldr	r3, [sp, #4]
 8009536:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8009538:	f042 0201 	orr.w	r2, r2, #1
 800953c:	629a      	str	r2, [r3, #40]	; 0x28
 800953e:	4b06      	ldr	r3, [pc, #24]	; (8009558 <WM_SetHasTrans+0x3c>)
 8009540:	681a      	ldr	r2, [r3, #0]
 8009542:	4620      	mov	r0, r4
 8009544:	3201      	adds	r2, #1
 8009546:	601a      	str	r2, [r3, #0]
 8009548:	f001 f8ed 	bl	800a726 <WM_InvalidateWindow>
 800954c:	a801      	add	r0, sp, #4
 800954e:	f006 ff85 	bl	801045c <GUI_ALLOC_UnlockH>
 8009552:	b002      	add	sp, #8
 8009554:	bd10      	pop	{r4, pc}
 8009556:	bf00      	nop
 8009558:	2001b368 	.word	0x2001b368

0800955c <WM_GetHasTrans>:
 800955c:	b508      	push	{r3, lr}
 800955e:	b128      	cbz	r0, 800956c <WM_GetHasTrans+0x10>
 8009560:	f006 ff64 	bl	801042c <GUI_ALLOC_h2p>
 8009564:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8009566:	f000 0001 	and.w	r0, r0, #1
 800956a:	bd08      	pop	{r3, pc}
 800956c:	bd08      	pop	{r3, pc}

0800956e <_SetScrollbar>:
 800956e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009570:	460d      	mov	r5, r1
 8009572:	4611      	mov	r1, r2
 8009574:	4606      	mov	r6, r0
 8009576:	461f      	mov	r7, r3
 8009578:	f000 fbac 	bl	8009cd4 <WM_GetDialogItem>
 800957c:	4604      	mov	r4, r0
 800957e:	b1a5      	cbz	r5, 80095aa <_SetScrollbar+0x3c>
 8009580:	b920      	cbnz	r0, 800958c <_SetScrollbar+0x1e>
 8009582:	4630      	mov	r0, r6
 8009584:	4639      	mov	r1, r7
 8009586:	f007 fdf4 	bl	8011172 <SCROLLBAR_CreateAttached>
 800958a:	e014      	b.n	80095b6 <_SetScrollbar+0x48>
 800958c:	f006 ff58 	bl	8010440 <GUI_ALLOC_LockH>
 8009590:	ab02      	add	r3, sp, #8
 8009592:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8009594:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009598:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800959c:	f042 0202 	orr.w	r2, r2, #2
 80095a0:	6282      	str	r2, [r0, #40]	; 0x28
 80095a2:	4618      	mov	r0, r3
 80095a4:	f006 ff5a 	bl	801045c <GUI_ALLOC_UnlockH>
 80095a8:	e005      	b.n	80095b6 <_SetScrollbar+0x48>
 80095aa:	b120      	cbz	r0, 80095b6 <_SetScrollbar+0x48>
 80095ac:	f000 fa4a 	bl	8009a44 <WM_HideWindow>
 80095b0:	4620      	mov	r0, r4
 80095b2:	f001 fc1b 	bl	800adec <WM__DeleteSecure>
 80095b6:	1c20      	adds	r0, r4, #0
 80095b8:	bf18      	it	ne
 80095ba:	2001      	movne	r0, #1
 80095bc:	b003      	add	sp, #12
 80095be:	bdf0      	pop	{r4, r5, r6, r7, pc}

080095c0 <WM__SetScrollbarV>:
 80095c0:	22fe      	movs	r2, #254	; 0xfe
 80095c2:	2308      	movs	r3, #8
 80095c4:	f7ff bfd3 	b.w	800956e <_SetScrollbar>

080095c8 <WM__SetScrollbarH>:
 80095c8:	22ff      	movs	r2, #255	; 0xff
 80095ca:	2300      	movs	r3, #0
 80095cc:	f7ff bfcf 	b.w	800956e <_SetScrollbar>

080095d0 <WM_SetScrollbarH>:
 80095d0:	f7ff bffa 	b.w	80095c8 <WM__SetScrollbarH>

080095d4 <WM_SetScrollbarV>:
 80095d4:	f7ff bff4 	b.w	80095c0 <WM__SetScrollbarV>

080095d8 <WM_SetScrollState>:
 80095d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80095da:	b130      	cbz	r0, 80095ea <WM_SetScrollState+0x12>
 80095dc:	b129      	cbz	r1, 80095ea <WM_SetScrollState+0x12>
 80095de:	2324      	movs	r3, #36	; 0x24
 80095e0:	9103      	str	r1, [sp, #12]
 80095e2:	4669      	mov	r1, sp
 80095e4:	9300      	str	r3, [sp, #0]
 80095e6:	f001 f847 	bl	800a678 <WM_SendMessage>
 80095ea:	b005      	add	sp, #20
 80095ec:	f85d fb04 	ldr.w	pc, [sp], #4

080095f0 <_GetPrevChild>:
 80095f0:	b510      	push	{r4, lr}
 80095f2:	4604      	mov	r4, r0
 80095f4:	b918      	cbnz	r0, 80095fe <_GetPrevChild+0xe>
 80095f6:	4620      	mov	r0, r4
 80095f8:	f008 fb14 	bl	8011c24 <WM__GetLastSibling>
 80095fc:	e003      	b.n	8009606 <_GetPrevChild+0x16>
 80095fe:	f008 fafe 	bl	8011bfe <WM__GetPrevSibling>
 8009602:	2800      	cmp	r0, #0
 8009604:	d0f7      	beq.n	80095f6 <_GetPrevChild+0x6>
 8009606:	42a0      	cmp	r0, r4
 8009608:	bf08      	it	eq
 800960a:	2000      	moveq	r0, #0
 800960c:	bd10      	pop	{r4, pc}

0800960e <WM_SetFocusOnPrevChild>:
 800960e:	b538      	push	{r3, r4, r5, lr}
 8009610:	4604      	mov	r4, r0
 8009612:	b1b0      	cbz	r0, 8009642 <WM_SetFocusOnPrevChild+0x34>
 8009614:	f008 fb12 	bl	8011c3c <WM__GetFocussedChild>
 8009618:	f7ff ffea 	bl	80095f0 <_GetPrevChild>
 800961c:	4605      	mov	r5, r0
 800961e:	4604      	mov	r4, r0
 8009620:	4620      	mov	r0, r4
 8009622:	f000 f9f6 	bl	8009a12 <WM_IsFocussable>
 8009626:	b930      	cbnz	r0, 8009636 <WM_SetFocusOnPrevChild+0x28>
 8009628:	b12c      	cbz	r4, 8009636 <WM_SetFocusOnPrevChild+0x28>
 800962a:	4620      	mov	r0, r4
 800962c:	f7ff ffe0 	bl	80095f0 <_GetPrevChild>
 8009630:	42a8      	cmp	r0, r5
 8009632:	4604      	mov	r4, r0
 8009634:	d1f4      	bne.n	8009620 <WM_SetFocusOnPrevChild+0x12>
 8009636:	4620      	mov	r0, r4
 8009638:	f000 f84a 	bl	80096d0 <WM_SetFocus>
 800963c:	2800      	cmp	r0, #0
 800963e:	bf18      	it	ne
 8009640:	2400      	movne	r4, #0
 8009642:	4620      	mov	r0, r4
 8009644:	bd38      	pop	{r3, r4, r5, pc}

08009646 <_GetNextChild>:
 8009646:	b538      	push	{r3, r4, r5, lr}
 8009648:	4605      	mov	r5, r0
 800964a:	460c      	mov	r4, r1
 800964c:	b921      	cbnz	r1, 8009658 <_GetNextChild+0x12>
 800964e:	4628      	mov	r0, r5
 8009650:	f006 feec 	bl	801042c <GUI_ALLOC_h2p>
 8009654:	69c0      	ldr	r0, [r0, #28]
 8009656:	e005      	b.n	8009664 <_GetNextChild+0x1e>
 8009658:	4608      	mov	r0, r1
 800965a:	f006 fee7 	bl	801042c <GUI_ALLOC_h2p>
 800965e:	6a00      	ldr	r0, [r0, #32]
 8009660:	2800      	cmp	r0, #0
 8009662:	d0f4      	beq.n	800964e <_GetNextChild+0x8>
 8009664:	42a0      	cmp	r0, r4
 8009666:	bf08      	it	eq
 8009668:	2000      	moveq	r0, #0
 800966a:	bd38      	pop	{r3, r4, r5, pc}

0800966c <WM_SetFocusOnNextChild>:
 800966c:	b570      	push	{r4, r5, r6, lr}
 800966e:	4605      	mov	r5, r0
 8009670:	b340      	cbz	r0, 80096c4 <WM_SetFocusOnNextChild+0x58>
 8009672:	f008 fae3 	bl	8011c3c <WM__GetFocussedChild>
 8009676:	4601      	mov	r1, r0
 8009678:	4628      	mov	r0, r5
 800967a:	f7ff ffe4 	bl	8009646 <_GetNextChild>
 800967e:	4606      	mov	r6, r0
 8009680:	4604      	mov	r4, r0
 8009682:	4620      	mov	r0, r4
 8009684:	f000 f9c5 	bl	8009a12 <WM_IsFocussable>
 8009688:	b938      	cbnz	r0, 800969a <WM_SetFocusOnNextChild+0x2e>
 800968a:	b13c      	cbz	r4, 800969c <WM_SetFocusOnNextChild+0x30>
 800968c:	4621      	mov	r1, r4
 800968e:	4628      	mov	r0, r5
 8009690:	f7ff ffd9 	bl	8009646 <_GetNextChild>
 8009694:	42b0      	cmp	r0, r6
 8009696:	4604      	mov	r4, r0
 8009698:	d1f3      	bne.n	8009682 <WM_SetFocusOnNextChild+0x16>
 800969a:	b90c      	cbnz	r4, 80096a0 <WM_SetFocusOnNextChild+0x34>
 800969c:	2400      	movs	r4, #0
 800969e:	e012      	b.n	80096c6 <WM_SetFocusOnNextChild+0x5a>
 80096a0:	4d0a      	ldr	r5, [pc, #40]	; (80096cc <WM_SetFocusOnNextChild+0x60>)
 80096a2:	4620      	mov	r0, r4
 80096a4:	682e      	ldr	r6, [r5, #0]
 80096a6:	f001 f841 	bl	800a72c <WM__GetTopLevelLayer>
 80096aa:	3001      	adds	r0, #1
 80096ac:	d00b      	beq.n	80096c6 <WM_SetFocusOnNextChild+0x5a>
 80096ae:	4620      	mov	r0, r4
 80096b0:	f001 f83c 	bl	800a72c <WM__GetTopLevelLayer>
 80096b4:	6028      	str	r0, [r5, #0]
 80096b6:	4620      	mov	r0, r4
 80096b8:	f000 f80a 	bl	80096d0 <WM_SetFocus>
 80096bc:	602e      	str	r6, [r5, #0]
 80096be:	2800      	cmp	r0, #0
 80096c0:	d1ec      	bne.n	800969c <WM_SetFocusOnNextChild+0x30>
 80096c2:	e000      	b.n	80096c6 <WM_SetFocusOnNextChild+0x5a>
 80096c4:	4604      	mov	r4, r0
 80096c6:	4620      	mov	r0, r4
 80096c8:	bd70      	pop	{r4, r5, r6, pc}
 80096ca:	bf00      	nop
 80096cc:	2001b340 	.word	0x2001b340

080096d0 <WM_SetFocus>:
 80096d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80096d2:	b087      	sub	sp, #28
 80096d4:	4604      	mov	r4, r0
 80096d6:	2100      	movs	r1, #0
 80096d8:	a802      	add	r0, sp, #8
 80096da:	2210      	movs	r2, #16
 80096dc:	f00c fd71 	bl	80161c2 <memset>
 80096e0:	2c00      	cmp	r4, #0
 80096e2:	d03a      	beq.n	800975a <WM_SetFocus+0x8a>
 80096e4:	4b1f      	ldr	r3, [pc, #124]	; (8009764 <WM_SetFocus+0x94>)
 80096e6:	4a20      	ldr	r2, [pc, #128]	; (8009768 <WM_SetFocus+0x98>)
 80096e8:	6819      	ldr	r1, [r3, #0]
 80096ea:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 80096ee:	4284      	cmp	r4, r0
 80096f0:	4616      	mov	r6, r2
 80096f2:	461f      	mov	r7, r3
 80096f4:	d031      	beq.n	800975a <WM_SetFocus+0x8a>
 80096f6:	231e      	movs	r3, #30
 80096f8:	e88d 0011 	stmia.w	sp, {r0, r4}
 80096fc:	9302      	str	r3, [sp, #8]
 80096fe:	b110      	cbz	r0, 8009706 <WM_SetFocus+0x36>
 8009700:	a902      	add	r1, sp, #8
 8009702:	f008 fa55 	bl	8011bb0 <WM__SendMessage>
 8009706:	2301      	movs	r3, #1
 8009708:	4620      	mov	r0, r4
 800970a:	a902      	add	r1, sp, #8
 800970c:	9305      	str	r3, [sp, #20]
 800970e:	f008 fa4f 	bl	8011bb0 <WM__SendMessage>
 8009712:	9d05      	ldr	r5, [sp, #20]
 8009714:	bb15      	cbnz	r5, 800975c <WM_SetFocus+0x8c>
 8009716:	683b      	ldr	r3, [r7, #0]
 8009718:	f846 4023 	str.w	r4, [r6, r3, lsl #2]
 800971c:	4620      	mov	r0, r4
 800971e:	f000 fa0b 	bl	8009b38 <WM_GetParent>
 8009722:	4604      	mov	r4, r0
 8009724:	b138      	cbz	r0, 8009736 <WM_SetFocus+0x66>
 8009726:	2320      	movs	r3, #32
 8009728:	9302      	str	r3, [sp, #8]
 800972a:	a902      	add	r1, sp, #8
 800972c:	ab00      	add	r3, sp, #0
 800972e:	9305      	str	r3, [sp, #20]
 8009730:	f008 fa3e 	bl	8011bb0 <WM__SendMessage>
 8009734:	e7f2      	b.n	800971c <WM_SetFocus+0x4c>
 8009736:	9c00      	ldr	r4, [sp, #0]
 8009738:	4620      	mov	r0, r4
 800973a:	f000 f968 	bl	8009a0e <WM_IsWindow>
 800973e:	b168      	cbz	r0, 800975c <WM_SetFocus+0x8c>
 8009740:	4620      	mov	r0, r4
 8009742:	f000 f9f9 	bl	8009b38 <WM_GetParent>
 8009746:	4604      	mov	r4, r0
 8009748:	b140      	cbz	r0, 800975c <WM_SetFocus+0x8c>
 800974a:	2320      	movs	r3, #32
 800974c:	9302      	str	r3, [sp, #8]
 800974e:	a902      	add	r1, sp, #8
 8009750:	ab00      	add	r3, sp, #0
 8009752:	9305      	str	r3, [sp, #20]
 8009754:	f008 fa2c 	bl	8011bb0 <WM__SendMessage>
 8009758:	e7f2      	b.n	8009740 <WM_SetFocus+0x70>
 800975a:	2501      	movs	r5, #1
 800975c:	4628      	mov	r0, r5
 800975e:	b007      	add	sp, #28
 8009760:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009762:	bf00      	nop
 8009764:	2001b340 	.word	0x2001b340
 8009768:	2001b330 	.word	0x2001b330

0800976c <WM_SetCreateFlags>:
 800976c:	4b02      	ldr	r3, [pc, #8]	; (8009778 <WM_SetCreateFlags+0xc>)
 800976e:	681a      	ldr	r2, [r3, #0]
 8009770:	6018      	str	r0, [r3, #0]
 8009772:	4610      	mov	r0, r2
 8009774:	4770      	bx	lr
 8009776:	bf00      	nop
 8009778:	2001b348 	.word	0x2001b348

0800977c <WM__ReleaseCapture>:
 800977c:	b530      	push	{r4, r5, lr}
 800977e:	4d0a      	ldr	r5, [pc, #40]	; (80097a8 <WM__ReleaseCapture+0x2c>)
 8009780:	4c0a      	ldr	r4, [pc, #40]	; (80097ac <WM__ReleaseCapture+0x30>)
 8009782:	682b      	ldr	r3, [r5, #0]
 8009784:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8009788:	b085      	sub	sp, #20
 800978a:	b150      	cbz	r0, 80097a2 <WM__ReleaseCapture+0x26>
 800978c:	a904      	add	r1, sp, #16
 800978e:	2318      	movs	r3, #24
 8009790:	f841 3d10 	str.w	r3, [r1, #-16]!
 8009794:	4669      	mov	r1, sp
 8009796:	f008 fa0b 	bl	8011bb0 <WM__SendMessage>
 800979a:	682b      	ldr	r3, [r5, #0]
 800979c:	2200      	movs	r2, #0
 800979e:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 80097a2:	b005      	add	sp, #20
 80097a4:	bd30      	pop	{r4, r5, pc}
 80097a6:	bf00      	nop
 80097a8:	2001b340 	.word	0x2001b340
 80097ac:	2001b35c 	.word	0x2001b35c

080097b0 <WM_SetCapture>:
 80097b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80097b2:	4b09      	ldr	r3, [pc, #36]	; (80097d8 <WM_SetCapture+0x28>)
 80097b4:	4a09      	ldr	r2, [pc, #36]	; (80097dc <WM_SetCapture+0x2c>)
 80097b6:	4604      	mov	r4, r0
 80097b8:	6818      	ldr	r0, [r3, #0]
 80097ba:	460f      	mov	r7, r1
 80097bc:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
 80097c0:	42a1      	cmp	r1, r4
 80097c2:	4615      	mov	r5, r2
 80097c4:	461e      	mov	r6, r3
 80097c6:	d001      	beq.n	80097cc <WM_SetCapture+0x1c>
 80097c8:	f7ff ffd8 	bl	800977c <WM__ReleaseCapture>
 80097cc:	6833      	ldr	r3, [r6, #0]
 80097ce:	f845 4023 	str.w	r4, [r5, r3, lsl #2]
 80097d2:	4b03      	ldr	r3, [pc, #12]	; (80097e0 <WM_SetCapture+0x30>)
 80097d4:	701f      	strb	r7, [r3, #0]
 80097d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80097d8:	2001b340 	.word	0x2001b340
 80097dc:	2001b35c 	.word	0x2001b35c
 80097e0:	2001b344 	.word	0x2001b344

080097e4 <WM_ReleaseCapture>:
 80097e4:	f7ff bfca 	b.w	800977c <WM__ReleaseCapture>

080097e8 <WM_SendMessageNoPara>:
 80097e8:	f008 b9ce 	b.w	8011b88 <WM__SendMessageNoPara>

080097ec <WM_ResizeWindow>:
 80097ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80097f0:	ea51 0302 	orrs.w	r3, r1, r2
 80097f4:	b08a      	sub	sp, #40	; 0x28
 80097f6:	4680      	mov	r8, r0
 80097f8:	460e      	mov	r6, r1
 80097fa:	4617      	mov	r7, r2
 80097fc:	d06e      	beq.n	80098dc <WM_ResizeWindow+0xf0>
 80097fe:	2800      	cmp	r0, #0
 8009800:	d06c      	beq.n	80098dc <WM_ResizeWindow+0xf0>
 8009802:	f006 fe1d 	bl	8010440 <GUI_ALLOC_LockH>
 8009806:	4603      	mov	r3, r0
 8009808:	9003      	str	r0, [sp, #12]
 800980a:	c803      	ldmia	r0, {r0, r1}
 800980c:	ad04      	add	r5, sp, #16
 800980e:	ac06      	add	r4, sp, #24
 8009810:	e885 0003 	stmia.w	r5, {r0, r1}
 8009814:	e884 0003 	stmia.w	r4, {r0, r1}
 8009818:	b17e      	cbz	r6, 800983a <WM_ResizeWindow+0x4e>
 800981a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800981c:	f402 7220 	and.w	r2, r2, #640	; 0x280
 8009820:	2a80      	cmp	r2, #128	; 0x80
 8009822:	d105      	bne.n	8009830 <WM_ResizeWindow+0x44>
 8009824:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 8009828:	1b96      	subs	r6, r2, r6
 800982a:	f8ad 6018 	strh.w	r6, [sp, #24]
 800982e:	e004      	b.n	800983a <WM_ResizeWindow+0x4e>
 8009830:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8009834:	4416      	add	r6, r2
 8009836:	f8ad 601c 	strh.w	r6, [sp, #28]
 800983a:	b187      	cbz	r7, 800985e <WM_ResizeWindow+0x72>
 800983c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800983e:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 8009842:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8009846:	d105      	bne.n	8009854 <WM_ResizeWindow+0x68>
 8009848:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800984c:	1bd7      	subs	r7, r2, r7
 800984e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8009852:	e004      	b.n	800985e <WM_ResizeWindow+0x72>
 8009854:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8009858:	4417      	add	r7, r2
 800985a:	f8ad 701e 	strh.w	r7, [sp, #30]
 800985e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009860:	03da      	lsls	r2, r3, #15
 8009862:	d502      	bpl.n	800986a <WM_ResizeWindow+0x7e>
 8009864:	4640      	mov	r0, r8
 8009866:	f000 fdeb 	bl	800a440 <WM__InvalidateDrawAndDescs>
 800986a:	e894 0003 	ldmia.w	r4, {r0, r1}
 800986e:	9b03      	ldr	r3, [sp, #12]
 8009870:	e883 0003 	stmia.w	r3, {r0, r1}
 8009874:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009876:	079b      	lsls	r3, r3, #30
 8009878:	d50a      	bpl.n	8009890 <WM_ResizeWindow+0xa4>
 800987a:	a808      	add	r0, sp, #32
 800987c:	4629      	mov	r1, r5
 800987e:	4622      	mov	r2, r4
 8009880:	f005 fc5e 	bl	800f140 <GUI_MergeRect>
 8009884:	9b03      	ldr	r3, [sp, #12]
 8009886:	a808      	add	r0, sp, #32
 8009888:	6999      	ldr	r1, [r3, #24]
 800988a:	6a1a      	ldr	r2, [r3, #32]
 800988c:	f000 fedc 	bl	800a648 <WM__InvalidateRectEx>
 8009890:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8009894:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8009898:	f9bd 701e 	ldrsh.w	r7, [sp, #30]
 800989c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80098a0:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 80098a4:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 80098a8:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 80098ac:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 80098b0:	1ae3      	subs	r3, r4, r3
 80098b2:	1a38      	subs	r0, r7, r0
 80098b4:	ac0a      	add	r4, sp, #40	; 0x28
 80098b6:	1aaa      	subs	r2, r5, r2
 80098b8:	9000      	str	r0, [sp, #0]
 80098ba:	1a71      	subs	r1, r6, r1
 80098bc:	9803      	ldr	r0, [sp, #12]
 80098be:	f7ff fd60 	bl	8009382 <WM__UpdateChildPositions>
 80098c2:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 80098c6:	f101 0008 	add.w	r0, r1, #8
 80098ca:	f004 fb69 	bl	800dfa0 <GUI__IntersectRect>
 80098ce:	4640      	mov	r0, r8
 80098d0:	2105      	movs	r1, #5
 80098d2:	f000 fed5 	bl	800a680 <WM__SendMsgNoData>
 80098d6:	4620      	mov	r0, r4
 80098d8:	f006 fdc0 	bl	801045c <GUI_ALLOC_UnlockH>
 80098dc:	b00a      	add	sp, #40	; 0x28
 80098de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080098e2 <WM_NotifyParent>:
 80098e2:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80098e4:	2326      	movs	r3, #38	; 0x26
 80098e6:	9103      	str	r1, [sp, #12]
 80098e8:	4669      	mov	r1, sp
 80098ea:	9300      	str	r3, [sp, #0]
 80098ec:	f008 fcbe 	bl	801226c <WM_SendToParent>
 80098f0:	b005      	add	sp, #20
 80098f2:	f85d fb04 	ldr.w	pc, [sp], #4

080098f6 <_MoveDescendents>:
 80098f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80098fa:	b088      	sub	sp, #32
 80098fc:	4606      	mov	r6, r0
 80098fe:	460c      	mov	r4, r1
 8009900:	4615      	mov	r5, r2
 8009902:	a804      	add	r0, sp, #16
 8009904:	2100      	movs	r1, #0
 8009906:	2210      	movs	r2, #16
 8009908:	f00c fc5b 	bl	80161c2 <memset>
 800990c:	b336      	cbz	r6, 800995c <_MoveDescendents+0x66>
 800990e:	4630      	mov	r0, r6
 8009910:	f006 fd96 	bl	8010440 <GUI_ALLOC_LockH>
 8009914:	4621      	mov	r1, r4
 8009916:	462a      	mov	r2, r5
 8009918:	9001      	str	r0, [sp, #4]
 800991a:	f005 fc01 	bl	800f120 <GUI_MoveRect>
 800991e:	9801      	ldr	r0, [sp, #4]
 8009920:	4621      	mov	r1, r4
 8009922:	3008      	adds	r0, #8
 8009924:	462a      	mov	r2, r5
 8009926:	f005 fbfb 	bl	800f120 <GUI_MoveRect>
 800992a:	a808      	add	r0, sp, #32
 800992c:	f850 2d1c 	ldr.w	r2, [r0, #-28]!
 8009930:	f8d2 801c 	ldr.w	r8, [r2, #28]
 8009934:	6a17      	ldr	r7, [r2, #32]
 8009936:	f006 fd91 	bl	801045c <GUI_ALLOC_UnlockH>
 800993a:	4640      	mov	r0, r8
 800993c:	4621      	mov	r1, r4
 800993e:	462a      	mov	r2, r5
 8009940:	f7ff ffd9 	bl	80098f6 <_MoveDescendents>
 8009944:	2303      	movs	r3, #3
 8009946:	9304      	str	r3, [sp, #16]
 8009948:	4630      	mov	r0, r6
 800994a:	ab02      	add	r3, sp, #8
 800994c:	a904      	add	r1, sp, #16
 800994e:	9307      	str	r3, [sp, #28]
 8009950:	9402      	str	r4, [sp, #8]
 8009952:	9503      	str	r5, [sp, #12]
 8009954:	463e      	mov	r6, r7
 8009956:	f008 f92b 	bl	8011bb0 <WM__SendMessage>
 800995a:	e7d7      	b.n	800990c <_MoveDescendents+0x16>
 800995c:	b008      	add	sp, #32
 800995e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009962 <WM__MoveWindow>:
 8009962:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009966:	b08b      	sub	sp, #44	; 0x2c
 8009968:	4606      	mov	r6, r0
 800996a:	460d      	mov	r5, r1
 800996c:	4614      	mov	r4, r2
 800996e:	a806      	add	r0, sp, #24
 8009970:	2100      	movs	r1, #0
 8009972:	2210      	movs	r2, #16
 8009974:	f00c fc25 	bl	80161c2 <memset>
 8009978:	2e00      	cmp	r6, #0
 800997a:	d043      	beq.n	8009a04 <WM__MoveWindow+0xa2>
 800997c:	b90d      	cbnz	r5, 8009982 <WM__MoveWindow+0x20>
 800997e:	2c00      	cmp	r4, #0
 8009980:	d040      	beq.n	8009a04 <WM__MoveWindow+0xa2>
 8009982:	4630      	mov	r0, r6
 8009984:	f006 fd5c 	bl	8010440 <GUI_ALLOC_LockH>
 8009988:	4603      	mov	r3, r0
 800998a:	9001      	str	r0, [sp, #4]
 800998c:	c803      	ldmia	r0, {r0, r1}
 800998e:	f10d 0808 	add.w	r8, sp, #8
 8009992:	e888 0003 	stmia.w	r8, {r0, r1}
 8009996:	4622      	mov	r2, r4
 8009998:	4618      	mov	r0, r3
 800999a:	4629      	mov	r1, r5
 800999c:	f005 fbc0 	bl	800f120 <GUI_MoveRect>
 80099a0:	9801      	ldr	r0, [sp, #4]
 80099a2:	af0a      	add	r7, sp, #40	; 0x28
 80099a4:	4629      	mov	r1, r5
 80099a6:	4622      	mov	r2, r4
 80099a8:	3008      	adds	r0, #8
 80099aa:	f005 fbb9 	bl	800f120 <GUI_MoveRect>
 80099ae:	f857 3d24 	ldr.w	r3, [r7, #-36]!
 80099b2:	f8d3 901c 	ldr.w	r9, [r3, #28]
 80099b6:	4638      	mov	r0, r7
 80099b8:	f006 fd50 	bl	801045c <GUI_ALLOC_UnlockH>
 80099bc:	4622      	mov	r2, r4
 80099be:	4648      	mov	r0, r9
 80099c0:	4629      	mov	r1, r5
 80099c2:	f7ff ff98 	bl	80098f6 <_MoveDescendents>
 80099c6:	4630      	mov	r0, r6
 80099c8:	f006 fd3a 	bl	8010440 <GUI_ALLOC_LockH>
 80099cc:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80099ce:	9001      	str	r0, [sp, #4]
 80099d0:	0792      	lsls	r2, r2, #30
 80099d2:	d50a      	bpl.n	80099ea <WM__MoveWindow+0x88>
 80099d4:	6981      	ldr	r1, [r0, #24]
 80099d6:	b141      	cbz	r1, 80099ea <WM__MoveWindow+0x88>
 80099d8:	6a02      	ldr	r2, [r0, #32]
 80099da:	f000 fe20 	bl	800a61e <WM__InvalidateParent>
 80099de:	9b01      	ldr	r3, [sp, #4]
 80099e0:	4640      	mov	r0, r8
 80099e2:	6999      	ldr	r1, [r3, #24]
 80099e4:	6a1a      	ldr	r2, [r3, #32]
 80099e6:	f000 fe1a 	bl	800a61e <WM__InvalidateParent>
 80099ea:	4638      	mov	r0, r7
 80099ec:	f006 fd36 	bl	801045c <GUI_ALLOC_UnlockH>
 80099f0:	2303      	movs	r3, #3
 80099f2:	9306      	str	r3, [sp, #24]
 80099f4:	4630      	mov	r0, r6
 80099f6:	ab04      	add	r3, sp, #16
 80099f8:	a906      	add	r1, sp, #24
 80099fa:	9309      	str	r3, [sp, #36]	; 0x24
 80099fc:	9504      	str	r5, [sp, #16]
 80099fe:	9405      	str	r4, [sp, #20]
 8009a00:	f008 f8d6 	bl	8011bb0 <WM__SendMessage>
 8009a04:	b00b      	add	sp, #44	; 0x2c
 8009a06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08009a0a <WM_MoveWindow>:
 8009a0a:	f7ff bfaa 	b.w	8009962 <WM__MoveWindow>

08009a0e <WM_IsWindow>:
 8009a0e:	f000 bd07 	b.w	800a420 <WM__IsWindow>

08009a12 <WM_IsFocussable>:
 8009a12:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009a14:	4604      	mov	r4, r0
 8009a16:	b908      	cbnz	r0, 8009a1c <WM_IsFocussable+0xa>
 8009a18:	2000      	movs	r0, #0
 8009a1a:	e011      	b.n	8009a40 <WM_IsFocussable+0x2e>
 8009a1c:	f006 fd06 	bl	801042c <GUI_ALLOC_h2p>
 8009a20:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009a22:	079a      	lsls	r2, r3, #30
 8009a24:	d5f8      	bpl.n	8009a18 <WM_IsFocussable+0x6>
 8009a26:	f013 0310 	ands.w	r3, r3, #16
 8009a2a:	d1f5      	bne.n	8009a18 <WM_IsFocussable+0x6>
 8009a2c:	a904      	add	r1, sp, #16
 8009a2e:	9303      	str	r3, [sp, #12]
 8009a30:	231f      	movs	r3, #31
 8009a32:	f841 3d10 	str.w	r3, [r1, #-16]!
 8009a36:	4620      	mov	r0, r4
 8009a38:	4669      	mov	r1, sp
 8009a3a:	f000 fe1d 	bl	800a678 <WM_SendMessage>
 8009a3e:	9803      	ldr	r0, [sp, #12]
 8009a40:	b004      	add	sp, #16
 8009a42:	bd10      	pop	{r4, pc}

08009a44 <WM_HideWindow>:
 8009a44:	b513      	push	{r0, r1, r4, lr}
 8009a46:	b188      	cbz	r0, 8009a6c <WM_HideWindow+0x28>
 8009a48:	f006 fcfa 	bl	8010440 <GUI_ALLOC_LockH>
 8009a4c:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8009a4e:	ac02      	add	r4, sp, #8
 8009a50:	0791      	lsls	r1, r2, #30
 8009a52:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009a56:	d506      	bpl.n	8009a66 <WM_HideWindow+0x22>
 8009a58:	f022 0202 	bic.w	r2, r2, #2
 8009a5c:	6282      	str	r2, [r0, #40]	; 0x28
 8009a5e:	6981      	ldr	r1, [r0, #24]
 8009a60:	6a02      	ldr	r2, [r0, #32]
 8009a62:	f000 fdf1 	bl	800a648 <WM__InvalidateRectEx>
 8009a66:	4620      	mov	r0, r4
 8009a68:	f006 fcf8 	bl	801045c <GUI_ALLOC_UnlockH>
 8009a6c:	b002      	add	sp, #8
 8009a6e:	bd10      	pop	{r4, pc}

08009a70 <WM_HasFocus>:
 8009a70:	4b04      	ldr	r3, [pc, #16]	; (8009a84 <WM_HasFocus+0x14>)
 8009a72:	681a      	ldr	r2, [r3, #0]
 8009a74:	4b04      	ldr	r3, [pc, #16]	; (8009a88 <WM_HasFocus+0x18>)
 8009a76:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009a7a:	1ac3      	subs	r3, r0, r3
 8009a7c:	4258      	negs	r0, r3
 8009a7e:	4158      	adcs	r0, r3
 8009a80:	4770      	bx	lr
 8009a82:	bf00      	nop
 8009a84:	2001b340 	.word	0x2001b340
 8009a88:	2001b330 	.word	0x2001b330

08009a8c <WM_GetWindowSizeX>:
 8009a8c:	b513      	push	{r0, r1, r4, lr}
 8009a8e:	b908      	cbnz	r0, 8009a94 <WM_GetWindowSizeX+0x8>
 8009a90:	f000 ffbe 	bl	800aa10 <WM_GetActiveWindow>
 8009a94:	f006 fcd4 	bl	8010440 <GUI_ALLOC_LockH>
 8009a98:	ab02      	add	r3, sp, #8
 8009a9a:	f9b0 2000 	ldrsh.w	r2, [r0]
 8009a9e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009aa2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8009aa6:	4618      	mov	r0, r3
 8009aa8:	1aa4      	subs	r4, r4, r2
 8009aaa:	f006 fcd7 	bl	801045c <GUI_ALLOC_UnlockH>
 8009aae:	3401      	adds	r4, #1
 8009ab0:	4620      	mov	r0, r4
 8009ab2:	b002      	add	sp, #8
 8009ab4:	bd10      	pop	{r4, pc}

08009ab6 <WM_GetWindowSizeY>:
 8009ab6:	b513      	push	{r0, r1, r4, lr}
 8009ab8:	b908      	cbnz	r0, 8009abe <WM_GetWindowSizeY+0x8>
 8009aba:	f000 ffa9 	bl	800aa10 <WM_GetActiveWindow>
 8009abe:	f006 fcbf 	bl	8010440 <GUI_ALLOC_LockH>
 8009ac2:	ab02      	add	r3, sp, #8
 8009ac4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8009ac8:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009acc:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8009ad0:	4618      	mov	r0, r3
 8009ad2:	1aa4      	subs	r4, r4, r2
 8009ad4:	f006 fcc2 	bl	801045c <GUI_ALLOC_UnlockH>
 8009ad8:	3401      	adds	r4, #1
 8009ada:	4620      	mov	r0, r4
 8009adc:	b002      	add	sp, #8
 8009ade:	bd10      	pop	{r4, pc}

08009ae0 <_GetDialogItem>:
 8009ae0:	b570      	push	{r4, r5, r6, lr}
 8009ae2:	4606      	mov	r6, r0
 8009ae4:	460d      	mov	r5, r1
 8009ae6:	f006 fca1 	bl	801042c <GUI_ALLOC_h2p>
 8009aea:	69c4      	ldr	r4, [r0, #28]
 8009aec:	b14c      	cbz	r4, 8009b02 <_GetDialogItem+0x22>
 8009aee:	4620      	mov	r0, r4
 8009af0:	f000 f8aa 	bl	8009c48 <WM_GetId>
 8009af4:	42a8      	cmp	r0, r5
 8009af6:	4620      	mov	r0, r4
 8009af8:	d013      	beq.n	8009b22 <_GetDialogItem+0x42>
 8009afa:	f006 fc97 	bl	801042c <GUI_ALLOC_h2p>
 8009afe:	6a04      	ldr	r4, [r0, #32]
 8009b00:	e7f4      	b.n	8009aec <_GetDialogItem+0xc>
 8009b02:	4630      	mov	r0, r6
 8009b04:	f006 fc92 	bl	801042c <GUI_ALLOC_h2p>
 8009b08:	69c4      	ldr	r4, [r0, #28]
 8009b0a:	4620      	mov	r0, r4
 8009b0c:	b144      	cbz	r4, 8009b20 <_GetDialogItem+0x40>
 8009b0e:	4629      	mov	r1, r5
 8009b10:	f7ff ffe6 	bl	8009ae0 <_GetDialogItem>
 8009b14:	b928      	cbnz	r0, 8009b22 <_GetDialogItem+0x42>
 8009b16:	4620      	mov	r0, r4
 8009b18:	f006 fc88 	bl	801042c <GUI_ALLOC_h2p>
 8009b1c:	6a04      	ldr	r4, [r0, #32]
 8009b1e:	e7f4      	b.n	8009b0a <_GetDialogItem+0x2a>
 8009b20:	bd70      	pop	{r4, r5, r6, pc}
 8009b22:	bd70      	pop	{r4, r5, r6, pc}

08009b24 <WM_GetScrollbarH>:
 8009b24:	b110      	cbz	r0, 8009b2c <WM_GetScrollbarH+0x8>
 8009b26:	21ff      	movs	r1, #255	; 0xff
 8009b28:	f7ff bfda 	b.w	8009ae0 <_GetDialogItem>
 8009b2c:	4770      	bx	lr

08009b2e <WM_GetScrollbarV>:
 8009b2e:	b110      	cbz	r0, 8009b36 <WM_GetScrollbarV+0x8>
 8009b30:	21fe      	movs	r1, #254	; 0xfe
 8009b32:	f7ff bfd5 	b.w	8009ae0 <_GetDialogItem>
 8009b36:	4770      	bx	lr

08009b38 <WM_GetParent>:
 8009b38:	b508      	push	{r3, lr}
 8009b3a:	4603      	mov	r3, r0
 8009b3c:	b110      	cbz	r0, 8009b44 <WM_GetParent+0xc>
 8009b3e:	f006 fc75 	bl	801042c <GUI_ALLOC_h2p>
 8009b42:	6983      	ldr	r3, [r0, #24]
 8009b44:	4618      	mov	r0, r3
 8009b46:	bd08      	pop	{r3, pc}

08009b48 <WM_GetWindowOrgX>:
 8009b48:	b508      	push	{r3, lr}
 8009b4a:	b120      	cbz	r0, 8009b56 <WM_GetWindowOrgX+0xe>
 8009b4c:	f006 fc6e 	bl	801042c <GUI_ALLOC_h2p>
 8009b50:	f9b0 0000 	ldrsh.w	r0, [r0]
 8009b54:	bd08      	pop	{r3, pc}
 8009b56:	bd08      	pop	{r3, pc}

08009b58 <WM_GetWindowOrgY>:
 8009b58:	b508      	push	{r3, lr}
 8009b5a:	b120      	cbz	r0, 8009b66 <WM_GetWindowOrgY+0xe>
 8009b5c:	f006 fc66 	bl	801042c <GUI_ALLOC_h2p>
 8009b60:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 8009b64:	bd08      	pop	{r3, pc}
 8009b66:	bd08      	pop	{r3, pc}

08009b68 <WM_GetOrgX>:
 8009b68:	4b02      	ldr	r3, [pc, #8]	; (8009b74 <WM_GetOrgX+0xc>)
 8009b6a:	681b      	ldr	r3, [r3, #0]
 8009b6c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8009b6e:	f7ff bfeb 	b.w	8009b48 <WM_GetWindowOrgX>
 8009b72:	bf00      	nop
 8009b74:	20000254 	.word	0x20000254

08009b78 <WM_GetOrgY>:
 8009b78:	4b02      	ldr	r3, [pc, #8]	; (8009b84 <WM_GetOrgY+0xc>)
 8009b7a:	681b      	ldr	r3, [r3, #0]
 8009b7c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8009b7e:	f7ff bfeb 	b.w	8009b58 <WM_GetWindowOrgY>
 8009b82:	bf00      	nop
 8009b84:	20000254 	.word	0x20000254

08009b88 <WM_GetInsideRectExScrollbar>:
 8009b88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009b8a:	460c      	mov	r4, r1
 8009b8c:	b087      	sub	sp, #28
 8009b8e:	4606      	mov	r6, r0
 8009b90:	2800      	cmp	r0, #0
 8009b92:	d04b      	beq.n	8009c2c <WM_GetInsideRectExScrollbar+0xa4>
 8009b94:	2900      	cmp	r1, #0
 8009b96:	d049      	beq.n	8009c2c <WM_GetInsideRectExScrollbar+0xa4>
 8009b98:	21ff      	movs	r1, #255	; 0xff
 8009b9a:	f000 f89b 	bl	8009cd4 <WM_GetDialogItem>
 8009b9e:	21fe      	movs	r1, #254	; 0xfe
 8009ba0:	4605      	mov	r5, r0
 8009ba2:	4630      	mov	r0, r6
 8009ba4:	f000 f896 	bl	8009cd4 <WM_GetDialogItem>
 8009ba8:	4669      	mov	r1, sp
 8009baa:	4607      	mov	r7, r0
 8009bac:	4630      	mov	r0, r6
 8009bae:	f008 fbeb 	bl	8012388 <WM_GetWindowRectEx>
 8009bb2:	4630      	mov	r0, r6
 8009bb4:	a902      	add	r1, sp, #8
 8009bb6:	f000 f83b 	bl	8009c30 <WM_GetInsideRectEx>
 8009bba:	b1c7      	cbz	r7, 8009bee <WM_GetInsideRectExScrollbar+0x66>
 8009bbc:	4638      	mov	r0, r7
 8009bbe:	a904      	add	r1, sp, #16
 8009bc0:	f008 fbe2 	bl	8012388 <WM_GetWindowRectEx>
 8009bc4:	f9bd 1000 	ldrsh.w	r1, [sp]
 8009bc8:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 8009bcc:	a804      	add	r0, sp, #16
 8009bce:	4249      	negs	r1, r1
 8009bd0:	4252      	negs	r2, r2
 8009bd2:	f005 faa5 	bl	800f120 <GUI_MoveRect>
 8009bd6:	4638      	mov	r0, r7
 8009bd8:	f000 f850 	bl	8009c7c <WM_GetFlags>
 8009bdc:	f000 0082 	and.w	r0, r0, #130	; 0x82
 8009be0:	2882      	cmp	r0, #130	; 0x82
 8009be2:	d104      	bne.n	8009bee <WM_GetInsideRectExScrollbar+0x66>
 8009be4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8009be8:	3b01      	subs	r3, #1
 8009bea:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009bee:	b1cd      	cbz	r5, 8009c24 <WM_GetInsideRectExScrollbar+0x9c>
 8009bf0:	4628      	mov	r0, r5
 8009bf2:	a904      	add	r1, sp, #16
 8009bf4:	f008 fbc8 	bl	8012388 <WM_GetWindowRectEx>
 8009bf8:	f9bd 1000 	ldrsh.w	r1, [sp]
 8009bfc:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 8009c00:	a804      	add	r0, sp, #16
 8009c02:	4249      	negs	r1, r1
 8009c04:	4252      	negs	r2, r2
 8009c06:	f005 fa8b 	bl	800f120 <GUI_MoveRect>
 8009c0a:	4628      	mov	r0, r5
 8009c0c:	f000 f836 	bl	8009c7c <WM_GetFlags>
 8009c10:	f400 7081 	and.w	r0, r0, #258	; 0x102
 8009c14:	f5b0 7f81 	cmp.w	r0, #258	; 0x102
 8009c18:	d104      	bne.n	8009c24 <WM_GetInsideRectExScrollbar+0x9c>
 8009c1a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009c1e:	3b01      	subs	r3, #1
 8009c20:	f8ad 300e 	strh.w	r3, [sp, #14]
 8009c24:	ab02      	add	r3, sp, #8
 8009c26:	cb03      	ldmia	r3!, {r0, r1}
 8009c28:	6020      	str	r0, [r4, #0]
 8009c2a:	6061      	str	r1, [r4, #4]
 8009c2c:	b007      	add	sp, #28
 8009c2e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009c30 <WM_GetInsideRectEx>:
 8009c30:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009c32:	9103      	str	r1, [sp, #12]
 8009c34:	a904      	add	r1, sp, #16
 8009c36:	2314      	movs	r3, #20
 8009c38:	f841 3d10 	str.w	r3, [r1, #-16]!
 8009c3c:	4669      	mov	r1, sp
 8009c3e:	f000 fd1b 	bl	800a678 <WM_SendMessage>
 8009c42:	b005      	add	sp, #20
 8009c44:	f85d fb04 	ldr.w	pc, [sp], #4

08009c48 <WM_GetId>:
 8009c48:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009c4a:	4604      	mov	r4, r0
 8009c4c:	2210      	movs	r2, #16
 8009c4e:	4668      	mov	r0, sp
 8009c50:	2100      	movs	r1, #0
 8009c52:	f00c fab6 	bl	80161c2 <memset>
 8009c56:	2315      	movs	r3, #21
 8009c58:	4620      	mov	r0, r4
 8009c5a:	4669      	mov	r1, sp
 8009c5c:	9300      	str	r3, [sp, #0]
 8009c5e:	f000 fd0b 	bl	800a678 <WM_SendMessage>
 8009c62:	9803      	ldr	r0, [sp, #12]
 8009c64:	b004      	add	sp, #16
 8009c66:	bd10      	pop	{r4, pc}

08009c68 <WM_GetFocussedWindow>:
 8009c68:	4b02      	ldr	r3, [pc, #8]	; (8009c74 <WM_GetFocussedWindow+0xc>)
 8009c6a:	681a      	ldr	r2, [r3, #0]
 8009c6c:	4b02      	ldr	r3, [pc, #8]	; (8009c78 <WM_GetFocussedWindow+0x10>)
 8009c6e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8009c72:	4770      	bx	lr
 8009c74:	2001b340 	.word	0x2001b340
 8009c78:	2001b330 	.word	0x2001b330

08009c7c <WM_GetFlags>:
 8009c7c:	b508      	push	{r3, lr}
 8009c7e:	b118      	cbz	r0, 8009c88 <WM_GetFlags+0xc>
 8009c80:	f006 fbd4 	bl	801042c <GUI_ALLOC_h2p>
 8009c84:	8d00      	ldrh	r0, [r0, #40]	; 0x28
 8009c86:	bd08      	pop	{r3, pc}
 8009c88:	bd08      	pop	{r3, pc}

08009c8a <WM_GetFirstChild>:
 8009c8a:	b508      	push	{r3, lr}
 8009c8c:	4603      	mov	r3, r0
 8009c8e:	b110      	cbz	r0, 8009c96 <WM_GetFirstChild+0xc>
 8009c90:	f006 fbcc 	bl	801042c <GUI_ALLOC_h2p>
 8009c94:	69c3      	ldr	r3, [r0, #28]
 8009c96:	4618      	mov	r0, r3
 8009c98:	bd08      	pop	{r3, pc}

08009c9a <_GetDialogItem>:
 8009c9a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009c9c:	460d      	mov	r5, r1
 8009c9e:	f006 fbcf 	bl	8010440 <GUI_ALLOC_LockH>
 8009ca2:	ab02      	add	r3, sp, #8
 8009ca4:	69c4      	ldr	r4, [r0, #28]
 8009ca6:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009caa:	4618      	mov	r0, r3
 8009cac:	f006 fbd6 	bl	801045c <GUI_ALLOC_UnlockH>
 8009cb0:	4620      	mov	r0, r4
 8009cb2:	b16c      	cbz	r4, 8009cd0 <_GetDialogItem+0x36>
 8009cb4:	f7ff ffc8 	bl	8009c48 <WM_GetId>
 8009cb8:	42a8      	cmp	r0, r5
 8009cba:	4620      	mov	r0, r4
 8009cbc:	d008      	beq.n	8009cd0 <_GetDialogItem+0x36>
 8009cbe:	4629      	mov	r1, r5
 8009cc0:	f7ff ffeb 	bl	8009c9a <_GetDialogItem>
 8009cc4:	b920      	cbnz	r0, 8009cd0 <_GetDialogItem+0x36>
 8009cc6:	4620      	mov	r0, r4
 8009cc8:	f006 fbb0 	bl	801042c <GUI_ALLOC_h2p>
 8009ccc:	6a04      	ldr	r4, [r0, #32]
 8009cce:	e7ef      	b.n	8009cb0 <_GetDialogItem+0x16>
 8009cd0:	b003      	add	sp, #12
 8009cd2:	bd30      	pop	{r4, r5, pc}

08009cd4 <WM_GetDialogItem>:
 8009cd4:	b108      	cbz	r0, 8009cda <WM_GetDialogItem+0x6>
 8009cd6:	f7ff bfe0 	b.w	8009c9a <_GetDialogItem>
 8009cda:	4770      	bx	lr

08009cdc <WM_GetDesktopWindow>:
 8009cdc:	4b03      	ldr	r3, [pc, #12]	; (8009cec <WM_GetDesktopWindow+0x10>)
 8009cde:	681b      	ldr	r3, [r3, #0]
 8009ce0:	7c5a      	ldrb	r2, [r3, #17]
 8009ce2:	4b03      	ldr	r3, [pc, #12]	; (8009cf0 <WM_GetDesktopWindow+0x14>)
 8009ce4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8009ce8:	4770      	bx	lr
 8009cea:	bf00      	nop
 8009cec:	20000254 	.word	0x20000254
 8009cf0:	2001b320 	.word	0x2001b320

08009cf4 <WM_GetClientWindow>:
 8009cf4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009cf6:	2300      	movs	r3, #0
 8009cf8:	a904      	add	r1, sp, #16
 8009cfa:	9303      	str	r3, [sp, #12]
 8009cfc:	2317      	movs	r3, #23
 8009cfe:	f841 3d10 	str.w	r3, [r1, #-16]!
 8009d02:	4669      	mov	r1, sp
 8009d04:	f000 fcb8 	bl	800a678 <WM_SendMessage>
 8009d08:	9803      	ldr	r0, [sp, #12]
 8009d0a:	b005      	add	sp, #20
 8009d0c:	f85d fb04 	ldr.w	pc, [sp], #4

08009d10 <WM__GetClientRectEx>:
 8009d10:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009d12:	460d      	mov	r5, r1
 8009d14:	b158      	cbz	r0, 8009d2e <WM__GetClientRectEx+0x1e>
 8009d16:	b151      	cbz	r1, 8009d2e <WM__GetClientRectEx+0x1e>
 8009d18:	f006 fb92 	bl	8010440 <GUI_ALLOC_LockH>
 8009d1c:	ac02      	add	r4, sp, #8
 8009d1e:	4629      	mov	r1, r5
 8009d20:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009d24:	f000 fcb7 	bl	800a696 <WM__GetClientRectWin>
 8009d28:	4620      	mov	r0, r4
 8009d2a:	f006 fb97 	bl	801045c <GUI_ALLOC_UnlockH>
 8009d2e:	b003      	add	sp, #12
 8009d30:	bd30      	pop	{r4, r5, pc}

08009d32 <WM_GetClientRectEx>:
 8009d32:	f7ff bfed 	b.w	8009d10 <WM__GetClientRectEx>
	...

08009d38 <WM_GetClientRect>:
 8009d38:	4b04      	ldr	r3, [pc, #16]	; (8009d4c <WM_GetClientRect+0x14>)
 8009d3a:	4601      	mov	r1, r0
 8009d3c:	6818      	ldr	r0, [r3, #0]
 8009d3e:	b910      	cbnz	r0, 8009d46 <WM_GetClientRect+0xe>
 8009d40:	4b03      	ldr	r3, [pc, #12]	; (8009d50 <WM_GetClientRect+0x18>)
 8009d42:	681b      	ldr	r3, [r3, #0]
 8009d44:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8009d46:	f7ff bfe3 	b.w	8009d10 <WM__GetClientRectEx>
 8009d4a:	bf00      	nop
 8009d4c:	2001b31c 	.word	0x2001b31c
 8009d50:	20000254 	.word	0x20000254

08009d54 <WM_CheckScrollBounds>:
 8009d54:	6802      	ldr	r2, [r0, #0]
 8009d56:	6883      	ldr	r3, [r0, #8]
 8009d58:	1ad3      	subs	r3, r2, r3
 8009d5a:	6842      	ldr	r2, [r0, #4]
 8009d5c:	2a00      	cmp	r2, #0
 8009d5e:	bfbc      	itt	lt
 8009d60:	2200      	movlt	r2, #0
 8009d62:	6042      	strlt	r2, [r0, #4]
 8009d64:	6842      	ldr	r2, [r0, #4]
 8009d66:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8009d6a:	429a      	cmp	r2, r3
 8009d6c:	bfc8      	it	gt
 8009d6e:	6043      	strgt	r3, [r0, #4]
 8009d70:	4770      	bx	lr

08009d72 <_cbInvalidateOne>:
 8009d72:	f000 bcd8 	b.w	800a726 <WM_InvalidateWindow>
	...

08009d78 <WM_BringToTop>:
 8009d78:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009d7a:	4605      	mov	r5, r0
 8009d7c:	2800      	cmp	r0, #0
 8009d7e:	d032      	beq.n	8009de6 <WM_BringToTop+0x6e>
 8009d80:	f006 fb5e 	bl	8010440 <GUI_ALLOC_LockH>
 8009d84:	ac02      	add	r4, sp, #8
 8009d86:	4603      	mov	r3, r0
 8009d88:	f844 0d08 	str.w	r0, [r4, #-8]!
 8009d8c:	6a00      	ldr	r0, [r0, #32]
 8009d8e:	b908      	cbnz	r0, 8009d94 <WM_BringToTop+0x1c>
 8009d90:	4668      	mov	r0, sp
 8009d92:	e00e      	b.n	8009db2 <WM_BringToTop+0x3a>
 8009d94:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009d96:	071a      	lsls	r2, r3, #28
 8009d98:	d411      	bmi.n	8009dbe <WM_BringToTop+0x46>
 8009d9a:	f006 fb51 	bl	8010440 <GUI_ALLOC_LockH>
 8009d9e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009da0:	ae02      	add	r6, sp, #8
 8009da2:	071b      	lsls	r3, r3, #28
 8009da4:	f846 0d04 	str.w	r0, [r6, #-4]!
 8009da8:	d506      	bpl.n	8009db8 <WM_BringToTop+0x40>
 8009daa:	4668      	mov	r0, sp
 8009dac:	f006 fb56 	bl	801045c <GUI_ALLOC_UnlockH>
 8009db0:	4630      	mov	r0, r6
 8009db2:	f006 fb53 	bl	801045c <GUI_ALLOC_UnlockH>
 8009db6:	e016      	b.n	8009de6 <WM_BringToTop+0x6e>
 8009db8:	4630      	mov	r0, r6
 8009dba:	f006 fb4f 	bl	801045c <GUI_ALLOC_UnlockH>
 8009dbe:	9b00      	ldr	r3, [sp, #0]
 8009dc0:	4668      	mov	r0, sp
 8009dc2:	699e      	ldr	r6, [r3, #24]
 8009dc4:	f006 fb4a 	bl	801045c <GUI_ALLOC_UnlockH>
 8009dc8:	4628      	mov	r0, r5
 8009dca:	f000 fab7 	bl	800a33c <WM__RemoveWindowFromList>
 8009dce:	4631      	mov	r1, r6
 8009dd0:	4628      	mov	r0, r5
 8009dd2:	f000 fa61 	bl	800a298 <WM__InsertWindowIntoList>
 8009dd6:	4628      	mov	r0, r5
 8009dd8:	f000 fca5 	bl	800a726 <WM_InvalidateWindow>
 8009ddc:	4628      	mov	r0, r5
 8009dde:	4903      	ldr	r1, [pc, #12]	; (8009dec <WM_BringToTop+0x74>)
 8009de0:	2200      	movs	r2, #0
 8009de2:	f008 fafb 	bl	80123dc <WM_ForEachDesc>
 8009de6:	b002      	add	sp, #8
 8009de8:	bd70      	pop	{r4, r5, r6, pc}
 8009dea:	bf00      	nop
 8009dec:	08009d73 	.word	0x08009d73

08009df0 <_OnExit>:
 8009df0:	4a0a      	ldr	r2, [pc, #40]	; (8009e1c <_OnExit+0x2c>)
 8009df2:	490b      	ldr	r1, [pc, #44]	; (8009e20 <_OnExit+0x30>)
 8009df4:	2300      	movs	r3, #0
 8009df6:	7013      	strb	r3, [r2, #0]
 8009df8:	4a0a      	ldr	r2, [pc, #40]	; (8009e24 <_OnExit+0x34>)
 8009dfa:	600b      	str	r3, [r1, #0]
 8009dfc:	6013      	str	r3, [r2, #0]
 8009dfe:	4a0a      	ldr	r2, [pc, #40]	; (8009e28 <_OnExit+0x38>)
 8009e00:	604b      	str	r3, [r1, #4]
 8009e02:	6013      	str	r3, [r2, #0]
 8009e04:	4a09      	ldr	r2, [pc, #36]	; (8009e2c <_OnExit+0x3c>)
 8009e06:	6013      	str	r3, [r2, #0]
 8009e08:	6053      	str	r3, [r2, #4]
 8009e0a:	4a09      	ldr	r2, [pc, #36]	; (8009e30 <_OnExit+0x40>)
 8009e0c:	6013      	str	r3, [r2, #0]
 8009e0e:	4a09      	ldr	r2, [pc, #36]	; (8009e34 <_OnExit+0x44>)
 8009e10:	6013      	str	r3, [r2, #0]
 8009e12:	4a09      	ldr	r2, [pc, #36]	; (8009e38 <_OnExit+0x48>)
 8009e14:	6013      	str	r3, [r2, #0]
 8009e16:	4a09      	ldr	r2, [pc, #36]	; (8009e3c <_OnExit+0x4c>)
 8009e18:	6013      	str	r3, [r2, #0]
 8009e1a:	4770      	bx	lr
 8009e1c:	200194a0 	.word	0x200194a0
 8009e20:	2001b330 	.word	0x2001b330
 8009e24:	20019478 	.word	0x20019478
 8009e28:	2001b354 	.word	0x2001b354
 8009e2c:	2001b35c 	.word	0x2001b35c
 8009e30:	2001b368 	.word	0x2001b368
 8009e34:	2001b31c 	.word	0x2001b31c
 8009e38:	2001b348 	.word	0x2001b348
 8009e3c:	2001b358 	.word	0x2001b358

08009e40 <_Paint1>:
 8009e40:	b510      	push	{r4, lr}
 8009e42:	4604      	mov	r4, r0
 8009e44:	f006 faf2 	bl	801042c <GUI_ALLOC_h2p>
 8009e48:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009e4a:	4a04      	ldr	r2, [pc, #16]	; (8009e5c <_Paint1+0x1c>)
 8009e4c:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8009e50:	4b03      	ldr	r3, [pc, #12]	; (8009e60 <_Paint1+0x20>)
 8009e52:	4620      	mov	r0, r4
 8009e54:	bf08      	it	eq
 8009e56:	4613      	moveq	r3, r2
 8009e58:	4798      	blx	r3
 8009e5a:	bd10      	pop	{r4, pc}
 8009e5c:	0800acb1 	.word	0x0800acb1
 8009e60:	0800b29d 	.word	0x0800b29d

08009e64 <_Findy1>:
 8009e64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e66:	4605      	mov	r5, r0
 8009e68:	b085      	sub	sp, #20
 8009e6a:	460c      	mov	r4, r1
 8009e6c:	4616      	mov	r6, r2
 8009e6e:	2d00      	cmp	r5, #0
 8009e70:	d04c      	beq.n	8009f0c <_Findy1+0xa8>
 8009e72:	4628      	mov	r0, r5
 8009e74:	f006 fae4 	bl	8010440 <GUI_ALLOC_LockH>
 8009e78:	6a87      	ldr	r7, [r0, #40]	; 0x28
 8009e7a:	9001      	str	r0, [sp, #4]
 8009e7c:	07bb      	lsls	r3, r7, #30
 8009e7e:	4601      	mov	r1, r0
 8009e80:	d53d      	bpl.n	8009efe <_Findy1+0x9a>
 8009e82:	ad02      	add	r5, sp, #8
 8009e84:	b126      	cbz	r6, 8009e90 <_Findy1+0x2c>
 8009e86:	4628      	mov	r0, r5
 8009e88:	4632      	mov	r2, r6
 8009e8a:	f004 f857 	bl	800df3c <GUI__IntersectRects>
 8009e8e:	e002      	b.n	8009e96 <_Findy1+0x32>
 8009e90:	c803      	ldmia	r0, {r0, r1}
 8009e92:	e885 0003 	stmia.w	r5, {r0, r1}
 8009e96:	4620      	mov	r0, r4
 8009e98:	4629      	mov	r1, r5
 8009e9a:	f005 f867 	bl	800ef6c <GUI_RectsIntersect>
 8009e9e:	b370      	cbz	r0, 8009efe <_Findy1+0x9a>
 8009ea0:	f017 0f01 	tst.w	r7, #1
 8009ea4:	9b01      	ldr	r3, [sp, #4]
 8009ea6:	d11e      	bne.n	8009ee6 <_Findy1+0x82>
 8009ea8:	b13e      	cbz	r6, 8009eba <_Findy1+0x56>
 8009eaa:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8009eae:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8009eb2:	429a      	cmp	r2, r3
 8009eb4:	bfa8      	it	ge
 8009eb6:	4613      	movge	r3, r2
 8009eb8:	e001      	b.n	8009ebe <_Findy1+0x5a>
 8009eba:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8009ebe:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8009ec2:	4293      	cmp	r3, r2
 8009ec4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009ec8:	dd06      	ble.n	8009ed8 <_Findy1+0x74>
 8009eca:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8009ece:	b219      	sxth	r1, r3
 8009ed0:	428a      	cmp	r2, r1
 8009ed2:	db14      	blt.n	8009efe <_Findy1+0x9a>
 8009ed4:	3b01      	subs	r3, #1
 8009ed6:	e004      	b.n	8009ee2 <_Findy1+0x7e>
 8009ed8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009edc:	b219      	sxth	r1, r3
 8009ede:	428a      	cmp	r2, r1
 8009ee0:	dd0d      	ble.n	8009efe <_Findy1+0x9a>
 8009ee2:	80e3      	strh	r3, [r4, #6]
 8009ee4:	e00b      	b.n	8009efe <_Findy1+0x9a>
 8009ee6:	69df      	ldr	r7, [r3, #28]
 8009ee8:	b14f      	cbz	r7, 8009efe <_Findy1+0x9a>
 8009eea:	4638      	mov	r0, r7
 8009eec:	4621      	mov	r1, r4
 8009eee:	462a      	mov	r2, r5
 8009ef0:	f7ff ffb8 	bl	8009e64 <_Findy1>
 8009ef4:	4638      	mov	r0, r7
 8009ef6:	f006 fa99 	bl	801042c <GUI_ALLOC_h2p>
 8009efa:	6a07      	ldr	r7, [r0, #32]
 8009efc:	e7f4      	b.n	8009ee8 <_Findy1+0x84>
 8009efe:	a804      	add	r0, sp, #16
 8009f00:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 8009f04:	6a1d      	ldr	r5, [r3, #32]
 8009f06:	f006 faa9 	bl	801045c <GUI_ALLOC_UnlockH>
 8009f0a:	e7b0      	b.n	8009e6e <_Findy1+0xa>
 8009f0c:	b005      	add	sp, #20
 8009f0e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009f10 <_Findx0>:
 8009f10:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009f14:	4604      	mov	r4, r0
 8009f16:	460f      	mov	r7, r1
 8009f18:	4690      	mov	r8, r2
 8009f1a:	2500      	movs	r5, #0
 8009f1c:	2c00      	cmp	r4, #0
 8009f1e:	d037      	beq.n	8009f90 <_Findx0+0x80>
 8009f20:	4620      	mov	r0, r4
 8009f22:	f006 fa8d 	bl	8010440 <GUI_ALLOC_LockH>
 8009f26:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8009f28:	9001      	str	r0, [sp, #4]
 8009f2a:	07b2      	lsls	r2, r6, #30
 8009f2c:	4601      	mov	r1, r0
 8009f2e:	d528      	bpl.n	8009f82 <_Findx0+0x72>
 8009f30:	ac02      	add	r4, sp, #8
 8009f32:	f1b8 0f00 	cmp.w	r8, #0
 8009f36:	d004      	beq.n	8009f42 <_Findx0+0x32>
 8009f38:	4620      	mov	r0, r4
 8009f3a:	4642      	mov	r2, r8
 8009f3c:	f003 fffe 	bl	800df3c <GUI__IntersectRects>
 8009f40:	e002      	b.n	8009f48 <_Findx0+0x38>
 8009f42:	c803      	ldmia	r0, {r0, r1}
 8009f44:	e884 0003 	stmia.w	r4, {r0, r1}
 8009f48:	4638      	mov	r0, r7
 8009f4a:	4621      	mov	r1, r4
 8009f4c:	f005 f80e 	bl	800ef6c <GUI_RectsIntersect>
 8009f50:	b1b8      	cbz	r0, 8009f82 <_Findx0+0x72>
 8009f52:	07f3      	lsls	r3, r6, #31
 8009f54:	d405      	bmi.n	8009f62 <_Findx0+0x52>
 8009f56:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8009f5a:	3301      	adds	r3, #1
 8009f5c:	803b      	strh	r3, [r7, #0]
 8009f5e:	2501      	movs	r5, #1
 8009f60:	e00f      	b.n	8009f82 <_Findx0+0x72>
 8009f62:	9b01      	ldr	r3, [sp, #4]
 8009f64:	69de      	ldr	r6, [r3, #28]
 8009f66:	b166      	cbz	r6, 8009f82 <_Findx0+0x72>
 8009f68:	4630      	mov	r0, r6
 8009f6a:	4639      	mov	r1, r7
 8009f6c:	4622      	mov	r2, r4
 8009f6e:	f7ff ffcf 	bl	8009f10 <_Findx0>
 8009f72:	2800      	cmp	r0, #0
 8009f74:	4630      	mov	r0, r6
 8009f76:	bf18      	it	ne
 8009f78:	2501      	movne	r5, #1
 8009f7a:	f006 fa57 	bl	801042c <GUI_ALLOC_h2p>
 8009f7e:	6a06      	ldr	r6, [r0, #32]
 8009f80:	e7f1      	b.n	8009f66 <_Findx0+0x56>
 8009f82:	a804      	add	r0, sp, #16
 8009f84:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 8009f88:	6a1c      	ldr	r4, [r3, #32]
 8009f8a:	f006 fa67 	bl	801045c <GUI_ALLOC_UnlockH>
 8009f8e:	e7c5      	b.n	8009f1c <_Findx0+0xc>
 8009f90:	4628      	mov	r0, r5
 8009f92:	b004      	add	sp, #16
 8009f94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009f98 <_Findx1>:
 8009f98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009f9a:	4604      	mov	r4, r0
 8009f9c:	b085      	sub	sp, #20
 8009f9e:	460e      	mov	r6, r1
 8009fa0:	4617      	mov	r7, r2
 8009fa2:	2c00      	cmp	r4, #0
 8009fa4:	d031      	beq.n	800a00a <_Findx1+0x72>
 8009fa6:	4620      	mov	r0, r4
 8009fa8:	f006 fa4a 	bl	8010440 <GUI_ALLOC_LockH>
 8009fac:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8009fae:	9001      	str	r0, [sp, #4]
 8009fb0:	07aa      	lsls	r2, r5, #30
 8009fb2:	4601      	mov	r1, r0
 8009fb4:	d522      	bpl.n	8009ffc <_Findx1+0x64>
 8009fb6:	ac02      	add	r4, sp, #8
 8009fb8:	b127      	cbz	r7, 8009fc4 <_Findx1+0x2c>
 8009fba:	4620      	mov	r0, r4
 8009fbc:	463a      	mov	r2, r7
 8009fbe:	f003 ffbd 	bl	800df3c <GUI__IntersectRects>
 8009fc2:	e002      	b.n	8009fca <_Findx1+0x32>
 8009fc4:	c803      	ldmia	r0, {r0, r1}
 8009fc6:	e884 0003 	stmia.w	r4, {r0, r1}
 8009fca:	4630      	mov	r0, r6
 8009fcc:	4621      	mov	r1, r4
 8009fce:	f004 ffcd 	bl	800ef6c <GUI_RectsIntersect>
 8009fd2:	b198      	cbz	r0, 8009ffc <_Findx1+0x64>
 8009fd4:	07eb      	lsls	r3, r5, #31
 8009fd6:	d404      	bmi.n	8009fe2 <_Findx1+0x4a>
 8009fd8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8009fdc:	3b01      	subs	r3, #1
 8009fde:	80b3      	strh	r3, [r6, #4]
 8009fe0:	e00c      	b.n	8009ffc <_Findx1+0x64>
 8009fe2:	9b01      	ldr	r3, [sp, #4]
 8009fe4:	69dd      	ldr	r5, [r3, #28]
 8009fe6:	b14d      	cbz	r5, 8009ffc <_Findx1+0x64>
 8009fe8:	4628      	mov	r0, r5
 8009fea:	4631      	mov	r1, r6
 8009fec:	4622      	mov	r2, r4
 8009fee:	f7ff ffd3 	bl	8009f98 <_Findx1>
 8009ff2:	4628      	mov	r0, r5
 8009ff4:	f006 fa1a 	bl	801042c <GUI_ALLOC_h2p>
 8009ff8:	6a05      	ldr	r5, [r0, #32]
 8009ffa:	e7f4      	b.n	8009fe6 <_Findx1+0x4e>
 8009ffc:	a804      	add	r0, sp, #16
 8009ffe:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 800a002:	6a1c      	ldr	r4, [r3, #32]
 800a004:	f006 fa2a 	bl	801045c <GUI_ALLOC_UnlockH>
 800a008:	e7cb      	b.n	8009fa2 <_Findx1+0xa>
 800a00a:	b005      	add	sp, #20
 800a00c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800a010 <_Paint1Trans>:
 800a010:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a014:	4d21      	ldr	r5, [pc, #132]	; (800a09c <_Paint1Trans+0x8c>)
 800a016:	682b      	ldr	r3, [r5, #0]
 800a018:	4606      	mov	r6, r0
 800a01a:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800a01c:	f006 fa10 	bl	8010440 <GUI_ALLOC_LockH>
 800a020:	9000      	str	r0, [sp, #0]
 800a022:	4630      	mov	r0, r6
 800a024:	f006 fa0c 	bl	8010440 <GUI_ALLOC_LockH>
 800a028:	ac02      	add	r4, sp, #8
 800a02a:	4601      	mov	r1, r0
 800a02c:	9001      	str	r0, [sp, #4]
 800a02e:	f854 0d08 	ldr.w	r0, [r4, #-8]!
 800a032:	3008      	adds	r0, #8
 800a034:	f004 ff9a 	bl	800ef6c <GUI_RectsIntersect>
 800a038:	4607      	mov	r7, r0
 800a03a:	b328      	cbz	r0, 800a088 <_Paint1Trans+0x78>
 800a03c:	9901      	ldr	r1, [sp, #4]
 800a03e:	9a00      	ldr	r2, [sp, #0]
 800a040:	682b      	ldr	r3, [r5, #0]
 800a042:	4c17      	ldr	r4, [pc, #92]	; (800a0a0 <_Paint1Trans+0x90>)
 800a044:	6d1f      	ldr	r7, [r3, #80]	; 0x50
 800a046:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 800a04a:	f101 0008 	add.w	r0, r1, #8
 800a04e:	3208      	adds	r2, #8
 800a050:	f003 ff74 	bl	800df3c <GUI__IntersectRects>
 800a054:	4668      	mov	r0, sp
 800a056:	f006 fa01 	bl	801045c <GUI_ALLOC_UnlockH>
 800a05a:	9a01      	ldr	r2, [sp, #4]
 800a05c:	682b      	ldr	r3, [r5, #0]
 800a05e:	f9b2 1000 	ldrsh.w	r1, [r2]
 800a062:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800a066:	64d9      	str	r1, [r3, #76]	; 0x4c
 800a068:	651a      	str	r2, [r3, #80]	; 0x50
 800a06a:	a801      	add	r0, sp, #4
 800a06c:	6026      	str	r6, [r4, #0]
 800a06e:	f006 f9f5 	bl	801045c <GUI_ALLOC_UnlockH>
 800a072:	4630      	mov	r0, r6
 800a074:	f7ff fee4 	bl	8009e40 <_Paint1>
 800a078:	2300      	movs	r3, #0
 800a07a:	6023      	str	r3, [r4, #0]
 800a07c:	682b      	ldr	r3, [r5, #0]
 800a07e:	651f      	str	r7, [r3, #80]	; 0x50
 800a080:	f8c3 804c 	str.w	r8, [r3, #76]	; 0x4c
 800a084:	2701      	movs	r7, #1
 800a086:	e005      	b.n	800a094 <_Paint1Trans+0x84>
 800a088:	4668      	mov	r0, sp
 800a08a:	f006 f9e7 	bl	801045c <GUI_ALLOC_UnlockH>
 800a08e:	a801      	add	r0, sp, #4
 800a090:	f006 f9e4 	bl	801045c <GUI_ALLOC_UnlockH>
 800a094:	4638      	mov	r0, r7
 800a096:	b002      	add	sp, #8
 800a098:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a09c:	20000254 	.word	0x20000254
 800a0a0:	2001b31c 	.word	0x2001b31c

0800a0a4 <_PaintTransChildren>:
 800a0a4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a0a8:	4606      	mov	r6, r0
 800a0aa:	f006 f9c9 	bl	8010440 <GUI_ALLOC_LockH>
 800a0ae:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a0b0:	9001      	str	r0, [sp, #4]
 800a0b2:	079b      	lsls	r3, r3, #30
 800a0b4:	d405      	bmi.n	800a0c2 <_PaintTransChildren+0x1e>
 800a0b6:	a801      	add	r0, sp, #4
 800a0b8:	f006 f9d0 	bl	801045c <GUI_ALLOC_UnlockH>
 800a0bc:	b002      	add	sp, #8
 800a0be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a0c2:	69c4      	ldr	r4, [r0, #28]
 800a0c4:	2c00      	cmp	r4, #0
 800a0c6:	d0f6      	beq.n	800a0b6 <_PaintTransChildren+0x12>
 800a0c8:	4620      	mov	r0, r4
 800a0ca:	f006 f9b9 	bl	8010440 <GUI_ALLOC_LockH>
 800a0ce:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a0d0:	ad02      	add	r5, sp, #8
 800a0d2:	f003 0303 	and.w	r3, r3, #3
 800a0d6:	2b03      	cmp	r3, #3
 800a0d8:	f845 0d08 	str.w	r0, [r5, #-8]!
 800a0dc:	d137      	bne.n	800a14e <_PaintTransChildren+0xaa>
 800a0de:	9901      	ldr	r1, [sp, #4]
 800a0e0:	3108      	adds	r1, #8
 800a0e2:	f004 ff43 	bl	800ef6c <GUI_RectsIntersect>
 800a0e6:	2800      	cmp	r0, #0
 800a0e8:	d031      	beq.n	800a14e <_PaintTransChildren+0xaa>
 800a0ea:	a802      	add	r0, sp, #8
 800a0ec:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800a0f0:	f8b3 9008 	ldrh.w	r9, [r3, #8]
 800a0f4:	f8b3 800a 	ldrh.w	r8, [r3, #10]
 800a0f8:	899f      	ldrh	r7, [r3, #12]
 800a0fa:	f8b3 a00e 	ldrh.w	sl, [r3, #14]
 800a0fe:	f006 f9ad 	bl	801045c <GUI_ALLOC_UnlockH>
 800a102:	4668      	mov	r0, sp
 800a104:	f006 f9aa 	bl	801045c <GUI_ALLOC_UnlockH>
 800a108:	4620      	mov	r0, r4
 800a10a:	f7ff ff81 	bl	800a010 <_Paint1Trans>
 800a10e:	b170      	cbz	r0, 800a12e <_PaintTransChildren+0x8a>
 800a110:	4620      	mov	r0, r4
 800a112:	f006 f98b 	bl	801042c <GUI_ALLOC_h2p>
 800a116:	9000      	str	r0, [sp, #0]
 800a118:	4620      	mov	r0, r4
 800a11a:	f7ff ffc3 	bl	800a0a4 <_PaintTransChildren>
 800a11e:	4620      	mov	r0, r4
 800a120:	f006 f984 	bl	801042c <GUI_ALLOC_h2p>
 800a124:	9000      	str	r0, [sp, #0]
 800a126:	4630      	mov	r0, r6
 800a128:	f006 f980 	bl	801042c <GUI_ALLOC_h2p>
 800a12c:	9001      	str	r0, [sp, #4]
 800a12e:	4630      	mov	r0, r6
 800a130:	f006 f986 	bl	8010440 <GUI_ALLOC_LockH>
 800a134:	9001      	str	r0, [sp, #4]
 800a136:	4620      	mov	r0, r4
 800a138:	f006 f982 	bl	8010440 <GUI_ALLOC_LockH>
 800a13c:	9b01      	ldr	r3, [sp, #4]
 800a13e:	9000      	str	r0, [sp, #0]
 800a140:	f8a3 9008 	strh.w	r9, [r3, #8]
 800a144:	f8a3 800a 	strh.w	r8, [r3, #10]
 800a148:	819f      	strh	r7, [r3, #12]
 800a14a:	f8a3 a00e 	strh.w	sl, [r3, #14]
 800a14e:	9b00      	ldr	r3, [sp, #0]
 800a150:	4668      	mov	r0, sp
 800a152:	6a1c      	ldr	r4, [r3, #32]
 800a154:	f006 f982 	bl	801045c <GUI_ALLOC_UnlockH>
 800a158:	e7b4      	b.n	800a0c4 <_PaintTransChildren+0x20>
	...

0800a15c <WM__PaintWinAndOverlays>:
 800a15c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a15e:	4604      	mov	r4, r0
 800a160:	f006 f96e 	bl	8010440 <GUI_ALLOC_LockH>
 800a164:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800a166:	9001      	str	r0, [sp, #4]
 800a168:	f640 0301 	movw	r3, #2049	; 0x801
 800a16c:	4013      	ands	r3, r2
 800a16e:	2b01      	cmp	r3, #1
 800a170:	d005      	beq.n	800a17e <WM__PaintWinAndOverlays+0x22>
 800a172:	a801      	add	r0, sp, #4
 800a174:	f006 f972 	bl	801045c <GUI_ALLOC_UnlockH>
 800a178:	4620      	mov	r0, r4
 800a17a:	f7ff fe61 	bl	8009e40 <_Paint1>
 800a17e:	4b14      	ldr	r3, [pc, #80]	; (800a1d0 <WM__PaintWinAndOverlays+0x74>)
 800a180:	681b      	ldr	r3, [r3, #0]
 800a182:	b313      	cbz	r3, 800a1ca <WM__PaintWinAndOverlays+0x6e>
 800a184:	4620      	mov	r0, r4
 800a186:	f7ff ff8d 	bl	800a0a4 <_PaintTransChildren>
 800a18a:	4620      	mov	r0, r4
 800a18c:	f006 f94e 	bl	801042c <GUI_ALLOC_h2p>
 800a190:	6985      	ldr	r5, [r0, #24]
 800a192:	6a04      	ldr	r4, [r0, #32]
 800a194:	b1cd      	cbz	r5, 800a1ca <WM__PaintWinAndOverlays+0x6e>
 800a196:	b194      	cbz	r4, 800a1be <WM__PaintWinAndOverlays+0x62>
 800a198:	4620      	mov	r0, r4
 800a19a:	f006 f947 	bl	801042c <GUI_ALLOC_h2p>
 800a19e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a1a0:	f003 0303 	and.w	r3, r3, #3
 800a1a4:	2b03      	cmp	r3, #3
 800a1a6:	d102      	bne.n	800a1ae <WM__PaintWinAndOverlays+0x52>
 800a1a8:	4620      	mov	r0, r4
 800a1aa:	f7ff ff31 	bl	800a010 <_Paint1Trans>
 800a1ae:	4620      	mov	r0, r4
 800a1b0:	f7ff ff78 	bl	800a0a4 <_PaintTransChildren>
 800a1b4:	4620      	mov	r0, r4
 800a1b6:	f006 f939 	bl	801042c <GUI_ALLOC_h2p>
 800a1ba:	6a04      	ldr	r4, [r0, #32]
 800a1bc:	e7eb      	b.n	800a196 <WM__PaintWinAndOverlays+0x3a>
 800a1be:	4628      	mov	r0, r5
 800a1c0:	f006 f934 	bl	801042c <GUI_ALLOC_h2p>
 800a1c4:	6a04      	ldr	r4, [r0, #32]
 800a1c6:	6985      	ldr	r5, [r0, #24]
 800a1c8:	e7e4      	b.n	800a194 <WM__PaintWinAndOverlays+0x38>
 800a1ca:	b003      	add	sp, #12
 800a1cc:	bd30      	pop	{r4, r5, pc}
 800a1ce:	bf00      	nop
 800a1d0:	2001b368 	.word	0x2001b368

0800a1d4 <_cbPaintMemDev>:
 800a1d4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a1d8:	4d17      	ldr	r5, [pc, #92]	; (800a238 <_cbPaintMemDev+0x64>)
 800a1da:	682b      	ldr	r3, [r5, #0]
 800a1dc:	4606      	mov	r6, r0
 800a1de:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800a1e0:	f006 f92e 	bl	8010440 <GUI_ALLOC_LockH>
 800a1e4:	682a      	ldr	r2, [r5, #0]
 800a1e6:	f8b0 a008 	ldrh.w	sl, [r0, #8]
 800a1ea:	f8b0 900a 	ldrh.w	r9, [r0, #10]
 800a1ee:	f8b0 800c 	ldrh.w	r8, [r0, #12]
 800a1f2:	89c7      	ldrh	r7, [r0, #14]
 800a1f4:	ac02      	add	r4, sp, #8
 800a1f6:	3208      	adds	r2, #8
 800a1f8:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a1fc:	f100 0308 	add.w	r3, r0, #8
 800a200:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a204:	e883 0003 	stmia.w	r3, {r0, r1}
 800a208:	4620      	mov	r0, r4
 800a20a:	f006 f927 	bl	801045c <GUI_ALLOC_UnlockH>
 800a20e:	6830      	ldr	r0, [r6, #0]
 800a210:	f7ff ffa4 	bl	800a15c <WM__PaintWinAndOverlays>
 800a214:	682b      	ldr	r3, [r5, #0]
 800a216:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800a218:	f006 f912 	bl	8010440 <GUI_ALLOC_LockH>
 800a21c:	9001      	str	r0, [sp, #4]
 800a21e:	f8a0 a008 	strh.w	sl, [r0, #8]
 800a222:	f8a0 900a 	strh.w	r9, [r0, #10]
 800a226:	f8a0 800c 	strh.w	r8, [r0, #12]
 800a22a:	81c7      	strh	r7, [r0, #14]
 800a22c:	4620      	mov	r0, r4
 800a22e:	f006 f915 	bl	801045c <GUI_ALLOC_UnlockH>
 800a232:	b002      	add	sp, #8
 800a234:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a238:	20000254 	.word	0x20000254

0800a23c <WM__ClipAtParentBorders>:
 800a23c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a23e:	4607      	mov	r7, r0
 800a240:	460d      	mov	r5, r1
 800a242:	4628      	mov	r0, r5
 800a244:	f006 f8fc 	bl	8010440 <GUI_ALLOC_LockH>
 800a248:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a24a:	ac02      	add	r4, sp, #8
 800a24c:	f013 0602 	ands.w	r6, r3, #2
 800a250:	4601      	mov	r1, r0
 800a252:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a256:	d104      	bne.n	800a262 <WM__ClipAtParentBorders+0x26>
 800a258:	4620      	mov	r0, r4
 800a25a:	f006 f8ff 	bl	801045c <GUI_ALLOC_UnlockH>
 800a25e:	4630      	mov	r0, r6
 800a260:	e016      	b.n	800a290 <WM__ClipAtParentBorders+0x54>
 800a262:	4638      	mov	r0, r7
 800a264:	f003 fe9c 	bl	800dfa0 <GUI__IntersectRect>
 800a268:	9b01      	ldr	r3, [sp, #4]
 800a26a:	699e      	ldr	r6, [r3, #24]
 800a26c:	4620      	mov	r0, r4
 800a26e:	b956      	cbnz	r6, 800a286 <WM__ClipAtParentBorders+0x4a>
 800a270:	f006 f8f4 	bl	801045c <GUI_ALLOC_UnlockH>
 800a274:	4b07      	ldr	r3, [pc, #28]	; (800a294 <WM__ClipAtParentBorders+0x58>)
 800a276:	681a      	ldr	r2, [r3, #0]
 800a278:	4295      	cmp	r5, r2
 800a27a:	d008      	beq.n	800a28e <WM__ClipAtParentBorders+0x52>
 800a27c:	6858      	ldr	r0, [r3, #4]
 800a27e:	1a2b      	subs	r3, r5, r0
 800a280:	4258      	negs	r0, r3
 800a282:	4158      	adcs	r0, r3
 800a284:	e004      	b.n	800a290 <WM__ClipAtParentBorders+0x54>
 800a286:	f006 f8e9 	bl	801045c <GUI_ALLOC_UnlockH>
 800a28a:	4635      	mov	r5, r6
 800a28c:	e7d9      	b.n	800a242 <WM__ClipAtParentBorders+0x6>
 800a28e:	2001      	movs	r0, #1
 800a290:	b003      	add	sp, #12
 800a292:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a294:	2001b320 	.word	0x2001b320

0800a298 <WM__InsertWindowIntoList>:
 800a298:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a29a:	4604      	mov	r4, r0
 800a29c:	b085      	sub	sp, #20
 800a29e:	460d      	mov	r5, r1
 800a2a0:	2900      	cmp	r1, #0
 800a2a2:	d049      	beq.n	800a338 <WM__InsertWindowIntoList+0xa0>
 800a2a4:	f006 f8cc 	bl	8010440 <GUI_ALLOC_LockH>
 800a2a8:	2300      	movs	r3, #0
 800a2aa:	6203      	str	r3, [r0, #32]
 800a2ac:	6185      	str	r5, [r0, #24]
 800a2ae:	9001      	str	r0, [sp, #4]
 800a2b0:	4628      	mov	r0, r5
 800a2b2:	f006 f8c5 	bl	8010440 <GUI_ALLOC_LockH>
 800a2b6:	9b01      	ldr	r3, [sp, #4]
 800a2b8:	69c5      	ldr	r5, [r0, #28]
 800a2ba:	9002      	str	r0, [sp, #8]
 800a2bc:	6a9f      	ldr	r7, [r3, #40]	; 0x28
 800a2be:	b92d      	cbnz	r5, 800a2cc <WM__InsertWindowIntoList+0x34>
 800a2c0:	61c4      	str	r4, [r0, #28]
 800a2c2:	a801      	add	r0, sp, #4
 800a2c4:	f006 f8ca 	bl	801045c <GUI_ALLOC_UnlockH>
 800a2c8:	a802      	add	r0, sp, #8
 800a2ca:	e033      	b.n	800a334 <WM__InsertWindowIntoList+0x9c>
 800a2cc:	4628      	mov	r0, r5
 800a2ce:	f006 f8b7 	bl	8010440 <GUI_ALLOC_LockH>
 800a2d2:	ae04      	add	r6, sp, #16
 800a2d4:	f007 0708 	and.w	r7, r7, #8
 800a2d8:	f846 0d04 	str.w	r0, [r6, #-4]!
 800a2dc:	b977      	cbnz	r7, 800a2fc <WM__InsertWindowIntoList+0x64>
 800a2de:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a2e0:	071a      	lsls	r2, r3, #28
 800a2e2:	d50b      	bpl.n	800a2fc <WM__InsertWindowIntoList+0x64>
 800a2e4:	9b01      	ldr	r3, [sp, #4]
 800a2e6:	621d      	str	r5, [r3, #32]
 800a2e8:	9b02      	ldr	r3, [sp, #8]
 800a2ea:	a801      	add	r0, sp, #4
 800a2ec:	61dc      	str	r4, [r3, #28]
 800a2ee:	f006 f8b5 	bl	801045c <GUI_ALLOC_UnlockH>
 800a2f2:	a802      	add	r0, sp, #8
 800a2f4:	f006 f8b2 	bl	801045c <GUI_ALLOC_UnlockH>
 800a2f8:	4630      	mov	r0, r6
 800a2fa:	e01b      	b.n	800a334 <WM__InsertWindowIntoList+0x9c>
 800a2fc:	a802      	add	r0, sp, #8
 800a2fe:	f006 f8ad 	bl	801045c <GUI_ALLOC_UnlockH>
 800a302:	4630      	mov	r0, r6
 800a304:	f006 f8aa 	bl	801045c <GUI_ALLOC_UnlockH>
 800a308:	4628      	mov	r0, r5
 800a30a:	f006 f88f 	bl	801042c <GUI_ALLOC_h2p>
 800a30e:	9003      	str	r0, [sp, #12]
 800a310:	9b03      	ldr	r3, [sp, #12]
 800a312:	6a1d      	ldr	r5, [r3, #32]
 800a314:	b90d      	cbnz	r5, 800a31a <WM__InsertWindowIntoList+0x82>
 800a316:	621c      	str	r4, [r3, #32]
 800a318:	e00b      	b.n	800a332 <WM__InsertWindowIntoList+0x9a>
 800a31a:	4628      	mov	r0, r5
 800a31c:	f006 f886 	bl	801042c <GUI_ALLOC_h2p>
 800a320:	2f00      	cmp	r7, #0
 800a322:	d1f4      	bne.n	800a30e <WM__InsertWindowIntoList+0x76>
 800a324:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a326:	071b      	lsls	r3, r3, #28
 800a328:	d5f1      	bpl.n	800a30e <WM__InsertWindowIntoList+0x76>
 800a32a:	9b03      	ldr	r3, [sp, #12]
 800a32c:	621c      	str	r4, [r3, #32]
 800a32e:	9b01      	ldr	r3, [sp, #4]
 800a330:	621d      	str	r5, [r3, #32]
 800a332:	a801      	add	r0, sp, #4
 800a334:	f006 f892 	bl	801045c <GUI_ALLOC_UnlockH>
 800a338:	b005      	add	sp, #20
 800a33a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a33c <WM__RemoveWindowFromList>:
 800a33c:	b570      	push	{r4, r5, r6, lr}
 800a33e:	4604      	mov	r4, r0
 800a340:	f006 f874 	bl	801042c <GUI_ALLOC_h2p>
 800a344:	4605      	mov	r5, r0
 800a346:	6980      	ldr	r0, [r0, #24]
 800a348:	b1a8      	cbz	r0, 800a376 <WM__RemoveWindowFromList+0x3a>
 800a34a:	f006 f86f 	bl	801042c <GUI_ALLOC_h2p>
 800a34e:	69c3      	ldr	r3, [r0, #28]
 800a350:	42a3      	cmp	r3, r4
 800a352:	4606      	mov	r6, r0
 800a354:	d105      	bne.n	800a362 <WM__RemoveWindowFromList+0x26>
 800a356:	4618      	mov	r0, r3
 800a358:	f006 f868 	bl	801042c <GUI_ALLOC_h2p>
 800a35c:	6a03      	ldr	r3, [r0, #32]
 800a35e:	61f3      	str	r3, [r6, #28]
 800a360:	bd70      	pop	{r4, r5, r6, pc}
 800a362:	b143      	cbz	r3, 800a376 <WM__RemoveWindowFromList+0x3a>
 800a364:	4618      	mov	r0, r3
 800a366:	f006 f861 	bl	801042c <GUI_ALLOC_h2p>
 800a36a:	6a03      	ldr	r3, [r0, #32]
 800a36c:	42a3      	cmp	r3, r4
 800a36e:	d1f8      	bne.n	800a362 <WM__RemoveWindowFromList+0x26>
 800a370:	6a2b      	ldr	r3, [r5, #32]
 800a372:	6203      	str	r3, [r0, #32]
 800a374:	bd70      	pop	{r4, r5, r6, pc}
 800a376:	bd70      	pop	{r4, r5, r6, pc}

0800a378 <WM__Client2Screen>:
 800a378:	4603      	mov	r3, r0
 800a37a:	4608      	mov	r0, r1
 800a37c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800a380:	f9b3 1000 	ldrsh.w	r1, [r3]
 800a384:	f004 becc 	b.w	800f120 <GUI_MoveRect>

0800a388 <_SetClipRectUserIntersect>:
 800a388:	4b11      	ldr	r3, [pc, #68]	; (800a3d0 <_SetClipRectUserIntersect+0x48>)
 800a38a:	b530      	push	{r4, r5, lr}
 800a38c:	681c      	ldr	r4, [r3, #0]
 800a38e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a390:	b085      	sub	sp, #20
 800a392:	4605      	mov	r5, r0
 800a394:	b1ba      	cbz	r2, 800a3c6 <_SetClipRectUserIntersect+0x3e>
 800a396:	6810      	ldr	r0, [r2, #0]
 800a398:	6851      	ldr	r1, [r2, #4]
 800a39a:	ab02      	add	r3, sp, #8
 800a39c:	c303      	stmia	r3!, {r0, r1}
 800a39e:	4b0d      	ldr	r3, [pc, #52]	; (800a3d4 <_SetClipRectUserIntersect+0x4c>)
 800a3a0:	6818      	ldr	r0, [r3, #0]
 800a3a2:	b900      	cbnz	r0, 800a3a6 <_SetClipRectUserIntersect+0x1e>
 800a3a4:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800a3a6:	f006 f84b 	bl	8010440 <GUI_ALLOC_LockH>
 800a3aa:	ac04      	add	r4, sp, #16
 800a3ac:	a902      	add	r1, sp, #8
 800a3ae:	f844 0d0c 	str.w	r0, [r4, #-12]!
 800a3b2:	f7ff ffe1 	bl	800a378 <WM__Client2Screen>
 800a3b6:	4620      	mov	r0, r4
 800a3b8:	f006 f850 	bl	801045c <GUI_ALLOC_UnlockH>
 800a3bc:	a802      	add	r0, sp, #8
 800a3be:	4629      	mov	r1, r5
 800a3c0:	f003 fdee 	bl	800dfa0 <GUI__IntersectRect>
 800a3c4:	a802      	add	r0, sp, #8
 800a3c6:	f002 ffb1 	bl	800d32c <LCD_SetClipRectEx>
 800a3ca:	b005      	add	sp, #20
 800a3cc:	bd30      	pop	{r4, r5, pc}
 800a3ce:	bf00      	nop
 800a3d0:	20000254 	.word	0x20000254
 800a3d4:	2001b31c 	.word	0x2001b31c

0800a3d8 <WM__ActivateClipRect>:
 800a3d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a3da:	4b0e      	ldr	r3, [pc, #56]	; (800a414 <WM__ActivateClipRect+0x3c>)
 800a3dc:	681b      	ldr	r3, [r3, #0]
 800a3de:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800a3e2:	b10a      	cbz	r2, 800a3e8 <WM__ActivateClipRect+0x10>
 800a3e4:	480c      	ldr	r0, [pc, #48]	; (800a418 <WM__ActivateClipRect+0x40>)
 800a3e6:	e011      	b.n	800a40c <WM__ActivateClipRect+0x34>
 800a3e8:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800a3ea:	f006 f829 	bl	8010440 <GUI_ALLOC_LockH>
 800a3ee:	9001      	str	r0, [sp, #4]
 800a3f0:	c803      	ldmia	r0, {r0, r1}
 800a3f2:	ac02      	add	r4, sp, #8
 800a3f4:	e884 0003 	stmia.w	r4, {r0, r1}
 800a3f8:	a801      	add	r0, sp, #4
 800a3fa:	f006 f82f 	bl	801045c <GUI_ALLOC_UnlockH>
 800a3fe:	4b07      	ldr	r3, [pc, #28]	; (800a41c <WM__ActivateClipRect+0x44>)
 800a400:	6819      	ldr	r1, [r3, #0]
 800a402:	b111      	cbz	r1, 800a40a <WM__ActivateClipRect+0x32>
 800a404:	4620      	mov	r0, r4
 800a406:	f7ff ff19 	bl	800a23c <WM__ClipAtParentBorders>
 800a40a:	4620      	mov	r0, r4
 800a40c:	f7ff ffbc 	bl	800a388 <_SetClipRectUserIntersect>
 800a410:	b004      	add	sp, #16
 800a412:	bd10      	pop	{r4, pc}
 800a414:	20000254 	.word	0x20000254
 800a418:	20019484 	.word	0x20019484
 800a41c:	2001b31c 	.word	0x2001b31c

0800a420 <WM__IsWindow>:
 800a420:	4b06      	ldr	r3, [pc, #24]	; (800a43c <WM__IsWindow+0x1c>)
 800a422:	b510      	push	{r4, lr}
 800a424:	4604      	mov	r4, r0
 800a426:	6818      	ldr	r0, [r3, #0]
 800a428:	b128      	cbz	r0, 800a436 <WM__IsWindow+0x16>
 800a42a:	42a0      	cmp	r0, r4
 800a42c:	d004      	beq.n	800a438 <WM__IsWindow+0x18>
 800a42e:	f005 fffd 	bl	801042c <GUI_ALLOC_h2p>
 800a432:	6940      	ldr	r0, [r0, #20]
 800a434:	e7f8      	b.n	800a428 <WM__IsWindow+0x8>
 800a436:	bd10      	pop	{r4, pc}
 800a438:	2001      	movs	r0, #1
 800a43a:	bd10      	pop	{r4, pc}
 800a43c:	2001b33c 	.word	0x2001b33c

0800a440 <WM__InvalidateDrawAndDescs>:
 800a440:	b513      	push	{r0, r1, r4, lr}
 800a442:	4604      	mov	r4, r0
 800a444:	b300      	cbz	r0, 800a488 <WM__InvalidateDrawAndDescs+0x48>
 800a446:	f005 fffb 	bl	8010440 <GUI_ALLOC_LockH>
 800a44a:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800a44c:	9001      	str	r0, [sp, #4]
 800a44e:	0793      	lsls	r3, r2, #30
 800a450:	d517      	bpl.n	800a482 <WM__InvalidateDrawAndDescs+0x42>
 800a452:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800a454:	b140      	cbz	r0, 800a468 <WM__InvalidateDrawAndDescs+0x28>
 800a456:	4b0d      	ldr	r3, [pc, #52]	; (800a48c <WM__InvalidateDrawAndDescs+0x4c>)
 800a458:	681b      	ldr	r3, [r3, #0]
 800a45a:	42a3      	cmp	r3, r4
 800a45c:	d004      	beq.n	800a468 <WM__InvalidateDrawAndDescs+0x28>
 800a45e:	f001 fde5 	bl	800c02c <GUI_MEMDEV_Delete>
 800a462:	9b01      	ldr	r3, [sp, #4]
 800a464:	2200      	movs	r2, #0
 800a466:	625a      	str	r2, [r3, #36]	; 0x24
 800a468:	4620      	mov	r0, r4
 800a46a:	f7ff fc0e 	bl	8009c8a <WM_GetFirstChild>
 800a46e:	4604      	mov	r4, r0
 800a470:	b13c      	cbz	r4, 800a482 <WM__InvalidateDrawAndDescs+0x42>
 800a472:	4620      	mov	r0, r4
 800a474:	f7ff ffe4 	bl	800a440 <WM__InvalidateDrawAndDescs>
 800a478:	4620      	mov	r0, r4
 800a47a:	f005 ffd7 	bl	801042c <GUI_ALLOC_h2p>
 800a47e:	6a04      	ldr	r4, [r0, #32]
 800a480:	e7f6      	b.n	800a470 <WM__InvalidateDrawAndDescs+0x30>
 800a482:	a801      	add	r0, sp, #4
 800a484:	f005 ffea 	bl	801045c <GUI_ALLOC_UnlockH>
 800a488:	b002      	add	sp, #8
 800a48a:	bd10      	pop	{r4, pc}
 800a48c:	2001b364 	.word	0x2001b364

0800a490 <WM__RectIsNZ>:
 800a490:	f9b0 2000 	ldrsh.w	r2, [r0]
 800a494:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a498:	429a      	cmp	r2, r3
 800a49a:	dc08      	bgt.n	800a4ae <WM__RectIsNZ+0x1e>
 800a49c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800a4a0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800a4a4:	429a      	cmp	r2, r3
 800a4a6:	bfcc      	ite	gt
 800a4a8:	2000      	movgt	r0, #0
 800a4aa:	2001      	movle	r0, #1
 800a4ac:	4770      	bx	lr
 800a4ae:	2000      	movs	r0, #0
 800a4b0:	4770      	bx	lr
	...

0800a4b4 <_Invalidate1Abs>:
 800a4b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a4b6:	b085      	sub	sp, #20
 800a4b8:	4606      	mov	r6, r0
 800a4ba:	460d      	mov	r5, r1
 800a4bc:	4617      	mov	r7, r2
 800a4be:	f005 ffb5 	bl	801042c <GUI_ALLOC_h2p>
 800a4c2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a4c4:	9001      	str	r0, [sp, #4]
 800a4c6:	07a3      	lsls	r3, r4, #30
 800a4c8:	d534      	bpl.n	800a534 <_Invalidate1Abs+0x80>
 800a4ca:	4628      	mov	r0, r5
 800a4cc:	f7ff ffe0 	bl	800a490 <WM__RectIsNZ>
 800a4d0:	2800      	cmp	r0, #0
 800a4d2:	d02f      	beq.n	800a534 <_Invalidate1Abs+0x80>
 800a4d4:	f640 0301 	movw	r3, #2049	; 0x801
 800a4d8:	4023      	ands	r3, r4
 800a4da:	2b01      	cmp	r3, #1
 800a4dc:	d02a      	beq.n	800a534 <_Invalidate1Abs+0x80>
 800a4de:	4630      	mov	r0, r6
 800a4e0:	f005 ffae 	bl	8010440 <GUI_ALLOC_LockH>
 800a4e4:	ac02      	add	r4, sp, #8
 800a4e6:	4602      	mov	r2, r0
 800a4e8:	9001      	str	r0, [sp, #4]
 800a4ea:	4629      	mov	r1, r5
 800a4ec:	4620      	mov	r0, r4
 800a4ee:	f003 fd25 	bl	800df3c <GUI__IntersectRects>
 800a4f2:	4620      	mov	r0, r4
 800a4f4:	f7ff ffcc 	bl	800a490 <WM__RectIsNZ>
 800a4f8:	b1c8      	cbz	r0, 800a52e <_Invalidate1Abs+0x7a>
 800a4fa:	9b01      	ldr	r3, [sp, #4]
 800a4fc:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800a4fe:	f244 0120 	movw	r1, #16416	; 0x4020
 800a502:	4031      	ands	r1, r6
 800a504:	f103 0508 	add.w	r5, r3, #8
 800a508:	b129      	cbz	r1, 800a516 <_Invalidate1Abs+0x62>
 800a50a:	4628      	mov	r0, r5
 800a50c:	4629      	mov	r1, r5
 800a50e:	4622      	mov	r2, r4
 800a510:	f004 fe16 	bl	800f140 <GUI_MergeRect>
 800a514:	e00b      	b.n	800a52e <_Invalidate1Abs+0x7a>
 800a516:	e894 0003 	ldmia.w	r4, {r0, r1}
 800a51a:	433e      	orrs	r6, r7
 800a51c:	e885 0003 	stmia.w	r5, {r0, r1}
 800a520:	629e      	str	r6, [r3, #40]	; 0x28
 800a522:	4b05      	ldr	r3, [pc, #20]	; (800a538 <_Invalidate1Abs+0x84>)
 800a524:	881a      	ldrh	r2, [r3, #0]
 800a526:	3201      	adds	r2, #1
 800a528:	801a      	strh	r2, [r3, #0]
 800a52a:	f003 feff 	bl	800e32c <GUI_SignalEvent>
 800a52e:	a801      	add	r0, sp, #4
 800a530:	f005 ff94 	bl	801045c <GUI_ALLOC_UnlockH>
 800a534:	b005      	add	sp, #20
 800a536:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a538:	2001b338 	.word	0x2001b338

0800a53c <WM__Invalidate1Abs>:
 800a53c:	2220      	movs	r2, #32
 800a53e:	f7ff bfb9 	b.w	800a4b4 <_Invalidate1Abs>

0800a542 <WM_InvalidateWindowAndDescsEx>:
 800a542:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a544:	460f      	mov	r7, r1
 800a546:	b085      	sub	sp, #20
 800a548:	4615      	mov	r5, r2
 800a54a:	4606      	mov	r6, r0
 800a54c:	b348      	cbz	r0, 800a5a2 <WM_InvalidateWindowAndDescsEx+0x60>
 800a54e:	f005 ff77 	bl	8010440 <GUI_ALLOC_LockH>
 800a552:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a554:	ac04      	add	r4, sp, #16
 800a556:	079b      	lsls	r3, r3, #30
 800a558:	4602      	mov	r2, r0
 800a55a:	f844 0d0c 	str.w	r0, [r4, #-12]!
 800a55e:	d403      	bmi.n	800a568 <WM_InvalidateWindowAndDescsEx+0x26>
 800a560:	4620      	mov	r0, r4
 800a562:	f005 ff7b 	bl	801045c <GUI_ALLOC_UnlockH>
 800a566:	e01c      	b.n	800a5a2 <WM_InvalidateWindowAndDescsEx+0x60>
 800a568:	a802      	add	r0, sp, #8
 800a56a:	4639      	mov	r1, r7
 800a56c:	f003 fce6 	bl	800df3c <GUI__IntersectRects>
 800a570:	2800      	cmp	r0, #0
 800a572:	d0f5      	beq.n	800a560 <WM_InvalidateWindowAndDescsEx+0x1e>
 800a574:	4620      	mov	r0, r4
 800a576:	f005 ff71 	bl	801045c <GUI_ALLOC_UnlockH>
 800a57a:	4630      	mov	r0, r6
 800a57c:	a902      	add	r1, sp, #8
 800a57e:	462a      	mov	r2, r5
 800a580:	f7ff ff98 	bl	800a4b4 <_Invalidate1Abs>
 800a584:	4630      	mov	r0, r6
 800a586:	f7ff fb80 	bl	8009c8a <WM_GetFirstChild>
 800a58a:	4604      	mov	r4, r0
 800a58c:	b14c      	cbz	r4, 800a5a2 <WM_InvalidateWindowAndDescsEx+0x60>
 800a58e:	4620      	mov	r0, r4
 800a590:	a902      	add	r1, sp, #8
 800a592:	462a      	mov	r2, r5
 800a594:	f7ff ffd5 	bl	800a542 <WM_InvalidateWindowAndDescsEx>
 800a598:	4620      	mov	r0, r4
 800a59a:	f005 ff47 	bl	801042c <GUI_ALLOC_h2p>
 800a59e:	6a04      	ldr	r4, [r0, #32]
 800a5a0:	e7f4      	b.n	800a58c <WM_InvalidateWindowAndDescsEx+0x4a>
 800a5a2:	b005      	add	sp, #20
 800a5a4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a5a6 <WM__InvalidateRect>:
 800a5a6:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800a5aa:	4680      	mov	r8, r0
 800a5ac:	4617      	mov	r7, r2
 800a5ae:	461d      	mov	r5, r3
 800a5b0:	460c      	mov	r4, r1
 800a5b2:	2900      	cmp	r1, #0
 800a5b4:	d030      	beq.n	800a618 <WM__InvalidateRect+0x72>
 800a5b6:	4608      	mov	r0, r1
 800a5b8:	f005 ff42 	bl	8010440 <GUI_ALLOC_LockH>
 800a5bc:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800a5be:	9001      	str	r0, [sp, #4]
 800a5c0:	07b3      	lsls	r3, r6, #30
 800a5c2:	4602      	mov	r2, r0
 800a5c4:	d525      	bpl.n	800a612 <WM__InvalidateRect+0x6c>
 800a5c6:	a802      	add	r0, sp, #8
 800a5c8:	4641      	mov	r1, r8
 800a5ca:	f003 fcb7 	bl	800df3c <GUI__IntersectRects>
 800a5ce:	b300      	cbz	r0, 800a612 <WM__InvalidateRect+0x6c>
 800a5d0:	f640 0301 	movw	r3, #2049	; 0x801
 800a5d4:	4033      	ands	r3, r6
 800a5d6:	2b01      	cmp	r3, #1
 800a5d8:	d107      	bne.n	800a5ea <WM__InvalidateRect+0x44>
 800a5da:	9b01      	ldr	r3, [sp, #4]
 800a5dc:	a802      	add	r0, sp, #8
 800a5de:	6999      	ldr	r1, [r3, #24]
 800a5e0:	6a1a      	ldr	r2, [r3, #32]
 800a5e2:	462b      	mov	r3, r5
 800a5e4:	f7ff ffdf 	bl	800a5a6 <WM__InvalidateRect>
 800a5e8:	e004      	b.n	800a5f4 <WM__InvalidateRect+0x4e>
 800a5ea:	4620      	mov	r0, r4
 800a5ec:	a902      	add	r1, sp, #8
 800a5ee:	462a      	mov	r2, r5
 800a5f0:	f7ff ff60 	bl	800a4b4 <_Invalidate1Abs>
 800a5f4:	9b01      	ldr	r3, [sp, #4]
 800a5f6:	69dc      	ldr	r4, [r3, #28]
 800a5f8:	b15c      	cbz	r4, 800a612 <WM__InvalidateRect+0x6c>
 800a5fa:	42bc      	cmp	r4, r7
 800a5fc:	d009      	beq.n	800a612 <WM__InvalidateRect+0x6c>
 800a5fe:	4620      	mov	r0, r4
 800a600:	a902      	add	r1, sp, #8
 800a602:	462a      	mov	r2, r5
 800a604:	f7ff ff9d 	bl	800a542 <WM_InvalidateWindowAndDescsEx>
 800a608:	4620      	mov	r0, r4
 800a60a:	f005 ff0f 	bl	801042c <GUI_ALLOC_h2p>
 800a60e:	6a04      	ldr	r4, [r0, #32]
 800a610:	e7f2      	b.n	800a5f8 <WM__InvalidateRect+0x52>
 800a612:	a801      	add	r0, sp, #4
 800a614:	f005 ff22 	bl	801045c <GUI_ALLOC_UnlockH>
 800a618:	b004      	add	sp, #16
 800a61a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a61e <WM__InvalidateParent>:
 800a61e:	b570      	push	{r4, r5, r6, lr}
 800a620:	4605      	mov	r5, r0
 800a622:	4608      	mov	r0, r1
 800a624:	460c      	mov	r4, r1
 800a626:	4616      	mov	r6, r2
 800a628:	f005 ff00 	bl	801042c <GUI_ALLOC_h2p>
 800a62c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a62e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 800a632:	4628      	mov	r0, r5
 800a634:	4621      	mov	r1, r4
 800a636:	4632      	mov	r2, r6
 800a638:	bf0c      	ite	eq
 800a63a:	2320      	moveq	r3, #32
 800a63c:	f44f 4380 	movne.w	r3, #16384	; 0x4000
 800a640:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a644:	f7ff bfaf 	b.w	800a5a6 <WM__InvalidateRect>

0800a648 <WM__InvalidateRectEx>:
 800a648:	2320      	movs	r3, #32
 800a64a:	f7ff bfac 	b.w	800a5a6 <WM__InvalidateRect>

0800a64e <WM__DetachWindow>:
 800a64e:	b513      	push	{r0, r1, r4, lr}
 800a650:	4604      	mov	r4, r0
 800a652:	f005 fef5 	bl	8010440 <GUI_ALLOC_LockH>
 800a656:	6981      	ldr	r1, [r0, #24]
 800a658:	9001      	str	r0, [sp, #4]
 800a65a:	b141      	cbz	r1, 800a66e <WM__DetachWindow+0x20>
 800a65c:	6a02      	ldr	r2, [r0, #32]
 800a65e:	f7ff fff3 	bl	800a648 <WM__InvalidateRectEx>
 800a662:	4620      	mov	r0, r4
 800a664:	f7ff fe6a 	bl	800a33c <WM__RemoveWindowFromList>
 800a668:	9b01      	ldr	r3, [sp, #4]
 800a66a:	2200      	movs	r2, #0
 800a66c:	619a      	str	r2, [r3, #24]
 800a66e:	a801      	add	r0, sp, #4
 800a670:	f005 fef4 	bl	801045c <GUI_ALLOC_UnlockH>
 800a674:	b002      	add	sp, #8
 800a676:	bd10      	pop	{r4, pc}

0800a678 <WM_SendMessage>:
 800a678:	b108      	cbz	r0, 800a67e <WM_SendMessage+0x6>
 800a67a:	f007 ba99 	b.w	8011bb0 <WM__SendMessage>
 800a67e:	4770      	bx	lr

0800a680 <WM__SendMsgNoData>:
 800a680:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800a682:	ab04      	add	r3, sp, #16
 800a684:	9001      	str	r0, [sp, #4]
 800a686:	f843 1d10 	str.w	r1, [r3, #-16]!
 800a68a:	4669      	mov	r1, sp
 800a68c:	f007 fa90 	bl	8011bb0 <WM__SendMessage>
 800a690:	b005      	add	sp, #20
 800a692:	f85d fb04 	ldr.w	pc, [sp], #4

0800a696 <WM__GetClientRectWin>:
 800a696:	2300      	movs	r3, #0
 800a698:	800b      	strh	r3, [r1, #0]
 800a69a:	8882      	ldrh	r2, [r0, #4]
 800a69c:	804b      	strh	r3, [r1, #2]
 800a69e:	8803      	ldrh	r3, [r0, #0]
 800a6a0:	1ad3      	subs	r3, r2, r3
 800a6a2:	808b      	strh	r3, [r1, #4]
 800a6a4:	88c2      	ldrh	r2, [r0, #6]
 800a6a6:	8843      	ldrh	r3, [r0, #2]
 800a6a8:	1ad3      	subs	r3, r2, r3
 800a6aa:	80cb      	strh	r3, [r1, #6]
 800a6ac:	4770      	bx	lr

0800a6ae <WM_InvalidateRect>:
 800a6ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a6b0:	460f      	mov	r7, r1
 800a6b2:	b087      	sub	sp, #28
 800a6b4:	4605      	mov	r5, r0
 800a6b6:	2800      	cmp	r0, #0
 800a6b8:	d033      	beq.n	800a722 <WM_InvalidateRect+0x74>
 800a6ba:	f005 fec1 	bl	8010440 <GUI_ALLOC_LockH>
 800a6be:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800a6c0:	9001      	str	r0, [sp, #4]
 800a6c2:	07b2      	lsls	r2, r6, #30
 800a6c4:	d52a      	bpl.n	800a71c <WM_InvalidateRect+0x6e>
 800a6c6:	c803      	ldmia	r0, {r0, r1}
 800a6c8:	ac04      	add	r4, sp, #16
 800a6ca:	03f3      	lsls	r3, r6, #15
 800a6cc:	e884 0003 	stmia.w	r4, {r0, r1}
 800a6d0:	d502      	bpl.n	800a6d8 <WM_InvalidateRect+0x2a>
 800a6d2:	4628      	mov	r0, r5
 800a6d4:	f7ff feb4 	bl	800a440 <WM__InvalidateDrawAndDescs>
 800a6d8:	b15f      	cbz	r7, 800a6f2 <WM_InvalidateRect+0x44>
 800a6da:	6838      	ldr	r0, [r7, #0]
 800a6dc:	6879      	ldr	r1, [r7, #4]
 800a6de:	ab02      	add	r3, sp, #8
 800a6e0:	c303      	stmia	r3!, {r0, r1}
 800a6e2:	9801      	ldr	r0, [sp, #4]
 800a6e4:	a902      	add	r1, sp, #8
 800a6e6:	f7ff fe47 	bl	800a378 <WM__Client2Screen>
 800a6ea:	4620      	mov	r0, r4
 800a6ec:	a902      	add	r1, sp, #8
 800a6ee:	f003 fc57 	bl	800dfa0 <GUI__IntersectRect>
 800a6f2:	4620      	mov	r0, r4
 800a6f4:	4629      	mov	r1, r5
 800a6f6:	f7ff fda1 	bl	800a23c <WM__ClipAtParentBorders>
 800a6fa:	b178      	cbz	r0, 800a71c <WM_InvalidateRect+0x6e>
 800a6fc:	f640 0301 	movw	r3, #2049	; 0x801
 800a700:	4033      	ands	r3, r6
 800a702:	2b01      	cmp	r3, #1
 800a704:	d106      	bne.n	800a714 <WM_InvalidateRect+0x66>
 800a706:	9b01      	ldr	r3, [sp, #4]
 800a708:	4620      	mov	r0, r4
 800a70a:	6999      	ldr	r1, [r3, #24]
 800a70c:	6a1a      	ldr	r2, [r3, #32]
 800a70e:	f7ff ff9b 	bl	800a648 <WM__InvalidateRectEx>
 800a712:	e003      	b.n	800a71c <WM_InvalidateRect+0x6e>
 800a714:	4628      	mov	r0, r5
 800a716:	4621      	mov	r1, r4
 800a718:	f7ff ff10 	bl	800a53c <WM__Invalidate1Abs>
 800a71c:	a801      	add	r0, sp, #4
 800a71e:	f005 fe9d 	bl	801045c <GUI_ALLOC_UnlockH>
 800a722:	b007      	add	sp, #28
 800a724:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a726 <WM_InvalidateWindow>:
 800a726:	2100      	movs	r1, #0
 800a728:	f7ff bfc1 	b.w	800a6ae <WM_InvalidateRect>

0800a72c <WM__GetTopLevelLayer>:
 800a72c:	b510      	push	{r4, lr}
 800a72e:	4604      	mov	r4, r0
 800a730:	f005 fe7c 	bl	801042c <GUI_ALLOC_h2p>
 800a734:	6980      	ldr	r0, [r0, #24]
 800a736:	2800      	cmp	r0, #0
 800a738:	d1f9      	bne.n	800a72e <WM__GetTopLevelLayer+0x2>
 800a73a:	4b05      	ldr	r3, [pc, #20]	; (800a750 <WM__GetTopLevelLayer+0x24>)
 800a73c:	681a      	ldr	r2, [r3, #0]
 800a73e:	4294      	cmp	r4, r2
 800a740:	d005      	beq.n	800a74e <WM__GetTopLevelLayer+0x22>
 800a742:	6858      	ldr	r0, [r3, #4]
 800a744:	4284      	cmp	r4, r0
 800a746:	bf14      	ite	ne
 800a748:	f04f 30ff 	movne.w	r0, #4294967295
 800a74c:	2001      	moveq	r0, #1
 800a74e:	bd10      	pop	{r4, pc}
 800a750:	2001b320 	.word	0x2001b320

0800a754 <WM__SelectTopLevelLayer>:
 800a754:	b508      	push	{r3, lr}
 800a756:	f7ff ffe9 	bl	800a72c <WM__GetTopLevelLayer>
 800a75a:	2800      	cmp	r0, #0
 800a75c:	db03      	blt.n	800a766 <WM__SelectTopLevelLayer+0x12>
 800a75e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a762:	f004 bbcd 	b.w	800ef00 <GUI_SelectLayer>
 800a766:	bd08      	pop	{r3, pc}

0800a768 <WM_SelectWindow>:
 800a768:	4a0d      	ldr	r2, [pc, #52]	; (800a7a0 <WM_SelectWindow+0x38>)
 800a76a:	6813      	ldr	r3, [r2, #0]
 800a76c:	b570      	push	{r4, r5, r6, lr}
 800a76e:	6c9d      	ldr	r5, [r3, #72]	; 0x48
 800a770:	4604      	mov	r4, r0
 800a772:	4616      	mov	r6, r2
 800a774:	b908      	cbnz	r0, 800a77a <WM_SelectWindow+0x12>
 800a776:	4a0b      	ldr	r2, [pc, #44]	; (800a7a4 <WM_SelectWindow+0x3c>)
 800a778:	6814      	ldr	r4, [r2, #0]
 800a77a:	649c      	str	r4, [r3, #72]	; 0x48
 800a77c:	4620      	mov	r0, r4
 800a77e:	f7ff ffe9 	bl	800a754 <WM__SelectTopLevelLayer>
 800a782:	f003 f9fb 	bl	800db7c <LCD_SetClipRectMax>
 800a786:	4620      	mov	r0, r4
 800a788:	f005 fe50 	bl	801042c <GUI_ALLOC_h2p>
 800a78c:	6833      	ldr	r3, [r6, #0]
 800a78e:	f9b0 1000 	ldrsh.w	r1, [r0]
 800a792:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800a796:	64d9      	str	r1, [r3, #76]	; 0x4c
 800a798:	651a      	str	r2, [r3, #80]	; 0x50
 800a79a:	4628      	mov	r0, r5
 800a79c:	bd70      	pop	{r4, r5, r6, pc}
 800a79e:	bf00      	nop
 800a7a0:	20000254 	.word	0x20000254
 800a7a4:	2001b33c 	.word	0x2001b33c

0800a7a8 <WM_CreateWindowAsChild>:
 800a7a8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a7ac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800a7ae:	469b      	mov	fp, r3
 800a7b0:	4b4b      	ldr	r3, [pc, #300]	; (800a8e0 <WM_CreateWindowAsChild+0x138>)
 800a7b2:	4607      	mov	r7, r0
 800a7b4:	4688      	mov	r8, r1
 800a7b6:	4692      	mov	sl, r2
 800a7b8:	681e      	ldr	r6, [r3, #0]
 800a7ba:	bb65      	cbnz	r5, 800a816 <WM_CreateWindowAsChild+0x6e>
 800a7bc:	4b49      	ldr	r3, [pc, #292]	; (800a8e4 <WM_CreateWindowAsChild+0x13c>)
 800a7be:	881b      	ldrh	r3, [r3, #0]
 800a7c0:	b363      	cbz	r3, 800a81c <WM_CreateWindowAsChild+0x74>
 800a7c2:	4b49      	ldr	r3, [pc, #292]	; (800a8e8 <WM_CreateWindowAsChild+0x140>)
 800a7c4:	681b      	ldr	r3, [r3, #0]
 800a7c6:	7c5a      	ldrb	r2, [r3, #17]
 800a7c8:	4b48      	ldr	r3, [pc, #288]	; (800a8ec <WM_CreateWindowAsChild+0x144>)
 800a7ca:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a7ce:	1c5a      	adds	r2, r3, #1
 800a7d0:	d024      	beq.n	800a81c <WM_CreateWindowAsChild+0x74>
 800a7d2:	b31b      	cbz	r3, 800a81c <WM_CreateWindowAsChild+0x74>
 800a7d4:	461d      	mov	r5, r3
 800a7d6:	4628      	mov	r0, r5
 800a7d8:	f005 fe32 	bl	8010440 <GUI_ALLOC_LockH>
 800a7dc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800a7e0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800a7e4:	9001      	str	r0, [sp, #4]
 800a7e6:	4417      	add	r7, r2
 800a7e8:	4498      	add	r8, r3
 800a7ea:	f1ba 0f00 	cmp.w	sl, #0
 800a7ee:	d105      	bne.n	800a7fc <WM_CreateWindowAsChild+0x54>
 800a7f0:	f9b0 a004 	ldrsh.w	sl, [r0, #4]
 800a7f4:	ebc2 0a0a 	rsb	sl, r2, sl
 800a7f8:	f10a 0a01 	add.w	sl, sl, #1
 800a7fc:	f1bb 0f00 	cmp.w	fp, #0
 800a800:	d105      	bne.n	800a80e <WM_CreateWindowAsChild+0x66>
 800a802:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 800a806:	ebc3 0b0b 	rsb	fp, r3, fp
 800a80a:	f10b 0b01 	add.w	fp, fp, #1
 800a80e:	a801      	add	r0, sp, #4
 800a810:	f005 fe24 	bl	801045c <GUI_ALLOC_UnlockH>
 800a814:	e002      	b.n	800a81c <WM_CreateWindowAsChild+0x74>
 800a816:	1c6b      	adds	r3, r5, #1
 800a818:	d1dd      	bne.n	800a7d6 <WM_CreateWindowAsChild+0x2e>
 800a81a:	2500      	movs	r5, #0
 800a81c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800a81e:	302c      	adds	r0, #44	; 0x2c
 800a820:	f006 f87b 	bl	801091a <GUI_ALLOC_AllocZero>
 800a824:	4604      	mov	r4, r0
 800a826:	2800      	cmp	r0, #0
 800a828:	d056      	beq.n	800a8d8 <WM_CreateWindowAsChild+0x130>
 800a82a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a82c:	431e      	orrs	r6, r3
 800a82e:	4b2d      	ldr	r3, [pc, #180]	; (800a8e4 <WM_CreateWindowAsChild+0x13c>)
 800a830:	881a      	ldrh	r2, [r3, #0]
 800a832:	3201      	adds	r2, #1
 800a834:	801a      	strh	r2, [r3, #0]
 800a836:	f005 fe03 	bl	8010440 <GUI_ALLOC_LockH>
 800a83a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a83c:	6103      	str	r3, [r0, #16]
 800a83e:	f10d 0908 	add.w	r9, sp, #8
 800a842:	4b2b      	ldr	r3, [pc, #172]	; (800a8f0 <WM_CreateWindowAsChild+0x148>)
 800a844:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800a846:	f849 0d08 	str.w	r0, [r9, #-8]!
 800a84a:	4033      	ands	r3, r6
 800a84c:	8007      	strh	r7, [r0, #0]
 800a84e:	f8a0 8002 	strh.w	r8, [r0, #2]
 800a852:	4457      	add	r7, sl
 800a854:	44d8      	add	r8, fp
 800a856:	4313      	orrs	r3, r2
 800a858:	3f01      	subs	r7, #1
 800a85a:	f108 38ff 	add.w	r8, r8, #4294967295
 800a85e:	6283      	str	r3, [r0, #40]	; 0x28
 800a860:	8087      	strh	r7, [r0, #4]
 800a862:	f8a0 8006 	strh.w	r8, [r0, #6]
 800a866:	4668      	mov	r0, sp
 800a868:	f005 fdf8 	bl	801045c <GUI_ALLOC_UnlockH>
 800a86c:	4b21      	ldr	r3, [pc, #132]	; (800a8f4 <WM_CreateWindowAsChild+0x14c>)
 800a86e:	6818      	ldr	r0, [r3, #0]
 800a870:	b148      	cbz	r0, 800a886 <WM_CreateWindowAsChild+0xde>
 800a872:	f005 fddb 	bl	801042c <GUI_ALLOC_h2p>
 800a876:	4607      	mov	r7, r0
 800a878:	4620      	mov	r0, r4
 800a87a:	f005 fdd7 	bl	801042c <GUI_ALLOC_h2p>
 800a87e:	697b      	ldr	r3, [r7, #20]
 800a880:	6143      	str	r3, [r0, #20]
 800a882:	617c      	str	r4, [r7, #20]
 800a884:	e000      	b.n	800a888 <WM_CreateWindowAsChild+0xe0>
 800a886:	601c      	str	r4, [r3, #0]
 800a888:	4629      	mov	r1, r5
 800a88a:	4620      	mov	r0, r4
 800a88c:	f7ff fd04 	bl	800a298 <WM__InsertWindowIntoList>
 800a890:	06b5      	lsls	r5, r6, #26
 800a892:	d502      	bpl.n	800a89a <WM_CreateWindowAsChild+0xf2>
 800a894:	4620      	mov	r0, r4
 800a896:	f7ff ff67 	bl	800a768 <WM_SelectWindow>
 800a89a:	07f0      	lsls	r0, r6, #31
 800a89c:	d503      	bpl.n	800a8a6 <WM_CreateWindowAsChild+0xfe>
 800a89e:	4b16      	ldr	r3, [pc, #88]	; (800a8f8 <WM_CreateWindowAsChild+0x150>)
 800a8a0:	681a      	ldr	r2, [r3, #0]
 800a8a2:	3201      	adds	r2, #1
 800a8a4:	601a      	str	r2, [r3, #0]
 800a8a6:	0671      	lsls	r1, r6, #25
 800a8a8:	d502      	bpl.n	800a8b0 <WM_CreateWindowAsChild+0x108>
 800a8aa:	4620      	mov	r0, r4
 800a8ac:	f007 fdb6 	bl	801241c <WM_BringToBottom>
 800a8b0:	07b2      	lsls	r2, r6, #30
 800a8b2:	d50d      	bpl.n	800a8d0 <WM_CreateWindowAsChild+0x128>
 800a8b4:	4620      	mov	r0, r4
 800a8b6:	f005 fdc3 	bl	8010440 <GUI_ALLOC_LockH>
 800a8ba:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a8bc:	9000      	str	r0, [sp, #0]
 800a8be:	f043 0302 	orr.w	r3, r3, #2
 800a8c2:	6283      	str	r3, [r0, #40]	; 0x28
 800a8c4:	4668      	mov	r0, sp
 800a8c6:	f005 fdc9 	bl	801045c <GUI_ALLOC_UnlockH>
 800a8ca:	4620      	mov	r0, r4
 800a8cc:	f7ff ff2b 	bl	800a726 <WM_InvalidateWindow>
 800a8d0:	4620      	mov	r0, r4
 800a8d2:	2101      	movs	r1, #1
 800a8d4:	f7ff fed4 	bl	800a680 <WM__SendMsgNoData>
 800a8d8:	4620      	mov	r0, r4
 800a8da:	b003      	add	sp, #12
 800a8dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a8e0:	2001b348 	.word	0x2001b348
 800a8e4:	2001b318 	.word	0x2001b318
 800a8e8:	20000254 	.word	0x20000254
 800a8ec:	2001b320 	.word	0x2001b320
 800a8f0:	003f3f9f 	.word	0x003f3f9f
 800a8f4:	2001b33c 	.word	0x2001b33c
 800a8f8:	2001b368 	.word	0x2001b368

0800a8fc <WM_DeleteWindow>:
 800a8fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a8fe:	4604      	mov	r4, r0
 800a900:	2800      	cmp	r0, #0
 800a902:	d06e      	beq.n	800a9e2 <WM_DeleteWindow+0xe6>
 800a904:	f7ff fd8c 	bl	800a420 <WM__IsWindow>
 800a908:	2800      	cmp	r0, #0
 800a90a:	d06a      	beq.n	800a9e2 <WM_DeleteWindow+0xe6>
 800a90c:	4620      	mov	r0, r4
 800a90e:	f7ff ff0d 	bl	800a72c <WM__GetTopLevelLayer>
 800a912:	210b      	movs	r1, #11
 800a914:	4605      	mov	r5, r0
 800a916:	4620      	mov	r0, r4
 800a918:	f7ff feb2 	bl	800a680 <WM__SendMsgNoData>
 800a91c:	4620      	mov	r0, r4
 800a91e:	f007 fc16 	bl	801214e <WM__DeleteAssocTimer>
 800a922:	4620      	mov	r0, r4
 800a924:	f005 fd8c 	bl	8010440 <GUI_ALLOC_LockH>
 800a928:	9001      	str	r0, [sp, #4]
 800a92a:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800a92c:	b108      	cbz	r0, 800a932 <WM_DeleteWindow+0x36>
 800a92e:	f001 fb7d 	bl	800c02c <GUI_MEMDEV_Delete>
 800a932:	4b2d      	ldr	r3, [pc, #180]	; (800a9e8 <WM_DeleteWindow+0xec>)
 800a934:	4a2d      	ldr	r2, [pc, #180]	; (800a9ec <WM_DeleteWindow+0xf0>)
 800a936:	2100      	movs	r1, #0
 800a938:	6019      	str	r1, [r3, #0]
 800a93a:	4b2d      	ldr	r3, [pc, #180]	; (800a9f0 <WM_DeleteWindow+0xf4>)
 800a93c:	681b      	ldr	r3, [r3, #0]
 800a93e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800a942:	42a0      	cmp	r0, r4
 800a944:	bf08      	it	eq
 800a946:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 800a94a:	4a2a      	ldr	r2, [pc, #168]	; (800a9f4 <WM_DeleteWindow+0xf8>)
 800a94c:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800a950:	42a1      	cmp	r1, r4
 800a952:	bf04      	itt	eq
 800a954:	2100      	moveq	r1, #0
 800a956:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 800a95a:	4b27      	ldr	r3, [pc, #156]	; (800a9f8 <WM_DeleteWindow+0xfc>)
 800a95c:	681b      	ldr	r3, [r3, #0]
 800a95e:	b12b      	cbz	r3, 800a96c <WM_DeleteWindow+0x70>
 800a960:	685a      	ldr	r2, [r3, #4]
 800a962:	42a2      	cmp	r2, r4
 800a964:	bf04      	itt	eq
 800a966:	2200      	moveq	r2, #0
 800a968:	605a      	streq	r2, [r3, #4]
 800a96a:	e7f7      	b.n	800a95c <WM_DeleteWindow+0x60>
 800a96c:	4620      	mov	r0, r4
 800a96e:	2107      	movs	r1, #7
 800a970:	f7fe ffb7 	bl	80098e2 <WM_NotifyParent>
 800a974:	9e01      	ldr	r6, [sp, #4]
 800a976:	69f0      	ldr	r0, [r6, #28]
 800a978:	f7ff ffc0 	bl	800a8fc <WM_DeleteWindow>
 800a97c:	69f3      	ldr	r3, [r6, #28]
 800a97e:	2b00      	cmp	r3, #0
 800a980:	d1f9      	bne.n	800a976 <WM_DeleteWindow+0x7a>
 800a982:	4620      	mov	r0, r4
 800a984:	f7ff fe63 	bl	800a64e <WM__DetachWindow>
 800a988:	4b1c      	ldr	r3, [pc, #112]	; (800a9fc <WM_DeleteWindow+0x100>)
 800a98a:	6818      	ldr	r0, [r3, #0]
 800a98c:	b150      	cbz	r0, 800a9a4 <WM_DeleteWindow+0xa8>
 800a98e:	f005 fd4d 	bl	801042c <GUI_ALLOC_h2p>
 800a992:	4606      	mov	r6, r0
 800a994:	6940      	ldr	r0, [r0, #20]
 800a996:	42a0      	cmp	r0, r4
 800a998:	d1f8      	bne.n	800a98c <WM_DeleteWindow+0x90>
 800a99a:	4620      	mov	r0, r4
 800a99c:	f005 fd46 	bl	801042c <GUI_ALLOC_h2p>
 800a9a0:	6943      	ldr	r3, [r0, #20]
 800a9a2:	6173      	str	r3, [r6, #20]
 800a9a4:	9b01      	ldr	r3, [sp, #4]
 800a9a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a9a8:	07da      	lsls	r2, r3, #31
 800a9aa:	d503      	bpl.n	800a9b4 <WM_DeleteWindow+0xb8>
 800a9ac:	4a14      	ldr	r2, [pc, #80]	; (800aa00 <WM_DeleteWindow+0x104>)
 800a9ae:	6811      	ldr	r1, [r2, #0]
 800a9b0:	3901      	subs	r1, #1
 800a9b2:	6011      	str	r1, [r2, #0]
 800a9b4:	069b      	lsls	r3, r3, #26
 800a9b6:	d503      	bpl.n	800a9c0 <WM_DeleteWindow+0xc4>
 800a9b8:	4b12      	ldr	r3, [pc, #72]	; (800aa04 <WM_DeleteWindow+0x108>)
 800a9ba:	881a      	ldrh	r2, [r3, #0]
 800a9bc:	3a01      	subs	r2, #1
 800a9be:	801a      	strh	r2, [r3, #0]
 800a9c0:	a801      	add	r0, sp, #4
 800a9c2:	f005 fd4b 	bl	801045c <GUI_ALLOC_UnlockH>
 800a9c6:	4b10      	ldr	r3, [pc, #64]	; (800aa08 <WM_DeleteWindow+0x10c>)
 800a9c8:	881a      	ldrh	r2, [r3, #0]
 800a9ca:	4620      	mov	r0, r4
 800a9cc:	3a01      	subs	r2, #1
 800a9ce:	801a      	strh	r2, [r3, #0]
 800a9d0:	f005 fd70 	bl	80104b4 <GUI_ALLOC_Free>
 800a9d4:	2d00      	cmp	r5, #0
 800a9d6:	db04      	blt.n	800a9e2 <WM_DeleteWindow+0xe6>
 800a9d8:	4b0c      	ldr	r3, [pc, #48]	; (800aa0c <WM_DeleteWindow+0x110>)
 800a9da:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800a9de:	f7ff fec3 	bl	800a768 <WM_SelectWindow>
 800a9e2:	b002      	add	sp, #8
 800a9e4:	bd70      	pop	{r4, r5, r6, pc}
 800a9e6:	bf00      	nop
 800a9e8:	20019494 	.word	0x20019494
 800a9ec:	2001b330 	.word	0x2001b330
 800a9f0:	2001b340 	.word	0x2001b340
 800a9f4:	2001b35c 	.word	0x2001b35c
 800a9f8:	2001b354 	.word	0x2001b354
 800a9fc:	2001b33c 	.word	0x2001b33c
 800aa00:	2001b368 	.word	0x2001b368
 800aa04:	2001b338 	.word	0x2001b338
 800aa08:	2001b318 	.word	0x2001b318
 800aa0c:	2001b320 	.word	0x2001b320

0800aa10 <WM_GetActiveWindow>:
 800aa10:	4b01      	ldr	r3, [pc, #4]	; (800aa18 <WM_GetActiveWindow+0x8>)
 800aa12:	681b      	ldr	r3, [r3, #0]
 800aa14:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800aa16:	4770      	bx	lr
 800aa18:	20000254 	.word	0x20000254

0800aa1c <WM__GetNextIVR>:
 800aa1c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800aa20:	4f5d      	ldr	r7, [pc, #372]	; (800ab98 <WM__GetNextIVR+0x17c>)
 800aa22:	683b      	ldr	r3, [r7, #0]
 800aa24:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 800aa28:	2800      	cmp	r0, #0
 800aa2a:	f000 80b2 	beq.w	800ab92 <WM__GetNextIVR+0x176>
 800aa2e:	4b5b      	ldr	r3, [pc, #364]	; (800ab9c <WM__GetNextIVR+0x180>)
 800aa30:	695a      	ldr	r2, [r3, #20]
 800aa32:	2a01      	cmp	r2, #1
 800aa34:	461c      	mov	r4, r3
 800aa36:	dd03      	ble.n	800aa40 <WM__GetNextIVR+0x24>
 800aa38:	3a01      	subs	r2, #1
 800aa3a:	615a      	str	r2, [r3, #20]
 800aa3c:	2000      	movs	r0, #0
 800aa3e:	e0a8      	b.n	800ab92 <WM__GetNextIVR+0x176>
 800aa40:	f104 0608 	add.w	r6, r4, #8
 800aa44:	691b      	ldr	r3, [r3, #16]
 800aa46:	e896 0003 	ldmia.w	r6, {r0, r1}
 800aa4a:	3301      	adds	r3, #1
 800aa4c:	ad02      	add	r5, sp, #8
 800aa4e:	6123      	str	r3, [r4, #16]
 800aa50:	e885 0003 	stmia.w	r5, {r0, r1}
 800aa54:	b923      	cbnz	r3, 800aa60 <WM__GetNextIVR+0x44>
 800aa56:	8823      	ldrh	r3, [r4, #0]
 800aa58:	f8ad 3008 	strh.w	r3, [sp, #8]
 800aa5c:	8863      	ldrh	r3, [r4, #2]
 800aa5e:	e011      	b.n	800aa84 <WM__GetNextIVR+0x68>
 800aa60:	89a3      	ldrh	r3, [r4, #12]
 800aa62:	8962      	ldrh	r2, [r4, #10]
 800aa64:	f8ad 200a 	strh.w	r2, [sp, #10]
 800aa68:	3301      	adds	r3, #1
 800aa6a:	b29b      	uxth	r3, r3
 800aa6c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800aa70:	f8ad 3008 	strh.w	r3, [sp, #8]
 800aa74:	b21b      	sxth	r3, r3
 800aa76:	429a      	cmp	r2, r3
 800aa78:	da06      	bge.n	800aa88 <WM__GetNextIVR+0x6c>
 800aa7a:	8823      	ldrh	r3, [r4, #0]
 800aa7c:	f8ad 3008 	strh.w	r3, [sp, #8]
 800aa80:	89e3      	ldrh	r3, [r4, #14]
 800aa82:	3301      	adds	r3, #1
 800aa84:	f8ad 300a 	strh.w	r3, [sp, #10]
 800aa88:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800aa8c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800aa90:	f8df 8108 	ldr.w	r8, [pc, #264]	; 800ab9c <WM__GetNextIVR+0x180>
 800aa94:	429a      	cmp	r2, r3
 800aa96:	dd04      	ble.n	800aaa2 <WM__GetNextIVR+0x86>
 800aa98:	6963      	ldr	r3, [r4, #20]
 800aa9a:	3b01      	subs	r3, #1
 800aa9c:	2000      	movs	r0, #0
 800aa9e:	6163      	str	r3, [r4, #20]
 800aaa0:	e077      	b.n	800ab92 <WM__GetNextIVR+0x176>
 800aaa2:	683b      	ldr	r3, [r7, #0]
 800aaa4:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800aaa6:	f005 fccb 	bl	8010440 <GUI_ALLOC_LockH>
 800aaaa:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800aaae:	f9b8 3000 	ldrsh.w	r3, [r8]
 800aab2:	9001      	str	r0, [sp, #4]
 800aab4:	429a      	cmp	r2, r3
 800aab6:	d11c      	bne.n	800aaf2 <WM__GetNextIVR+0xd6>
 800aab8:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800aabc:	f8ad 300e 	strh.w	r3, [sp, #14]
 800aac0:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800aac4:	f8ad 300c 	strh.w	r3, [sp, #12]
 800aac8:	4b33      	ldr	r3, [pc, #204]	; (800ab98 <WM__GetNextIVR+0x17c>)
 800aaca:	681b      	ldr	r3, [r3, #0]
 800aacc:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800aace:	b15a      	cbz	r2, 800aae8 <WM__GetNextIVR+0xcc>
 800aad0:	4610      	mov	r0, r2
 800aad2:	f005 fcab 	bl	801042c <GUI_ALLOC_h2p>
 800aad6:	4680      	mov	r8, r0
 800aad8:	2200      	movs	r2, #0
 800aada:	6a00      	ldr	r0, [r0, #32]
 800aadc:	4629      	mov	r1, r5
 800aade:	f7ff f9c1 	bl	8009e64 <_Findy1>
 800aae2:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800aae6:	e7f2      	b.n	800aace <WM__GetNextIVR+0xb2>
 800aae8:	9b01      	ldr	r3, [sp, #4]
 800aaea:	4629      	mov	r1, r5
 800aaec:	69d8      	ldr	r0, [r3, #28]
 800aaee:	f7ff f9b9 	bl	8009e64 <_Findy1>
 800aaf2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800aaf6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800aafa:	683b      	ldr	r3, [r7, #0]
 800aafc:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800aafe:	b16a      	cbz	r2, 800ab1c <WM__GetNextIVR+0x100>
 800ab00:	4610      	mov	r0, r2
 800ab02:	f005 fc93 	bl	801042c <GUI_ALLOC_h2p>
 800ab06:	4629      	mov	r1, r5
 800ab08:	4680      	mov	r8, r0
 800ab0a:	2200      	movs	r2, #0
 800ab0c:	6a00      	ldr	r0, [r0, #32]
 800ab0e:	f7ff f9ff 	bl	8009f10 <_Findx0>
 800ab12:	2800      	cmp	r0, #0
 800ab14:	d1ed      	bne.n	800aaf2 <WM__GetNextIVR+0xd6>
 800ab16:	f8d8 2018 	ldr.w	r2, [r8, #24]
 800ab1a:	e7f0      	b.n	800aafe <WM__GetNextIVR+0xe2>
 800ab1c:	9b01      	ldr	r3, [sp, #4]
 800ab1e:	4629      	mov	r1, r5
 800ab20:	69d8      	ldr	r0, [r3, #28]
 800ab22:	f7ff f9f5 	bl	8009f10 <_Findx0>
 800ab26:	2800      	cmp	r0, #0
 800ab28:	d1e3      	bne.n	800aaf2 <WM__GetNextIVR+0xd6>
 800ab2a:	88a3      	ldrh	r3, [r4, #4]
 800ab2c:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800ab30:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ab34:	b21b      	sxth	r3, r3
 800ab36:	429a      	cmp	r2, r3
 800ab38:	dd07      	ble.n	800ab4a <WM__GetNextIVR+0x12e>
 800ab3a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ab3e:	e886 0003 	stmia.w	r6, {r0, r1}
 800ab42:	a801      	add	r0, sp, #4
 800ab44:	f005 fc8a 	bl	801045c <GUI_ALLOC_UnlockH>
 800ab48:	e797      	b.n	800aa7a <WM__GetNextIVR+0x5e>
 800ab4a:	683b      	ldr	r3, [r7, #0]
 800ab4c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800ab4e:	b152      	cbz	r2, 800ab66 <WM__GetNextIVR+0x14a>
 800ab50:	4610      	mov	r0, r2
 800ab52:	f005 fc6b 	bl	801042c <GUI_ALLOC_h2p>
 800ab56:	4607      	mov	r7, r0
 800ab58:	2200      	movs	r2, #0
 800ab5a:	6a00      	ldr	r0, [r0, #32]
 800ab5c:	4629      	mov	r1, r5
 800ab5e:	f7ff fa1b 	bl	8009f98 <_Findx1>
 800ab62:	69ba      	ldr	r2, [r7, #24]
 800ab64:	e7f3      	b.n	800ab4e <WM__GetNextIVR+0x132>
 800ab66:	af04      	add	r7, sp, #16
 800ab68:	4629      	mov	r1, r5
 800ab6a:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
 800ab6e:	69d8      	ldr	r0, [r3, #28]
 800ab70:	f7ff fa12 	bl	8009f98 <_Findx1>
 800ab74:	4638      	mov	r0, r7
 800ab76:	f005 fc71 	bl	801045c <GUI_ALLOC_UnlockH>
 800ab7a:	6923      	ldr	r3, [r4, #16]
 800ab7c:	f644 6220 	movw	r2, #20000	; 0x4e20
 800ab80:	4293      	cmp	r3, r2
 800ab82:	dc89      	bgt.n	800aa98 <WM__GetNextIVR+0x7c>
 800ab84:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ab88:	e886 0003 	stmia.w	r6, {r0, r1}
 800ab8c:	f7ff fc24 	bl	800a3d8 <WM__ActivateClipRect>
 800ab90:	2001      	movs	r0, #1
 800ab92:	b004      	add	sp, #16
 800ab94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ab98:	20000254 	.word	0x20000254
 800ab9c:	2001947c 	.word	0x2001947c

0800aba0 <WM__InitIVRSearch>:
 800aba0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aba4:	4f39      	ldr	r7, [pc, #228]	; (800ac8c <WM__InitIVRSearch+0xec>)
 800aba6:	683b      	ldr	r3, [r7, #0]
 800aba8:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 800abac:	b086      	sub	sp, #24
 800abae:	4606      	mov	r6, r0
 800abb0:	b912      	cbnz	r2, 800abb8 <WM__InitIVRSearch+0x18>
 800abb2:	f7ff fc11 	bl	800a3d8 <WM__ActivateClipRect>
 800abb6:	e064      	b.n	800ac82 <WM__InitIVRSearch+0xe2>
 800abb8:	4d35      	ldr	r5, [pc, #212]	; (800ac90 <WM__InitIVRSearch+0xf0>)
 800abba:	696a      	ldr	r2, [r5, #20]
 800abbc:	3201      	adds	r2, #1
 800abbe:	2a01      	cmp	r2, #1
 800abc0:	616a      	str	r2, [r5, #20]
 800abc2:	462c      	mov	r4, r5
 800abc4:	dc5d      	bgt.n	800ac82 <WM__InitIVRSearch+0xe2>
 800abc6:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800abc8:	f005 fc3a 	bl	8010440 <GUI_ALLOC_LockH>
 800abcc:	f04f 32ff 	mov.w	r2, #4294967295
 800abd0:	612a      	str	r2, [r5, #16]
 800abd2:	4a30      	ldr	r2, [pc, #192]	; (800ac94 <WM__InitIVRSearch+0xf4>)
 800abd4:	9000      	str	r0, [sp, #0]
 800abd6:	7812      	ldrb	r2, [r2, #0]
 800abd8:	b12a      	cbz	r2, 800abe6 <WM__InitIVRSearch+0x46>
 800abda:	f100 0308 	add.w	r3, r0, #8
 800abde:	aa02      	add	r2, sp, #8
 800abe0:	e893 0003 	ldmia.w	r3, {r0, r1}
 800abe4:	e005      	b.n	800abf2 <WM__InitIVRSearch+0x52>
 800abe6:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800abe8:	f012 0802 	ands.w	r8, r2, #2
 800abec:	d00a      	beq.n	800ac04 <WM__InitIVRSearch+0x64>
 800abee:	c803      	ldmia	r0, {r0, r1}
 800abf0:	aa02      	add	r2, sp, #8
 800abf2:	e882 0003 	stmia.w	r2, {r0, r1}
 800abf6:	ad02      	add	r5, sp, #8
 800abf8:	b166      	cbz	r6, 800ac14 <WM__InitIVRSearch+0x74>
 800abfa:	4628      	mov	r0, r5
 800abfc:	4631      	mov	r1, r6
 800abfe:	f003 f9cf 	bl	800dfa0 <GUI__IntersectRect>
 800ac02:	e007      	b.n	800ac14 <WM__InitIVRSearch+0x74>
 800ac04:	696b      	ldr	r3, [r5, #20]
 800ac06:	4668      	mov	r0, sp
 800ac08:	3b01      	subs	r3, #1
 800ac0a:	616b      	str	r3, [r5, #20]
 800ac0c:	f005 fc26 	bl	801045c <GUI_ALLOC_UnlockH>
 800ac10:	4640      	mov	r0, r8
 800ac12:	e037      	b.n	800ac84 <WM__InitIVRSearch+0xe4>
 800ac14:	683b      	ldr	r3, [r7, #0]
 800ac16:	4e20      	ldr	r6, [pc, #128]	; (800ac98 <WM__InitIVRSearch+0xf8>)
 800ac18:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800ac1a:	b1c2      	cbz	r2, 800ac4e <WM__InitIVRSearch+0xae>
 800ac1c:	9b00      	ldr	r3, [sp, #0]
 800ac1e:	6810      	ldr	r0, [r2, #0]
 800ac20:	6851      	ldr	r1, [r2, #4]
 800ac22:	9301      	str	r3, [sp, #4]
 800ac24:	ab04      	add	r3, sp, #16
 800ac26:	c303      	stmia	r3!, {r0, r1}
 800ac28:	6833      	ldr	r3, [r6, #0]
 800ac2a:	b133      	cbz	r3, 800ac3a <WM__InitIVRSearch+0x9a>
 800ac2c:	a801      	add	r0, sp, #4
 800ac2e:	f005 fc15 	bl	801045c <GUI_ALLOC_UnlockH>
 800ac32:	6830      	ldr	r0, [r6, #0]
 800ac34:	f005 fc04 	bl	8010440 <GUI_ALLOC_LockH>
 800ac38:	9001      	str	r0, [sp, #4]
 800ac3a:	9801      	ldr	r0, [sp, #4]
 800ac3c:	a904      	add	r1, sp, #16
 800ac3e:	f7ff fb9b 	bl	800a378 <WM__Client2Screen>
 800ac42:	4628      	mov	r0, r5
 800ac44:	a904      	add	r1, sp, #16
 800ac46:	f003 f9ab 	bl	800dfa0 <GUI__IntersectRect>
 800ac4a:	a801      	add	r0, sp, #4
 800ac4c:	e000      	b.n	800ac50 <WM__InitIVRSearch+0xb0>
 800ac4e:	4668      	mov	r0, sp
 800ac50:	f005 fc04 	bl	801045c <GUI_ALLOC_UnlockH>
 800ac54:	6831      	ldr	r1, [r6, #0]
 800ac56:	b119      	cbz	r1, 800ac60 <WM__InitIVRSearch+0xc0>
 800ac58:	4628      	mov	r0, r5
 800ac5a:	f7ff faef 	bl	800a23c <WM__ClipAtParentBorders>
 800ac5e:	b128      	cbz	r0, 800ac6c <WM__InitIVRSearch+0xcc>
 800ac60:	683b      	ldr	r3, [r7, #0]
 800ac62:	4628      	mov	r0, r5
 800ac64:	6c99      	ldr	r1, [r3, #72]	; 0x48
 800ac66:	f7ff fae9 	bl	800a23c <WM__ClipAtParentBorders>
 800ac6a:	b918      	cbnz	r0, 800ac74 <WM__InitIVRSearch+0xd4>
 800ac6c:	6963      	ldr	r3, [r4, #20]
 800ac6e:	3b01      	subs	r3, #1
 800ac70:	6163      	str	r3, [r4, #20]
 800ac72:	e007      	b.n	800ac84 <WM__InitIVRSearch+0xe4>
 800ac74:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ac78:	e884 0003 	stmia.w	r4, {r0, r1}
 800ac7c:	f7ff fece 	bl	800aa1c <WM__GetNextIVR>
 800ac80:	e000      	b.n	800ac84 <WM__InitIVRSearch+0xe4>
 800ac82:	2001      	movs	r0, #1
 800ac84:	b006      	add	sp, #24
 800ac86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ac8a:	bf00      	nop
 800ac8c:	20000254 	.word	0x20000254
 800ac90:	2001947c 	.word	0x2001947c
 800ac94:	2001b345 	.word	0x2001b345
 800ac98:	2001b31c 	.word	0x2001b31c

0800ac9c <WM_SetDefault>:
 800ac9c:	b508      	push	{r3, lr}
 800ac9e:	f004 f8e5 	bl	800ee6c <GL_SetDefault>
 800aca2:	4b02      	ldr	r3, [pc, #8]	; (800acac <WM_SetDefault+0x10>)
 800aca4:	681b      	ldr	r3, [r3, #0]
 800aca6:	2200      	movs	r2, #0
 800aca8:	645a      	str	r2, [r3, #68]	; 0x44
 800acaa:	bd08      	pop	{r3, pc}
 800acac:	20000254 	.word	0x20000254

0800acb0 <WM__Paint1>:
 800acb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800acb2:	b089      	sub	sp, #36	; 0x24
 800acb4:	4604      	mov	r4, r0
 800acb6:	f005 fbc3 	bl	8010440 <GUI_ALLOC_LockH>
 800acba:	6907      	ldr	r7, [r0, #16]
 800acbc:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800acbe:	9001      	str	r0, [sp, #4]
 800acc0:	3008      	adds	r0, #8
 800acc2:	c803      	ldmia	r0, {r0, r1}
 800acc4:	ad02      	add	r5, sp, #8
 800acc6:	e885 0003 	stmia.w	r5, {r0, r1}
 800acca:	a801      	add	r0, sp, #4
 800accc:	f005 fbc6 	bl	801045c <GUI_ALLOC_UnlockH>
 800acd0:	2f00      	cmp	r7, #0
 800acd2:	d031      	beq.n	800ad38 <WM__Paint1+0x88>
 800acd4:	07b3      	lsls	r3, r6, #30
 800acd6:	d52f      	bpl.n	800ad38 <WM__Paint1+0x88>
 800acd8:	4620      	mov	r0, r4
 800acda:	212e      	movs	r1, #46	; 0x2e
 800acdc:	f7fe fd84 	bl	80097e8 <WM_SendMessageNoPara>
 800ace0:	4b16      	ldr	r3, [pc, #88]	; (800ad3c <WM__Paint1+0x8c>)
 800ace2:	781a      	ldrb	r2, [r3, #0]
 800ace4:	f416 5f80 	tst.w	r6, #4096	; 0x1000
 800ace8:	f102 0201 	add.w	r2, r2, #1
 800acec:	701a      	strb	r2, [r3, #0]
 800acee:	461e      	mov	r6, r3
 800acf0:	d00a      	beq.n	800ad08 <WM__Paint1+0x58>
 800acf2:	230f      	movs	r3, #15
 800acf4:	9405      	str	r4, [sp, #20]
 800acf6:	9304      	str	r3, [sp, #16]
 800acf8:	9507      	str	r5, [sp, #28]
 800acfa:	f7ff ffcf 	bl	800ac9c <WM_SetDefault>
 800acfe:	4620      	mov	r0, r4
 800ad00:	a904      	add	r1, sp, #16
 800ad02:	f006 ff55 	bl	8011bb0 <WM__SendMessage>
 800ad06:	e010      	b.n	800ad2a <WM__Paint1+0x7a>
 800ad08:	4628      	mov	r0, r5
 800ad0a:	f7ff ff49 	bl	800aba0 <WM__InitIVRSearch>
 800ad0e:	b160      	cbz	r0, 800ad2a <WM__Paint1+0x7a>
 800ad10:	230f      	movs	r3, #15
 800ad12:	9304      	str	r3, [sp, #16]
 800ad14:	9405      	str	r4, [sp, #20]
 800ad16:	9507      	str	r5, [sp, #28]
 800ad18:	f7ff ffc0 	bl	800ac9c <WM_SetDefault>
 800ad1c:	4620      	mov	r0, r4
 800ad1e:	a904      	add	r1, sp, #16
 800ad20:	f006 ff46 	bl	8011bb0 <WM__SendMessage>
 800ad24:	f7ff fe7a 	bl	800aa1c <WM__GetNextIVR>
 800ad28:	e7f1      	b.n	800ad0e <WM__Paint1+0x5e>
 800ad2a:	7833      	ldrb	r3, [r6, #0]
 800ad2c:	4620      	mov	r0, r4
 800ad2e:	3b01      	subs	r3, #1
 800ad30:	212f      	movs	r1, #47	; 0x2f
 800ad32:	7033      	strb	r3, [r6, #0]
 800ad34:	f7fe fd58 	bl	80097e8 <WM_SendMessageNoPara>
 800ad38:	b009      	add	sp, #36	; 0x24
 800ad3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ad3c:	2001b345 	.word	0x2001b345

0800ad40 <WM__Paint>:
 800ad40:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ad42:	b089      	sub	sp, #36	; 0x24
 800ad44:	ac06      	add	r4, sp, #24
 800ad46:	9003      	str	r0, [sp, #12]
 800ad48:	f005 fb7a 	bl	8010440 <GUI_ALLOC_LockH>
 800ad4c:	f100 0208 	add.w	r2, r0, #8
 800ad50:	4603      	mov	r3, r0
 800ad52:	9005      	str	r0, [sp, #20]
 800ad54:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ad58:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800ad5a:	699e      	ldr	r6, [r3, #24]
 800ad5c:	691f      	ldr	r7, [r3, #16]
 800ad5e:	e884 0003 	stmia.w	r4, {r0, r1}
 800ad62:	a805      	add	r0, sp, #20
 800ad64:	f005 fb7a 	bl	801045c <GUI_ALLOC_UnlockH>
 800ad68:	f244 0320 	movw	r3, #16416	; 0x4020
 800ad6c:	402b      	ands	r3, r5
 800ad6e:	2b00      	cmp	r3, #0
 800ad70:	d034      	beq.n	800addc <WM__Paint+0x9c>
 800ad72:	b1bf      	cbz	r7, 800ada4 <WM__Paint+0x64>
 800ad74:	4620      	mov	r0, r4
 800ad76:	9903      	ldr	r1, [sp, #12]
 800ad78:	f7ff fa60 	bl	800a23c <WM__ClipAtParentBorders>
 800ad7c:	b190      	cbz	r0, 800ada4 <WM__Paint+0x64>
 800ad7e:	9803      	ldr	r0, [sp, #12]
 800ad80:	f7ff fcf2 	bl	800a768 <WM_SelectWindow>
 800ad84:	0769      	lsls	r1, r5, #29
 800ad86:	d50f      	bpl.n	800ada8 <WM__Paint+0x68>
 800ad88:	b126      	cbz	r6, 800ad94 <WM__Paint+0x54>
 800ad8a:	f005 0501 	and.w	r5, r5, #1
 800ad8e:	f085 0501 	eor.w	r5, r5, #1
 800ad92:	e000      	b.n	800ad96 <WM__Paint+0x56>
 800ad94:	2501      	movs	r5, #1
 800ad96:	9500      	str	r5, [sp, #0]
 800ad98:	4620      	mov	r0, r4
 800ad9a:	4912      	ldr	r1, [pc, #72]	; (800ade4 <WM__Paint+0xa4>)
 800ad9c:	aa03      	add	r2, sp, #12
 800ad9e:	2300      	movs	r3, #0
 800ada0:	f000 fada 	bl	800b358 <GUI_MEMDEV_Draw>
 800ada4:	2400      	movs	r4, #0
 800ada6:	e003      	b.n	800adb0 <WM__Paint+0x70>
 800ada8:	9803      	ldr	r0, [sp, #12]
 800adaa:	f7ff f9d7 	bl	800a15c <WM__PaintWinAndOverlays>
 800adae:	2401      	movs	r4, #1
 800adb0:	9803      	ldr	r0, [sp, #12]
 800adb2:	f005 fb45 	bl	8010440 <GUI_ALLOC_LockH>
 800adb6:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800adb8:	9005      	str	r0, [sp, #20]
 800adba:	f422 4380 	bic.w	r3, r2, #16384	; 0x4000
 800adbe:	f023 0320 	bic.w	r3, r3, #32
 800adc2:	0492      	lsls	r2, r2, #18
 800adc4:	bf48      	it	mi
 800adc6:	f043 0304 	orrmi.w	r3, r3, #4
 800adca:	6283      	str	r3, [r0, #40]	; 0x28
 800adcc:	a805      	add	r0, sp, #20
 800adce:	f005 fb45 	bl	801045c <GUI_ALLOC_UnlockH>
 800add2:	4b05      	ldr	r3, [pc, #20]	; (800ade8 <WM__Paint+0xa8>)
 800add4:	881a      	ldrh	r2, [r3, #0]
 800add6:	3a01      	subs	r2, #1
 800add8:	801a      	strh	r2, [r3, #0]
 800adda:	e000      	b.n	800adde <WM__Paint+0x9e>
 800addc:	461c      	mov	r4, r3
 800adde:	4620      	mov	r0, r4
 800ade0:	b009      	add	sp, #36	; 0x24
 800ade2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ade4:	0800a1d5 	.word	0x0800a1d5
 800ade8:	2001b338 	.word	0x2001b338

0800adec <WM__DeleteSecure>:
 800adec:	b508      	push	{r3, lr}
 800adee:	f005 fb1d 	bl	801042c <GUI_ALLOC_h2p>
 800adf2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800adf4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800adf8:	6283      	str	r3, [r0, #40]	; 0x28
 800adfa:	4b02      	ldr	r3, [pc, #8]	; (800ae04 <WM__DeleteSecure+0x18>)
 800adfc:	2201      	movs	r2, #1
 800adfe:	601a      	str	r2, [r3, #0]
 800ae00:	bd08      	pop	{r3, pc}
 800ae02:	bf00      	nop
 800ae04:	20019478 	.word	0x20019478

0800ae08 <WM_Exec>:
 800ae08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae0c:	4b4c      	ldr	r3, [pc, #304]	; (800af40 <WM_Exec+0x138>)
 800ae0e:	681b      	ldr	r3, [r3, #0]
 800ae10:	b09f      	sub	sp, #124	; 0x7c
 800ae12:	b103      	cbz	r3, 800ae16 <WM_Exec+0xe>
 800ae14:	4798      	blx	r3
 800ae16:	2600      	movs	r6, #0
 800ae18:	4d4a      	ldr	r5, [pc, #296]	; (800af44 <WM_Exec+0x13c>)
 800ae1a:	682b      	ldr	r3, [r5, #0]
 800ae1c:	b1db      	cbz	r3, 800ae56 <WM_Exec+0x4e>
 800ae1e:	4b4a      	ldr	r3, [pc, #296]	; (800af48 <WM_Exec+0x140>)
 800ae20:	681c      	ldr	r4, [r3, #0]
 800ae22:	b1bc      	cbz	r4, 800ae54 <WM_Exec+0x4c>
 800ae24:	4620      	mov	r0, r4
 800ae26:	f005 fb0b 	bl	8010440 <GUI_ALLOC_LockH>
 800ae2a:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800ae2c:	6947      	ldr	r7, [r0, #20]
 800ae2e:	ab1e      	add	r3, sp, #120	; 0x78
 800ae30:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 800ae34:	f843 0d70 	str.w	r0, [r3, #-112]!
 800ae38:	d007      	beq.n	800ae4a <WM_Exec+0x42>
 800ae3a:	4618      	mov	r0, r3
 800ae3c:	f005 fb0e 	bl	801045c <GUI_ALLOC_UnlockH>
 800ae40:	4620      	mov	r0, r4
 800ae42:	f7ff fd5b 	bl	800a8fc <WM_DeleteWindow>
 800ae46:	463c      	mov	r4, r7
 800ae48:	e7eb      	b.n	800ae22 <WM_Exec+0x1a>
 800ae4a:	4618      	mov	r0, r3
 800ae4c:	463c      	mov	r4, r7
 800ae4e:	f005 fb05 	bl	801045c <GUI_ALLOC_UnlockH>
 800ae52:	e7e6      	b.n	800ae22 <WM_Exec+0x1a>
 800ae54:	602c      	str	r4, [r5, #0]
 800ae56:	4b3d      	ldr	r3, [pc, #244]	; (800af4c <WM_Exec+0x144>)
 800ae58:	681b      	ldr	r3, [r3, #0]
 800ae5a:	b103      	cbz	r3, 800ae5e <WM_Exec+0x56>
 800ae5c:	4798      	blx	r3
 800ae5e:	4b3c      	ldr	r3, [pc, #240]	; (800af50 <WM_Exec+0x148>)
 800ae60:	681b      	ldr	r3, [r3, #0]
 800ae62:	b92b      	cbnz	r3, 800ae70 <WM_Exec+0x68>
 800ae64:	4f3b      	ldr	r7, [pc, #236]	; (800af54 <WM_Exec+0x14c>)
 800ae66:	683b      	ldr	r3, [r7, #0]
 800ae68:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800ae6c:	b143      	cbz	r3, 800ae80 <WM_Exec+0x78>
 800ae6e:	e003      	b.n	800ae78 <WM_Exec+0x70>
 800ae70:	4798      	blx	r3
 800ae72:	2800      	cmp	r0, #0
 800ae74:	d0f6      	beq.n	800ae64 <WM_Exec+0x5c>
 800ae76:	e058      	b.n	800af2a <WM_Exec+0x122>
 800ae78:	f004 f936 	bl	800f0e8 <GUI_PollKeyMsg>
 800ae7c:	2800      	cmp	r0, #0
 800ae7e:	d154      	bne.n	800af2a <WM_Exec+0x122>
 800ae80:	683b      	ldr	r3, [r7, #0]
 800ae82:	f893 5054 	ldrb.w	r5, [r3, #84]	; 0x54
 800ae86:	b14d      	cbz	r5, 800ae9c <WM_Exec+0x94>
 800ae88:	4b33      	ldr	r3, [pc, #204]	; (800af58 <WM_Exec+0x150>)
 800ae8a:	881d      	ldrh	r5, [r3, #0]
 800ae8c:	b135      	cbz	r5, 800ae9c <WM_Exec+0x94>
 800ae8e:	4b33      	ldr	r3, [pc, #204]	; (800af5c <WM_Exec+0x154>)
 800ae90:	681b      	ldr	r3, [r3, #0]
 800ae92:	2b00      	cmp	r3, #0
 800ae94:	d04b      	beq.n	800af2e <WM_Exec+0x126>
 800ae96:	681b      	ldr	r3, [r3, #0]
 800ae98:	4798      	blx	r3
 800ae9a:	2501      	movs	r5, #1
 800ae9c:	683b      	ldr	r3, [r7, #0]
 800ae9e:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 800aea2:	b913      	cbnz	r3, 800aeaa <WM_Exec+0xa2>
 800aea4:	2d00      	cmp	r5, #0
 800aea6:	d137      	bne.n	800af18 <WM_Exec+0x110>
 800aea8:	e045      	b.n	800af36 <WM_Exec+0x12e>
 800aeaa:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800af58 <WM_Exec+0x150>
 800aeae:	f8b8 3000 	ldrh.w	r3, [r8]
 800aeb2:	2b00      	cmp	r3, #0
 800aeb4:	d0f6      	beq.n	800aea4 <WM_Exec+0x9c>
 800aeb6:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 800af60 <WM_Exec+0x158>
 800aeba:	f8d9 4000 	ldr.w	r4, [r9]
 800aebe:	b90c      	cbnz	r4, 800aec4 <WM_Exec+0xbc>
 800aec0:	4b21      	ldr	r3, [pc, #132]	; (800af48 <WM_Exec+0x140>)
 800aec2:	681c      	ldr	r4, [r3, #0]
 800aec4:	a802      	add	r0, sp, #8
 800aec6:	f004 f83d 	bl	800ef44 <GUI_SaveContext_W>
 800aeca:	683b      	ldr	r3, [r7, #0]
 800aecc:	f8d3 b030 	ldr.w	fp, [r3, #48]	; 0x30
 800aed0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 800aed4:	b914      	cbnz	r4, 800aedc <WM_Exec+0xd4>
 800aed6:	2400      	movs	r4, #0
 800aed8:	e00d      	b.n	800aef6 <WM_Exec+0xee>
 800aeda:	b963      	cbnz	r3, 800aef6 <WM_Exec+0xee>
 800aedc:	4620      	mov	r0, r4
 800aede:	f7ff ff2f 	bl	800ad40 <WM__Paint>
 800aee2:	4603      	mov	r3, r0
 800aee4:	4620      	mov	r0, r4
 800aee6:	9301      	str	r3, [sp, #4]
 800aee8:	f005 faa0 	bl	801042c <GUI_ALLOC_h2p>
 800aeec:	6944      	ldr	r4, [r0, #20]
 800aeee:	9b01      	ldr	r3, [sp, #4]
 800aef0:	2c00      	cmp	r4, #0
 800aef2:	d1f2      	bne.n	800aeda <WM_Exec+0xd2>
 800aef4:	e7ef      	b.n	800aed6 <WM_Exec+0xce>
 800aef6:	4658      	mov	r0, fp
 800aef8:	f8c9 4000 	str.w	r4, [r9]
 800aefc:	f003 ffd8 	bl	800eeb0 <GUI_SetColor>
 800af00:	4650      	mov	r0, sl
 800af02:	f003 ffd3 	bl	800eeac <GUI_SetBkColor>
 800af06:	a802      	add	r0, sp, #8
 800af08:	f004 f826 	bl	800ef58 <GUI_RestoreContext>
 800af0c:	f8b8 3000 	ldrh.w	r3, [r8]
 800af10:	2b00      	cmp	r3, #0
 800af12:	d0c7      	beq.n	800aea4 <WM_Exec+0x9c>
 800af14:	2601      	movs	r6, #1
 800af16:	e7c1      	b.n	800ae9c <WM_Exec+0x94>
 800af18:	4b10      	ldr	r3, [pc, #64]	; (800af5c <WM_Exec+0x154>)
 800af1a:	6818      	ldr	r0, [r3, #0]
 800af1c:	b110      	cbz	r0, 800af24 <WM_Exec+0x11c>
 800af1e:	6843      	ldr	r3, [r0, #4]
 800af20:	4798      	blx	r3
 800af22:	e008      	b.n	800af36 <WM_Exec+0x12e>
 800af24:	f003 f802 	bl	800df2c <GUI__ManageCache>
 800af28:	e005      	b.n	800af36 <WM_Exec+0x12e>
 800af2a:	2601      	movs	r6, #1
 800af2c:	e774      	b.n	800ae18 <WM_Exec+0x10>
 800af2e:	2001      	movs	r0, #1
 800af30:	f002 fffc 	bl	800df2c <GUI__ManageCache>
 800af34:	e7b1      	b.n	800ae9a <WM_Exec+0x92>
 800af36:	4630      	mov	r0, r6
 800af38:	b01f      	add	sp, #124	; 0x7c
 800af3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af3e:	bf00      	nop
 800af40:	2001b32c 	.word	0x2001b32c
 800af44:	20019478 	.word	0x20019478
 800af48:	2001b33c 	.word	0x2001b33c
 800af4c:	2001b328 	.word	0x2001b328
 800af50:	2001b3a8 	.word	0x2001b3a8
 800af54:	20000254 	.word	0x20000254
 800af58:	2001b338 	.word	0x2001b338
 800af5c:	2001b358 	.word	0x2001b358
 800af60:	20019494 	.word	0x20019494

0800af64 <WM_Activate>:
 800af64:	4b02      	ldr	r3, [pc, #8]	; (800af70 <WM_Activate+0xc>)
 800af66:	681b      	ldr	r3, [r3, #0]
 800af68:	2201      	movs	r2, #1
 800af6a:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800af6e:	4770      	bx	lr
 800af70:	20000254 	.word	0x20000254

0800af74 <WM_Deactivate>:
 800af74:	4b03      	ldr	r3, [pc, #12]	; (800af84 <WM_Deactivate+0x10>)
 800af76:	681b      	ldr	r3, [r3, #0]
 800af78:	2200      	movs	r2, #0
 800af7a:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800af7e:	f002 bdfd 	b.w	800db7c <LCD_SetClipRectMax>
 800af82:	bf00      	nop
 800af84:	20000254 	.word	0x20000254

0800af88 <WM_DefaultProc>:
 800af88:	b510      	push	{r4, lr}
 800af8a:	4604      	mov	r4, r0
 800af8c:	6840      	ldr	r0, [r0, #4]
 800af8e:	6823      	ldr	r3, [r4, #0]
 800af90:	68e1      	ldr	r1, [r4, #12]
 800af92:	2b17      	cmp	r3, #23
 800af94:	d00f      	beq.n	800afb6 <WM_DefaultProc+0x2e>
 800af96:	dc06      	bgt.n	800afa6 <WM_DefaultProc+0x1e>
 800af98:	2b0e      	cmp	r3, #14
 800af9a:	d00e      	beq.n	800afba <WM_DefaultProc+0x32>
 800af9c:	2b14      	cmp	r3, #20
 800af9e:	d114      	bne.n	800afca <WM_DefaultProc+0x42>
 800afa0:	f7fe feb6 	bl	8009d10 <WM__GetClientRectEx>
 800afa4:	e011      	b.n	800afca <WM_DefaultProc+0x42>
 800afa6:	2b22      	cmp	r3, #34	; 0x22
 800afa8:	d00c      	beq.n	800afc4 <WM_DefaultProc+0x3c>
 800afaa:	2b28      	cmp	r3, #40	; 0x28
 800afac:	d10d      	bne.n	800afca <WM_DefaultProc+0x42>
 800afae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800afb2:	f7ff bbb8 	b.w	800a726 <WM_InvalidateWindow>
 800afb6:	60e0      	str	r0, [r4, #12]
 800afb8:	bd10      	pop	{r4, pc}
 800afba:	4621      	mov	r1, r4
 800afbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800afc0:	f007 b954 	b.w	801226c <WM_SendToParent>
 800afc4:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800afc8:	e000      	b.n	800afcc <WM_DefaultProc+0x44>
 800afca:	2300      	movs	r3, #0
 800afcc:	60e3      	str	r3, [r4, #12]
 800afce:	bd10      	pop	{r4, pc}

0800afd0 <_cbBackWin>:
 800afd0:	6803      	ldr	r3, [r0, #0]
 800afd2:	2b0e      	cmp	r3, #14
 800afd4:	b510      	push	{r4, lr}
 800afd6:	4604      	mov	r4, r0
 800afd8:	d002      	beq.n	800afe0 <_cbBackWin+0x10>
 800afda:	2b0f      	cmp	r3, #15
 800afdc:	d009      	beq.n	800aff2 <_cbBackWin+0x22>
 800afde:	e020      	b.n	800b022 <_cbBackWin+0x52>
 800afe0:	68c3      	ldr	r3, [r0, #12]
 800afe2:	685a      	ldr	r2, [r3, #4]
 800afe4:	2a01      	cmp	r2, #1
 800afe6:	d121      	bne.n	800b02c <_cbBackWin+0x5c>
 800afe8:	6818      	ldr	r0, [r3, #0]
 800afea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800afee:	f004 b873 	b.w	800f0d8 <GUI_StoreKey>
 800aff2:	4a0f      	ldr	r2, [pc, #60]	; (800b030 <_cbBackWin+0x60>)
 800aff4:	6843      	ldr	r3, [r0, #4]
 800aff6:	6811      	ldr	r1, [r2, #0]
 800aff8:	428b      	cmp	r3, r1
 800affa:	d006      	beq.n	800b00a <_cbBackWin+0x3a>
 800affc:	6852      	ldr	r2, [r2, #4]
 800affe:	4293      	cmp	r3, r2
 800b000:	bf14      	ite	ne
 800b002:	f04f 33ff 	movne.w	r3, #4294967295
 800b006:	2301      	moveq	r3, #1
 800b008:	e000      	b.n	800b00c <_cbBackWin+0x3c>
 800b00a:	2300      	movs	r3, #0
 800b00c:	4a09      	ldr	r2, [pc, #36]	; (800b034 <_cbBackWin+0x64>)
 800b00e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800b012:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800b016:	4298      	cmp	r0, r3
 800b018:	d003      	beq.n	800b022 <_cbBackWin+0x52>
 800b01a:	f003 ff47 	bl	800eeac <GUI_SetBkColor>
 800b01e:	f004 fdf7 	bl	800fc10 <GUI_Clear>
 800b022:	4620      	mov	r0, r4
 800b024:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b028:	f7ff bfae 	b.w	800af88 <WM_DefaultProc>
 800b02c:	bd10      	pop	{r4, pc}
 800b02e:	bf00      	nop
 800b030:	2001b320 	.word	0x2001b320
 800b034:	2001b34c 	.word	0x2001b34c

0800b038 <WM_Init>:
 800b038:	b530      	push	{r4, r5, lr}
 800b03a:	4b2b      	ldr	r3, [pc, #172]	; (800b0e8 <WM_Init+0xb0>)
 800b03c:	7818      	ldrb	r0, [r3, #0]
 800b03e:	b085      	sub	sp, #20
 800b040:	461d      	mov	r5, r3
 800b042:	2800      	cmp	r0, #0
 800b044:	d14d      	bne.n	800b0e2 <WM_Init+0xaa>
 800b046:	4b29      	ldr	r3, [pc, #164]	; (800b0ec <WM_Init+0xb4>)
 800b048:	6018      	str	r0, [r3, #0]
 800b04a:	4b29      	ldr	r3, [pc, #164]	; (800b0f0 <WM_Init+0xb8>)
 800b04c:	6018      	str	r0, [r3, #0]
 800b04e:	4b29      	ldr	r3, [pc, #164]	; (800b0f4 <WM_Init+0xbc>)
 800b050:	681b      	ldr	r3, [r3, #0]
 800b052:	6458      	str	r0, [r3, #68]	; 0x44
 800b054:	4b28      	ldr	r3, [pc, #160]	; (800b0f8 <WM_Init+0xc0>)
 800b056:	8018      	strh	r0, [r3, #0]
 800b058:	4b28      	ldr	r3, [pc, #160]	; (800b0fc <WM_Init+0xc4>)
 800b05a:	4604      	mov	r4, r0
 800b05c:	8018      	strh	r0, [r3, #0]
 800b05e:	4620      	mov	r0, r4
 800b060:	f004 fcac 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800b064:	b1c0      	cbz	r0, 800b098 <WM_Init+0x60>
 800b066:	f04f 32ff 	mov.w	r2, #4294967295
 800b06a:	2302      	movs	r3, #2
 800b06c:	e88d 000c 	stmia.w	sp, {r2, r3}
 800b070:	2000      	movs	r0, #0
 800b072:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800b076:	4b22      	ldr	r3, [pc, #136]	; (800b100 <WM_Init+0xc8>)
 800b078:	9302      	str	r3, [sp, #8]
 800b07a:	9003      	str	r0, [sp, #12]
 800b07c:	4613      	mov	r3, r2
 800b07e:	4601      	mov	r1, r0
 800b080:	f7ff fb92 	bl	800a7a8 <WM_CreateWindowAsChild>
 800b084:	4b1f      	ldr	r3, [pc, #124]	; (800b104 <WM_Init+0xcc>)
 800b086:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800b08a:	4b1f      	ldr	r3, [pc, #124]	; (800b108 <WM_Init+0xd0>)
 800b08c:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800b090:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800b094:	f7ff fb47 	bl	800a726 <WM_InvalidateWindow>
 800b098:	3401      	adds	r4, #1
 800b09a:	2c02      	cmp	r4, #2
 800b09c:	d1df      	bne.n	800b05e <WM_Init+0x26>
 800b09e:	481b      	ldr	r0, [pc, #108]	; (800b10c <WM_Init+0xd4>)
 800b0a0:	f007 f99e 	bl	80123e0 <WM__AddCriticalHandle>
 800b0a4:	481a      	ldr	r0, [pc, #104]	; (800b110 <WM_Init+0xd8>)
 800b0a6:	f007 f99b 	bl	80123e0 <WM__AddCriticalHandle>
 800b0aa:	481a      	ldr	r0, [pc, #104]	; (800b114 <WM_Init+0xdc>)
 800b0ac:	f007 f998 	bl	80123e0 <WM__AddCriticalHandle>
 800b0b0:	4819      	ldr	r0, [pc, #100]	; (800b118 <WM_Init+0xe0>)
 800b0b2:	f007 f995 	bl	80123e0 <WM__AddCriticalHandle>
 800b0b6:	4819      	ldr	r0, [pc, #100]	; (800b11c <WM_Init+0xe4>)
 800b0b8:	f007 f992 	bl	80123e0 <WM__AddCriticalHandle>
 800b0bc:	4818      	ldr	r0, [pc, #96]	; (800b120 <WM_Init+0xe8>)
 800b0be:	f007 f98f 	bl	80123e0 <WM__AddCriticalHandle>
 800b0c2:	4b10      	ldr	r3, [pc, #64]	; (800b104 <WM_Init+0xcc>)
 800b0c4:	6818      	ldr	r0, [r3, #0]
 800b0c6:	f7ff fb4f 	bl	800a768 <WM_SelectWindow>
 800b0ca:	f7ff ff4b 	bl	800af64 <WM_Activate>
 800b0ce:	2301      	movs	r3, #1
 800b0d0:	702b      	strb	r3, [r5, #0]
 800b0d2:	4814      	ldr	r0, [pc, #80]	; (800b124 <WM_Init+0xec>)
 800b0d4:	4b14      	ldr	r3, [pc, #80]	; (800b128 <WM_Init+0xf0>)
 800b0d6:	6003      	str	r3, [r0, #0]
 800b0d8:	b005      	add	sp, #20
 800b0da:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b0de:	f004 bda7 	b.w	800fc30 <GUI__RegisterExit>
 800b0e2:	b005      	add	sp, #20
 800b0e4:	bd30      	pop	{r4, r5, pc}
 800b0e6:	bf00      	nop
 800b0e8:	200194a0 	.word	0x200194a0
 800b0ec:	2001b33c 	.word	0x2001b33c
 800b0f0:	20019494 	.word	0x20019494
 800b0f4:	20000254 	.word	0x20000254
 800b0f8:	2001b338 	.word	0x2001b338
 800b0fc:	2001b318 	.word	0x2001b318
 800b100:	0800afd1 	.word	0x0800afd1
 800b104:	2001b320 	.word	0x2001b320
 800b108:	2001b34c 	.word	0x2001b34c
 800b10c:	2001b48c 	.word	0x2001b48c
 800b110:	2001b47c 	.word	0x2001b47c
 800b114:	2001b46c 	.word	0x2001b46c
 800b118:	2001b494 	.word	0x2001b494
 800b11c:	2001b484 	.word	0x2001b484
 800b120:	2001b474 	.word	0x2001b474
 800b124:	20019498 	.word	0x20019498
 800b128:	08009df1 	.word	0x08009df1

0800b12c <_CreateStaticDevice>:
 800b12c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b130:	b087      	sub	sp, #28
 800b132:	4604      	mov	r4, r0
 800b134:	f005 f984 	bl	8010440 <GUI_ALLOC_LockH>
 800b138:	af06      	add	r7, sp, #24
 800b13a:	f8b0 8000 	ldrh.w	r8, [r0]
 800b13e:	8886      	ldrh	r6, [r0, #4]
 800b140:	f8b0 9002 	ldrh.w	r9, [r0, #2]
 800b144:	f8b0 b006 	ldrh.w	fp, [r0, #6]
 800b148:	f847 0d04 	str.w	r0, [r7, #-4]!
 800b14c:	fa0f f888 	sxth.w	r8, r8
 800b150:	b236      	sxth	r6, r6
 800b152:	ebc8 0606 	rsb	r6, r8, r6
 800b156:	f8d0 a024 	ldr.w	sl, [r0, #36]	; 0x24
 800b15a:	3601      	adds	r6, #1
 800b15c:	4638      	mov	r0, r7
 800b15e:	fa0f f989 	sxth.w	r9, r9
 800b162:	fa0f f58b 	sxth.w	r5, fp
 800b166:	f005 f979 	bl	801045c <GUI_ALLOC_UnlockH>
 800b16a:	ebc9 0505 	rsb	r5, r9, r5
 800b16e:	2e00      	cmp	r6, #0
 800b170:	f105 0501 	add.w	r5, r5, #1
 800b174:	dd4d      	ble.n	800b212 <_CreateStaticDevice+0xe6>
 800b176:	2d00      	cmp	r5, #0
 800b178:	dd4b      	ble.n	800b212 <_CreateStaticDevice+0xe6>
 800b17a:	f1ba 0f00 	cmp.w	sl, #0
 800b17e:	d04a      	beq.n	800b216 <_CreateStaticDevice+0xea>
 800b180:	4650      	mov	r0, sl
 800b182:	f005 f95d 	bl	8010440 <GUI_ALLOC_LockH>
 800b186:	ab06      	add	r3, sp, #24
 800b188:	8886      	ldrh	r6, [r0, #4]
 800b18a:	f843 0d08 	str.w	r0, [r3, #-8]!
 800b18e:	88c5      	ldrh	r5, [r0, #6]
 800b190:	b236      	sxth	r6, r6
 800b192:	4618      	mov	r0, r3
 800b194:	f005 f962 	bl	801045c <GUI_ALLOC_UnlockH>
 800b198:	4546      	cmp	r6, r8
 800b19a:	d102      	bne.n	800b1a2 <_CreateStaticDevice+0x76>
 800b19c:	b22d      	sxth	r5, r5
 800b19e:	454d      	cmp	r5, r9
 800b1a0:	d032      	beq.n	800b208 <_CreateStaticDevice+0xdc>
 800b1a2:	4650      	mov	r0, sl
 800b1a4:	4641      	mov	r1, r8
 800b1a6:	464a      	mov	r2, r9
 800b1a8:	f000 f886 	bl	800b2b8 <GUI_MEMDEV_SetOrg>
 800b1ac:	e02c      	b.n	800b208 <_CreateStaticDevice+0xdc>
 800b1ae:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b1b0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b1b4:	6283      	str	r3, [r0, #40]	; 0x28
 800b1b6:	4638      	mov	r0, r7
 800b1b8:	f005 f950 	bl	801045c <GUI_ALLOC_UnlockH>
 800b1bc:	4640      	mov	r0, r8
 800b1be:	f000 ff93 	bl	800c0e8 <GUI_MEMDEV_Select>
 800b1c2:	4607      	mov	r7, r0
 800b1c4:	4650      	mov	r0, sl
 800b1c6:	f003 fe75 	bl	800eeb4 <GUI__AlphaPreserveTrans>
 800b1ca:	4640      	mov	r0, r8
 800b1cc:	f000 f8b4 	bl	800b338 <GUI_MEMDEV_GetDataPtr>
 800b1d0:	4b2d      	ldr	r3, [pc, #180]	; (800b288 <_CreateStaticDevice+0x15c>)
 800b1d2:	fb05 f206 	mul.w	r2, r5, r6
 800b1d6:	7819      	ldrb	r1, [r3, #0]
 800b1d8:	4d2c      	ldr	r5, [pc, #176]	; (800b28c <_CreateStaticDevice+0x160>)
 800b1da:	4e2d      	ldr	r6, [pc, #180]	; (800b290 <_CreateStaticDevice+0x164>)
 800b1dc:	0092      	lsls	r2, r2, #2
 800b1de:	f002 fdbd 	bl	800dd5c <GUI__memset>
 800b1e2:	4620      	mov	r0, r4
 800b1e4:	f8d5 8000 	ldr.w	r8, [r5]
 800b1e8:	6034      	str	r4, [r6, #0]
 800b1ea:	f7fe fcad 	bl	8009b48 <WM_GetWindowOrgX>
 800b1ee:	6028      	str	r0, [r5, #0]
 800b1f0:	4620      	mov	r0, r4
 800b1f2:	f7ff fd5d 	bl	800acb0 <WM__Paint1>
 800b1f6:	2000      	movs	r0, #0
 800b1f8:	f8c5 8000 	str.w	r8, [r5]
 800b1fc:	6030      	str	r0, [r6, #0]
 800b1fe:	f003 fe59 	bl	800eeb4 <GUI__AlphaPreserveTrans>
 800b202:	4638      	mov	r0, r7
 800b204:	f000 ff70 	bl	800c0e8 <GUI_MEMDEV_Select>
 800b208:	4620      	mov	r0, r4
 800b20a:	f005 f90f 	bl	801042c <GUI_ALLOC_h2p>
 800b20e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b210:	e037      	b.n	800b282 <_CreateStaticDevice+0x156>
 800b212:	2000      	movs	r0, #0
 800b214:	e035      	b.n	800b282 <_CreateStaticDevice+0x156>
 800b216:	f7fe fd61 	bl	8009cdc <WM_GetDesktopWindow>
 800b21a:	4284      	cmp	r4, r0
 800b21c:	d112      	bne.n	800b244 <_CreateStaticDevice+0x118>
 800b21e:	f002 f947 	bl	800d4b0 <LCD_GetXSize>
 800b222:	4682      	mov	sl, r0
 800b224:	f002 f94c 	bl	800d4c0 <LCD_GetYSize>
 800b228:	4556      	cmp	r6, sl
 800b22a:	dc02      	bgt.n	800b232 <_CreateStaticDevice+0x106>
 800b22c:	4285      	cmp	r5, r0
 800b22e:	dd09      	ble.n	800b244 <_CreateStaticDevice+0x118>
 800b230:	e000      	b.n	800b234 <_CreateStaticDevice+0x108>
 800b232:	4656      	mov	r6, sl
 800b234:	4285      	cmp	r5, r0
 800b236:	bfa8      	it	ge
 800b238:	4605      	movge	r5, r0
 800b23a:	4631      	mov	r1, r6
 800b23c:	4620      	mov	r0, r4
 800b23e:	462a      	mov	r2, r5
 800b240:	f006 fff0 	bl	8012224 <WM_SetSize>
 800b244:	4b13      	ldr	r3, [pc, #76]	; (800b294 <_CreateStaticDevice+0x168>)
 800b246:	9301      	str	r3, [sp, #4]
 800b248:	f04f 0a01 	mov.w	sl, #1
 800b24c:	4b12      	ldr	r3, [pc, #72]	; (800b298 <_CreateStaticDevice+0x16c>)
 800b24e:	9302      	str	r3, [sp, #8]
 800b250:	4640      	mov	r0, r8
 800b252:	4649      	mov	r1, r9
 800b254:	4632      	mov	r2, r6
 800b256:	462b      	mov	r3, r5
 800b258:	f8cd a000 	str.w	sl, [sp]
 800b25c:	f000 fe4e 	bl	800befc <GUI_MEMDEV__CreateFixed>
 800b260:	4680      	mov	r8, r0
 800b262:	4620      	mov	r0, r4
 800b264:	f005 f8ec 	bl	8010440 <GUI_ALLOC_LockH>
 800b268:	9005      	str	r0, [sp, #20]
 800b26a:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 800b26e:	f1b8 0f00 	cmp.w	r8, #0
 800b272:	d19c      	bne.n	800b1ae <_CreateStaticDevice+0x82>
 800b274:	4638      	mov	r0, r7
 800b276:	f005 f8f1 	bl	801045c <GUI_ALLOC_UnlockH>
 800b27a:	4620      	mov	r0, r4
 800b27c:	f7ff fd18 	bl	800acb0 <WM__Paint1>
 800b280:	4640      	mov	r0, r8
 800b282:	b007      	add	sp, #28
 800b284:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b288:	2000022c 	.word	0x2000022c
 800b28c:	2001b374 	.word	0x2001b374
 800b290:	2001b364 	.word	0x2001b364
 800b294:	0801666c 	.word	0x0801666c
 800b298:	080177cc 	.word	0x080177cc

0800b29c <GUI_MEMDEV_Paint1Static>:
 800b29c:	b538      	push	{r3, r4, r5, lr}
 800b29e:	4605      	mov	r5, r0
 800b2a0:	2405      	movs	r4, #5
 800b2a2:	4628      	mov	r0, r5
 800b2a4:	f7ff ff42 	bl	800b12c <_CreateStaticDevice>
 800b2a8:	b910      	cbnz	r0, 800b2b0 <GUI_MEMDEV_Paint1Static+0x14>
 800b2aa:	3c01      	subs	r4, #1
 800b2ac:	d1f9      	bne.n	800b2a2 <GUI_MEMDEV_Paint1Static+0x6>
 800b2ae:	bd38      	pop	{r3, r4, r5, pc}
 800b2b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b2b4:	f007 bdc0 	b.w	8012e38 <GUI_MEMDEV_Write>

0800b2b8 <GUI_MEMDEV_SetOrg>:
 800b2b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b2ba:	460d      	mov	r5, r1
 800b2bc:	4614      	mov	r4, r2
 800b2be:	b918      	cbnz	r0, 800b2c8 <GUI_MEMDEV_SetOrg+0x10>
 800b2c0:	4b11      	ldr	r3, [pc, #68]	; (800b308 <GUI_MEMDEV_SetOrg+0x50>)
 800b2c2:	681b      	ldr	r3, [r3, #0]
 800b2c4:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800b2c6:	b1e8      	cbz	r0, 800b304 <GUI_MEMDEV_SetOrg+0x4c>
 800b2c8:	f005 f8ba 	bl	8010440 <GUI_ALLOC_LockH>
 800b2cc:	b2a4      	uxth	r4, r4
 800b2ce:	b2ad      	uxth	r5, r5
 800b2d0:	80c4      	strh	r4, [r0, #6]
 800b2d2:	8085      	strh	r5, [r0, #4]
 800b2d4:	9000      	str	r0, [sp, #0]
 800b2d6:	f002 fc51 	bl	800db7c <LCD_SetClipRectMax>
 800b2da:	9b00      	ldr	r3, [sp, #0]
 800b2dc:	6958      	ldr	r0, [r3, #20]
 800b2de:	b170      	cbz	r0, 800b2fe <GUI_MEMDEV_SetOrg+0x46>
 800b2e0:	f005 f8ae 	bl	8010440 <GUI_ALLOC_LockH>
 800b2e4:	9b00      	ldr	r3, [sp, #0]
 800b2e6:	9001      	str	r0, [sp, #4]
 800b2e8:	891a      	ldrh	r2, [r3, #8]
 800b2ea:	895b      	ldrh	r3, [r3, #10]
 800b2ec:	8082      	strh	r2, [r0, #4]
 800b2ee:	80c3      	strh	r3, [r0, #6]
 800b2f0:	b112      	cbz	r2, 800b2f8 <GUI_MEMDEV_SetOrg+0x40>
 800b2f2:	b10b      	cbz	r3, 800b2f8 <GUI_MEMDEV_SetOrg+0x40>
 800b2f4:	8005      	strh	r5, [r0, #0]
 800b2f6:	8044      	strh	r4, [r0, #2]
 800b2f8:	a801      	add	r0, sp, #4
 800b2fa:	f005 f8af 	bl	801045c <GUI_ALLOC_UnlockH>
 800b2fe:	4668      	mov	r0, sp
 800b300:	f005 f8ac 	bl	801045c <GUI_ALLOC_UnlockH>
 800b304:	b003      	add	sp, #12
 800b306:	bd30      	pop	{r4, r5, pc}
 800b308:	20000254 	.word	0x20000254

0800b30c <GUI_MEMDEV_GetYSize>:
 800b30c:	b513      	push	{r0, r1, r4, lr}
 800b30e:	b920      	cbnz	r0, 800b31a <GUI_MEMDEV_GetYSize+0xe>
 800b310:	4b08      	ldr	r3, [pc, #32]	; (800b334 <GUI_MEMDEV_GetYSize+0x28>)
 800b312:	681b      	ldr	r3, [r3, #0]
 800b314:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800b316:	4604      	mov	r4, r0
 800b318:	b148      	cbz	r0, 800b32e <GUI_MEMDEV_GetYSize+0x22>
 800b31a:	f005 f891 	bl	8010440 <GUI_ALLOC_LockH>
 800b31e:	ab02      	add	r3, sp, #8
 800b320:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 800b324:	f843 0d04 	str.w	r0, [r3, #-4]!
 800b328:	4618      	mov	r0, r3
 800b32a:	f005 f897 	bl	801045c <GUI_ALLOC_UnlockH>
 800b32e:	4620      	mov	r0, r4
 800b330:	b002      	add	sp, #8
 800b332:	bd10      	pop	{r4, pc}
 800b334:	20000254 	.word	0x20000254

0800b338 <GUI_MEMDEV_GetDataPtr>:
 800b338:	b513      	push	{r0, r1, r4, lr}
 800b33a:	b150      	cbz	r0, 800b352 <GUI_MEMDEV_GetDataPtr+0x1a>
 800b33c:	f005 f880 	bl	8010440 <GUI_ALLOC_LockH>
 800b340:	4604      	mov	r4, r0
 800b342:	a802      	add	r0, sp, #8
 800b344:	f840 4d04 	str.w	r4, [r0, #-4]!
 800b348:	f005 f888 	bl	801045c <GUI_ALLOC_UnlockH>
 800b34c:	f104 0018 	add.w	r0, r4, #24
 800b350:	e7ff      	b.n	800b352 <GUI_MEMDEV_GetDataPtr+0x1a>
 800b352:	b002      	add	sp, #8
 800b354:	bd10      	pop	{r4, pc}
	...

0800b358 <GUI_MEMDEV_Draw>:
 800b358:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b35c:	461e      	mov	r6, r3
 800b35e:	b089      	sub	sp, #36	; 0x24
 800b360:	4b4e      	ldr	r3, [pc, #312]	; (800b49c <GUI_MEMDEV_Draw+0x144>)
 800b362:	9204      	str	r2, [sp, #16]
 800b364:	681a      	ldr	r2, [r3, #0]
 800b366:	9103      	str	r1, [sp, #12]
 800b368:	7c54      	ldrb	r4, [r2, #17]
 800b36a:	4a4d      	ldr	r2, [pc, #308]	; (800b4a0 <GUI_MEMDEV_Draw+0x148>)
 800b36c:	5712      	ldrsb	r2, [r2, r4]
 800b36e:	2a01      	cmp	r2, #1
 800b370:	4605      	mov	r5, r0
 800b372:	469b      	mov	fp, r3
 800b374:	4620      	mov	r0, r4
 800b376:	dd06      	ble.n	800b386 <GUI_MEMDEV_Draw+0x2e>
 800b378:	f002 f888 	bl	800d48c <LCD_GetXSizeEx>
 800b37c:	4607      	mov	r7, r0
 800b37e:	4620      	mov	r0, r4
 800b380:	f002 f887 	bl	800d492 <LCD_GetYSizeEx>
 800b384:	e005      	b.n	800b392 <GUI_MEMDEV_Draw+0x3a>
 800b386:	f002 f887 	bl	800d498 <LCD_GetVXSizeEx>
 800b38a:	4607      	mov	r7, r0
 800b38c:	4620      	mov	r0, r4
 800b38e:	f002 f886 	bl	800d49e <LCD_GetVYSizeEx>
 800b392:	4604      	mov	r4, r0
 800b394:	b325      	cbz	r5, 800b3e0 <GUI_MEMDEV_Draw+0x88>
 800b396:	a806      	add	r0, sp, #24
 800b398:	a907      	add	r1, sp, #28
 800b39a:	f003 ff05 	bl	800f1a8 <GUI_GetOrg>
 800b39e:	9b06      	ldr	r3, [sp, #24]
 800b3a0:	f9b5 a000 	ldrsh.w	sl, [r5]
 800b3a4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800b3a8:	f9b5 8002 	ldrsh.w	r8, [r5, #2]
 800b3ac:	441f      	add	r7, r3
 800b3ae:	9b07      	ldr	r3, [sp, #28]
 800b3b0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800b3b4:	3f01      	subs	r7, #1
 800b3b6:	4297      	cmp	r7, r2
 800b3b8:	bfd4      	ite	le
 800b3ba:	ebca 0707 	rsble	r7, sl, r7
 800b3be:	ebca 0702 	rsbgt	r7, sl, r2
 800b3c2:	441c      	add	r4, r3
 800b3c4:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 800b3c8:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 800b3cc:	3c01      	subs	r4, #1
 800b3ce:	4294      	cmp	r4, r2
 800b3d0:	bfd4      	ite	le
 800b3d2:	ebc8 0404 	rsble	r4, r8, r4
 800b3d6:	ebc8 0402 	rsbgt	r4, r8, r2
 800b3da:	3701      	adds	r7, #1
 800b3dc:	3401      	adds	r4, #1
 800b3de:	e001      	b.n	800b3e4 <GUI_MEMDEV_Draw+0x8c>
 800b3e0:	46a8      	mov	r8, r5
 800b3e2:	46aa      	mov	sl, r5
 800b3e4:	b906      	cbnz	r6, 800b3e8 <GUI_MEMDEV_Draw+0x90>
 800b3e6:	4266      	negs	r6, r4
 800b3e8:	2f00      	cmp	r7, #0
 800b3ea:	dd52      	ble.n	800b492 <GUI_MEMDEV_Draw+0x13a>
 800b3ec:	2c00      	cmp	r4, #0
 800b3ee:	dd50      	ble.n	800b492 <GUI_MEMDEV_Draw+0x13a>
 800b3f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b3f2:	9300      	str	r3, [sp, #0]
 800b3f4:	4650      	mov	r0, sl
 800b3f6:	4641      	mov	r1, r8
 800b3f8:	463a      	mov	r2, r7
 800b3fa:	4633      	mov	r3, r6
 800b3fc:	f000 fe38 	bl	800c070 <GUI_MEMDEV_CreateEx>
 800b400:	4605      	mov	r5, r0
 800b402:	b920      	cbnz	r0, 800b40e <GUI_MEMDEV_Draw+0xb6>
 800b404:	9804      	ldr	r0, [sp, #16]
 800b406:	9b03      	ldr	r3, [sp, #12]
 800b408:	4798      	blx	r3
 800b40a:	2001      	movs	r0, #1
 800b40c:	e042      	b.n	800b494 <GUI_MEMDEV_Draw+0x13c>
 800b40e:	f7ff ff7d 	bl	800b30c <GUI_MEMDEV_GetYSize>
 800b412:	42a0      	cmp	r0, r4
 800b414:	4606      	mov	r6, r0
 800b416:	d006      	beq.n	800b426 <GUI_MEMDEV_Draw+0xce>
 800b418:	f8db 3000 	ldr.w	r3, [fp]
 800b41c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800b41e:	b110      	cbz	r0, 800b426 <GUI_MEMDEV_Draw+0xce>
 800b420:	2132      	movs	r1, #50	; 0x32
 800b422:	f006 fbb1 	bl	8011b88 <WM__SendMessageNoPara>
 800b426:	4628      	mov	r0, r5
 800b428:	f000 fe5e 	bl	800c0e8 <GUI_MEMDEV_Select>
 800b42c:	4273      	negs	r3, r6
 800b42e:	9305      	str	r3, [sp, #20]
 800b430:	46a1      	mov	r9, r4
 800b432:	2700      	movs	r7, #0
 800b434:	45b1      	cmp	r9, r6
 800b436:	da03      	bge.n	800b440 <GUI_MEMDEV_Draw+0xe8>
 800b438:	4628      	mov	r0, r5
 800b43a:	4649      	mov	r1, r9
 800b43c:	f007 fdfc 	bl	8013038 <GUI_MEMDEV_ReduceYSize>
 800b440:	b147      	cbz	r7, 800b454 <GUI_MEMDEV_Draw+0xfc>
 800b442:	4628      	mov	r0, r5
 800b444:	4651      	mov	r1, sl
 800b446:	eb07 0208 	add.w	r2, r7, r8
 800b44a:	f7ff ff35 	bl	800b2b8 <GUI_MEMDEV_SetOrg>
 800b44e:	4628      	mov	r0, r5
 800b450:	f007 fe08 	bl	8013064 <GUI_MEMDEV_Clear>
 800b454:	9b03      	ldr	r3, [sp, #12]
 800b456:	9804      	ldr	r0, [sp, #16]
 800b458:	4798      	blx	r3
 800b45a:	4b12      	ldr	r3, [pc, #72]	; (800b4a4 <GUI_MEMDEV_Draw+0x14c>)
 800b45c:	681b      	ldr	r3, [r3, #0]
 800b45e:	b10b      	cbz	r3, 800b464 <GUI_MEMDEV_Draw+0x10c>
 800b460:	2000      	movs	r0, #0
 800b462:	4798      	blx	r3
 800b464:	4628      	mov	r0, r5
 800b466:	f000 feb7 	bl	800c1d8 <GUI_MEMDEV_CopyToLCD>
 800b46a:	4437      	add	r7, r6
 800b46c:	9b05      	ldr	r3, [sp, #20]
 800b46e:	42a7      	cmp	r7, r4
 800b470:	4499      	add	r9, r3
 800b472:	dbdf      	blt.n	800b434 <GUI_MEMDEV_Draw+0xdc>
 800b474:	4628      	mov	r0, r5
 800b476:	f000 fdd9 	bl	800c02c <GUI_MEMDEV_Delete>
 800b47a:	2000      	movs	r0, #0
 800b47c:	f000 fe34 	bl	800c0e8 <GUI_MEMDEV_Select>
 800b480:	42a6      	cmp	r6, r4
 800b482:	d006      	beq.n	800b492 <GUI_MEMDEV_Draw+0x13a>
 800b484:	f8db 3000 	ldr.w	r3, [fp]
 800b488:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800b48a:	b110      	cbz	r0, 800b492 <GUI_MEMDEV_Draw+0x13a>
 800b48c:	2133      	movs	r1, #51	; 0x33
 800b48e:	f006 fb7b 	bl	8011b88 <WM__SendMessageNoPara>
 800b492:	2000      	movs	r0, #0
 800b494:	b009      	add	sp, #36	; 0x24
 800b496:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b49a:	bf00      	nop
 800b49c:	20000254 	.word	0x20000254
 800b4a0:	2001b36c 	.word	0x2001b36c
 800b4a4:	200194a4 	.word	0x200194a4

0800b4a8 <_GetDevData>:
 800b4a8:	4802      	ldr	r0, [pc, #8]	; (800b4b4 <_GetDevData+0xc>)
 800b4aa:	2901      	cmp	r1, #1
 800b4ac:	bf18      	it	ne
 800b4ae:	2000      	movne	r0, #0
 800b4b0:	4770      	bx	lr
 800b4b2:	bf00      	nop
 800b4b4:	0801666c 	.word	0x0801666c

0800b4b8 <_GetDevFunc>:
 800b4b8:	4802      	ldr	r0, [pc, #8]	; (800b4c4 <_GetDevFunc+0xc>)
 800b4ba:	2916      	cmp	r1, #22
 800b4bc:	bf18      	it	ne
 800b4be:	2000      	movne	r0, #0
 800b4c0:	4770      	bx	lr
 800b4c2:	bf00      	nop
 800b4c4:	08012c49 	.word	0x08012c49

0800b4c8 <_GetDevProp>:
 800b4c8:	2908      	cmp	r1, #8
 800b4ca:	bf0c      	ite	eq
 800b4cc:	2020      	moveq	r0, #32
 800b4ce:	2000      	movne	r0, #0
 800b4d0:	4770      	bx	lr

0800b4d2 <_SetOrg>:
 800b4d2:	b508      	push	{r3, lr}
 800b4d4:	6800      	ldr	r0, [r0, #0]
 800b4d6:	68c3      	ldr	r3, [r0, #12]
 800b4d8:	6a1b      	ldr	r3, [r3, #32]
 800b4da:	4798      	blx	r3
 800b4dc:	bd08      	pop	{r3, pc}

0800b4de <_GetRect>:
 800b4de:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b4e0:	6880      	ldr	r0, [r0, #8]
 800b4e2:	460c      	mov	r4, r1
 800b4e4:	f004 ffac 	bl	8010440 <GUI_ALLOC_LockH>
 800b4e8:	4603      	mov	r3, r0
 800b4ea:	a802      	add	r0, sp, #8
 800b4ec:	8899      	ldrh	r1, [r3, #4]
 800b4ee:	88da      	ldrh	r2, [r3, #6]
 800b4f0:	891d      	ldrh	r5, [r3, #8]
 800b4f2:	f840 3d04 	str.w	r3, [r0, #-4]!
 800b4f6:	895b      	ldrh	r3, [r3, #10]
 800b4f8:	8021      	strh	r1, [r4, #0]
 800b4fa:	8062      	strh	r2, [r4, #2]
 800b4fc:	4429      	add	r1, r5
 800b4fe:	441a      	add	r2, r3
 800b500:	3901      	subs	r1, #1
 800b502:	3a01      	subs	r2, #1
 800b504:	80a1      	strh	r1, [r4, #4]
 800b506:	80e2      	strh	r2, [r4, #6]
 800b508:	f004 ffa8 	bl	801045c <GUI_ALLOC_UnlockH>
 800b50c:	b003      	add	sp, #12
 800b50e:	bd30      	pop	{r4, r5, pc}

0800b510 <_XY2PTR>:
 800b510:	4b0e      	ldr	r3, [pc, #56]	; (800b54c <_XY2PTR+0x3c>)
 800b512:	681b      	ldr	r3, [r3, #0]
 800b514:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b516:	4605      	mov	r5, r0
 800b518:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800b51a:	460e      	mov	r6, r1
 800b51c:	f004 ff90 	bl	8010440 <GUI_ALLOC_LockH>
 800b520:	4603      	mov	r3, r0
 800b522:	a802      	add	r0, sp, #8
 800b524:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 800b528:	f840 3d04 	str.w	r3, [r0, #-4]!
 800b52c:	f103 0118 	add.w	r1, r3, #24
 800b530:	1b36      	subs	r6, r6, r4
 800b532:	68dc      	ldr	r4, [r3, #12]
 800b534:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800b538:	fb04 1406 	mla	r4, r4, r6, r1
 800b53c:	1aed      	subs	r5, r5, r3
 800b53e:	f004 ff8d 	bl	801045c <GUI_ALLOC_UnlockH>
 800b542:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800b546:	4620      	mov	r0, r4
 800b548:	b002      	add	sp, #8
 800b54a:	bd70      	pop	{r4, r5, r6, pc}
 800b54c:	20000254 	.word	0x20000254

0800b550 <_GetPixelIndex>:
 800b550:	b508      	push	{r3, lr}
 800b552:	4608      	mov	r0, r1
 800b554:	4611      	mov	r1, r2
 800b556:	f7ff ffdb 	bl	800b510 <_XY2PTR>
 800b55a:	6800      	ldr	r0, [r0, #0]
 800b55c:	bd08      	pop	{r3, pc}
	...

0800b560 <_XorPixel>:
 800b560:	4b15      	ldr	r3, [pc, #84]	; (800b5b8 <_XorPixel+0x58>)
 800b562:	681b      	ldr	r3, [r3, #0]
 800b564:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b566:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800b568:	4615      	mov	r5, r2
 800b56a:	460e      	mov	r6, r1
 800b56c:	f004 ff68 	bl	8010440 <GUI_ALLOC_LockH>
 800b570:	4629      	mov	r1, r5
 800b572:	9000      	str	r0, [sp, #0]
 800b574:	4630      	mov	r0, r6
 800b576:	f7ff ffcb 	bl	800b510 <_XY2PTR>
 800b57a:	9b00      	ldr	r3, [sp, #0]
 800b57c:	681b      	ldr	r3, [r3, #0]
 800b57e:	691b      	ldr	r3, [r3, #16]
 800b580:	4604      	mov	r4, r0
 800b582:	689b      	ldr	r3, [r3, #8]
 800b584:	4798      	blx	r3
 800b586:	6823      	ldr	r3, [r4, #0]
 800b588:	4058      	eors	r0, r3
 800b58a:	9b00      	ldr	r3, [sp, #0]
 800b58c:	6020      	str	r0, [r4, #0]
 800b58e:	6958      	ldr	r0, [r3, #20]
 800b590:	b160      	cbz	r0, 800b5ac <_XorPixel+0x4c>
 800b592:	f004 ff55 	bl	8010440 <GUI_ALLOC_LockH>
 800b596:	ac02      	add	r4, sp, #8
 800b598:	6883      	ldr	r3, [r0, #8]
 800b59a:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b59e:	681b      	ldr	r3, [r3, #0]
 800b5a0:	4631      	mov	r1, r6
 800b5a2:	462a      	mov	r2, r5
 800b5a4:	4798      	blx	r3
 800b5a6:	4620      	mov	r0, r4
 800b5a8:	f004 ff58 	bl	801045c <GUI_ALLOC_UnlockH>
 800b5ac:	4668      	mov	r0, sp
 800b5ae:	f004 ff55 	bl	801045c <GUI_ALLOC_UnlockH>
 800b5b2:	b002      	add	sp, #8
 800b5b4:	bd70      	pop	{r4, r5, r6, pc}
 800b5b6:	bf00      	nop
 800b5b8:	20000254 	.word	0x20000254

0800b5bc <_SetPixelIndex>:
 800b5bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b5be:	461c      	mov	r4, r3
 800b5c0:	4b10      	ldr	r3, [pc, #64]	; (800b604 <_SetPixelIndex+0x48>)
 800b5c2:	681b      	ldr	r3, [r3, #0]
 800b5c4:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800b5c6:	460e      	mov	r6, r1
 800b5c8:	4615      	mov	r5, r2
 800b5ca:	f004 ff39 	bl	8010440 <GUI_ALLOC_LockH>
 800b5ce:	4629      	mov	r1, r5
 800b5d0:	9000      	str	r0, [sp, #0]
 800b5d2:	4630      	mov	r0, r6
 800b5d4:	f7ff ff9c 	bl	800b510 <_XY2PTR>
 800b5d8:	9b00      	ldr	r3, [sp, #0]
 800b5da:	6004      	str	r4, [r0, #0]
 800b5dc:	6958      	ldr	r0, [r3, #20]
 800b5de:	b160      	cbz	r0, 800b5fa <_SetPixelIndex+0x3e>
 800b5e0:	f004 ff2e 	bl	8010440 <GUI_ALLOC_LockH>
 800b5e4:	ac02      	add	r4, sp, #8
 800b5e6:	6883      	ldr	r3, [r0, #8]
 800b5e8:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b5ec:	681b      	ldr	r3, [r3, #0]
 800b5ee:	4631      	mov	r1, r6
 800b5f0:	462a      	mov	r2, r5
 800b5f2:	4798      	blx	r3
 800b5f4:	4620      	mov	r0, r4
 800b5f6:	f004 ff31 	bl	801045c <GUI_ALLOC_UnlockH>
 800b5fa:	4668      	mov	r0, sp
 800b5fc:	f004 ff2e 	bl	801045c <GUI_ALLOC_UnlockH>
 800b600:	b002      	add	sp, #8
 800b602:	bd70      	pop	{r4, r5, r6, pc}
 800b604:	20000254 	.word	0x20000254

0800b608 <_DrawVLine>:
 800b608:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b60c:	4d2c      	ldr	r5, [pc, #176]	; (800b6c0 <_DrawVLine+0xb8>)
 800b60e:	461e      	mov	r6, r3
 800b610:	682b      	ldr	r3, [r5, #0]
 800b612:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800b614:	460f      	mov	r7, r1
 800b616:	4614      	mov	r4, r2
 800b618:	f004 ff12 	bl	8010440 <GUI_ALLOC_LockH>
 800b61c:	9000      	str	r0, [sp, #0]
 800b61e:	6940      	ldr	r0, [r0, #20]
 800b620:	46a9      	mov	r9, r5
 800b622:	b108      	cbz	r0, 800b628 <_DrawVLine+0x20>
 800b624:	f004 ff0c 	bl	8010440 <GUI_ALLOC_LockH>
 800b628:	9001      	str	r0, [sp, #4]
 800b62a:	4621      	mov	r1, r4
 800b62c:	4638      	mov	r0, r7
 800b62e:	f7ff ff6f 	bl	800b510 <_XY2PTR>
 800b632:	f8d9 2000 	ldr.w	r2, [r9]
 800b636:	9b00      	ldr	r3, [sp, #0]
 800b638:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 800b63a:	7c12      	ldrb	r2, [r2, #16]
 800b63c:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800b640:	f8d1 9000 	ldr.w	r9, [r1]
 800b644:	07d2      	lsls	r2, r2, #31
 800b646:	4605      	mov	r5, r0
 800b648:	d51f      	bpl.n	800b68a <_DrawVLine+0x82>
 800b64a:	681b      	ldr	r3, [r3, #0]
 800b64c:	691b      	ldr	r3, [r3, #16]
 800b64e:	689b      	ldr	r3, [r3, #8]
 800b650:	4798      	blx	r3
 800b652:	4680      	mov	r8, r0
 800b654:	9801      	ldr	r0, [sp, #4]
 800b656:	b128      	cbz	r0, 800b664 <_DrawVLine+0x5c>
 800b658:	6882      	ldr	r2, [r0, #8]
 800b65a:	4639      	mov	r1, r7
 800b65c:	f8d2 c000 	ldr.w	ip, [r2]
 800b660:	4622      	mov	r2, r4
 800b662:	47e0      	blx	ip
 800b664:	682b      	ldr	r3, [r5, #0]
 800b666:	ea83 0308 	eor.w	r3, r3, r8
 800b66a:	602b      	str	r3, [r5, #0]
 800b66c:	9b00      	ldr	r3, [sp, #0]
 800b66e:	3401      	adds	r4, #1
 800b670:	68db      	ldr	r3, [r3, #12]
 800b672:	42b4      	cmp	r4, r6
 800b674:	441d      	add	r5, r3
 800b676:	dded      	ble.n	800b654 <_DrawVLine+0x4c>
 800b678:	4668      	mov	r0, sp
 800b67a:	f004 feef 	bl	801045c <GUI_ALLOC_UnlockH>
 800b67e:	9b01      	ldr	r3, [sp, #4]
 800b680:	b1d3      	cbz	r3, 800b6b8 <_DrawVLine+0xb0>
 800b682:	a801      	add	r0, sp, #4
 800b684:	f004 feea 	bl	801045c <GUI_ALLOC_UnlockH>
 800b688:	e016      	b.n	800b6b8 <_DrawVLine+0xb0>
 800b68a:	9b01      	ldr	r3, [sp, #4]
 800b68c:	b163      	cbz	r3, 800b6a8 <_DrawVLine+0xa0>
 800b68e:	9801      	ldr	r0, [sp, #4]
 800b690:	6883      	ldr	r3, [r0, #8]
 800b692:	4622      	mov	r2, r4
 800b694:	681b      	ldr	r3, [r3, #0]
 800b696:	4639      	mov	r1, r7
 800b698:	3401      	adds	r4, #1
 800b69a:	4798      	blx	r3
 800b69c:	42b4      	cmp	r4, r6
 800b69e:	f8c5 9000 	str.w	r9, [r5]
 800b6a2:	4445      	add	r5, r8
 800b6a4:	ddf3      	ble.n	800b68e <_DrawVLine+0x86>
 800b6a6:	e7e7      	b.n	800b678 <_DrawVLine+0x70>
 800b6a8:	1b34      	subs	r4, r6, r4
 800b6aa:	3401      	adds	r4, #1
 800b6ac:	3c01      	subs	r4, #1
 800b6ae:	f8c5 9000 	str.w	r9, [r5]
 800b6b2:	4445      	add	r5, r8
 800b6b4:	d1fa      	bne.n	800b6ac <_DrawVLine+0xa4>
 800b6b6:	e7df      	b.n	800b678 <_DrawVLine+0x70>
 800b6b8:	b003      	add	sp, #12
 800b6ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b6be:	bf00      	nop
 800b6c0:	20000254 	.word	0x20000254

0800b6c4 <_FillRect>:
 800b6c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b6c8:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 800b778 <_FillRect+0xb4>
 800b6cc:	4614      	mov	r4, r2
 800b6ce:	f8db 2000 	ldr.w	r2, [fp]
 800b6d2:	b085      	sub	sp, #20
 800b6d4:	6e10      	ldr	r0, [r2, #96]	; 0x60
 800b6d6:	460f      	mov	r7, r1
 800b6d8:	461d      	mov	r5, r3
 800b6da:	f004 feb1 	bl	8010440 <GUI_ALLOC_LockH>
 800b6de:	4621      	mov	r1, r4
 800b6e0:	9002      	str	r0, [sp, #8]
 800b6e2:	4638      	mov	r0, r7
 800b6e4:	f7ff ff14 	bl	800b510 <_XY2PTR>
 800b6e8:	9a02      	ldr	r2, [sp, #8]
 800b6ea:	f8db 3000 	ldr.w	r3, [fp]
 800b6ee:	f8d2 900c 	ldr.w	r9, [r2, #12]
 800b6f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b6f4:	4606      	mov	r6, r0
 800b6f6:	6950      	ldr	r0, [r2, #20]
 800b6f8:	f8d3 a000 	ldr.w	sl, [r3]
 800b6fc:	1bed      	subs	r5, r5, r7
 800b6fe:	3501      	adds	r5, #1
 800b700:	b338      	cbz	r0, 800b752 <_FillRect+0x8e>
 800b702:	f004 fe9d 	bl	8010440 <GUI_ALLOC_LockH>
 800b706:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b708:	f10d 0810 	add.w	r8, sp, #16
 800b70c:	1b13      	subs	r3, r2, r4
 800b70e:	f848 0d04 	str.w	r0, [r8, #-4]!
 800b712:	3301      	adds	r3, #1
 800b714:	9300      	str	r3, [sp, #0]
 800b716:	4639      	mov	r1, r7
 800b718:	4622      	mov	r2, r4
 800b71a:	462b      	mov	r3, r5
 800b71c:	f007 fc76 	bl	801300c <GUI_USAGE_AddRect>
 800b720:	4640      	mov	r0, r8
 800b722:	f004 fe9b 	bl	801045c <GUI_ALLOC_UnlockH>
 800b726:	e014      	b.n	800b752 <_FillRect+0x8e>
 800b728:	f8db 3000 	ldr.w	r3, [fp]
 800b72c:	7c1b      	ldrb	r3, [r3, #16]
 800b72e:	07db      	lsls	r3, r3, #31
 800b730:	d513      	bpl.n	800b75a <_FillRect+0x96>
 800b732:	9b02      	ldr	r3, [sp, #8]
 800b734:	681b      	ldr	r3, [r3, #0]
 800b736:	691b      	ldr	r3, [r3, #16]
 800b738:	689b      	ldr	r3, [r3, #8]
 800b73a:	4798      	blx	r3
 800b73c:	4632      	mov	r2, r6
 800b73e:	462b      	mov	r3, r5
 800b740:	6811      	ldr	r1, [r2, #0]
 800b742:	3b01      	subs	r3, #1
 800b744:	ea81 0100 	eor.w	r1, r1, r0
 800b748:	f842 1b04 	str.w	r1, [r2], #4
 800b74c:	d1f8      	bne.n	800b740 <_FillRect+0x7c>
 800b74e:	444e      	add	r6, r9
 800b750:	3401      	adds	r4, #1
 800b752:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b754:	429c      	cmp	r4, r3
 800b756:	dde7      	ble.n	800b728 <_FillRect+0x64>
 800b758:	e008      	b.n	800b76c <_FillRect+0xa8>
 800b75a:	2d00      	cmp	r5, #0
 800b75c:	ddf7      	ble.n	800b74e <_FillRect+0x8a>
 800b75e:	462b      	mov	r3, r5
 800b760:	4632      	mov	r2, r6
 800b762:	3b01      	subs	r3, #1
 800b764:	f842 ab04 	str.w	sl, [r2], #4
 800b768:	d1fb      	bne.n	800b762 <_FillRect+0x9e>
 800b76a:	e7f0      	b.n	800b74e <_FillRect+0x8a>
 800b76c:	a802      	add	r0, sp, #8
 800b76e:	f004 fe75 	bl	801045c <GUI_ALLOC_UnlockH>
 800b772:	b005      	add	sp, #20
 800b774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b778:	20000254 	.word	0x20000254

0800b77c <_DrawHLine>:
 800b77c:	b507      	push	{r0, r1, r2, lr}
 800b77e:	9200      	str	r2, [sp, #0]
 800b780:	f7ff ffa0 	bl	800b6c4 <_FillRect>
 800b784:	b003      	add	sp, #12
 800b786:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800b78c <_DrawBitmap>:
 800b78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b790:	4c9d      	ldr	r4, [pc, #628]	; (800ba08 <_DrawBitmap+0x27c>)
 800b792:	469a      	mov	sl, r3
 800b794:	6823      	ldr	r3, [r4, #0]
 800b796:	b091      	sub	sp, #68	; 0x44
 800b798:	4680      	mov	r8, r0
 800b79a:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800b79c:	9207      	str	r2, [sp, #28]
 800b79e:	460e      	mov	r6, r1
 800b7a0:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 800b7a4:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 800b7a6:	2800      	cmp	r0, #0
 800b7a8:	f000 8387 	beq.w	800beba <_DrawBitmap+0x72e>
 800b7ac:	f004 fe48 	bl	8010440 <GUI_ALLOC_LockH>
 800b7b0:	900e      	str	r0, [sp, #56]	; 0x38
 800b7b2:	6940      	ldr	r0, [r0, #20]
 800b7b4:	b108      	cbz	r0, 800b7ba <_DrawBitmap+0x2e>
 800b7b6:	f004 fe43 	bl	8010440 <GUI_ALLOC_LockH>
 800b7ba:	900f      	str	r0, [sp, #60]	; 0x3c
 800b7bc:	a810      	add	r0, sp, #64	; 0x40
 800b7be:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 800b7c2:	68db      	ldr	r3, [r3, #12]
 800b7c4:	930a      	str	r3, [sp, #40]	; 0x28
 800b7c6:	f004 fe49 	bl	801045c <GUI_ALLOC_UnlockH>
 800b7ca:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800b7cc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800b7ce:	4437      	add	r7, r6
 800b7d0:	9704      	str	r7, [sp, #16]
 800b7d2:	b150      	cbz	r0, 800b7ea <_DrawBitmap+0x5e>
 800b7d4:	6823      	ldr	r3, [r4, #0]
 800b7d6:	7c1b      	ldrb	r3, [r3, #16]
 800b7d8:	079c      	lsls	r4, r3, #30
 800b7da:	d406      	bmi.n	800b7ea <_DrawBitmap+0x5e>
 800b7dc:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800b7de:	9700      	str	r7, [sp, #0]
 800b7e0:	9904      	ldr	r1, [sp, #16]
 800b7e2:	9a07      	ldr	r2, [sp, #28]
 800b7e4:	4653      	mov	r3, sl
 800b7e6:	f007 fc11 	bl	801300c <GUI_USAGE_AddRect>
 800b7ea:	9804      	ldr	r0, [sp, #16]
 800b7ec:	9907      	ldr	r1, [sp, #28]
 800b7ee:	f7ff fe8f 	bl	800b510 <_XY2PTR>
 800b7f2:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800b7f4:	2f17      	cmp	r7, #23
 800b7f6:	4606      	mov	r6, r0
 800b7f8:	dd64      	ble.n	800b8c4 <_DrawBitmap+0x138>
 800b7fa:	ea4f 078a 	mov.w	r7, sl, lsl #2
 800b7fe:	9706      	str	r7, [sp, #24]
 800b800:	f04f 0900 	mov.w	r9, #0
 800b804:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800b806:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800b808:	45b9      	cmp	r9, r7
 800b80a:	da57      	bge.n	800b8bc <_DrawBitmap+0x130>
 800b80c:	b130      	cbz	r0, 800b81c <_DrawBitmap+0x90>
 800b80e:	6883      	ldr	r3, [r0, #8]
 800b810:	9a07      	ldr	r2, [sp, #28]
 800b812:	685c      	ldr	r4, [r3, #4]
 800b814:	9904      	ldr	r1, [sp, #16]
 800b816:	444a      	add	r2, r9
 800b818:	4653      	mov	r3, sl
 800b81a:	47a0      	blx	r4
 800b81c:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800b820:	68d8      	ldr	r0, [r3, #12]
 800b822:	b128      	cbz	r0, 800b830 <_DrawBitmap+0xa4>
 800b824:	4630      	mov	r0, r6
 800b826:	4659      	mov	r1, fp
 800b828:	9a06      	ldr	r2, [sp, #24]
 800b82a:	f00a fca6 	bl	801617a <memcpy>
 800b82e:	e03e      	b.n	800b8ae <_DrawBitmap+0x122>
 800b830:	685b      	ldr	r3, [r3, #4]
 800b832:	4798      	blx	r3
 800b834:	0e00      	lsrs	r0, r0, #24
 800b836:	9005      	str	r0, [sp, #20]
 800b838:	4635      	mov	r5, r6
 800b83a:	4657      	mov	r7, sl
 800b83c:	465c      	mov	r4, fp
 800b83e:	463b      	mov	r3, r7
 800b840:	4622      	mov	r2, r4
 800b842:	f04f 0c00 	mov.w	ip, #0
 800b846:	f852 1b04 	ldr.w	r1, [r2], #4
 800b84a:	9805      	ldr	r0, [sp, #20]
 800b84c:	0e09      	lsrs	r1, r1, #24
 800b84e:	4281      	cmp	r1, r0
 800b850:	9805      	ldr	r0, [sp, #20]
 800b852:	bf08      	it	eq
 800b854:	f10c 0c01 	addeq.w	ip, ip, #1
 800b858:	4281      	cmp	r1, r0
 800b85a:	f103 33ff 	add.w	r3, r3, #4294967295
 800b85e:	d014      	beq.n	800b88a <_DrawBitmap+0xfe>
 800b860:	f1bc 0f00 	cmp.w	ip, #0
 800b864:	d014      	beq.n	800b890 <_DrawBitmap+0x104>
 800b866:	ea4f 038c 	mov.w	r3, ip, lsl #2
 800b86a:	4628      	mov	r0, r5
 800b86c:	4621      	mov	r1, r4
 800b86e:	461a      	mov	r2, r3
 800b870:	9303      	str	r3, [sp, #12]
 800b872:	f8cd c008 	str.w	ip, [sp, #8]
 800b876:	f00a fc80 	bl	801617a <memcpy>
 800b87a:	9b03      	ldr	r3, [sp, #12]
 800b87c:	f8dd c008 	ldr.w	ip, [sp, #8]
 800b880:	441d      	add	r5, r3
 800b882:	441c      	add	r4, r3
 800b884:	ebcc 0707 	rsb	r7, ip, r7
 800b888:	e00f      	b.n	800b8aa <_DrawBitmap+0x11e>
 800b88a:	2b00      	cmp	r3, #0
 800b88c:	d1db      	bne.n	800b846 <_DrawBitmap+0xba>
 800b88e:	e7e7      	b.n	800b860 <_DrawBitmap+0xd4>
 800b890:	6820      	ldr	r0, [r4, #0]
 800b892:	0e02      	lsrs	r2, r0, #24
 800b894:	2aff      	cmp	r2, #255	; 0xff
 800b896:	d005      	beq.n	800b8a4 <_DrawBitmap+0x118>
 800b898:	43d2      	mvns	r2, r2
 800b89a:	6829      	ldr	r1, [r5, #0]
 800b89c:	b2d2      	uxtb	r2, r2
 800b89e:	f002 fb9d 	bl	800dfdc <GUI__MixColors>
 800b8a2:	6028      	str	r0, [r5, #0]
 800b8a4:	3504      	adds	r5, #4
 800b8a6:	3404      	adds	r4, #4
 800b8a8:	3f01      	subs	r7, #1
 800b8aa:	2f00      	cmp	r7, #0
 800b8ac:	d1c7      	bne.n	800b83e <_DrawBitmap+0xb2>
 800b8ae:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800b8b0:	44bb      	add	fp, r7
 800b8b2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800b8b4:	f109 0901 	add.w	r9, r9, #1
 800b8b8:	443e      	add	r6, r7
 800b8ba:	e7a3      	b.n	800b804 <_DrawBitmap+0x78>
 800b8bc:	2800      	cmp	r0, #0
 800b8be:	f040 82f9 	bne.w	800beb4 <_DrawBitmap+0x728>
 800b8c2:	e2fa      	b.n	800beba <_DrawBitmap+0x72e>
 800b8c4:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800b8c6:	2f10      	cmp	r7, #16
 800b8c8:	d137      	bne.n	800b93a <_DrawBitmap+0x1ae>
 800b8ca:	1f06      	subs	r6, r0, #4
 800b8cc:	2500      	movs	r5, #0
 800b8ce:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800b8d0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800b8d2:	42bd      	cmp	r5, r7
 800b8d4:	f280 80a0 	bge.w	800ba18 <_DrawBitmap+0x28c>
 800b8d8:	9f07      	ldr	r7, [sp, #28]
 800b8da:	442f      	add	r7, r5
 800b8dc:	b13c      	cbz	r4, 800b8ee <_DrawBitmap+0x162>
 800b8de:	68a3      	ldr	r3, [r4, #8]
 800b8e0:	9904      	ldr	r1, [sp, #16]
 800b8e2:	f8d3 c004 	ldr.w	ip, [r3, #4]
 800b8e6:	4620      	mov	r0, r4
 800b8e8:	463a      	mov	r2, r7
 800b8ea:	4653      	mov	r3, sl
 800b8ec:	47e0      	blx	ip
 800b8ee:	f1ab 0302 	sub.w	r3, fp, #2
 800b8f2:	9306      	str	r3, [sp, #24]
 800b8f4:	9605      	str	r6, [sp, #20]
 800b8f6:	46d1      	mov	r9, sl
 800b8f8:	9904      	ldr	r1, [sp, #16]
 800b8fa:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800b8fe:	9a06      	ldr	r2, [sp, #24]
 800b900:	685b      	ldr	r3, [r3, #4]
 800b902:	f832 0f02 	ldrh.w	r0, [r2, #2]!
 800b906:	9206      	str	r2, [sp, #24]
 800b908:	4451      	add	r1, sl
 800b90a:	ebc9 0101 	rsb	r1, r9, r1
 800b90e:	9103      	str	r1, [sp, #12]
 800b910:	4798      	blx	r3
 800b912:	9b05      	ldr	r3, [sp, #20]
 800b914:	9903      	ldr	r1, [sp, #12]
 800b916:	f843 0f04 	str.w	r0, [r3, #4]!
 800b91a:	9305      	str	r3, [sp, #20]
 800b91c:	b124      	cbz	r4, 800b928 <_DrawBitmap+0x19c>
 800b91e:	68a3      	ldr	r3, [r4, #8]
 800b920:	4620      	mov	r0, r4
 800b922:	681b      	ldr	r3, [r3, #0]
 800b924:	463a      	mov	r2, r7
 800b926:	4798      	blx	r3
 800b928:	f1b9 0901 	subs.w	r9, r9, #1
 800b92c:	d1e4      	bne.n	800b8f8 <_DrawBitmap+0x16c>
 800b92e:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800b930:	44bb      	add	fp, r7
 800b932:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800b934:	3501      	adds	r5, #1
 800b936:	443e      	add	r6, r7
 800b938:	e7c9      	b.n	800b8ce <_DrawBitmap+0x142>
 800b93a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800b93c:	2f08      	cmp	r7, #8
 800b93e:	f100 0604 	add.w	r6, r0, #4
 800b942:	d16d      	bne.n	800ba20 <_DrawBitmap+0x294>
 800b944:	9f07      	ldr	r7, [sp, #28]
 800b946:	9907      	ldr	r1, [sp, #28]
 800b948:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800b94a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800b94c:	1a7b      	subs	r3, r7, r1
 800b94e:	4293      	cmp	r3, r2
 800b950:	f1a6 0004 	sub.w	r0, r6, #4
 800b954:	da60      	bge.n	800ba18 <_DrawBitmap+0x28c>
 800b956:	4b2c      	ldr	r3, [pc, #176]	; (800ba08 <_DrawBitmap+0x27c>)
 800b958:	681b      	ldr	r3, [r3, #0]
 800b95a:	7c1b      	ldrb	r3, [r3, #16]
 800b95c:	b36d      	cbz	r5, 800b9ba <_DrawBitmap+0x22e>
 800b95e:	f013 0303 	ands.w	r3, r3, #3
 800b962:	d005      	beq.n	800b970 <_DrawBitmap+0x1e4>
 800b964:	2b02      	cmp	r3, #2
 800b966:	d151      	bne.n	800ba0c <_DrawBitmap+0x280>
 800b968:	46b1      	mov	r9, r6
 800b96a:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800b96e:	e01c      	b.n	800b9aa <_DrawBitmap+0x21e>
 800b970:	f81b 2003 	ldrb.w	r2, [fp, r3]
 800b974:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800b978:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 800b97c:	3301      	adds	r3, #1
 800b97e:	4553      	cmp	r3, sl
 800b980:	d1f6      	bne.n	800b970 <_DrawBitmap+0x1e4>
 800b982:	e043      	b.n	800ba0c <_DrawBitmap+0x280>
 800b984:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800b988:	f849 3c04 	str.w	r3, [r9, #-4]
 800b98c:	b12c      	cbz	r4, 800b99a <_DrawBitmap+0x20e>
 800b98e:	68a3      	ldr	r3, [r4, #8]
 800b990:	4620      	mov	r0, r4
 800b992:	681b      	ldr	r3, [r3, #0]
 800b994:	4641      	mov	r1, r8
 800b996:	463a      	mov	r2, r7
 800b998:	4798      	blx	r3
 800b99a:	9b04      	ldr	r3, [sp, #16]
 800b99c:	f108 0801 	add.w	r8, r8, #1
 800b9a0:	4453      	add	r3, sl
 800b9a2:	4543      	cmp	r3, r8
 800b9a4:	f109 0904 	add.w	r9, r9, #4
 800b9a8:	d030      	beq.n	800ba0c <_DrawBitmap+0x280>
 800b9aa:	9804      	ldr	r0, [sp, #16]
 800b9ac:	ebc0 030b 	rsb	r3, r0, fp
 800b9b0:	f813 3008 	ldrb.w	r3, [r3, r8]
 800b9b4:	2b00      	cmp	r3, #0
 800b9b6:	d0f0      	beq.n	800b99a <_DrawBitmap+0x20e>
 800b9b8:	e7e4      	b.n	800b984 <_DrawBitmap+0x1f8>
 800b9ba:	f013 0303 	ands.w	r3, r3, #3
 800b9be:	d005      	beq.n	800b9cc <_DrawBitmap+0x240>
 800b9c0:	2b02      	cmp	r3, #2
 800b9c2:	d123      	bne.n	800ba0c <_DrawBitmap+0x280>
 800b9c4:	46b1      	mov	r9, r6
 800b9c6:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800b9ca:	e015      	b.n	800b9f8 <_DrawBitmap+0x26c>
 800b9cc:	4659      	mov	r1, fp
 800b9ce:	4652      	mov	r2, sl
 800b9d0:	f00a fbd3 	bl	801617a <memcpy>
 800b9d4:	e01a      	b.n	800ba0c <_DrawBitmap+0x280>
 800b9d6:	f849 3c04 	str.w	r3, [r9, #-4]
 800b9da:	b12c      	cbz	r4, 800b9e8 <_DrawBitmap+0x25c>
 800b9dc:	68a3      	ldr	r3, [r4, #8]
 800b9de:	4620      	mov	r0, r4
 800b9e0:	681b      	ldr	r3, [r3, #0]
 800b9e2:	4641      	mov	r1, r8
 800b9e4:	463a      	mov	r2, r7
 800b9e6:	4798      	blx	r3
 800b9e8:	9b04      	ldr	r3, [sp, #16]
 800b9ea:	f108 0801 	add.w	r8, r8, #1
 800b9ee:	4453      	add	r3, sl
 800b9f0:	4543      	cmp	r3, r8
 800b9f2:	f109 0904 	add.w	r9, r9, #4
 800b9f6:	d009      	beq.n	800ba0c <_DrawBitmap+0x280>
 800b9f8:	9904      	ldr	r1, [sp, #16]
 800b9fa:	ebc1 030b 	rsb	r3, r1, fp
 800b9fe:	f813 3008 	ldrb.w	r3, [r3, r8]
 800ba02:	2b00      	cmp	r3, #0
 800ba04:	d0f0      	beq.n	800b9e8 <_DrawBitmap+0x25c>
 800ba06:	e7e6      	b.n	800b9d6 <_DrawBitmap+0x24a>
 800ba08:	20000254 	.word	0x20000254
 800ba0c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800ba0e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ba10:	4493      	add	fp, r2
 800ba12:	3701      	adds	r7, #1
 800ba14:	441e      	add	r6, r3
 800ba16:	e796      	b.n	800b946 <_DrawBitmap+0x1ba>
 800ba18:	2c00      	cmp	r4, #0
 800ba1a:	f040 824b 	bne.w	800beb4 <_DrawBitmap+0x728>
 800ba1e:	e24c      	b.n	800beba <_DrawBitmap+0x72e>
 800ba20:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800ba22:	4bb2      	ldr	r3, [pc, #712]	; (800bcec <_DrawBitmap+0x560>)
 800ba24:	9609      	str	r6, [sp, #36]	; 0x24
 800ba26:	007f      	lsls	r7, r7, #1
 800ba28:	970c      	str	r7, [sp, #48]	; 0x30
 800ba2a:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800ba2c:	00bf      	lsls	r7, r7, #2
 800ba2e:	970d      	str	r7, [sp, #52]	; 0x34
 800ba30:	9f07      	ldr	r7, [sp, #28]
 800ba32:	9705      	str	r7, [sp, #20]
 800ba34:	2d00      	cmp	r5, #0
 800ba36:	bf08      	it	eq
 800ba38:	461d      	moveq	r5, r3
 800ba3a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800ba3c:	9807      	ldr	r0, [sp, #28]
 800ba3e:	1f3c      	subs	r4, r7, #4
 800ba40:	9f05      	ldr	r7, [sp, #20]
 800ba42:	1a3b      	subs	r3, r7, r0
 800ba44:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800ba46:	42bb      	cmp	r3, r7
 800ba48:	f280 8232 	bge.w	800beb0 <_DrawBitmap+0x724>
 800ba4c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800ba4e:	2f02      	cmp	r7, #2
 800ba50:	f000 80ad 	beq.w	800bbae <_DrawBitmap+0x422>
 800ba54:	2f04      	cmp	r7, #4
 800ba56:	f000 814f 	beq.w	800bcf8 <_DrawBitmap+0x56c>
 800ba5a:	2f01      	cmp	r7, #1
 800ba5c:	f040 821e 	bne.w	800be9c <_DrawBitmap+0x710>
 800ba60:	f8df 9290 	ldr.w	r9, [pc, #656]	; 800bcf4 <_DrawBitmap+0x568>
 800ba64:	f8d9 3000 	ldr.w	r3, [r9]
 800ba68:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800ba6a:	f004 fce9 	bl	8010440 <GUI_ALLOC_LockH>
 800ba6e:	f89b 3000 	ldrb.w	r3, [fp]
 800ba72:	4a9f      	ldr	r2, [pc, #636]	; (800bcf0 <_DrawBitmap+0x564>)
 800ba74:	991e      	ldr	r1, [sp, #120]	; 0x78
 800ba76:	5cd6      	ldrb	r6, [r2, r3]
 800ba78:	f8d9 3000 	ldr.w	r3, [r9]
 800ba7c:	900e      	str	r0, [sp, #56]	; 0x38
 800ba7e:	7c1b      	ldrb	r3, [r3, #16]
 800ba80:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 800ba84:	f003 0303 	and.w	r3, r3, #3
 800ba88:	2b02      	cmp	r3, #2
 800ba8a:	4657      	mov	r7, sl
 800ba8c:	f1c1 0808 	rsb	r8, r1, #8
 800ba90:	fa46 f601 	asr.w	r6, r6, r1
 800ba94:	d020      	beq.n	800bad8 <_DrawBitmap+0x34c>
 800ba96:	2b03      	cmp	r3, #3
 800ba98:	d061      	beq.n	800bb5e <_DrawBitmap+0x3d2>
 800ba9a:	2b01      	cmp	r3, #1
 800ba9c:	d05f      	beq.n	800bb5e <_DrawBitmap+0x3d2>
 800ba9e:	465a      	mov	r2, fp
 800baa0:	4547      	cmp	r7, r8
 800baa2:	bf38      	it	cc
 800baa4:	46b8      	movcc	r8, r7
 800baa6:	ebc8 0707 	rsb	r7, r8, r7
 800baaa:	4643      	mov	r3, r8
 800baac:	4621      	mov	r1, r4
 800baae:	f006 0001 	and.w	r0, r6, #1
 800bab2:	3b01      	subs	r3, #1
 800bab4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800bab8:	f841 0b04 	str.w	r0, [r1], #4
 800babc:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800bac0:	d1f5      	bne.n	800baae <_DrawBitmap+0x322>
 800bac2:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800bac6:	2f00      	cmp	r7, #0
 800bac8:	d06d      	beq.n	800bba6 <_DrawBitmap+0x41a>
 800baca:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800bace:	4988      	ldr	r1, [pc, #544]	; (800bcf0 <_DrawBitmap+0x564>)
 800bad0:	f04f 0808 	mov.w	r8, #8
 800bad4:	5cce      	ldrb	r6, [r1, r3]
 800bad6:	e7e3      	b.n	800baa0 <_DrawBitmap+0x314>
 800bad8:	686b      	ldr	r3, [r5, #4]
 800bada:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800bade:	930b      	str	r3, [sp, #44]	; 0x2c
 800bae0:	f8cd b020 	str.w	fp, [sp, #32]
 800bae4:	4547      	cmp	r7, r8
 800bae6:	bf38      	it	cc
 800bae8:	46b8      	movcc	r8, r7
 800baea:	ebc8 0707 	rsb	r7, r8, r7
 800baee:	f1bc 0f00 	cmp.w	ip, #0
 800baf2:	d026      	beq.n	800bb42 <_DrawBitmap+0x3b6>
 800baf4:	b91e      	cbnz	r6, 800bafe <_DrawBitmap+0x372>
 800baf6:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800bafa:	44c1      	add	r9, r8
 800bafc:	e025      	b.n	800bb4a <_DrawBitmap+0x3be>
 800bafe:	07f0      	lsls	r0, r6, #31
 800bb00:	d50c      	bpl.n	800bb1c <_DrawBitmap+0x390>
 800bb02:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800bb06:	9a05      	ldr	r2, [sp, #20]
 800bb08:	681b      	ldr	r3, [r3, #0]
 800bb0a:	f8cd c008 	str.w	ip, [sp, #8]
 800bb0e:	4660      	mov	r0, ip
 800bb10:	4649      	mov	r1, r9
 800bb12:	4798      	blx	r3
 800bb14:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bb16:	f8dd c008 	ldr.w	ip, [sp, #8]
 800bb1a:	6023      	str	r3, [r4, #0]
 800bb1c:	f1b8 0801 	subs.w	r8, r8, #1
 800bb20:	f109 0901 	add.w	r9, r9, #1
 800bb24:	f104 0404 	add.w	r4, r4, #4
 800bb28:	d00f      	beq.n	800bb4a <_DrawBitmap+0x3be>
 800bb2a:	0876      	lsrs	r6, r6, #1
 800bb2c:	e7e2      	b.n	800baf4 <_DrawBitmap+0x368>
 800bb2e:	07f1      	lsls	r1, r6, #31
 800bb30:	bf44      	itt	mi
 800bb32:	9b0b      	ldrmi	r3, [sp, #44]	; 0x2c
 800bb34:	6023      	strmi	r3, [r4, #0]
 800bb36:	f1b8 0801 	subs.w	r8, r8, #1
 800bb3a:	f104 0404 	add.w	r4, r4, #4
 800bb3e:	d004      	beq.n	800bb4a <_DrawBitmap+0x3be>
 800bb40:	0876      	lsrs	r6, r6, #1
 800bb42:	2e00      	cmp	r6, #0
 800bb44:	d1f3      	bne.n	800bb2e <_DrawBitmap+0x3a2>
 800bb46:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800bb4a:	b367      	cbz	r7, 800bba6 <_DrawBitmap+0x41a>
 800bb4c:	9808      	ldr	r0, [sp, #32]
 800bb4e:	4a68      	ldr	r2, [pc, #416]	; (800bcf0 <_DrawBitmap+0x564>)
 800bb50:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800bb54:	9008      	str	r0, [sp, #32]
 800bb56:	5cd6      	ldrb	r6, [r2, r3]
 800bb58:	f04f 0808 	mov.w	r8, #8
 800bb5c:	e7c2      	b.n	800bae4 <_DrawBitmap+0x358>
 800bb5e:	6803      	ldr	r3, [r0, #0]
 800bb60:	691b      	ldr	r3, [r3, #16]
 800bb62:	689b      	ldr	r3, [r3, #8]
 800bb64:	4798      	blx	r3
 800bb66:	4659      	mov	r1, fp
 800bb68:	4547      	cmp	r7, r8
 800bb6a:	bf38      	it	cc
 800bb6c:	46b8      	movcc	r8, r7
 800bb6e:	ebc8 0707 	rsb	r7, r8, r7
 800bb72:	1d23      	adds	r3, r4, #4
 800bb74:	46c6      	mov	lr, r8
 800bb76:	07f2      	lsls	r2, r6, #31
 800bb78:	d504      	bpl.n	800bb84 <_DrawBitmap+0x3f8>
 800bb7a:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800bb7e:	4042      	eors	r2, r0
 800bb80:	f843 2c04 	str.w	r2, [r3, #-4]
 800bb84:	f1be 0e01 	subs.w	lr, lr, #1
 800bb88:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800bb8c:	f103 0304 	add.w	r3, r3, #4
 800bb90:	d1f1      	bne.n	800bb76 <_DrawBitmap+0x3ea>
 800bb92:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 800bb96:	b137      	cbz	r7, 800bba6 <_DrawBitmap+0x41a>
 800bb98:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800bb9c:	4a54      	ldr	r2, [pc, #336]	; (800bcf0 <_DrawBitmap+0x564>)
 800bb9e:	f04f 0808 	mov.w	r8, #8
 800bba2:	5cd6      	ldrb	r6, [r2, r3]
 800bba4:	e7e0      	b.n	800bb68 <_DrawBitmap+0x3dc>
 800bba6:	a80e      	add	r0, sp, #56	; 0x38
 800bba8:	f004 fc58 	bl	801045c <GUI_ALLOC_UnlockH>
 800bbac:	e176      	b.n	800be9c <_DrawBitmap+0x710>
 800bbae:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800bbb0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800bbb2:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 800bbb6:	f1c7 0604 	rsb	r6, r7, #4
 800bbba:	f89b 7000 	ldrb.w	r7, [fp]
 800bbbe:	409f      	lsls	r7, r3
 800bbc0:	4b4c      	ldr	r3, [pc, #304]	; (800bcf4 <_DrawBitmap+0x568>)
 800bbc2:	681b      	ldr	r3, [r3, #0]
 800bbc4:	7c1b      	ldrb	r3, [r3, #16]
 800bbc6:	f003 0303 	and.w	r3, r3, #3
 800bbca:	2b01      	cmp	r3, #1
 800bbcc:	b2f6      	uxtb	r6, r6
 800bbce:	b2ff      	uxtb	r7, r7
 800bbd0:	d066      	beq.n	800bca0 <_DrawBitmap+0x514>
 800bbd2:	d308      	bcc.n	800bbe6 <_DrawBitmap+0x45a>
 800bbd4:	2b02      	cmp	r3, #2
 800bbd6:	f040 8161 	bne.w	800be9c <_DrawBitmap+0x710>
 800bbda:	9804      	ldr	r0, [sp, #16]
 800bbdc:	f8cd b020 	str.w	fp, [sp, #32]
 800bbe0:	46d0      	mov	r8, sl
 800bbe2:	9006      	str	r0, [sp, #24]
 800bbe4:	e03e      	b.n	800bc64 <_DrawBitmap+0x4d8>
 800bbe6:	465a      	mov	r2, fp
 800bbe8:	4653      	mov	r3, sl
 800bbea:	429e      	cmp	r6, r3
 800bbec:	bfc8      	it	gt
 800bbee:	b2de      	uxtbgt	r6, r3
 800bbf0:	1b9b      	subs	r3, r3, r6
 800bbf2:	4631      	mov	r1, r6
 800bbf4:	4620      	mov	r0, r4
 800bbf6:	ea4f 1c97 	mov.w	ip, r7, lsr #6
 800bbfa:	3901      	subs	r1, #1
 800bbfc:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 800bc00:	f840 cb04 	str.w	ip, [r0], #4
 800bc04:	00bf      	lsls	r7, r7, #2
 800bc06:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800bc0a:	b2ff      	uxtb	r7, r7
 800bc0c:	d1f3      	bne.n	800bbf6 <_DrawBitmap+0x46a>
 800bc0e:	3e01      	subs	r6, #1
 800bc10:	b2f6      	uxtb	r6, r6
 800bc12:	3601      	adds	r6, #1
 800bc14:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 800bc18:	2b00      	cmp	r3, #0
 800bc1a:	f000 813f 	beq.w	800be9c <_DrawBitmap+0x710>
 800bc1e:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800bc22:	2604      	movs	r6, #4
 800bc24:	e7e1      	b.n	800bbea <_DrawBitmap+0x45e>
 800bc26:	9906      	ldr	r1, [sp, #24]
 800bc28:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 800bc2c:	4449      	add	r1, r9
 800bc2e:	d122      	bne.n	800bc76 <_DrawBitmap+0x4ea>
 800bc30:	f109 0901 	add.w	r9, r9, #1
 800bc34:	fa5f f289 	uxtb.w	r2, r9
 800bc38:	00bf      	lsls	r7, r7, #2
 800bc3a:	4296      	cmp	r6, r2
 800bc3c:	b2ff      	uxtb	r7, r7
 800bc3e:	d1f2      	bne.n	800bc26 <_DrawBitmap+0x49a>
 800bc40:	9f06      	ldr	r7, [sp, #24]
 800bc42:	3e01      	subs	r6, #1
 800bc44:	b2f6      	uxtb	r6, r6
 800bc46:	1c7b      	adds	r3, r7, #1
 800bc48:	1c72      	adds	r2, r6, #1
 800bc4a:	199e      	adds	r6, r3, r6
 800bc4c:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 800bc50:	9606      	str	r6, [sp, #24]
 800bc52:	f1b8 0f00 	cmp.w	r8, #0
 800bc56:	f000 8121 	beq.w	800be9c <_DrawBitmap+0x710>
 800bc5a:	9b08      	ldr	r3, [sp, #32]
 800bc5c:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 800bc60:	9308      	str	r3, [sp, #32]
 800bc62:	2604      	movs	r6, #4
 800bc64:	4546      	cmp	r6, r8
 800bc66:	bfc8      	it	gt
 800bc68:	fa5f f688 	uxtbgt.w	r6, r8
 800bc6c:	ebc6 0808 	rsb	r8, r6, r8
 800bc70:	f04f 0900 	mov.w	r9, #0
 800bc74:	e7d7      	b.n	800bc26 <_DrawBitmap+0x49a>
 800bc76:	09ba      	lsrs	r2, r7, #6
 800bc78:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800bc7c:	f844 2029 	str.w	r2, [r4, r9, lsl #2]
 800bc80:	f1bc 0f00 	cmp.w	ip, #0
 800bc84:	d0d4      	beq.n	800bc30 <_DrawBitmap+0x4a4>
 800bc86:	f8dc 2008 	ldr.w	r2, [ip, #8]
 800bc8a:	6812      	ldr	r2, [r2, #0]
 800bc8c:	920b      	str	r2, [sp, #44]	; 0x2c
 800bc8e:	4660      	mov	r0, ip
 800bc90:	f8cd c008 	str.w	ip, [sp, #8]
 800bc94:	9a05      	ldr	r2, [sp, #20]
 800bc96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bc98:	4798      	blx	r3
 800bc9a:	f8dd c008 	ldr.w	ip, [sp, #8]
 800bc9e:	e7c7      	b.n	800bc30 <_DrawBitmap+0x4a4>
 800bca0:	4658      	mov	r0, fp
 800bca2:	4653      	mov	r3, sl
 800bca4:	429e      	cmp	r6, r3
 800bca6:	bfc8      	it	gt
 800bca8:	b2de      	uxtbgt	r6, r3
 800bcaa:	1b9b      	subs	r3, r3, r6
 800bcac:	1d22      	adds	r2, r4, #4
 800bcae:	46b4      	mov	ip, r6
 800bcb0:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 800bcb4:	d005      	beq.n	800bcc2 <_DrawBitmap+0x536>
 800bcb6:	f852 1c04 	ldr.w	r1, [r2, #-4]
 800bcba:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 800bcbe:	f842 1c04 	str.w	r1, [r2, #-4]
 800bcc2:	f10c 3cff 	add.w	ip, ip, #4294967295
 800bcc6:	00bf      	lsls	r7, r7, #2
 800bcc8:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 800bccc:	b2ff      	uxtb	r7, r7
 800bcce:	f102 0204 	add.w	r2, r2, #4
 800bcd2:	d1ed      	bne.n	800bcb0 <_DrawBitmap+0x524>
 800bcd4:	3e01      	subs	r6, #1
 800bcd6:	b2f6      	uxtb	r6, r6
 800bcd8:	3601      	adds	r6, #1
 800bcda:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 800bcde:	2b00      	cmp	r3, #0
 800bce0:	f000 80dc 	beq.w	800be9c <_DrawBitmap+0x710>
 800bce4:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 800bce8:	2604      	movs	r6, #4
 800bcea:	e7db      	b.n	800bca4 <_DrawBitmap+0x518>
 800bcec:	0801662c 	.word	0x0801662c
 800bcf0:	0801765c 	.word	0x0801765c
 800bcf4:	20000254 	.word	0x20000254
 800bcf8:	4a71      	ldr	r2, [pc, #452]	; (800bec0 <_DrawBitmap+0x734>)
 800bcfa:	f89b 3000 	ldrb.w	r3, [fp]
 800bcfe:	6812      	ldr	r2, [r2, #0]
 800bd00:	980d      	ldr	r0, [sp, #52]	; 0x34
 800bd02:	7c12      	ldrb	r2, [r2, #16]
 800bd04:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800bd06:	f002 0203 	and.w	r2, r2, #3
 800bd0a:	4083      	lsls	r3, r0
 800bd0c:	2a01      	cmp	r2, #1
 800bd0e:	b2de      	uxtb	r6, r3
 800bd10:	f000 809c 	beq.w	800be4c <_DrawBitmap+0x6c0>
 800bd14:	d302      	bcc.n	800bd1c <_DrawBitmap+0x590>
 800bd16:	2a02      	cmp	r2, #2
 800bd18:	d035      	beq.n	800bd86 <_DrawBitmap+0x5fa>
 800bd1a:	e0bf      	b.n	800be9c <_DrawBitmap+0x710>
 800bd1c:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800bd1e:	b15f      	cbz	r7, 800bd38 <_DrawBitmap+0x5ac>
 800bd20:	0936      	lsrs	r6, r6, #4
 800bd22:	f10b 0201 	add.w	r2, fp, #1
 800bd26:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800bd2a:	6023      	str	r3, [r4, #0]
 800bd2c:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800bd30:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800bd32:	f10a 33ff 	add.w	r3, sl, #4294967295
 800bd36:	e001      	b.n	800bd3c <_DrawBitmap+0x5b0>
 800bd38:	4653      	mov	r3, sl
 800bd3a:	465a      	mov	r2, fp
 800bd3c:	2b01      	cmp	r3, #1
 800bd3e:	dd1a      	ble.n	800bd76 <_DrawBitmap+0x5ea>
 800bd40:	1058      	asrs	r0, r3, #1
 800bd42:	f104 0108 	add.w	r1, r4, #8
 800bd46:	f003 0301 	and.w	r3, r3, #1
 800bd4a:	eb02 0800 	add.w	r8, r2, r0
 800bd4e:	ea4f 1c16 	mov.w	ip, r6, lsr #4
 800bd52:	f006 060f 	and.w	r6, r6, #15
 800bd56:	f855 702c 	ldr.w	r7, [r5, ip, lsl #2]
 800bd5a:	f841 7c08 	str.w	r7, [r1, #-8]
 800bd5e:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 800bd62:	f841 6c04 	str.w	r6, [r1, #-4]
 800bd66:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800bd6a:	4542      	cmp	r2, r8
 800bd6c:	f101 0108 	add.w	r1, r1, #8
 800bd70:	d1ed      	bne.n	800bd4e <_DrawBitmap+0x5c2>
 800bd72:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 800bd76:	2b00      	cmp	r3, #0
 800bd78:	f000 8090 	beq.w	800be9c <_DrawBitmap+0x710>
 800bd7c:	0936      	lsrs	r6, r6, #4
 800bd7e:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800bd82:	6023      	str	r3, [r4, #0]
 800bd84:	e08a      	b.n	800be9c <_DrawBitmap+0x710>
 800bd86:	981e      	ldr	r0, [sp, #120]	; 0x78
 800bd88:	b1c0      	cbz	r0, 800bdbc <_DrawBitmap+0x630>
 800bd8a:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 800bd8e:	d00a      	beq.n	800bda6 <_DrawBitmap+0x61a>
 800bd90:	0936      	lsrs	r6, r6, #4
 800bd92:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800bd96:	6023      	str	r3, [r4, #0]
 800bd98:	b12f      	cbz	r7, 800bda6 <_DrawBitmap+0x61a>
 800bd9a:	68bb      	ldr	r3, [r7, #8]
 800bd9c:	9904      	ldr	r1, [sp, #16]
 800bd9e:	681b      	ldr	r3, [r3, #0]
 800bda0:	9a05      	ldr	r2, [sp, #20]
 800bda2:	4638      	mov	r0, r7
 800bda4:	4798      	blx	r3
 800bda6:	9904      	ldr	r1, [sp, #16]
 800bda8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800bdaa:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800bdae:	f101 0801 	add.w	r8, r1, #1
 800bdb2:	f10a 3cff 	add.w	ip, sl, #4294967295
 800bdb6:	f10b 0901 	add.w	r9, fp, #1
 800bdba:	e011      	b.n	800bde0 <_DrawBitmap+0x654>
 800bdbc:	46d4      	mov	ip, sl
 800bdbe:	46d9      	mov	r9, fp
 800bdc0:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800bdc4:	e00c      	b.n	800bde0 <_DrawBitmap+0x654>
 800bdc6:	f016 0ff0 	tst.w	r6, #240	; 0xf0
 800bdca:	d10d      	bne.n	800bde8 <_DrawBitmap+0x65c>
 800bdcc:	f016 060f 	ands.w	r6, r6, #15
 800bdd0:	d11b      	bne.n	800be0a <_DrawBitmap+0x67e>
 800bdd2:	f819 6f01 	ldrb.w	r6, [r9, #1]!
 800bdd6:	3408      	adds	r4, #8
 800bdd8:	f108 0802 	add.w	r8, r8, #2
 800bddc:	f1ac 0c02 	sub.w	ip, ip, #2
 800bde0:	f1bc 0f01 	cmp.w	ip, #1
 800bde4:	dcef      	bgt.n	800bdc6 <_DrawBitmap+0x63a>
 800bde6:	e021      	b.n	800be2c <_DrawBitmap+0x6a0>
 800bde8:	0933      	lsrs	r3, r6, #4
 800bdea:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800bdee:	6023      	str	r3, [r4, #0]
 800bdf0:	2f00      	cmp	r7, #0
 800bdf2:	d0eb      	beq.n	800bdcc <_DrawBitmap+0x640>
 800bdf4:	68bb      	ldr	r3, [r7, #8]
 800bdf6:	9a05      	ldr	r2, [sp, #20]
 800bdf8:	681b      	ldr	r3, [r3, #0]
 800bdfa:	f8cd c008 	str.w	ip, [sp, #8]
 800bdfe:	4638      	mov	r0, r7
 800be00:	4641      	mov	r1, r8
 800be02:	4798      	blx	r3
 800be04:	f8dd c008 	ldr.w	ip, [sp, #8]
 800be08:	e7e0      	b.n	800bdcc <_DrawBitmap+0x640>
 800be0a:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800be0e:	6063      	str	r3, [r4, #4]
 800be10:	2f00      	cmp	r7, #0
 800be12:	d0de      	beq.n	800bdd2 <_DrawBitmap+0x646>
 800be14:	68bb      	ldr	r3, [r7, #8]
 800be16:	9a05      	ldr	r2, [sp, #20]
 800be18:	681b      	ldr	r3, [r3, #0]
 800be1a:	f8cd c008 	str.w	ip, [sp, #8]
 800be1e:	4638      	mov	r0, r7
 800be20:	f108 0101 	add.w	r1, r8, #1
 800be24:	4798      	blx	r3
 800be26:	f8dd c008 	ldr.w	ip, [sp, #8]
 800be2a:	e7d2      	b.n	800bdd2 <_DrawBitmap+0x646>
 800be2c:	f1bc 0f00 	cmp.w	ip, #0
 800be30:	d034      	beq.n	800be9c <_DrawBitmap+0x710>
 800be32:	0936      	lsrs	r6, r6, #4
 800be34:	d032      	beq.n	800be9c <_DrawBitmap+0x710>
 800be36:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 800be3a:	6023      	str	r3, [r4, #0]
 800be3c:	b377      	cbz	r7, 800be9c <_DrawBitmap+0x710>
 800be3e:	68bb      	ldr	r3, [r7, #8]
 800be40:	9a05      	ldr	r2, [sp, #20]
 800be42:	681b      	ldr	r3, [r3, #0]
 800be44:	4638      	mov	r0, r7
 800be46:	4641      	mov	r1, r8
 800be48:	4798      	blx	r3
 800be4a:	e027      	b.n	800be9c <_DrawBitmap+0x710>
 800be4c:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800be4e:	f1c7 0302 	rsb	r3, r7, #2
 800be52:	b2db      	uxtb	r3, r3
 800be54:	465f      	mov	r7, fp
 800be56:	4652      	mov	r2, sl
 800be58:	4293      	cmp	r3, r2
 800be5a:	bfc8      	it	gt
 800be5c:	b2d3      	uxtbgt	r3, r2
 800be5e:	1ad2      	subs	r2, r2, r3
 800be60:	1d20      	adds	r0, r4, #4
 800be62:	469c      	mov	ip, r3
 800be64:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800be68:	d005      	beq.n	800be76 <_DrawBitmap+0x6ea>
 800be6a:	f850 1c04 	ldr.w	r1, [r0, #-4]
 800be6e:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 800be72:	f840 1c04 	str.w	r1, [r0, #-4]
 800be76:	f10c 3cff 	add.w	ip, ip, #4294967295
 800be7a:	0136      	lsls	r6, r6, #4
 800be7c:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 800be80:	b2f6      	uxtb	r6, r6
 800be82:	f100 0004 	add.w	r0, r0, #4
 800be86:	d1ed      	bne.n	800be64 <_DrawBitmap+0x6d8>
 800be88:	3b01      	subs	r3, #1
 800be8a:	b2db      	uxtb	r3, r3
 800be8c:	3301      	adds	r3, #1
 800be8e:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800be92:	b11a      	cbz	r2, 800be9c <_DrawBitmap+0x710>
 800be94:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 800be98:	2302      	movs	r3, #2
 800be9a:	e7dd      	b.n	800be58 <_DrawBitmap+0x6cc>
 800be9c:	9b05      	ldr	r3, [sp, #20]
 800be9e:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800bea0:	3301      	adds	r3, #1
 800bea2:	44bb      	add	fp, r7
 800bea4:	9305      	str	r3, [sp, #20]
 800bea6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800bea8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800beaa:	443b      	add	r3, r7
 800beac:	9309      	str	r3, [sp, #36]	; 0x24
 800beae:	e5c4      	b.n	800ba3a <_DrawBitmap+0x2ae>
 800beb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800beb2:	b113      	cbz	r3, 800beba <_DrawBitmap+0x72e>
 800beb4:	a80f      	add	r0, sp, #60	; 0x3c
 800beb6:	f004 fad1 	bl	801045c <GUI_ALLOC_UnlockH>
 800beba:	b011      	add	sp, #68	; 0x44
 800bebc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bec0:	20000254 	.word	0x20000254

0800bec4 <GUI_MEMDEV__WriteToActiveAt>:
 800bec4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800bec8:	460e      	mov	r6, r1
 800beca:	4690      	mov	r8, r2
 800becc:	4607      	mov	r7, r0
 800bece:	f004 fab7 	bl	8010440 <GUI_ALLOC_LockH>
 800bed2:	6803      	ldr	r3, [r0, #0]
 800bed4:	ac02      	add	r4, sp, #8
 800bed6:	68db      	ldr	r3, [r3, #12]
 800bed8:	f844 0d04 	str.w	r0, [r4, #-4]!
 800bedc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bede:	2000      	movs	r0, #0
 800bee0:	2116      	movs	r1, #22
 800bee2:	4798      	blx	r3
 800bee4:	4605      	mov	r5, r0
 800bee6:	4620      	mov	r0, r4
 800bee8:	f004 fab8 	bl	801045c <GUI_ALLOC_UnlockH>
 800beec:	b11d      	cbz	r5, 800bef6 <GUI_MEMDEV__WriteToActiveAt+0x32>
 800beee:	4638      	mov	r0, r7
 800bef0:	4631      	mov	r1, r6
 800bef2:	4642      	mov	r2, r8
 800bef4:	47a8      	blx	r5
 800bef6:	b002      	add	sp, #8
 800bef8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800befc <GUI_MEMDEV__CreateFixed>:
 800befc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bf00:	4e3e      	ldr	r6, [pc, #248]	; (800bffc <GUI_MEMDEV__CreateFixed+0x100>)
 800bf02:	b087      	sub	sp, #28
 800bf04:	461d      	mov	r5, r3
 800bf06:	6833      	ldr	r3, [r6, #0]
 800bf08:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800bf0a:	7c5b      	ldrb	r3, [r3, #17]
 800bf0c:	4683      	mov	fp, r0
 800bf0e:	468a      	mov	sl, r1
 800bf10:	4690      	mov	r8, r2
 800bf12:	9811      	ldr	r0, [sp, #68]	; 0x44
 800bf14:	9912      	ldr	r1, [sp, #72]	; 0x48
 800bf16:	2200      	movs	r2, #0
 800bf18:	f003 fd62 	bl	800f9e0 <GUI_DEVICE_Create>
 800bf1c:	4604      	mov	r4, r0
 800bf1e:	2800      	cmp	r0, #0
 800bf20:	d033      	beq.n	800bf8a <GUI_MEMDEV__CreateFixed+0x8e>
 800bf22:	6903      	ldr	r3, [r0, #16]
 800bf24:	689b      	ldr	r3, [r3, #8]
 800bf26:	4798      	blx	r3
 800bf28:	f001 fb67 	bl	800d5fa <LCD__GetBPPDevice>
 800bf2c:	fb08 f600 	mul.w	r6, r8, r0
 800bf30:	9003      	str	r0, [sp, #12]
 800bf32:	3607      	adds	r6, #7
 800bf34:	f004 fc4c 	bl	80107d0 <GUI_ALLOC_RequestSize>
 800bf38:	f017 0901 	ands.w	r9, r7, #1
 800bf3c:	ea4f 06d6 	mov.w	r6, r6, lsr #3
 800bf40:	d104      	bne.n	800bf4c <GUI_MEMDEV__CreateFixed+0x50>
 800bf42:	2304      	movs	r3, #4
 800bf44:	fb90 f0f3 	sdiv	r0, r0, r3
 800bf48:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 800bf4c:	2d00      	cmp	r5, #0
 800bf4e:	dc09      	bgt.n	800bf64 <GUI_MEMDEV__CreateFixed+0x68>
 800bf50:	b11e      	cbz	r6, 800bf5a <GUI_MEMDEV__CreateFixed+0x5e>
 800bf52:	3818      	subs	r0, #24
 800bf54:	fbb0 f0f6 	udiv	r0, r0, r6
 800bf58:	e000      	b.n	800bf5c <GUI_MEMDEV__CreateFixed+0x60>
 800bf5a:	4630      	mov	r0, r6
 800bf5c:	426d      	negs	r5, r5
 800bf5e:	42a8      	cmp	r0, r5
 800bf60:	bfb8      	it	lt
 800bf62:	4605      	movlt	r5, r0
 800bf64:	f1b9 0f00 	cmp.w	r9, #0
 800bf68:	d109      	bne.n	800bf7e <GUI_MEMDEV__CreateFixed+0x82>
 800bf6a:	f8cd 9000 	str.w	r9, [sp]
 800bf6e:	4658      	mov	r0, fp
 800bf70:	4651      	mov	r1, sl
 800bf72:	4642      	mov	r2, r8
 800bf74:	462b      	mov	r3, r5
 800bf76:	f007 f809 	bl	8012f8c <GUI_USAGE_BM_Create>
 800bf7a:	4607      	mov	r7, r0
 800bf7c:	e000      	b.n	800bf80 <GUI_MEMDEV__CreateFixed+0x84>
 800bf7e:	2700      	movs	r7, #0
 800bf80:	2d00      	cmp	r5, #0
 800bf82:	dc04      	bgt.n	800bf8e <GUI_MEMDEV__CreateFixed+0x92>
 800bf84:	4620      	mov	r0, r4
 800bf86:	f003 fd29 	bl	800f9dc <GUI_DEVICE_Delete>
 800bf8a:	2000      	movs	r0, #0
 800bf8c:	e032      	b.n	800bff4 <GUI_MEMDEV__CreateFixed+0xf8>
 800bf8e:	fb06 f005 	mul.w	r0, r6, r5
 800bf92:	3018      	adds	r0, #24
 800bf94:	f1b9 0f00 	cmp.w	r9, #0
 800bf98:	d002      	beq.n	800bfa0 <GUI_MEMDEV__CreateFixed+0xa4>
 800bf9a:	f004 fca5 	bl	80108e8 <GUI_ALLOC_AllocNoInit>
 800bf9e:	e001      	b.n	800bfa4 <GUI_MEMDEV__CreateFixed+0xa8>
 800bfa0:	f004 fcbb 	bl	801091a <GUI_ALLOC_AllocZero>
 800bfa4:	4681      	mov	r9, r0
 800bfa6:	b940      	cbnz	r0, 800bfba <GUI_MEMDEV__CreateFixed+0xbe>
 800bfa8:	4620      	mov	r0, r4
 800bfaa:	f003 fd17 	bl	800f9dc <GUI_DEVICE_Delete>
 800bfae:	2f00      	cmp	r7, #0
 800bfb0:	d0eb      	beq.n	800bf8a <GUI_MEMDEV__CreateFixed+0x8e>
 800bfb2:	4638      	mov	r0, r7
 800bfb4:	f004 fa7e 	bl	80104b4 <GUI_ALLOC_Free>
 800bfb8:	e01b      	b.n	800bff2 <GUI_MEMDEV__CreateFixed+0xf6>
 800bfba:	f004 fa41 	bl	8010440 <GUI_ALLOC_LockH>
 800bfbe:	4603      	mov	r3, r0
 800bfc0:	a806      	add	r0, sp, #24
 800bfc2:	9a03      	ldr	r2, [sp, #12]
 800bfc4:	f840 3d04 	str.w	r3, [r0, #-4]!
 800bfc8:	611a      	str	r2, [r3, #16]
 800bfca:	601c      	str	r4, [r3, #0]
 800bfcc:	f8a3 b004 	strh.w	fp, [r3, #4]
 800bfd0:	f8a3 a006 	strh.w	sl, [r3, #6]
 800bfd4:	f8a3 8008 	strh.w	r8, [r3, #8]
 800bfd8:	815d      	strh	r5, [r3, #10]
 800bfda:	60de      	str	r6, [r3, #12]
 800bfdc:	615f      	str	r7, [r3, #20]
 800bfde:	f004 fa3d 	bl	801045c <GUI_ALLOC_UnlockH>
 800bfe2:	4a06      	ldr	r2, [pc, #24]	; (800bffc <GUI_MEMDEV__CreateFixed+0x100>)
 800bfe4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bfe6:	6123      	str	r3, [r4, #16]
 800bfe8:	6813      	ldr	r3, [r2, #0]
 800bfea:	f8c4 9008 	str.w	r9, [r4, #8]
 800bfee:	7c5b      	ldrb	r3, [r3, #17]
 800bff0:	61a3      	str	r3, [r4, #24]
 800bff2:	4648      	mov	r0, r9
 800bff4:	b007      	add	sp, #28
 800bff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bffa:	bf00      	nop
 800bffc:	20000254 	.word	0x20000254

0800c000 <GUI_MEMDEV_GetBitsPerPixel>:
 800c000:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c002:	4605      	mov	r5, r0
 800c004:	b170      	cbz	r0, 800c024 <GUI_MEMDEV_GetBitsPerPixel+0x24>
 800c006:	f004 fa1b 	bl	8010440 <GUI_ALLOC_LockH>
 800c00a:	6803      	ldr	r3, [r0, #0]
 800c00c:	ac02      	add	r4, sp, #8
 800c00e:	691b      	ldr	r3, [r3, #16]
 800c010:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c014:	689b      	ldr	r3, [r3, #8]
 800c016:	4798      	blx	r3
 800c018:	f001 faef 	bl	800d5fa <LCD__GetBPPDevice>
 800c01c:	4605      	mov	r5, r0
 800c01e:	4620      	mov	r0, r4
 800c020:	f004 fa1c 	bl	801045c <GUI_ALLOC_UnlockH>
 800c024:	4628      	mov	r0, r5
 800c026:	b003      	add	sp, #12
 800c028:	bd30      	pop	{r4, r5, pc}
	...

0800c02c <GUI_MEMDEV_Delete>:
 800c02c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c02e:	4604      	mov	r4, r0
 800c030:	b1d0      	cbz	r0, 800c068 <GUI_MEMDEV_Delete+0x3c>
 800c032:	4b0e      	ldr	r3, [pc, #56]	; (800c06c <GUI_MEMDEV_Delete+0x40>)
 800c034:	681b      	ldr	r3, [r3, #0]
 800c036:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c038:	4283      	cmp	r3, r0
 800c03a:	d101      	bne.n	800c040 <GUI_MEMDEV_Delete+0x14>
 800c03c:	f002 ff78 	bl	800ef30 <GUI_SelectLCD>
 800c040:	4620      	mov	r0, r4
 800c042:	f004 f9fd 	bl	8010440 <GUI_ALLOC_LockH>
 800c046:	9001      	str	r0, [sp, #4]
 800c048:	6940      	ldr	r0, [r0, #20]
 800c04a:	b108      	cbz	r0, 800c050 <GUI_MEMDEV_Delete+0x24>
 800c04c:	f006 ffca 	bl	8012fe4 <GUI_USAGE_DecUseCnt>
 800c050:	ad02      	add	r5, sp, #8
 800c052:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 800c056:	6818      	ldr	r0, [r3, #0]
 800c058:	f003 fcc0 	bl	800f9dc <GUI_DEVICE_Delete>
 800c05c:	4628      	mov	r0, r5
 800c05e:	f004 f9fd 	bl	801045c <GUI_ALLOC_UnlockH>
 800c062:	4620      	mov	r0, r4
 800c064:	f004 fa26 	bl	80104b4 <GUI_ALLOC_Free>
 800c068:	b003      	add	sp, #12
 800c06a:	bd30      	pop	{r4, r5, pc}
 800c06c:	20000254 	.word	0x20000254

0800c070 <GUI_MEMDEV_CreateEx>:
 800c070:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c074:	469a      	mov	sl, r3
 800c076:	4b19      	ldr	r3, [pc, #100]	; (800c0dc <GUI_MEMDEV_CreateEx+0x6c>)
 800c078:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800c07a:	681b      	ldr	r3, [r3, #0]
 800c07c:	4607      	mov	r7, r0
 800c07e:	7c58      	ldrb	r0, [r3, #17]
 800c080:	4b17      	ldr	r3, [pc, #92]	; (800c0e0 <GUI_MEMDEV_CreateEx+0x70>)
 800c082:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 800c086:	4688      	mov	r8, r1
 800c088:	4691      	mov	r9, r2
 800c08a:	68e3      	ldr	r3, [r4, #12]
 800c08c:	681b      	ldr	r3, [r3, #0]
 800c08e:	2b04      	cmp	r3, #4
 800c090:	d006      	beq.n	800c0a0 <GUI_MEMDEV_CreateEx+0x30>
 800c092:	6824      	ldr	r4, [r4, #0]
 800c094:	2c00      	cmp	r4, #0
 800c096:	d1f8      	bne.n	800c08a <GUI_MEMDEV_CreateEx+0x1a>
 800c098:	f003 fc90 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800c09c:	4604      	mov	r4, r0
 800c09e:	b130      	cbz	r0, 800c0ae <GUI_MEMDEV_CreateEx+0x3e>
 800c0a0:	68e3      	ldr	r3, [r4, #12]
 800c0a2:	4620      	mov	r0, r4
 800c0a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c0a6:	2101      	movs	r1, #1
 800c0a8:	4798      	blx	r3
 800c0aa:	4606      	mov	r6, r0
 800c0ac:	b908      	cbnz	r0, 800c0b2 <GUI_MEMDEV_CreateEx+0x42>
 800c0ae:	2000      	movs	r0, #0
 800c0b0:	e010      	b.n	800c0d4 <GUI_MEMDEV_CreateEx+0x64>
 800c0b2:	6924      	ldr	r4, [r4, #16]
 800c0b4:	68a3      	ldr	r3, [r4, #8]
 800c0b6:	4798      	blx	r3
 800c0b8:	3001      	adds	r0, #1
 800c0ba:	bf04      	itt	eq
 800c0bc:	f045 0501 	orreq.w	r5, r5, #1
 800c0c0:	4c08      	ldreq	r4, [pc, #32]	; (800c0e4 <GUI_MEMDEV_CreateEx+0x74>)
 800c0c2:	9402      	str	r4, [sp, #8]
 800c0c4:	e88d 0060 	stmia.w	sp, {r5, r6}
 800c0c8:	4638      	mov	r0, r7
 800c0ca:	4641      	mov	r1, r8
 800c0cc:	464a      	mov	r2, r9
 800c0ce:	4653      	mov	r3, sl
 800c0d0:	f7ff ff14 	bl	800befc <GUI_MEMDEV__CreateFixed>
 800c0d4:	b004      	add	sp, #16
 800c0d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c0da:	bf00      	nop
 800c0dc:	20000254 	.word	0x20000254
 800c0e0:	2001b39c 	.word	0x2001b39c
 800c0e4:	080177cc 	.word	0x080177cc

0800c0e8 <GUI_MEMDEV_Select>:
 800c0e8:	4b11      	ldr	r3, [pc, #68]	; (800c130 <GUI_MEMDEV_Select+0x48>)
 800c0ea:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c0ec:	681a      	ldr	r2, [r3, #0]
 800c0ee:	4604      	mov	r4, r0
 800c0f0:	6e16      	ldr	r6, [r2, #96]	; 0x60
 800c0f2:	461f      	mov	r7, r3
 800c0f4:	b910      	cbnz	r0, 800c0fc <GUI_MEMDEV_Select+0x14>
 800c0f6:	f002 ff1b 	bl	800ef30 <GUI_SelectLCD>
 800c0fa:	e016      	b.n	800c12a <GUI_MEMDEV_Select+0x42>
 800c0fc:	b10e      	cbz	r6, 800c102 <GUI_MEMDEV_Select+0x1a>
 800c0fe:	f002 ff17 	bl	800ef30 <GUI_SelectLCD>
 800c102:	f7fe ff37 	bl	800af74 <WM_Deactivate>
 800c106:	4620      	mov	r0, r4
 800c108:	f004 f99a 	bl	8010440 <GUI_ALLOC_LockH>
 800c10c:	ad02      	add	r5, sp, #8
 800c10e:	683b      	ldr	r3, [r7, #0]
 800c110:	f845 0d04 	str.w	r0, [r5, #-4]!
 800c114:	661c      	str	r4, [r3, #96]	; 0x60
 800c116:	6800      	ldr	r0, [r0, #0]
 800c118:	f003 fc9e 	bl	800fa58 <GUI_DEVICE_Link>
 800c11c:	4628      	mov	r0, r5
 800c11e:	f004 f99d 	bl	801045c <GUI_ALLOC_UnlockH>
 800c122:	f001 f8f1 	bl	800d308 <LCD_UpdateColorIndices>
 800c126:	f001 fd29 	bl	800db7c <LCD_SetClipRectMax>
 800c12a:	4630      	mov	r0, r6
 800c12c:	b003      	add	sp, #12
 800c12e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c130:	20000254 	.word	0x20000254

0800c134 <GUI_MEMDEV_CopyToLCDAt>:
 800c134:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c138:	460c      	mov	r4, r1
 800c13a:	b085      	sub	sp, #20
 800c13c:	4615      	mov	r5, r2
 800c13e:	4606      	mov	r6, r0
 800c140:	2800      	cmp	r0, #0
 800c142:	d041      	beq.n	800c1c8 <GUI_MEMDEV_CopyToLCDAt+0x94>
 800c144:	2000      	movs	r0, #0
 800c146:	f002 fe8f 	bl	800ee68 <GUI_SetDrawMode>
 800c14a:	4b21      	ldr	r3, [pc, #132]	; (800c1d0 <GUI_MEMDEV_CopyToLCDAt+0x9c>)
 800c14c:	681b      	ldr	r3, [r3, #0]
 800c14e:	4607      	mov	r7, r0
 800c150:	4630      	mov	r0, r6
 800c152:	f8d3 8060 	ldr.w	r8, [r3, #96]	; 0x60
 800c156:	f004 f973 	bl	8010440 <GUI_ALLOC_LockH>
 800c15a:	6803      	ldr	r3, [r0, #0]
 800c15c:	9001      	str	r0, [sp, #4]
 800c15e:	6998      	ldr	r0, [r3, #24]
 800c160:	f002 fece 	bl	800ef00 <GUI_SelectLayer>
 800c164:	4b1b      	ldr	r3, [pc, #108]	; (800c1d4 <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 800c166:	429c      	cmp	r4, r3
 800c168:	9b01      	ldr	r3, [sp, #4]
 800c16a:	bf04      	itt	eq
 800c16c:	f9b3 4004 	ldrsheq.w	r4, [r3, #4]
 800c170:	f9b3 5006 	ldrsheq.w	r5, [r3, #6]
 800c174:	891a      	ldrh	r2, [r3, #8]
 800c176:	895b      	ldrh	r3, [r3, #10]
 800c178:	f8ad 4008 	strh.w	r4, [sp, #8]
 800c17c:	3a01      	subs	r2, #1
 800c17e:	3b01      	subs	r3, #1
 800c180:	4422      	add	r2, r4
 800c182:	442b      	add	r3, r5
 800c184:	4681      	mov	r9, r0
 800c186:	f8ad 200c 	strh.w	r2, [sp, #12]
 800c18a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800c18e:	f8ad 500a 	strh.w	r5, [sp, #10]
 800c192:	f7fe fee7 	bl	800af64 <WM_Activate>
 800c196:	a801      	add	r0, sp, #4
 800c198:	f004 f960 	bl	801045c <GUI_ALLOC_UnlockH>
 800c19c:	a802      	add	r0, sp, #8
 800c19e:	f7fe fcff 	bl	800aba0 <WM__InitIVRSearch>
 800c1a2:	b948      	cbnz	r0, 800c1b8 <GUI_MEMDEV_CopyToLCDAt+0x84>
 800c1a4:	4648      	mov	r0, r9
 800c1a6:	f002 feab 	bl	800ef00 <GUI_SelectLayer>
 800c1aa:	4640      	mov	r0, r8
 800c1ac:	f7ff ff9c 	bl	800c0e8 <GUI_MEMDEV_Select>
 800c1b0:	4638      	mov	r0, r7
 800c1b2:	f002 fe59 	bl	800ee68 <GUI_SetDrawMode>
 800c1b6:	e007      	b.n	800c1c8 <GUI_MEMDEV_CopyToLCDAt+0x94>
 800c1b8:	4630      	mov	r0, r6
 800c1ba:	4621      	mov	r1, r4
 800c1bc:	462a      	mov	r2, r5
 800c1be:	f006 f9b1 	bl	8012524 <GUI_MEMDEV__WriteToActiveOpaque>
 800c1c2:	f7fe fc2b 	bl	800aa1c <WM__GetNextIVR>
 800c1c6:	e7ec      	b.n	800c1a2 <GUI_MEMDEV_CopyToLCDAt+0x6e>
 800c1c8:	b005      	add	sp, #20
 800c1ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c1ce:	bf00      	nop
 800c1d0:	20000254 	.word	0x20000254
 800c1d4:	fffff001 	.word	0xfffff001

0800c1d8 <GUI_MEMDEV_CopyToLCD>:
 800c1d8:	4901      	ldr	r1, [pc, #4]	; (800c1e0 <GUI_MEMDEV_CopyToLCD+0x8>)
 800c1da:	460a      	mov	r2, r1
 800c1dc:	f7ff bfaa 	b.w	800c134 <GUI_MEMDEV_CopyToLCDAt>
 800c1e0:	fffff001 	.word	0xfffff001

0800c1e4 <_SetPhysRAMAddr>:
 800c1e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c1e6:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800c1e8:	4604      	mov	r4, r0
 800c1ea:	460e      	mov	r6, r1
 800c1ec:	4615      	mov	r5, r2
 800c1ee:	b15b      	cbz	r3, 800c208 <_SetPhysRAMAddr+0x24>
 800c1f0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800c1f4:	4798      	blx	r3
 800c1f6:	4631      	mov	r1, r6
 800c1f8:	4607      	mov	r7, r0
 800c1fa:	462a      	mov	r2, r5
 800c1fc:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800c200:	4620      	mov	r0, r4
 800c202:	4798      	blx	r3
 800c204:	463e      	mov	r6, r7
 800c206:	4605      	mov	r5, r0
 800c208:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800c20c:	4620      	mov	r0, r4
 800c20e:	212a      	movs	r1, #42	; 0x2a
 800c210:	4798      	blx	r3
 800c212:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c214:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c218:	4431      	add	r1, r6
 800c21a:	4620      	mov	r0, r4
 800c21c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800c220:	4798      	blx	r3
 800c222:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c224:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c228:	b2b7      	uxth	r7, r6
 800c22a:	4439      	add	r1, r7
 800c22c:	4620      	mov	r0, r4
 800c22e:	b2c9      	uxtb	r1, r1
 800c230:	4798      	blx	r3
 800c232:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c234:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c238:	4431      	add	r1, r6
 800c23a:	4620      	mov	r0, r4
 800c23c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800c240:	4798      	blx	r3
 800c242:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c244:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c248:	4439      	add	r1, r7
 800c24a:	4620      	mov	r0, r4
 800c24c:	b2c9      	uxtb	r1, r1
 800c24e:	4798      	blx	r3
 800c250:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800c254:	4620      	mov	r0, r4
 800c256:	212b      	movs	r1, #43	; 0x2b
 800c258:	4798      	blx	r3
 800c25a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c25c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c260:	4429      	add	r1, r5
 800c262:	4620      	mov	r0, r4
 800c264:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800c268:	4798      	blx	r3
 800c26a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c26c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c270:	b2ae      	uxth	r6, r5
 800c272:	4431      	add	r1, r6
 800c274:	4620      	mov	r0, r4
 800c276:	b2c9      	uxtb	r1, r1
 800c278:	4798      	blx	r3
 800c27a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c27c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c280:	4429      	add	r1, r5
 800c282:	4620      	mov	r0, r4
 800c284:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800c288:	4798      	blx	r3
 800c28a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c28c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c290:	4431      	add	r1, r6
 800c292:	4620      	mov	r0, r4
 800c294:	b2c9      	uxtb	r1, r1
 800c296:	4798      	blx	r3
 800c298:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800c29c:	4620      	mov	r0, r4
 800c29e:	212c      	movs	r1, #44	; 0x2c
 800c2a0:	4798      	blx	r3
 800c2a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c2a4 <_SetRect>:
 800c2a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c2a8:	4698      	mov	r8, r3
 800c2aa:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800c2ac:	9f08      	ldr	r7, [sp, #32]
 800c2ae:	4604      	mov	r4, r0
 800c2b0:	4689      	mov	r9, r1
 800c2b2:	4615      	mov	r5, r2
 800c2b4:	2b00      	cmp	r3, #0
 800c2b6:	d064      	beq.n	800c382 <_SetRect+0xde>
 800c2b8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800c2bc:	4798      	blx	r3
 800c2be:	463a      	mov	r2, r7
 800c2c0:	4606      	mov	r6, r0
 800c2c2:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800c2c6:	4641      	mov	r1, r8
 800c2c8:	4620      	mov	r0, r4
 800c2ca:	4798      	blx	r3
 800c2cc:	462a      	mov	r2, r5
 800c2ce:	4682      	mov	sl, r0
 800c2d0:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800c2d4:	4649      	mov	r1, r9
 800c2d6:	4620      	mov	r0, r4
 800c2d8:	4798      	blx	r3
 800c2da:	463a      	mov	r2, r7
 800c2dc:	4605      	mov	r5, r0
 800c2de:	4641      	mov	r1, r8
 800c2e0:	4620      	mov	r0, r4
 800c2e2:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800c2e6:	4798      	blx	r3
 800c2e8:	45b2      	cmp	sl, r6
 800c2ea:	4607      	mov	r7, r0
 800c2ec:	db02      	blt.n	800c2f4 <_SetRect+0x50>
 800c2ee:	4653      	mov	r3, sl
 800c2f0:	46b2      	mov	sl, r6
 800c2f2:	461e      	mov	r6, r3
 800c2f4:	42af      	cmp	r7, r5
 800c2f6:	db02      	blt.n	800c2fe <_SetRect+0x5a>
 800c2f8:	463b      	mov	r3, r7
 800c2fa:	462f      	mov	r7, r5
 800c2fc:	461d      	mov	r5, r3
 800c2fe:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800c302:	4620      	mov	r0, r4
 800c304:	212a      	movs	r1, #42	; 0x2a
 800c306:	4798      	blx	r3
 800c308:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c30a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c30e:	4451      	add	r1, sl
 800c310:	4620      	mov	r0, r4
 800c312:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800c316:	4798      	blx	r3
 800c318:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c31a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c31e:	4451      	add	r1, sl
 800c320:	4620      	mov	r0, r4
 800c322:	b2c9      	uxtb	r1, r1
 800c324:	4798      	blx	r3
 800c326:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c328:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c32c:	4431      	add	r1, r6
 800c32e:	4620      	mov	r0, r4
 800c330:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800c334:	4798      	blx	r3
 800c336:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c338:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c33c:	4431      	add	r1, r6
 800c33e:	4620      	mov	r0, r4
 800c340:	b2c9      	uxtb	r1, r1
 800c342:	4798      	blx	r3
 800c344:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800c348:	4620      	mov	r0, r4
 800c34a:	212b      	movs	r1, #43	; 0x2b
 800c34c:	4798      	blx	r3
 800c34e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c350:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c354:	4439      	add	r1, r7
 800c356:	4620      	mov	r0, r4
 800c358:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800c35c:	4798      	blx	r3
 800c35e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c360:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c364:	4439      	add	r1, r7
 800c366:	4620      	mov	r0, r4
 800c368:	b2c9      	uxtb	r1, r1
 800c36a:	4798      	blx	r3
 800c36c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c36e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c372:	4429      	add	r1, r5
 800c374:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800c378:	4620      	mov	r0, r4
 800c37a:	4798      	blx	r3
 800c37c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c37e:	4429      	add	r1, r5
 800c380:	e03f      	b.n	800c402 <_SetRect+0x15e>
 800c382:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800c386:	212a      	movs	r1, #42	; 0x2a
 800c388:	4798      	blx	r3
 800c38a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c38c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c390:	4449      	add	r1, r9
 800c392:	4620      	mov	r0, r4
 800c394:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800c398:	4798      	blx	r3
 800c39a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c39c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c3a0:	4449      	add	r1, r9
 800c3a2:	4620      	mov	r0, r4
 800c3a4:	b2c9      	uxtb	r1, r1
 800c3a6:	4798      	blx	r3
 800c3a8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c3aa:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c3ae:	4441      	add	r1, r8
 800c3b0:	4620      	mov	r0, r4
 800c3b2:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800c3b6:	4798      	blx	r3
 800c3b8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c3ba:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c3be:	4441      	add	r1, r8
 800c3c0:	4620      	mov	r0, r4
 800c3c2:	b2c9      	uxtb	r1, r1
 800c3c4:	4798      	blx	r3
 800c3c6:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800c3ca:	4620      	mov	r0, r4
 800c3cc:	212b      	movs	r1, #43	; 0x2b
 800c3ce:	4798      	blx	r3
 800c3d0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c3d2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c3d6:	4429      	add	r1, r5
 800c3d8:	4620      	mov	r0, r4
 800c3da:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800c3de:	4798      	blx	r3
 800c3e0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c3e2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c3e6:	4429      	add	r1, r5
 800c3e8:	4620      	mov	r0, r4
 800c3ea:	b2c9      	uxtb	r1, r1
 800c3ec:	4798      	blx	r3
 800c3ee:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c3f0:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c3f4:	4439      	add	r1, r7
 800c3f6:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800c3fa:	4620      	mov	r0, r4
 800c3fc:	4798      	blx	r3
 800c3fe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c400:	4439      	add	r1, r7
 800c402:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c406:	4620      	mov	r0, r4
 800c408:	b2c9      	uxtb	r1, r1
 800c40a:	4798      	blx	r3
 800c40c:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800c410:	4620      	mov	r0, r4
 800c412:	212c      	movs	r1, #44	; 0x2c
 800c414:	4798      	blx	r3
 800c416:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800c41c <_SetOrientation>:
 800c41c:	b513      	push	{r0, r1, r4, lr}
 800c41e:	4a0d      	ldr	r2, [pc, #52]	; (800c454 <_SetOrientation+0x38>)
 800c420:	4604      	mov	r4, r0
 800c422:	6851      	ldr	r1, [r2, #4]
 800c424:	6810      	ldr	r0, [r2, #0]
 800c426:	466b      	mov	r3, sp
 800c428:	c303      	stmia	r3!, {r0, r1}
 800c42a:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800c42e:	4620      	mov	r0, r4
 800c430:	2136      	movs	r1, #54	; 0x36
 800c432:	4798      	blx	r3
 800c434:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c436:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800c438:	aa02      	add	r2, sp, #8
 800c43a:	4413      	add	r3, r2
 800c43c:	f021 01e0 	bic.w	r1, r1, #224	; 0xe0
 800c440:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 800c444:	4319      	orrs	r1, r3
 800c446:	4620      	mov	r0, r4
 800c448:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c44c:	b289      	uxth	r1, r1
 800c44e:	4798      	blx	r3
 800c450:	b002      	add	sp, #8
 800c452:	bd10      	pop	{r4, pc}
 800c454:	08016370 	.word	0x08016370

0800c458 <_ReadPixel_16bpp_B8>:
 800c458:	b513      	push	{r0, r1, r4, lr}
 800c45a:	4604      	mov	r4, r0
 800c45c:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 800c460:	202e      	movs	r0, #46	; 0x2e
 800c462:	4798      	blx	r3
 800c464:	6a21      	ldr	r1, [r4, #32]
 800c466:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800c46a:	4668      	mov	r0, sp
 800c46c:	3103      	adds	r1, #3
 800c46e:	4798      	blx	r3
 800c470:	6a22      	ldr	r2, [r4, #32]
 800c472:	ab00      	add	r3, sp, #0
 800c474:	4413      	add	r3, r2
 800c476:	f81d 2002 	ldrb.w	r2, [sp, r2]
 800c47a:	7859      	ldrb	r1, [r3, #1]
 800c47c:	7898      	ldrb	r0, [r3, #2]
 800c47e:	08d2      	lsrs	r2, r2, #3
 800c480:	0889      	lsrs	r1, r1, #2
 800c482:	02d2      	lsls	r2, r2, #11
 800c484:	ea42 1241 	orr.w	r2, r2, r1, lsl #5
 800c488:	ea42 00d0 	orr.w	r0, r2, r0, lsr #3
 800c48c:	b002      	add	sp, #8
 800c48e:	bd10      	pop	{r4, pc}

0800c490 <_ReadPixel_16bpp_B16_I>:
 800c490:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c492:	4604      	mov	r4, r0
 800c494:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800c498:	202e      	movs	r0, #46	; 0x2e
 800c49a:	4798      	blx	r3
 800c49c:	6a21      	ldr	r1, [r4, #32]
 800c49e:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800c4a2:	4668      	mov	r0, sp
 800c4a4:	3102      	adds	r1, #2
 800c4a6:	4798      	blx	r3
 800c4a8:	6a23      	ldr	r3, [r4, #32]
 800c4aa:	a900      	add	r1, sp, #0
 800c4ac:	eb01 0243 	add.w	r2, r1, r3, lsl #1
 800c4b0:	f83d 0013 	ldrh.w	r0, [sp, r3, lsl #1]
 800c4b4:	8852      	ldrh	r2, [r2, #2]
 800c4b6:	f402 417c 	and.w	r1, r2, #64512	; 0xfc00
 800c4ba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800c4be:	ea42 1251 	orr.w	r2, r2, r1, lsr #5
 800c4c2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 800c4c6:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 800c4ca:	b004      	add	sp, #16
 800c4cc:	bd10      	pop	{r4, pc}

0800c4ce <_SetReg_B8>:
 800c4ce:	b538      	push	{r3, r4, r5, lr}
 800c4d0:	4604      	mov	r4, r0
 800c4d2:	460d      	mov	r5, r1
 800c4d4:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 800c4d8:	0a08      	lsrs	r0, r1, #8
 800c4da:	4798      	blx	r3
 800c4dc:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800c4e0:	b2e8      	uxtb	r0, r5
 800c4e2:	4798      	blx	r3
 800c4e4:	bd38      	pop	{r3, r4, r5, pc}

0800c4e6 <_SetReg_B16>:
 800c4e6:	b508      	push	{r3, lr}
 800c4e8:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800c4ec:	4608      	mov	r0, r1
 800c4ee:	4798      	blx	r3
 800c4f0:	bd08      	pop	{r3, pc}

0800c4f2 <_WritePara_B8>:
 800c4f2:	b508      	push	{r3, lr}
 800c4f4:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 800c4f8:	b2c8      	uxtb	r0, r1
 800c4fa:	4798      	blx	r3
 800c4fc:	bd08      	pop	{r3, pc}

0800c4fe <_WritePara_B16>:
 800c4fe:	b508      	push	{r3, lr}
 800c500:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800c504:	4608      	mov	r0, r1
 800c506:	4798      	blx	r3
 800c508:	bd08      	pop	{r3, pc}
	...

0800c50c <_SetInterface>:
 800c50c:	2908      	cmp	r1, #8
 800c50e:	d002      	beq.n	800c516 <_SetInterface+0xa>
 800c510:	2910      	cmp	r1, #16
 800c512:	d005      	beq.n	800c520 <_SetInterface+0x14>
 800c514:	4770      	bx	lr
 800c516:	4b06      	ldr	r3, [pc, #24]	; (800c530 <_SetInterface+0x24>)
 800c518:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800c51c:	4b05      	ldr	r3, [pc, #20]	; (800c534 <_SetInterface+0x28>)
 800c51e:	e003      	b.n	800c528 <_SetInterface+0x1c>
 800c520:	4b05      	ldr	r3, [pc, #20]	; (800c538 <_SetInterface+0x2c>)
 800c522:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800c526:	4b05      	ldr	r3, [pc, #20]	; (800c53c <_SetInterface+0x30>)
 800c528:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
 800c52c:	4770      	bx	lr
 800c52e:	bf00      	nop
 800c530:	0800c4cf 	.word	0x0800c4cf
 800c534:	0800c4f3 	.word	0x0800c4f3
 800c538:	0800c4e7 	.word	0x0800c4e7
 800c53c:	0800c4ff 	.word	0x0800c4ff

0800c540 <_ReadRect_16bpp_B8>:
 800c540:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c542:	b085      	sub	sp, #20
 800c544:	6884      	ldr	r4, [r0, #8]
 800c546:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800c548:	9700      	str	r7, [sp, #0]
 800c54a:	1abd      	subs	r5, r7, r2
 800c54c:	1a58      	subs	r0, r3, r1
 800c54e:	3501      	adds	r5, #1
 800c550:	fb00 5505 	mla	r5, r0, r5, r5
 800c554:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800c558:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800c55a:	4620      	mov	r0, r4
 800c55c:	47b8      	blx	r7
 800c55e:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800c562:	202e      	movs	r0, #46	; 0x2e
 800c564:	4798      	blx	r3
 800c566:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800c56a:	6a21      	ldr	r1, [r4, #32]
 800c56c:	a802      	add	r0, sp, #8
 800c56e:	4798      	blx	r3
 800c570:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800c574:	a802      	add	r0, sp, #8
 800c576:	2103      	movs	r1, #3
 800c578:	4798      	blx	r3
 800c57a:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800c57e:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800c582:	08db      	lsrs	r3, r3, #3
 800c584:	0892      	lsrs	r2, r2, #2
 800c586:	02db      	lsls	r3, r3, #11
 800c588:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800c58c:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800c590:	3d01      	subs	r5, #1
 800c592:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 800c596:	f826 3b02 	strh.w	r3, [r6], #2
 800c59a:	d1e9      	bne.n	800c570 <_ReadRect_16bpp_B8+0x30>
 800c59c:	b005      	add	sp, #20
 800c59e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c5a0 <_ReadRect_16bpp_B16_I>:
 800c5a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c5a2:	b087      	sub	sp, #28
 800c5a4:	6884      	ldr	r4, [r0, #8]
 800c5a6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800c5a8:	9700      	str	r7, [sp, #0]
 800c5aa:	1abd      	subs	r5, r7, r2
 800c5ac:	1a58      	subs	r0, r3, r1
 800c5ae:	3501      	adds	r5, #1
 800c5b0:	fb00 5505 	mla	r5, r0, r5, r5
 800c5b4:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800c5b8:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 800c5ba:	4620      	mov	r0, r4
 800c5bc:	47b8      	blx	r7
 800c5be:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800c5c2:	202e      	movs	r0, #46	; 0x2e
 800c5c4:	4798      	blx	r3
 800c5c6:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800c5ca:	6a21      	ldr	r1, [r4, #32]
 800c5cc:	a802      	add	r0, sp, #8
 800c5ce:	4798      	blx	r3
 800c5d0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800c5d4:	a802      	add	r0, sp, #8
 800c5d6:	2102      	movs	r1, #2
 800c5d8:	4798      	blx	r3
 800c5da:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800c5de:	f403 427c 	and.w	r2, r3, #64512	; 0xfc00
 800c5e2:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 800c5e6:	ea43 1352 	orr.w	r3, r3, r2, lsr #5
 800c5ea:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800c5ee:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 800c5f2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800c5f6:	3d01      	subs	r5, #1
 800c5f8:	f826 3b02 	strh.w	r3, [r6], #2
 800c5fc:	d1e8      	bne.n	800c5d0 <_ReadRect_16bpp_B16_I+0x30>
 800c5fe:	b007      	add	sp, #28
 800c600:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800c604 <GUIDRV_FlexColor_SetFunc66720>:
 800c604:	b510      	push	{r4, lr}
 800c606:	4604      	mov	r4, r0
 800c608:	f000 fda6 	bl	800d158 <GUIDRV_FlexColor__InitOnce>
 800c60c:	68a3      	ldr	r3, [r4, #8]
 800c60e:	4a12      	ldr	r2, [pc, #72]	; (800c658 <GUIDRV_FlexColor_SetFunc66720+0x54>)
 800c610:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 800c614:	4a11      	ldr	r2, [pc, #68]	; (800c65c <GUIDRV_FlexColor_SetFunc66720+0x58>)
 800c616:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 800c61a:	4a11      	ldr	r2, [pc, #68]	; (800c660 <GUIDRV_FlexColor_SetFunc66720+0x5c>)
 800c61c:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 800c620:	4a10      	ldr	r2, [pc, #64]	; (800c664 <GUIDRV_FlexColor_SetFunc66720+0x60>)
 800c622:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800c626:	2200      	movs	r2, #0
 800c628:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800c62c:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 800c630:	4a0d      	ldr	r2, [pc, #52]	; (800c668 <GUIDRV_FlexColor_SetFunc66720+0x64>)
 800c632:	490e      	ldr	r1, [pc, #56]	; (800c66c <GUIDRV_FlexColor_SetFunc66720+0x68>)
 800c634:	6812      	ldr	r2, [r2, #0]
 800c636:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 800c63a:	8cda      	ldrh	r2, [r3, #38]	; 0x26
 800c63c:	6809      	ldr	r1, [r1, #0]
 800c63e:	f8c3 10b4 	str.w	r1, [r3, #180]	; 0xb4
 800c642:	f022 0203 	bic.w	r2, r2, #3
 800c646:	490a      	ldr	r1, [pc, #40]	; (800c670 <GUIDRV_FlexColor_SetFunc66720+0x6c>)
 800c648:	84da      	strh	r2, [r3, #38]	; 0x26
 800c64a:	4a0a      	ldr	r2, [pc, #40]	; (800c674 <GUIDRV_FlexColor_SetFunc66720+0x70>)
 800c64c:	f8c3 10c8 	str.w	r1, [r3, #200]	; 0xc8
 800c650:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 800c654:	bd10      	pop	{r4, pc}
 800c656:	bf00      	nop
 800c658:	0800c1e5 	.word	0x0800c1e5
 800c65c:	0800c2a5 	.word	0x0800c2a5
 800c660:	0800c41d 	.word	0x0800c41d
 800c664:	0800c459 	.word	0x0800c459
 800c668:	20000234 	.word	0x20000234
 800c66c:	20000230 	.word	0x20000230
 800c670:	0800c541 	.word	0x0800c541
 800c674:	0800c50d 	.word	0x0800c50d

0800c678 <_ReadData>:
 800c678:	b508      	push	{r3, lr}
 800c67a:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 800c67e:	4798      	blx	r3
 800c680:	bd08      	pop	{r3, pc}

0800c682 <_WriteData>:
 800c682:	b508      	push	{r3, lr}
 800c684:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800c688:	b288      	uxth	r0, r1
 800c68a:	4798      	blx	r3
 800c68c:	bd08      	pop	{r3, pc}
	...

0800c690 <_FillRect>:
 800c690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c694:	4f3d      	ldr	r7, [pc, #244]	; (800c78c <_FillRect+0xfc>)
 800c696:	6884      	ldr	r4, [r0, #8]
 800c698:	4682      	mov	sl, r0
 800c69a:	6838      	ldr	r0, [r7, #0]
 800c69c:	7c00      	ldrb	r0, [r0, #16]
 800c69e:	f010 0f01 	tst.w	r0, #1
 800c6a2:	b085      	sub	sp, #20
 800c6a4:	460e      	mov	r6, r1
 800c6a6:	4615      	mov	r5, r2
 800c6a8:	4698      	mov	r8, r3
 800c6aa:	ebc1 0903 	rsb	r9, r1, r3
 800c6ae:	d045      	beq.n	800c73c <_FillRect+0xac>
 800c6b0:	ea4f 0b49 	mov.w	fp, r9, lsl #1
 800c6b4:	980e      	ldr	r0, [sp, #56]	; 0x38
 800c6b6:	4285      	cmp	r5, r0
 800c6b8:	dc65      	bgt.n	800c786 <_FillRect+0xf6>
 800c6ba:	f8d4 c0c4 	ldr.w	ip, [r4, #196]	; 0xc4
 800c6be:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800c6c0:	f1bc 0f00 	cmp.w	ip, #0
 800c6c4:	d101      	bne.n	800c6ca <_FillRect+0x3a>
 800c6c6:	46b4      	mov	ip, r6
 800c6c8:	e007      	b.n	800c6da <_FillRect+0x4a>
 800c6ca:	e88d 00a0 	stmia.w	sp, {r5, r7}
 800c6ce:	4650      	mov	r0, sl
 800c6d0:	4631      	mov	r1, r6
 800c6d2:	462a      	mov	r2, r5
 800c6d4:	4643      	mov	r3, r8
 800c6d6:	47e0      	blx	ip
 800c6d8:	e011      	b.n	800c6fe <_FillRect+0x6e>
 800c6da:	45c4      	cmp	ip, r8
 800c6dc:	dc0e      	bgt.n	800c6fc <_FillRect+0x6c>
 800c6de:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 800c6e2:	f8cd c00c 	str.w	ip, [sp, #12]
 800c6e6:	4661      	mov	r1, ip
 800c6e8:	4650      	mov	r0, sl
 800c6ea:	462a      	mov	r2, r5
 800c6ec:	4798      	blx	r3
 800c6ee:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800c6f2:	f827 0b02 	strh.w	r0, [r7], #2
 800c6f6:	f10c 0c01 	add.w	ip, ip, #1
 800c6fa:	e7ee      	b.n	800c6da <_FillRect+0x4a>
 800c6fc:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800c6fe:	1ebb      	subs	r3, r7, #2
 800c700:	f109 0c01 	add.w	ip, r9, #1
 800c704:	445f      	add	r7, fp
 800c706:	42bb      	cmp	r3, r7
 800c708:	d005      	beq.n	800c716 <_FillRect+0x86>
 800c70a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c70c:	8859      	ldrh	r1, [r3, #2]
 800c70e:	404a      	eors	r2, r1
 800c710:	f823 2f02 	strh.w	r2, [r3, #2]!
 800c714:	e7f7      	b.n	800c706 <_FillRect+0x76>
 800c716:	9500      	str	r5, [sp, #0]
 800c718:	462a      	mov	r2, r5
 800c71a:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800c71e:	f8cd c00c 	str.w	ip, [sp, #12]
 800c722:	4620      	mov	r0, r4
 800c724:	4631      	mov	r1, r6
 800c726:	4643      	mov	r3, r8
 800c728:	47b8      	blx	r7
 800c72a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800c72e:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800c732:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800c734:	4661      	mov	r1, ip
 800c736:	4798      	blx	r3
 800c738:	3501      	adds	r5, #1
 800c73a:	e7bb      	b.n	800c6b4 <_FillRect+0x24>
 800c73c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800c73e:	9000      	str	r0, [sp, #0]
 800c740:	1a85      	subs	r5, r0, r2
 800c742:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800c746:	4620      	mov	r0, r4
 800c748:	47b0      	blx	r6
 800c74a:	683b      	ldr	r3, [r7, #0]
 800c74c:	6ea7      	ldr	r7, [r4, #104]	; 0x68
 800c74e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c750:	f109 0901 	add.w	r9, r9, #1
 800c754:	f8d3 8000 	ldr.w	r8, [r3]
 800c758:	fb05 9509 	mla	r5, r5, r9, r9
 800c75c:	2301      	movs	r3, #1
 800c75e:	b195      	cbz	r5, 800c786 <_FillRect+0xf6>
 800c760:	2dfa      	cmp	r5, #250	; 0xfa
 800c762:	bf34      	ite	cc
 800c764:	462e      	movcc	r6, r5
 800c766:	26fa      	movcs	r6, #250	; 0xfa
 800c768:	b12b      	cbz	r3, 800c776 <_FillRect+0xe6>
 800c76a:	4638      	mov	r0, r7
 800c76c:	fa1f f188 	uxth.w	r1, r8
 800c770:	4632      	mov	r2, r6
 800c772:	f001 fac5 	bl	800dd00 <GUI__memset16>
 800c776:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800c77a:	4638      	mov	r0, r7
 800c77c:	4631      	mov	r1, r6
 800c77e:	4798      	blx	r3
 800c780:	1bad      	subs	r5, r5, r6
 800c782:	2300      	movs	r3, #0
 800c784:	e7eb      	b.n	800c75e <_FillRect+0xce>
 800c786:	b005      	add	sp, #20
 800c788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c78c:	20000254 	.word	0x20000254

0800c790 <_DrawBitmap>:
 800c790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c794:	b08d      	sub	sp, #52	; 0x34
 800c796:	6885      	ldr	r5, [r0, #8]
 800c798:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800c79a:	9305      	str	r3, [sp, #20]
 800c79c:	1e7b      	subs	r3, r7, #1
 800c79e:	2b01      	cmp	r3, #1
 800c7a0:	9009      	str	r0, [sp, #36]	; 0x24
 800c7a2:	9108      	str	r1, [sp, #32]
 800c7a4:	920a      	str	r2, [sp, #40]	; 0x28
 800c7a6:	950b      	str	r5, [sp, #44]	; 0x2c
 800c7a8:	d903      	bls.n	800c7b2 <_DrawBitmap+0x22>
 800c7aa:	2f04      	cmp	r7, #4
 800c7ac:	d001      	beq.n	800c7b2 <_DrawBitmap+0x22>
 800c7ae:	2f08      	cmp	r7, #8
 800c7b0:	d106      	bne.n	800c7c0 <_DrawBitmap+0x30>
 800c7b2:	4b8f      	ldr	r3, [pc, #572]	; (800c9f0 <_DrawBitmap+0x260>)
 800c7b4:	681b      	ldr	r3, [r3, #0]
 800c7b6:	7c1b      	ldrb	r3, [r3, #16]
 800c7b8:	f003 0303 	and.w	r3, r3, #3
 800c7bc:	2b02      	cmp	r3, #2
 800c7be:	d010      	beq.n	800c7e2 <_DrawBitmap+0x52>
 800c7c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c7c2:	9f16      	ldr	r7, [sp, #88]	; 0x58
 800c7c4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800c7c6:	9908      	ldr	r1, [sp, #32]
 800c7c8:	9b05      	ldr	r3, [sp, #20]
 800c7ca:	443a      	add	r2, r7
 800c7cc:	4429      	add	r1, r5
 800c7ce:	3a01      	subs	r2, #1
 800c7d0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800c7d2:	9200      	str	r2, [sp, #0]
 800c7d4:	440b      	add	r3, r1
 800c7d6:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 800c7da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c7dc:	4628      	mov	r0, r5
 800c7de:	3b01      	subs	r3, #1
 800c7e0:	47a0      	blx	r4
 800c7e2:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800c7e6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800c7e8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800c7ea:	ebc7 030b 	rsb	r3, r7, fp
 800c7ee:	42ab      	cmp	r3, r5
 800c7f0:	f280 8251 	bge.w	800cc96 <_DrawBitmap+0x506>
 800c7f4:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800c7f6:	1e7b      	subs	r3, r7, #1
 800c7f8:	2b0f      	cmp	r3, #15
 800c7fa:	f200 8245 	bhi.w	800cc88 <_DrawBitmap+0x4f8>
 800c7fe:	e8df f013 	tbh	[pc, r3, lsl #1]
 800c802:	0010      	.short	0x0010
 800c804:	024300b7 	.word	0x024300b7
 800c808:	02430140 	.word	0x02430140
 800c80c:	02430243 	.word	0x02430243
 800c810:	024301d7 	.word	0x024301d7
 800c814:	02430243 	.word	0x02430243
 800c818:	02430243 	.word	0x02430243
 800c81c:	02430243 	.word	0x02430243
 800c820:	023d      	.short	0x023d
 800c822:	4b73      	ldr	r3, [pc, #460]	; (800c9f0 <_DrawBitmap+0x260>)
 800c824:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800c826:	681b      	ldr	r3, [r3, #0]
 800c828:	68ac      	ldr	r4, [r5, #8]
 800c82a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800c82c:	7c1b      	ldrb	r3, [r3, #16]
 800c82e:	682f      	ldr	r7, [r5, #0]
 800c830:	686d      	ldr	r5, [r5, #4]
 800c832:	9507      	str	r5, [sp, #28]
 800c834:	f8dd a020 	ldr.w	sl, [sp, #32]
 800c838:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800c83a:	f003 0303 	and.w	r3, r3, #3
 800c83e:	2b02      	cmp	r3, #2
 800c840:	44aa      	add	sl, r5
 800c842:	d01b      	beq.n	800c87c <_DrawBitmap+0xec>
 800c844:	2b03      	cmp	r3, #3
 800c846:	d06e      	beq.n	800c926 <_DrawBitmap+0x196>
 800c848:	2b01      	cmp	r3, #1
 800c84a:	d06c      	beq.n	800c926 <_DrawBitmap+0x196>
 800c84c:	9e05      	ldr	r6, [sp, #20]
 800c84e:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 800c852:	f898 1000 	ldrb.w	r1, [r8]
 800c856:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800c85a:	2280      	movs	r2, #128	; 0x80
 800c85c:	412a      	asrs	r2, r5
 800c85e:	4211      	tst	r1, r2
 800c860:	bf16      	itet	ne
 800c862:	9907      	ldrne	r1, [sp, #28]
 800c864:	b2b8      	uxtheq	r0, r7
 800c866:	b288      	uxthne	r0, r1
 800c868:	3501      	adds	r5, #1
 800c86a:	4798      	blx	r3
 800c86c:	2d08      	cmp	r5, #8
 800c86e:	bf04      	itt	eq
 800c870:	f108 0801 	addeq.w	r8, r8, #1
 800c874:	2500      	moveq	r5, #0
 800c876:	3e01      	subs	r6, #1
 800c878:	d1eb      	bne.n	800c852 <_DrawBitmap+0xc2>
 800c87a:	e205      	b.n	800cc88 <_DrawBitmap+0x4f8>
 800c87c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800c87e:	9506      	str	r5, [sp, #24]
 800c880:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 800c884:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800c888:	f8cd a00c 	str.w	sl, [sp, #12]
 800c88c:	2500      	movs	r5, #0
 800c88e:	4656      	mov	r6, sl
 800c890:	462b      	mov	r3, r5
 800c892:	9f06      	ldr	r7, [sp, #24]
 800c894:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800c898:	783a      	ldrb	r2, [r7, #0]
 800c89a:	fa4c fc08 	asr.w	ip, ip, r8
 800c89e:	ea12 0c0c 	ands.w	ip, r2, ip
 800c8a2:	d00b      	beq.n	800c8bc <_DrawBitmap+0x12c>
 800c8a4:	b913      	cbnz	r3, 800c8ac <_DrawBitmap+0x11c>
 800c8a6:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 800c8aa:	9603      	str	r6, [sp, #12]
 800c8ac:	9f07      	ldr	r7, [sp, #28]
 800c8ae:	f8a9 7000 	strh.w	r7, [r9]
 800c8b2:	3501      	adds	r5, #1
 800c8b4:	f109 0902 	add.w	r9, r9, #2
 800c8b8:	2301      	movs	r3, #1
 800c8ba:	e017      	b.n	800c8ec <_DrawBitmap+0x15c>
 800c8bc:	2b01      	cmp	r3, #1
 800c8be:	d114      	bne.n	800c8ea <_DrawBitmap+0x15a>
 800c8c0:	f8cd b000 	str.w	fp, [sp]
 800c8c4:	f8cd c010 	str.w	ip, [sp, #16]
 800c8c8:	4620      	mov	r0, r4
 800c8ca:	9903      	ldr	r1, [sp, #12]
 800c8cc:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800c8d0:	465a      	mov	r2, fp
 800c8d2:	1e73      	subs	r3, r6, #1
 800c8d4:	47b8      	blx	r7
 800c8d6:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800c8da:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800c8dc:	4629      	mov	r1, r5
 800c8de:	4798      	blx	r3
 800c8e0:	f8dd c010 	ldr.w	ip, [sp, #16]
 800c8e4:	4665      	mov	r5, ip
 800c8e6:	4663      	mov	r3, ip
 800c8e8:	e000      	b.n	800c8ec <_DrawBitmap+0x15c>
 800c8ea:	4663      	mov	r3, ip
 800c8ec:	f108 0801 	add.w	r8, r8, #1
 800c8f0:	f1b8 0f08 	cmp.w	r8, #8
 800c8f4:	f106 0601 	add.w	r6, r6, #1
 800c8f8:	d104      	bne.n	800c904 <_DrawBitmap+0x174>
 800c8fa:	9f06      	ldr	r7, [sp, #24]
 800c8fc:	3701      	adds	r7, #1
 800c8fe:	9706      	str	r7, [sp, #24]
 800c900:	f04f 0800 	mov.w	r8, #0
 800c904:	9a05      	ldr	r2, [sp, #20]
 800c906:	4452      	add	r2, sl
 800c908:	42b2      	cmp	r2, r6
 800c90a:	d1c2      	bne.n	800c892 <_DrawBitmap+0x102>
 800c90c:	9f05      	ldr	r7, [sp, #20]
 800c90e:	1e7b      	subs	r3, r7, #1
 800c910:	4453      	add	r3, sl
 800c912:	2d00      	cmp	r5, #0
 800c914:	f000 81b8 	beq.w	800cc88 <_DrawBitmap+0x4f8>
 800c918:	f8cd b000 	str.w	fp, [sp]
 800c91c:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800c920:	9903      	ldr	r1, [sp, #12]
 800c922:	4620      	mov	r0, r4
 800c924:	e13d      	b.n	800cba2 <_DrawBitmap+0x412>
 800c926:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800c92a:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 800c92c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800c92e:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800c932:	782a      	ldrb	r2, [r5, #0]
 800c934:	2380      	movs	r3, #128	; 0x80
 800c936:	4133      	asrs	r3, r6
 800c938:	44d1      	add	r9, sl
 800c93a:	421a      	tst	r2, r3
 800c93c:	ebc8 0909 	rsb	r9, r8, r9
 800c940:	d00d      	beq.n	800c95e <_DrawBitmap+0x1ce>
 800c942:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 800c946:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c948:	4649      	mov	r1, r9
 800c94a:	465a      	mov	r2, fp
 800c94c:	4798      	blx	r3
 800c94e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c950:	f8d4 70f0 	ldr.w	r7, [r4, #240]	; 0xf0
 800c954:	4043      	eors	r3, r0
 800c956:	4649      	mov	r1, r9
 800c958:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c95a:	465a      	mov	r2, fp
 800c95c:	47b8      	blx	r7
 800c95e:	3601      	adds	r6, #1
 800c960:	2e08      	cmp	r6, #8
 800c962:	bf04      	itt	eq
 800c964:	3501      	addeq	r5, #1
 800c966:	2600      	moveq	r6, #0
 800c968:	f1b8 0801 	subs.w	r8, r8, #1
 800c96c:	d1df      	bne.n	800c92e <_DrawBitmap+0x19e>
 800c96e:	e18b      	b.n	800cc88 <_DrawBitmap+0x4f8>
 800c970:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800c972:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800c974:	68ac      	ldr	r4, [r5, #8]
 800c976:	2f00      	cmp	r7, #0
 800c978:	f000 8186 	beq.w	800cc88 <_DrawBitmap+0x4f8>
 800c97c:	4b1c      	ldr	r3, [pc, #112]	; (800c9f0 <_DrawBitmap+0x260>)
 800c97e:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800c980:	681b      	ldr	r3, [r3, #0]
 800c982:	f895 a000 	ldrb.w	sl, [r5]
 800c986:	7c1b      	ldrb	r3, [r3, #16]
 800c988:	f013 0303 	ands.w	r3, r3, #3
 800c98c:	d011      	beq.n	800c9b2 <_DrawBitmap+0x222>
 800c98e:	2b02      	cmp	r3, #2
 800c990:	f040 817a 	bne.w	800cc88 <_DrawBitmap+0x4f8>
 800c994:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800c996:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800c99a:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800c99c:	9703      	str	r7, [sp, #12]
 800c99e:	44a9      	add	r9, r5
 800c9a0:	46a8      	mov	r8, r5
 800c9a2:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800c9a4:	9507      	str	r5, [sp, #28]
 800c9a6:	2500      	movs	r5, #0
 800c9a8:	f8cd 9018 	str.w	r9, [sp, #24]
 800c9ac:	464e      	mov	r6, r9
 800c9ae:	462b      	mov	r3, r5
 800c9b0:	e040      	b.n	800ca34 <_DrawBitmap+0x2a4>
 800c9b2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800c9b4:	9e05      	ldr	r6, [sp, #20]
 800c9b6:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800c9b8:	f1c5 0303 	rsb	r3, r5, #3
 800c9bc:	005b      	lsls	r3, r3, #1
 800c9be:	f1c3 0206 	rsb	r2, r3, #6
 800c9c2:	21c0      	movs	r1, #192	; 0xc0
 800c9c4:	fa41 f202 	asr.w	r2, r1, r2
 800c9c8:	ea02 020a 	and.w	r2, r2, sl
 800c9cc:	40da      	lsrs	r2, r3
 800c9ce:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800c9d0:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800c9d4:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 800c9d8:	3501      	adds	r5, #1
 800c9da:	4798      	blx	r3
 800c9dc:	2d04      	cmp	r5, #4
 800c9de:	d103      	bne.n	800c9e8 <_DrawBitmap+0x258>
 800c9e0:	f897 a001 	ldrb.w	sl, [r7, #1]
 800c9e4:	2500      	movs	r5, #0
 800c9e6:	3701      	adds	r7, #1
 800c9e8:	3e01      	subs	r6, #1
 800c9ea:	d1e5      	bne.n	800c9b8 <_DrawBitmap+0x228>
 800c9ec:	e14c      	b.n	800cc88 <_DrawBitmap+0x4f8>
 800c9ee:	bf00      	nop
 800c9f0:	20000254 	.word	0x20000254
 800c9f4:	b913      	cbnz	r3, 800c9fc <_DrawBitmap+0x26c>
 800c9f6:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800c9f8:	9703      	str	r7, [sp, #12]
 800c9fa:	9606      	str	r6, [sp, #24]
 800c9fc:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800c9fe:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 800ca02:	9f03      	ldr	r7, [sp, #12]
 800ca04:	803b      	strh	r3, [r7, #0]
 800ca06:	3702      	adds	r7, #2
 800ca08:	3501      	adds	r5, #1
 800ca0a:	9703      	str	r7, [sp, #12]
 800ca0c:	2301      	movs	r3, #1
 800ca0e:	f108 0801 	add.w	r8, r8, #1
 800ca12:	f1b8 0f04 	cmp.w	r8, #4
 800ca16:	f106 0601 	add.w	r6, r6, #1
 800ca1a:	d106      	bne.n	800ca2a <_DrawBitmap+0x29a>
 800ca1c:	9f07      	ldr	r7, [sp, #28]
 800ca1e:	f897 a001 	ldrb.w	sl, [r7, #1]
 800ca22:	3701      	adds	r7, #1
 800ca24:	9707      	str	r7, [sp, #28]
 800ca26:	f04f 0800 	mov.w	r8, #0
 800ca2a:	9a05      	ldr	r2, [sp, #20]
 800ca2c:	444a      	add	r2, r9
 800ca2e:	42b2      	cmp	r2, r6
 800ca30:	f000 80ac 	beq.w	800cb8c <_DrawBitmap+0x3fc>
 800ca34:	f1c8 0203 	rsb	r2, r8, #3
 800ca38:	0052      	lsls	r2, r2, #1
 800ca3a:	f1c2 0106 	rsb	r1, r2, #6
 800ca3e:	f04f 0cc0 	mov.w	ip, #192	; 0xc0
 800ca42:	fa4c fc01 	asr.w	ip, ip, r1
 800ca46:	ea0c 0c0a 	and.w	ip, ip, sl
 800ca4a:	fa3c fc02 	lsrs.w	ip, ip, r2
 800ca4e:	d1d1      	bne.n	800c9f4 <_DrawBitmap+0x264>
 800ca50:	2b01      	cmp	r3, #1
 800ca52:	d114      	bne.n	800ca7e <_DrawBitmap+0x2ee>
 800ca54:	f8cd b000 	str.w	fp, [sp]
 800ca58:	f8cd c010 	str.w	ip, [sp, #16]
 800ca5c:	4620      	mov	r0, r4
 800ca5e:	9906      	ldr	r1, [sp, #24]
 800ca60:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800ca64:	465a      	mov	r2, fp
 800ca66:	1e73      	subs	r3, r6, #1
 800ca68:	47b8      	blx	r7
 800ca6a:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800ca6e:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800ca70:	4629      	mov	r1, r5
 800ca72:	4798      	blx	r3
 800ca74:	f8dd c010 	ldr.w	ip, [sp, #16]
 800ca78:	4665      	mov	r5, ip
 800ca7a:	4663      	mov	r3, ip
 800ca7c:	e7c7      	b.n	800ca0e <_DrawBitmap+0x27e>
 800ca7e:	4663      	mov	r3, ip
 800ca80:	e7c5      	b.n	800ca0e <_DrawBitmap+0x27e>
 800ca82:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800ca84:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800ca86:	68ac      	ldr	r4, [r5, #8]
 800ca88:	2f00      	cmp	r7, #0
 800ca8a:	f000 80fd 	beq.w	800cc88 <_DrawBitmap+0x4f8>
 800ca8e:	4b83      	ldr	r3, [pc, #524]	; (800cc9c <_DrawBitmap+0x50c>)
 800ca90:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800ca92:	681b      	ldr	r3, [r3, #0]
 800ca94:	f895 a000 	ldrb.w	sl, [r5]
 800ca98:	7c1b      	ldrb	r3, [r3, #16]
 800ca9a:	f013 0303 	ands.w	r3, r3, #3
 800ca9e:	d011      	beq.n	800cac4 <_DrawBitmap+0x334>
 800caa0:	2b02      	cmp	r3, #2
 800caa2:	f040 80f1 	bne.w	800cc88 <_DrawBitmap+0x4f8>
 800caa6:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800caa8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800caac:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800caae:	9703      	str	r7, [sp, #12]
 800cab0:	44a9      	add	r9, r5
 800cab2:	46a8      	mov	r8, r5
 800cab4:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800cab6:	9507      	str	r5, [sp, #28]
 800cab8:	2500      	movs	r5, #0
 800caba:	f8cd 9018 	str.w	r9, [sp, #24]
 800cabe:	464e      	mov	r6, r9
 800cac0:	462b      	mov	r3, r5
 800cac2:	e03c      	b.n	800cb3e <_DrawBitmap+0x3ae>
 800cac4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800cac6:	9e05      	ldr	r6, [sp, #20]
 800cac8:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800caca:	f1c5 0301 	rsb	r3, r5, #1
 800cace:	009b      	lsls	r3, r3, #2
 800cad0:	f1c3 0204 	rsb	r2, r3, #4
 800cad4:	21f0      	movs	r1, #240	; 0xf0
 800cad6:	fa41 f202 	asr.w	r2, r1, r2
 800cada:	ea02 020a 	and.w	r2, r2, sl
 800cade:	40da      	lsrs	r2, r3
 800cae0:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800cae2:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800cae6:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 800caea:	3501      	adds	r5, #1
 800caec:	4798      	blx	r3
 800caee:	2d02      	cmp	r5, #2
 800caf0:	d103      	bne.n	800cafa <_DrawBitmap+0x36a>
 800caf2:	f897 a001 	ldrb.w	sl, [r7, #1]
 800caf6:	2500      	movs	r5, #0
 800caf8:	3701      	adds	r7, #1
 800cafa:	3e01      	subs	r6, #1
 800cafc:	d1e5      	bne.n	800caca <_DrawBitmap+0x33a>
 800cafe:	e0c3      	b.n	800cc88 <_DrawBitmap+0x4f8>
 800cb00:	b913      	cbnz	r3, 800cb08 <_DrawBitmap+0x378>
 800cb02:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800cb04:	9703      	str	r7, [sp, #12]
 800cb06:	9606      	str	r6, [sp, #24]
 800cb08:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800cb0a:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 800cb0e:	9f03      	ldr	r7, [sp, #12]
 800cb10:	803b      	strh	r3, [r7, #0]
 800cb12:	3702      	adds	r7, #2
 800cb14:	3501      	adds	r5, #1
 800cb16:	9703      	str	r7, [sp, #12]
 800cb18:	2301      	movs	r3, #1
 800cb1a:	f108 0801 	add.w	r8, r8, #1
 800cb1e:	f1b8 0f02 	cmp.w	r8, #2
 800cb22:	f106 0601 	add.w	r6, r6, #1
 800cb26:	d106      	bne.n	800cb36 <_DrawBitmap+0x3a6>
 800cb28:	9f07      	ldr	r7, [sp, #28]
 800cb2a:	f897 a001 	ldrb.w	sl, [r7, #1]
 800cb2e:	3701      	adds	r7, #1
 800cb30:	9707      	str	r7, [sp, #28]
 800cb32:	f04f 0800 	mov.w	r8, #0
 800cb36:	9a05      	ldr	r2, [sp, #20]
 800cb38:	444a      	add	r2, r9
 800cb3a:	42b2      	cmp	r2, r6
 800cb3c:	d026      	beq.n	800cb8c <_DrawBitmap+0x3fc>
 800cb3e:	f1c8 0201 	rsb	r2, r8, #1
 800cb42:	0092      	lsls	r2, r2, #2
 800cb44:	f1c2 0104 	rsb	r1, r2, #4
 800cb48:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 800cb4c:	fa4c fc01 	asr.w	ip, ip, r1
 800cb50:	ea0c 0c0a 	and.w	ip, ip, sl
 800cb54:	fa3c fc02 	lsrs.w	ip, ip, r2
 800cb58:	d1d2      	bne.n	800cb00 <_DrawBitmap+0x370>
 800cb5a:	2b01      	cmp	r3, #1
 800cb5c:	d114      	bne.n	800cb88 <_DrawBitmap+0x3f8>
 800cb5e:	f8cd b000 	str.w	fp, [sp]
 800cb62:	f8cd c010 	str.w	ip, [sp, #16]
 800cb66:	4620      	mov	r0, r4
 800cb68:	9906      	ldr	r1, [sp, #24]
 800cb6a:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800cb6e:	465a      	mov	r2, fp
 800cb70:	1e73      	subs	r3, r6, #1
 800cb72:	47b8      	blx	r7
 800cb74:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800cb78:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800cb7a:	4629      	mov	r1, r5
 800cb7c:	4798      	blx	r3
 800cb7e:	f8dd c010 	ldr.w	ip, [sp, #16]
 800cb82:	4665      	mov	r5, ip
 800cb84:	4663      	mov	r3, ip
 800cb86:	e7c8      	b.n	800cb1a <_DrawBitmap+0x38a>
 800cb88:	4663      	mov	r3, ip
 800cb8a:	e7c6      	b.n	800cb1a <_DrawBitmap+0x38a>
 800cb8c:	9f05      	ldr	r7, [sp, #20]
 800cb8e:	1e7b      	subs	r3, r7, #1
 800cb90:	444b      	add	r3, r9
 800cb92:	2d00      	cmp	r5, #0
 800cb94:	d078      	beq.n	800cc88 <_DrawBitmap+0x4f8>
 800cb96:	f8cd b000 	str.w	fp, [sp]
 800cb9a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800cb9e:	9906      	ldr	r1, [sp, #24]
 800cba0:	4620      	mov	r0, r4
 800cba2:	465a      	mov	r2, fp
 800cba4:	47b0      	blx	r6
 800cba6:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800cbaa:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800cbac:	4629      	mov	r1, r5
 800cbae:	e06a      	b.n	800cc86 <_DrawBitmap+0x4f6>
 800cbb0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800cbb2:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800cbb4:	68ac      	ldr	r4, [r5, #8]
 800cbb6:	2f00      	cmp	r7, #0
 800cbb8:	d066      	beq.n	800cc88 <_DrawBitmap+0x4f8>
 800cbba:	4b38      	ldr	r3, [pc, #224]	; (800cc9c <_DrawBitmap+0x50c>)
 800cbbc:	681b      	ldr	r3, [r3, #0]
 800cbbe:	7c1b      	ldrb	r3, [r3, #16]
 800cbc0:	f013 0303 	ands.w	r3, r3, #3
 800cbc4:	d009      	beq.n	800cbda <_DrawBitmap+0x44a>
 800cbc6:	2b02      	cmp	r3, #2
 800cbc8:	d15e      	bne.n	800cc88 <_DrawBitmap+0x4f8>
 800cbca:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800cbce:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 800cbd2:	2600      	movs	r6, #0
 800cbd4:	464f      	mov	r7, r9
 800cbd6:	4633      	mov	r3, r6
 800cbd8:	e022      	b.n	800cc20 <_DrawBitmap+0x490>
 800cbda:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800cbdc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800cbde:	9f05      	ldr	r7, [sp, #20]
 800cbe0:	443b      	add	r3, r7
 800cbe2:	1b5b      	subs	r3, r3, r5
 800cbe4:	2b00      	cmp	r3, #0
 800cbe6:	dd4f      	ble.n	800cc88 <_DrawBitmap+0x4f8>
 800cbe8:	f815 2b01 	ldrb.w	r2, [r5], #1
 800cbec:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800cbee:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800cbf2:	f837 0022 	ldrh.w	r0, [r7, r2, lsl #2]
 800cbf6:	4798      	blx	r3
 800cbf8:	e7f0      	b.n	800cbdc <_DrawBitmap+0x44c>
 800cbfa:	b913      	cbnz	r3, 800cc02 <_DrawBitmap+0x472>
 800cbfc:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 800cc00:	46b9      	mov	r9, r7
 800cc02:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800cc04:	f855 302a 	ldr.w	r3, [r5, sl, lsl #2]
 800cc08:	f8a8 3000 	strh.w	r3, [r8]
 800cc0c:	3601      	adds	r6, #1
 800cc0e:	f108 0802 	add.w	r8, r8, #2
 800cc12:	2301      	movs	r3, #1
 800cc14:	9a08      	ldr	r2, [sp, #32]
 800cc16:	9d05      	ldr	r5, [sp, #20]
 800cc18:	3701      	adds	r7, #1
 800cc1a:	442a      	add	r2, r5
 800cc1c:	42ba      	cmp	r2, r7
 800cc1e:	d01c      	beq.n	800cc5a <_DrawBitmap+0x4ca>
 800cc20:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800cc22:	9808      	ldr	r0, [sp, #32]
 800cc24:	1a2a      	subs	r2, r5, r0
 800cc26:	f812 a007 	ldrb.w	sl, [r2, r7]
 800cc2a:	f1ba 0f00 	cmp.w	sl, #0
 800cc2e:	d1e4      	bne.n	800cbfa <_DrawBitmap+0x46a>
 800cc30:	2b01      	cmp	r3, #1
 800cc32:	d110      	bne.n	800cc56 <_DrawBitmap+0x4c6>
 800cc34:	f8cd b000 	str.w	fp, [sp]
 800cc38:	4620      	mov	r0, r4
 800cc3a:	4649      	mov	r1, r9
 800cc3c:	465a      	mov	r2, fp
 800cc3e:	1e7b      	subs	r3, r7, #1
 800cc40:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 800cc44:	47a8      	blx	r5
 800cc46:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800cc4a:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800cc4c:	4631      	mov	r1, r6
 800cc4e:	4798      	blx	r3
 800cc50:	4656      	mov	r6, sl
 800cc52:	4653      	mov	r3, sl
 800cc54:	e7de      	b.n	800cc14 <_DrawBitmap+0x484>
 800cc56:	4653      	mov	r3, sl
 800cc58:	e7dc      	b.n	800cc14 <_DrawBitmap+0x484>
 800cc5a:	9f08      	ldr	r7, [sp, #32]
 800cc5c:	1e6b      	subs	r3, r5, #1
 800cc5e:	443b      	add	r3, r7
 800cc60:	b196      	cbz	r6, 800cc88 <_DrawBitmap+0x4f8>
 800cc62:	f8cd b000 	str.w	fp, [sp]
 800cc66:	4620      	mov	r0, r4
 800cc68:	4649      	mov	r1, r9
 800cc6a:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 800cc6e:	465a      	mov	r2, fp
 800cc70:	47a8      	blx	r5
 800cc72:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800cc76:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800cc78:	4631      	mov	r1, r6
 800cc7a:	e004      	b.n	800cc86 <_DrawBitmap+0x4f6>
 800cc7c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800cc7e:	9819      	ldr	r0, [sp, #100]	; 0x64
 800cc80:	f8d5 3138 	ldr.w	r3, [r5, #312]	; 0x138
 800cc84:	9905      	ldr	r1, [sp, #20]
 800cc86:	4798      	blx	r3
 800cc88:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800cc8a:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800cc8c:	442f      	add	r7, r5
 800cc8e:	9719      	str	r7, [sp, #100]	; 0x64
 800cc90:	f10b 0b01 	add.w	fp, fp, #1
 800cc94:	e5a7      	b.n	800c7e6 <_DrawBitmap+0x56>
 800cc96:	b00d      	add	sp, #52	; 0x34
 800cc98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc9c:	20000254 	.word	0x20000254

0800cca0 <GUIDRV_FlexColor_SetMode16bppC0B16>:
 800cca0:	b510      	push	{r4, lr}
 800cca2:	4604      	mov	r4, r0
 800cca4:	f000 fa58 	bl	800d158 <GUIDRV_FlexColor__InitOnce>
 800cca8:	68a4      	ldr	r4, [r4, #8]
 800ccaa:	4b10      	ldr	r3, [pc, #64]	; (800ccec <GUIDRV_FlexColor_SetMode16bppC0B16+0x4c>)
 800ccac:	f8c4 30e4 	str.w	r3, [r4, #228]	; 0xe4
 800ccb0:	4b0f      	ldr	r3, [pc, #60]	; (800ccf0 <GUIDRV_FlexColor_SetMode16bppC0B16+0x50>)
 800ccb2:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 800ccb6:	4b0f      	ldr	r3, [pc, #60]	; (800ccf4 <GUIDRV_FlexColor_SetMode16bppC0B16+0x54>)
 800ccb8:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800ccbc:	4b0e      	ldr	r3, [pc, #56]	; (800ccf8 <GUIDRV_FlexColor_SetMode16bppC0B16+0x58>)
 800ccbe:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
 800ccc2:	4b0e      	ldr	r3, [pc, #56]	; (800ccfc <GUIDRV_FlexColor_SetMode16bppC0B16+0x5c>)
 800ccc4:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 800ccc8:	4b0d      	ldr	r3, [pc, #52]	; (800cd00 <GUIDRV_FlexColor_SetMode16bppC0B16+0x60>)
 800ccca:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 800ccce:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
 800ccd2:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 800ccd6:	4620      	mov	r0, r4
 800ccd8:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800ccdc:	2110      	movs	r1, #16
 800ccde:	4798      	blx	r3
 800cce0:	2310      	movs	r3, #16
 800cce2:	63a3      	str	r3, [r4, #56]	; 0x38
 800cce4:	4b07      	ldr	r3, [pc, #28]	; (800cd04 <GUIDRV_FlexColor_SetMode16bppC0B16+0x64>)
 800cce6:	6463      	str	r3, [r4, #68]	; 0x44
 800cce8:	bd10      	pop	{r4, pc}
 800ccea:	bf00      	nop
 800ccec:	0800c791 	.word	0x0800c791
 800ccf0:	0800c691 	.word	0x0800c691
 800ccf4:	0800d0a7 	.word	0x0800d0a7
 800ccf8:	0800d017 	.word	0x0800d017
 800ccfc:	0800c679 	.word	0x0800c679
 800cd00:	0800c683 	.word	0x0800c683
 800cd04:	08017868 	.word	0x08017868

0800cd08 <_Log2PhysX_X0Y0S0>:
 800cd08:	4608      	mov	r0, r1
 800cd0a:	4770      	bx	lr

0800cd0c <_Log2PhysX_X1Y0S0>:
 800cd0c:	6800      	ldr	r0, [r0, #0]
 800cd0e:	1a40      	subs	r0, r0, r1
 800cd10:	3801      	subs	r0, #1
 800cd12:	4770      	bx	lr

0800cd14 <_Log2PhysX_X0Y1S0>:
 800cd14:	4608      	mov	r0, r1
 800cd16:	4770      	bx	lr

0800cd18 <_Log2PhysX_X1Y1S0>:
 800cd18:	6800      	ldr	r0, [r0, #0]
 800cd1a:	1a40      	subs	r0, r0, r1
 800cd1c:	3801      	subs	r0, #1
 800cd1e:	4770      	bx	lr

0800cd20 <_Log2PhysX_X0Y0S1>:
 800cd20:	4610      	mov	r0, r2
 800cd22:	4770      	bx	lr

0800cd24 <_Log2PhysX_X1Y0S1>:
 800cd24:	6840      	ldr	r0, [r0, #4]
 800cd26:	1a80      	subs	r0, r0, r2
 800cd28:	3801      	subs	r0, #1
 800cd2a:	4770      	bx	lr

0800cd2c <_Log2PhysX_X0Y1S1>:
 800cd2c:	4610      	mov	r0, r2
 800cd2e:	4770      	bx	lr

0800cd30 <_Log2PhysX_X1Y1S1>:
 800cd30:	6840      	ldr	r0, [r0, #4]
 800cd32:	1a80      	subs	r0, r0, r2
 800cd34:	3801      	subs	r0, #1
 800cd36:	4770      	bx	lr

0800cd38 <_Log2PhysY_X0Y0S0>:
 800cd38:	4610      	mov	r0, r2
 800cd3a:	4770      	bx	lr

0800cd3c <_Log2PhysY_X1Y0S0>:
 800cd3c:	4610      	mov	r0, r2
 800cd3e:	4770      	bx	lr

0800cd40 <_Log2PhysY_X0Y1S0>:
 800cd40:	6840      	ldr	r0, [r0, #4]
 800cd42:	1a80      	subs	r0, r0, r2
 800cd44:	3801      	subs	r0, #1
 800cd46:	4770      	bx	lr

0800cd48 <_Log2PhysY_X1Y1S0>:
 800cd48:	6840      	ldr	r0, [r0, #4]
 800cd4a:	1a80      	subs	r0, r0, r2
 800cd4c:	3801      	subs	r0, #1
 800cd4e:	4770      	bx	lr

0800cd50 <_Log2PhysY_X0Y0S1>:
 800cd50:	4608      	mov	r0, r1
 800cd52:	4770      	bx	lr

0800cd54 <_Log2PhysY_X1Y0S1>:
 800cd54:	4608      	mov	r0, r1
 800cd56:	4770      	bx	lr

0800cd58 <_Log2PhysY_X0Y1S1>:
 800cd58:	6800      	ldr	r0, [r0, #0]
 800cd5a:	1a40      	subs	r0, r0, r1
 800cd5c:	3801      	subs	r0, #1
 800cd5e:	4770      	bx	lr

0800cd60 <_Log2PhysY_X1Y1S1>:
 800cd60:	6800      	ldr	r0, [r0, #0]
 800cd62:	1a40      	subs	r0, r0, r1
 800cd64:	3801      	subs	r0, #1
 800cd66:	4770      	bx	lr

0800cd68 <_SetPixelIndex>:
 800cd68:	b510      	push	{r4, lr}
 800cd6a:	6884      	ldr	r4, [r0, #8]
 800cd6c:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 800cd70:	47a0      	blx	r4
 800cd72:	bd10      	pop	{r4, pc}

0800cd74 <_GetPixelIndex>:
 800cd74:	b508      	push	{r3, lr}
 800cd76:	6883      	ldr	r3, [r0, #8]
 800cd78:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800cd7c:	4798      	blx	r3
 800cd7e:	bd08      	pop	{r3, pc}

0800cd80 <_XorPixel>:
 800cd80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cd82:	4604      	mov	r4, r0
 800cd84:	460f      	mov	r7, r1
 800cd86:	4616      	mov	r6, r2
 800cd88:	6885      	ldr	r5, [r0, #8]
 800cd8a:	f7ff fff3 	bl	800cd74 <_GetPixelIndex>
 800cd8e:	9001      	str	r0, [sp, #4]
 800cd90:	f8dd e004 	ldr.w	lr, [sp, #4]
 800cd94:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800cd96:	4620      	mov	r0, r4
 800cd98:	4639      	mov	r1, r7
 800cd9a:	4632      	mov	r2, r6
 800cd9c:	ea8e 0303 	eor.w	r3, lr, r3
 800cda0:	f7ff ffe2 	bl	800cd68 <_SetPixelIndex>
 800cda4:	b003      	add	sp, #12
 800cda6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cda8 <_DrawHLine>:
 800cda8:	b513      	push	{r0, r1, r4, lr}
 800cdaa:	6884      	ldr	r4, [r0, #8]
 800cdac:	9200      	str	r2, [sp, #0]
 800cdae:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 800cdb2:	47a0      	blx	r4
 800cdb4:	b002      	add	sp, #8
 800cdb6:	bd10      	pop	{r4, pc}

0800cdb8 <_DrawVLine>:
 800cdb8:	b513      	push	{r0, r1, r4, lr}
 800cdba:	6884      	ldr	r4, [r0, #8]
 800cdbc:	9300      	str	r3, [sp, #0]
 800cdbe:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 800cdc2:	460b      	mov	r3, r1
 800cdc4:	47a0      	blx	r4
 800cdc6:	b002      	add	sp, #8
 800cdc8:	bd10      	pop	{r4, pc}

0800cdca <_FillRect>:
 800cdca:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cdcc:	9c06      	ldr	r4, [sp, #24]
 800cdce:	6885      	ldr	r5, [r0, #8]
 800cdd0:	9400      	str	r4, [sp, #0]
 800cdd2:	f8d5 40e8 	ldr.w	r4, [r5, #232]	; 0xe8
 800cdd6:	47a0      	blx	r4
 800cdd8:	b003      	add	sp, #12
 800cdda:	bd30      	pop	{r4, r5, pc}

0800cddc <_DrawBitmap>:
 800cddc:	b530      	push	{r4, r5, lr}
 800cdde:	b087      	sub	sp, #28
 800cde0:	6885      	ldr	r5, [r0, #8]
 800cde2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800cde4:	9400      	str	r4, [sp, #0]
 800cde6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800cde8:	9401      	str	r4, [sp, #4]
 800cdea:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800cdec:	9402      	str	r4, [sp, #8]
 800cdee:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800cdf0:	9403      	str	r4, [sp, #12]
 800cdf2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800cdf4:	9404      	str	r4, [sp, #16]
 800cdf6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800cdf8:	9405      	str	r4, [sp, #20]
 800cdfa:	f8d5 40e4 	ldr.w	r4, [r5, #228]	; 0xe4
 800cdfe:	47a0      	blx	r4
 800ce00:	b007      	add	sp, #28
 800ce02:	bd30      	pop	{r4, r5, pc}

0800ce04 <_GetDevFunc_SetRect>:
 800ce04:	4770      	bx	lr
	...

0800ce08 <_GetDevFunc_SetRectOutside>:
 800ce08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ce0a:	9e07      	ldr	r6, [sp, #28]
 800ce0c:	6884      	ldr	r4, [r0, #8]
 800ce0e:	4d0c      	ldr	r5, [pc, #48]	; (800ce40 <_GetDevFunc_SetRectOutside+0x38>)
 800ce10:	b176      	cbz	r6, 800ce30 <_GetDevFunc_SetRectOutside+0x28>
 800ce12:	6828      	ldr	r0, [r5, #0]
 800ce14:	b988      	cbnz	r0, 800ce3a <_GetDevFunc_SetRectOutside+0x32>
 800ce16:	9806      	ldr	r0, [sp, #24]
 800ce18:	9000      	str	r0, [sp, #0]
 800ce1a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800ce1e:	4620      	mov	r0, r4
 800ce20:	47b0      	blx	r6
 800ce22:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
 800ce26:	602b      	str	r3, [r5, #0]
 800ce28:	4b06      	ldr	r3, [pc, #24]	; (800ce44 <_GetDevFunc_SetRectOutside+0x3c>)
 800ce2a:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800ce2e:	e004      	b.n	800ce3a <_GetDevFunc_SetRectOutside+0x32>
 800ce30:	682b      	ldr	r3, [r5, #0]
 800ce32:	b113      	cbz	r3, 800ce3a <_GetDevFunc_SetRectOutside+0x32>
 800ce34:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800ce38:	602e      	str	r6, [r5, #0]
 800ce3a:	b002      	add	sp, #8
 800ce3c:	bd70      	pop	{r4, r5, r6, pc}
 800ce3e:	bf00      	nop
 800ce40:	200194a8 	.word	0x200194a8
 800ce44:	0800ce05 	.word	0x0800ce05

0800ce48 <_ReadPixelCust_16bpp>:
 800ce48:	b508      	push	{r3, lr}
 800ce4a:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800ce4c:	f8d0 30d4 	ldr.w	r3, [r0, #212]	; 0xd4
 800ce50:	6990      	ldr	r0, [r2, #24]
 800ce52:	4798      	blx	r3
 800ce54:	bd08      	pop	{r3, pc}

0800ce56 <_ReadPixelCust_18bpp>:
 800ce56:	b508      	push	{r3, lr}
 800ce58:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800ce5a:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
 800ce5e:	6990      	ldr	r0, [r2, #24]
 800ce60:	4798      	blx	r3
 800ce62:	bd08      	pop	{r3, pc}

0800ce64 <_ReadRectCust_16bpp>:
 800ce64:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ce68:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800ce6a:	6884      	ldr	r4, [r0, #8]
 800ce6c:	9500      	str	r5, [sp, #0]
 800ce6e:	4617      	mov	r7, r2
 800ce70:	4620      	mov	r0, r4
 800ce72:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800ce76:	4699      	mov	r9, r3
 800ce78:	4688      	mov	r8, r1
 800ce7a:	1bed      	subs	r5, r5, r7
 800ce7c:	47b0      	blx	r6
 800ce7e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800ce80:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 800ce84:	6988      	ldr	r0, [r1, #24]
 800ce86:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ce88:	ebc8 0809 	rsb	r8, r8, r9
 800ce8c:	1c6a      	adds	r2, r5, #1
 800ce8e:	fb08 2202 	mla	r2, r8, r2, r2
 800ce92:	4798      	blx	r3
 800ce94:	b003      	add	sp, #12
 800ce96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800ce9a <_ReadRectCust_18bpp>:
 800ce9a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ce9e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800cea0:	6884      	ldr	r4, [r0, #8]
 800cea2:	9500      	str	r5, [sp, #0]
 800cea4:	4617      	mov	r7, r2
 800cea6:	4620      	mov	r0, r4
 800cea8:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800ceac:	4699      	mov	r9, r3
 800ceae:	4688      	mov	r8, r1
 800ceb0:	1bed      	subs	r5, r5, r7
 800ceb2:	47b0      	blx	r6
 800ceb4:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800ceb6:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 800ceba:	6988      	ldr	r0, [r1, #24]
 800cebc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800cebe:	ebc8 0809 	rsb	r8, r8, r9
 800cec2:	1c6a      	adds	r2, r5, #1
 800cec4:	fb08 2202 	mla	r2, r8, r2, r2
 800cec8:	4798      	blx	r3
 800ceca:	b003      	add	sp, #12
 800cecc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800ced0 <_GetDevFunc>:
 800ced0:	3901      	subs	r1, #1
 800ced2:	2917      	cmp	r1, #23
 800ced4:	d824      	bhi.n	800cf20 <_GetDevFunc+0x50>
 800ced6:	e8df f001 	tbb	[pc, r1]
 800ceda:	2310      	.short	0x2310
 800cedc:	23232323 	.word	0x23232323
 800cee0:	0c232323 	.word	0x0c232323
 800cee4:	23150e25 	.word	0x23150e25
 800cee8:	23232323 	.word	0x23232323
 800ceec:	1f232323 	.word	0x1f232323
 800cef0:	211a      	.short	0x211a
 800cef2:	480d      	ldr	r0, [pc, #52]	; (800cf28 <_GetDevFunc+0x58>)
 800cef4:	4770      	bx	lr
 800cef6:	480d      	ldr	r0, [pc, #52]	; (800cf2c <_GetDevFunc+0x5c>)
 800cef8:	4770      	bx	lr
 800cefa:	6803      	ldr	r3, [r0, #0]
 800cefc:	689b      	ldr	r3, [r3, #8]
 800cefe:	f8d3 00fc 	ldr.w	r0, [r3, #252]	; 0xfc
 800cf02:	4770      	bx	lr
 800cf04:	6803      	ldr	r3, [r0, #0]
 800cf06:	689b      	ldr	r3, [r3, #8]
 800cf08:	f8d3 00f4 	ldr.w	r0, [r3, #244]	; 0xf4
 800cf0c:	4770      	bx	lr
 800cf0e:	6803      	ldr	r3, [r0, #0]
 800cf10:	689b      	ldr	r3, [r3, #8]
 800cf12:	f8d3 00f8 	ldr.w	r0, [r3, #248]	; 0xf8
 800cf16:	4770      	bx	lr
 800cf18:	4805      	ldr	r0, [pc, #20]	; (800cf30 <_GetDevFunc+0x60>)
 800cf1a:	4770      	bx	lr
 800cf1c:	4805      	ldr	r0, [pc, #20]	; (800cf34 <_GetDevFunc+0x64>)
 800cf1e:	4770      	bx	lr
 800cf20:	2000      	movs	r0, #0
 800cf22:	4770      	bx	lr
 800cf24:	4804      	ldr	r0, [pc, #16]	; (800cf38 <_GetDevFunc+0x68>)
 800cf26:	4770      	bx	lr
 800cf28:	0800d287 	.word	0x0800d287
 800cf2c:	0800d229 	.word	0x0800d229
 800cf30:	0800d18d 	.word	0x0800d18d
 800cf34:	0800ce09 	.word	0x0800ce09
 800cf38:	0800d273 	.word	0x0800d273

0800cf3c <_GetDevProp>:
 800cf3c:	3901      	subs	r1, #1
 800cf3e:	6880      	ldr	r0, [r0, #8]
 800cf40:	290d      	cmp	r1, #13
 800cf42:	d823      	bhi.n	800cf8c <_GetDevProp+0x50>
 800cf44:	e8df f001 	tbb	[pc, r1]
 800cf48:	0f0d0b09 	.word	0x0f0d0b09
 800cf4c:	11222222 	.word	0x11222222
 800cf50:	13252507 	.word	0x13252507
 800cf54:	1d18      	.short	0x1d18
 800cf56:	2000      	movs	r0, #0
 800cf58:	4770      	bx	lr
 800cf5a:	6800      	ldr	r0, [r0, #0]
 800cf5c:	4770      	bx	lr
 800cf5e:	6840      	ldr	r0, [r0, #4]
 800cf60:	4770      	bx	lr
 800cf62:	6880      	ldr	r0, [r0, #8]
 800cf64:	4770      	bx	lr
 800cf66:	68c0      	ldr	r0, [r0, #12]
 800cf68:	4770      	bx	lr
 800cf6a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800cf6c:	4770      	bx	lr
 800cf6e:	b188      	cbz	r0, 800cf94 <_GetDevProp+0x58>
 800cf70:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800cf72:	f000 0001 	and.w	r0, r0, #1
 800cf76:	4770      	bx	lr
 800cf78:	b160      	cbz	r0, 800cf94 <_GetDevProp+0x58>
 800cf7a:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800cf7c:	f3c0 0040 	ubfx	r0, r0, #1, #1
 800cf80:	4770      	bx	lr
 800cf82:	b138      	cbz	r0, 800cf94 <_GetDevProp+0x58>
 800cf84:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800cf86:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800cf8a:	4770      	bx	lr
 800cf8c:	f04f 30ff 	mov.w	r0, #4294967295
 800cf90:	4770      	bx	lr
 800cf92:	2001      	movs	r0, #1
 800cf94:	4770      	bx	lr

0800cf96 <_GetDevData>:
 800cf96:	6883      	ldr	r3, [r0, #8]
 800cf98:	2901      	cmp	r1, #1
 800cf9a:	bf0c      	ite	eq
 800cf9c:	6c58      	ldreq	r0, [r3, #68]	; 0x44
 800cf9e:	2000      	movne	r0, #0
 800cfa0:	4770      	bx	lr

0800cfa2 <_GetRect>:
 800cfa2:	6883      	ldr	r3, [r0, #8]
 800cfa4:	2200      	movs	r2, #0
 800cfa6:	800a      	strh	r2, [r1, #0]
 800cfa8:	804a      	strh	r2, [r1, #2]
 800cfaa:	681a      	ldr	r2, [r3, #0]
 800cfac:	685b      	ldr	r3, [r3, #4]
 800cfae:	3a01      	subs	r2, #1
 800cfb0:	3b01      	subs	r3, #1
 800cfb2:	808a      	strh	r2, [r1, #4]
 800cfb4:	80cb      	strh	r3, [r1, #6]
 800cfb6:	4770      	bx	lr

0800cfb8 <GUIDRV_FlexColor__SetLog2Phys>:
 800cfb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cfba:	4d10      	ldr	r5, [pc, #64]	; (800cffc <GUIDRV_FlexColor__SetLog2Phys+0x44>)
 800cfbc:	462e      	mov	r6, r5
 800cfbe:	4607      	mov	r7, r0
 800cfc0:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800cfc2:	b091      	sub	sp, #68	; 0x44
 800cfc4:	466c      	mov	r4, sp
 800cfc6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800cfc8:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800cfcc:	3520      	adds	r5, #32
 800cfce:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800cfd2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800cfd4:	ac08      	add	r4, sp, #32
 800cfd6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800cfd8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800cfdc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800cfe0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cfe2:	aa10      	add	r2, sp, #64	; 0x40
 800cfe4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800cfe8:	f853 2c40 	ldr.w	r2, [r3, #-64]
 800cfec:	f8c7 2100 	str.w	r2, [r7, #256]	; 0x100
 800cff0:	f853 3c20 	ldr.w	r3, [r3, #-32]
 800cff4:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800cff8:	b011      	add	sp, #68	; 0x44
 800cffa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cffc:	08016378 	.word	0x08016378

0800d000 <_SetOrg>:
 800d000:	b507      	push	{r0, r1, r2, lr}
 800d002:	6980      	ldr	r0, [r0, #24]
 800d004:	e88d 0006 	stmia.w	sp, {r1, r2}
 800d008:	2103      	movs	r1, #3
 800d00a:	466a      	mov	r2, sp
 800d00c:	f7f9 fcf0 	bl	80069f0 <LCD_X_DisplayDriver>
 800d010:	b003      	add	sp, #12
 800d012:	f85d fb04 	ldr.w	pc, [sp], #4

0800d016 <GUIDRV_FlexColor__SetPixelIndexNoCache>:
 800d016:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d01a:	6884      	ldr	r4, [r0, #8]
 800d01c:	4698      	mov	r8, r3
 800d01e:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800d020:	079b      	lsls	r3, r3, #30
 800d022:	4689      	mov	r9, r1
 800d024:	4617      	mov	r7, r2
 800d026:	d532      	bpl.n	800d08e <GUIDRV_FlexColor__SetPixelIndexNoCache+0x78>
 800d028:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800d02c:	4620      	mov	r0, r4
 800d02e:	4798      	blx	r3
 800d030:	f8d4 5104 	ldr.w	r5, [r4, #260]	; 0x104
 800d034:	4606      	mov	r6, r0
 800d036:	463a      	mov	r2, r7
 800d038:	4620      	mov	r0, r4
 800d03a:	4649      	mov	r1, r9
 800d03c:	47a8      	blx	r5
 800d03e:	6923      	ldr	r3, [r4, #16]
 800d040:	69a2      	ldr	r2, [r4, #24]
 800d042:	429e      	cmp	r6, r3
 800d044:	bfac      	ite	ge
 800d046:	2300      	movge	r3, #0
 800d048:	2301      	movlt	r3, #1
 800d04a:	4296      	cmp	r6, r2
 800d04c:	bfd4      	ite	le
 800d04e:	461a      	movle	r2, r3
 800d050:	f043 0201 	orrgt.w	r2, r3, #1
 800d054:	6963      	ldr	r3, [r4, #20]
 800d056:	4298      	cmp	r0, r3
 800d058:	bfac      	ite	ge
 800d05a:	4613      	movge	r3, r2
 800d05c:	f042 0301 	orrlt.w	r3, r2, #1
 800d060:	4605      	mov	r5, r0
 800d062:	b913      	cbnz	r3, 800d06a <GUIDRV_FlexColor__SetPixelIndexNoCache+0x54>
 800d064:	69e3      	ldr	r3, [r4, #28]
 800d066:	4298      	cmp	r0, r3
 800d068:	dd0a      	ble.n	800d080 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x6a>
 800d06a:	6862      	ldr	r2, [r4, #4]
 800d06c:	6823      	ldr	r3, [r4, #0]
 800d06e:	3a01      	subs	r2, #1
 800d070:	9200      	str	r2, [sp, #0]
 800d072:	2100      	movs	r1, #0
 800d074:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800d078:	4620      	mov	r0, r4
 800d07a:	460a      	mov	r2, r1
 800d07c:	3b01      	subs	r3, #1
 800d07e:	47b8      	blx	r7
 800d080:	f8d4 70ac 	ldr.w	r7, [r4, #172]	; 0xac
 800d084:	4620      	mov	r0, r4
 800d086:	4631      	mov	r1, r6
 800d088:	462a      	mov	r2, r5
 800d08a:	47b8      	blx	r7
 800d08c:	e003      	b.n	800d096 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x80>
 800d08e:	f8d4 50ac 	ldr.w	r5, [r4, #172]	; 0xac
 800d092:	4620      	mov	r0, r4
 800d094:	47a8      	blx	r5
 800d096:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800d09a:	4620      	mov	r0, r4
 800d09c:	4641      	mov	r1, r8
 800d09e:	4798      	blx	r3
 800d0a0:	b003      	add	sp, #12
 800d0a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800d0a6 <GUIDRV_FlexColor__GetPixelIndexNoCache>:
 800d0a6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d0a8:	6884      	ldr	r4, [r0, #8]
 800d0aa:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800d0ac:	079b      	lsls	r3, r3, #30
 800d0ae:	460f      	mov	r7, r1
 800d0b0:	4616      	mov	r6, r2
 800d0b2:	d545      	bpl.n	800d140 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x9a>
 800d0b4:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800d0b8:	4620      	mov	r0, r4
 800d0ba:	4798      	blx	r3
 800d0bc:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800d0c0:	4632      	mov	r2, r6
 800d0c2:	4605      	mov	r5, r0
 800d0c4:	4639      	mov	r1, r7
 800d0c6:	4620      	mov	r0, r4
 800d0c8:	4798      	blx	r3
 800d0ca:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800d0ce:	4606      	mov	r6, r0
 800d0d0:	b11b      	cbz	r3, 800d0da <GUIDRV_FlexColor__GetPixelIndexNoCache+0x34>
 800d0d2:	4620      	mov	r0, r4
 800d0d4:	2101      	movs	r1, #1
 800d0d6:	2200      	movs	r2, #0
 800d0d8:	4798      	blx	r3
 800d0da:	6923      	ldr	r3, [r4, #16]
 800d0dc:	69a2      	ldr	r2, [r4, #24]
 800d0de:	429d      	cmp	r5, r3
 800d0e0:	bfac      	ite	ge
 800d0e2:	2300      	movge	r3, #0
 800d0e4:	2301      	movlt	r3, #1
 800d0e6:	4295      	cmp	r5, r2
 800d0e8:	bfd4      	ite	le
 800d0ea:	461a      	movle	r2, r3
 800d0ec:	f043 0201 	orrgt.w	r2, r3, #1
 800d0f0:	6963      	ldr	r3, [r4, #20]
 800d0f2:	429e      	cmp	r6, r3
 800d0f4:	bfac      	ite	ge
 800d0f6:	4613      	movge	r3, r2
 800d0f8:	f042 0301 	orrlt.w	r3, r2, #1
 800d0fc:	b913      	cbnz	r3, 800d104 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x5e>
 800d0fe:	69e3      	ldr	r3, [r4, #28]
 800d100:	429e      	cmp	r6, r3
 800d102:	dd0a      	ble.n	800d11a <GUIDRV_FlexColor__GetPixelIndexNoCache+0x74>
 800d104:	6862      	ldr	r2, [r4, #4]
 800d106:	6823      	ldr	r3, [r4, #0]
 800d108:	3a01      	subs	r2, #1
 800d10a:	9200      	str	r2, [sp, #0]
 800d10c:	2100      	movs	r1, #0
 800d10e:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800d112:	4620      	mov	r0, r4
 800d114:	460a      	mov	r2, r1
 800d116:	3b01      	subs	r3, #1
 800d118:	47b8      	blx	r7
 800d11a:	4629      	mov	r1, r5
 800d11c:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800d120:	4620      	mov	r0, r4
 800d122:	4632      	mov	r2, r6
 800d124:	4798      	blx	r3
 800d126:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 800d12a:	4620      	mov	r0, r4
 800d12c:	4798      	blx	r3
 800d12e:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800d132:	4605      	mov	r5, r0
 800d134:	b16b      	cbz	r3, 800d152 <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 800d136:	4620      	mov	r0, r4
 800d138:	2100      	movs	r1, #0
 800d13a:	2201      	movs	r2, #1
 800d13c:	4798      	blx	r3
 800d13e:	e008      	b.n	800d152 <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 800d140:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800d144:	4620      	mov	r0, r4
 800d146:	4798      	blx	r3
 800d148:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 800d14c:	4620      	mov	r0, r4
 800d14e:	4798      	blx	r3
 800d150:	4605      	mov	r5, r0
 800d152:	4628      	mov	r0, r5
 800d154:	b003      	add	sp, #12
 800d156:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d158 <GUIDRV_FlexColor__InitOnce>:
 800d158:	b538      	push	{r3, r4, r5, lr}
 800d15a:	6885      	ldr	r5, [r0, #8]
 800d15c:	4604      	mov	r4, r0
 800d15e:	b995      	cbnz	r5, 800d186 <GUIDRV_FlexColor__InitOnce+0x2e>
 800d160:	f44f 70ba 	mov.w	r0, #372	; 0x174
 800d164:	f003 fac4 	bl	80106f0 <GUI_ALLOC_GetFixedBlock>
 800d168:	f44f 72ba 	mov.w	r2, #372	; 0x174
 800d16c:	60a0      	str	r0, [r4, #8]
 800d16e:	4629      	mov	r1, r5
 800d170:	f000 fdf4 	bl	800dd5c <GUI__memset>
 800d174:	68a3      	ldr	r3, [r4, #8]
 800d176:	2202      	movs	r2, #2
 800d178:	84da      	strh	r2, [r3, #38]	; 0x26
 800d17a:	2201      	movs	r2, #1
 800d17c:	621a      	str	r2, [r3, #32]
 800d17e:	4a02      	ldr	r2, [pc, #8]	; (800d188 <GUIDRV_FlexColor__InitOnce+0x30>)
 800d180:	641c      	str	r4, [r3, #64]	; 0x40
 800d182:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
 800d186:	bd38      	pop	{r3, r4, r5, pc}
 800d188:	0800cfb9 	.word	0x0800cfb9

0800d18c <_SetDevFunc>:
 800d18c:	b570      	push	{r4, r5, r6, lr}
 800d18e:	4606      	mov	r6, r0
 800d190:	460d      	mov	r5, r1
 800d192:	4614      	mov	r4, r2
 800d194:	f7ff ffe0 	bl	800d158 <GUIDRV_FlexColor__InitOnce>
 800d198:	68b3      	ldr	r3, [r6, #8]
 800d19a:	2b00      	cmp	r3, #0
 800d19c:	d03b      	beq.n	800d216 <_SetDevFunc+0x8a>
 800d19e:	2d26      	cmp	r5, #38	; 0x26
 800d1a0:	d002      	beq.n	800d1a8 <_SetDevFunc+0x1c>
 800d1a2:	2d27      	cmp	r5, #39	; 0x27
 800d1a4:	d016      	beq.n	800d1d4 <_SetDevFunc+0x48>
 800d1a6:	bd70      	pop	{r4, r5, r6, pc}
 800d1a8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800d1aa:	2a10      	cmp	r2, #16
 800d1ac:	d002      	beq.n	800d1b4 <_SetDevFunc+0x28>
 800d1ae:	2a12      	cmp	r2, #18
 800d1b0:	d008      	beq.n	800d1c4 <_SetDevFunc+0x38>
 800d1b2:	bd70      	pop	{r4, r5, r6, pc}
 800d1b4:	4a18      	ldr	r2, [pc, #96]	; (800d218 <_SetDevFunc+0x8c>)
 800d1b6:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
 800d1ba:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800d1be:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 800d1c2:	bd70      	pop	{r4, r5, r6, pc}
 800d1c4:	4a15      	ldr	r2, [pc, #84]	; (800d21c <_SetDevFunc+0x90>)
 800d1c6:	f8c3 40d8 	str.w	r4, [r3, #216]	; 0xd8
 800d1ca:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800d1ce:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800d1d2:	bd70      	pop	{r4, r5, r6, pc}
 800d1d4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800d1d6:	2a10      	cmp	r2, #16
 800d1d8:	d002      	beq.n	800d1e0 <_SetDevFunc+0x54>
 800d1da:	2a12      	cmp	r2, #18
 800d1dc:	d00e      	beq.n	800d1fc <_SetDevFunc+0x70>
 800d1de:	bd70      	pop	{r4, r5, r6, pc}
 800d1e0:	b13c      	cbz	r4, 800d1f2 <_SetDevFunc+0x66>
 800d1e2:	4a0f      	ldr	r2, [pc, #60]	; (800d220 <_SetDevFunc+0x94>)
 800d1e4:	f8c3 40dc 	str.w	r4, [r3, #220]	; 0xdc
 800d1e8:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 800d1ec:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 800d1f0:	bd70      	pop	{r4, r5, r6, pc}
 800d1f2:	f8c3 40c8 	str.w	r4, [r3, #200]	; 0xc8
 800d1f6:	f8c3 40c4 	str.w	r4, [r3, #196]	; 0xc4
 800d1fa:	bd70      	pop	{r4, r5, r6, pc}
 800d1fc:	b13c      	cbz	r4, 800d20e <_SetDevFunc+0x82>
 800d1fe:	4a09      	ldr	r2, [pc, #36]	; (800d224 <_SetDevFunc+0x98>)
 800d200:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
 800d204:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 800d208:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 800d20c:	bd70      	pop	{r4, r5, r6, pc}
 800d20e:	f8c3 40cc 	str.w	r4, [r3, #204]	; 0xcc
 800d212:	f8c3 40d0 	str.w	r4, [r3, #208]	; 0xd0
 800d216:	bd70      	pop	{r4, r5, r6, pc}
 800d218:	0800ce49 	.word	0x0800ce49
 800d21c:	0800ce57 	.word	0x0800ce57
 800d220:	0800ce65 	.word	0x0800ce65
 800d224:	0800ce9b 	.word	0x0800ce9b

0800d228 <_GetDevFunc_Init>:
 800d228:	b538      	push	{r3, r4, r5, lr}
 800d22a:	4605      	mov	r5, r0
 800d22c:	f7ff ff94 	bl	800d158 <GUIDRV_FlexColor__InitOnce>
 800d230:	68ac      	ldr	r4, [r5, #8]
 800d232:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800d236:	f003 fa5b 	bl	80106f0 <GUI_ALLOC_GetFixedBlock>
 800d23a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d23c:	66a0      	str	r0, [r4, #104]	; 0x68
 800d23e:	3307      	adds	r3, #7
 800d240:	10d8      	asrs	r0, r3, #3
 800d242:	6823      	ldr	r3, [r4, #0]
 800d244:	4358      	muls	r0, r3
 800d246:	f003 fa53 	bl	80106f0 <GUI_ALLOC_GetFixedBlock>
 800d24a:	2101      	movs	r1, #1
 800d24c:	2200      	movs	r2, #0
 800d24e:	66e0      	str	r0, [r4, #108]	; 0x6c
 800d250:	69a8      	ldr	r0, [r5, #24]
 800d252:	f7f9 fbcd 	bl	80069f0 <LCD_X_DisplayDriver>
 800d256:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800d25a:	4605      	mov	r5, r0
 800d25c:	4620      	mov	r0, r4
 800d25e:	4798      	blx	r3
 800d260:	4620      	mov	r0, r4
 800d262:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 800d266:	4798      	blx	r3
 800d268:	2d00      	cmp	r5, #0
 800d26a:	bfd4      	ite	le
 800d26c:	2000      	movle	r0, #0
 800d26e:	2001      	movgt	r0, #1
 800d270:	bd38      	pop	{r3, r4, r5, pc}

0800d272 <_GetDevFunc_SetSize>:
 800d272:	b570      	push	{r4, r5, r6, lr}
 800d274:	4604      	mov	r4, r0
 800d276:	460d      	mov	r5, r1
 800d278:	4616      	mov	r6, r2
 800d27a:	f7ff ff6d 	bl	800d158 <GUIDRV_FlexColor__InitOnce>
 800d27e:	68a3      	ldr	r3, [r4, #8]
 800d280:	e883 0060 	stmia.w	r3, {r5, r6}
 800d284:	bd70      	pop	{r4, r5, r6, pc}

0800d286 <_GetDevFunc_SetVSize>:
 800d286:	b570      	push	{r4, r5, r6, lr}
 800d288:	4604      	mov	r4, r0
 800d28a:	460d      	mov	r5, r1
 800d28c:	4616      	mov	r6, r2
 800d28e:	f7ff ff63 	bl	800d158 <GUIDRV_FlexColor__InitOnce>
 800d292:	68a3      	ldr	r3, [r4, #8]
 800d294:	609d      	str	r5, [r3, #8]
 800d296:	60de      	str	r6, [r3, #12]
 800d298:	bd70      	pop	{r4, r5, r6, pc}

0800d29a <GUIDRV_FlexColor_Config>:
 800d29a:	b538      	push	{r3, r4, r5, lr}
 800d29c:	4605      	mov	r5, r0
 800d29e:	460c      	mov	r4, r1
 800d2a0:	f7ff ff5a 	bl	800d158 <GUIDRV_FlexColor__InitOnce>
 800d2a4:	68ab      	ldr	r3, [r5, #8]
 800d2a6:	6822      	ldr	r2, [r4, #0]
 800d2a8:	62da      	str	r2, [r3, #44]	; 0x2c
 800d2aa:	6862      	ldr	r2, [r4, #4]
 800d2ac:	631a      	str	r2, [r3, #48]	; 0x30
 800d2ae:	68a2      	ldr	r2, [r4, #8]
 800d2b0:	635a      	str	r2, [r3, #52]	; 0x34
 800d2b2:	0752      	lsls	r2, r2, #29
 800d2b4:	d507      	bpl.n	800d2c6 <GUIDRV_FlexColor_Config+0x2c>
 800d2b6:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d2ba:	601a      	str	r2, [r3, #0]
 800d2bc:	6059      	str	r1, [r3, #4]
 800d2be:	68da      	ldr	r2, [r3, #12]
 800d2c0:	6899      	ldr	r1, [r3, #8]
 800d2c2:	60d9      	str	r1, [r3, #12]
 800d2c4:	609a      	str	r2, [r3, #8]
 800d2c6:	89a2      	ldrh	r2, [r4, #12]
 800d2c8:	849a      	strh	r2, [r3, #36]	; 0x24
 800d2ca:	6922      	ldr	r2, [r4, #16]
 800d2cc:	b112      	cbz	r2, 800d2d4 <GUIDRV_FlexColor_Config+0x3a>
 800d2ce:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800d2d2:	621a      	str	r2, [r3, #32]
 800d2d4:	bd38      	pop	{r3, r4, r5, pc}

0800d2d6 <GUIDRV_FlexColor_SetFunc>:
 800d2d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d2da:	4604      	mov	r4, r0
 800d2dc:	461f      	mov	r7, r3
 800d2de:	4616      	mov	r6, r2
 800d2e0:	4688      	mov	r8, r1
 800d2e2:	f7ff ff39 	bl	800d158 <GUIDRV_FlexColor__InitOnce>
 800d2e6:	68a5      	ldr	r5, [r4, #8]
 800d2e8:	4641      	mov	r1, r8
 800d2ea:	2268      	movs	r2, #104	; 0x68
 800d2ec:	f505 7086 	add.w	r0, r5, #268	; 0x10c
 800d2f0:	f008 ff43 	bl	801617a <memcpy>
 800d2f4:	4620      	mov	r0, r4
 800d2f6:	47b0      	blx	r6
 800d2f8:	4620      	mov	r0, r4
 800d2fa:	47b8      	blx	r7
 800d2fc:	6923      	ldr	r3, [r4, #16]
 800d2fe:	689b      	ldr	r3, [r3, #8]
 800d300:	4798      	blx	r3
 800d302:	62a8      	str	r0, [r5, #40]	; 0x28
 800d304:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d308 <LCD_UpdateColorIndices>:
 800d308:	b510      	push	{r4, lr}
 800d30a:	4c07      	ldr	r4, [pc, #28]	; (800d328 <LCD_UpdateColorIndices+0x20>)
 800d30c:	6823      	ldr	r3, [r4, #0]
 800d30e:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800d310:	f000 fc8e 	bl	800dc30 <LCD_Color2Index>
 800d314:	f000 fcac 	bl	800dc70 <LCD_SetColorIndex>
 800d318:	6823      	ldr	r3, [r4, #0]
 800d31a:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800d31c:	f000 fc88 	bl	800dc30 <LCD_Color2Index>
 800d320:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d324:	f000 bcc0 	b.w	800dca8 <LCD_SetBkColorIndex>
 800d328:	20000254 	.word	0x20000254

0800d32c <LCD_SetClipRectEx>:
 800d32c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d32e:	4c09      	ldr	r4, [pc, #36]	; (800d354 <LCD_SetClipRectEx+0x28>)
 800d330:	6823      	ldr	r3, [r4, #0]
 800d332:	7c5a      	ldrb	r2, [r3, #17]
 800d334:	4b08      	ldr	r3, [pc, #32]	; (800d358 <LCD_SetClipRectEx+0x2c>)
 800d336:	4605      	mov	r5, r0
 800d338:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800d33c:	68c2      	ldr	r2, [r0, #12]
 800d33e:	4669      	mov	r1, sp
 800d340:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800d342:	4790      	blx	r2
 800d344:	6820      	ldr	r0, [r4, #0]
 800d346:	4629      	mov	r1, r5
 800d348:	466a      	mov	r2, sp
 800d34a:	3008      	adds	r0, #8
 800d34c:	f000 fdf6 	bl	800df3c <GUI__IntersectRects>
 800d350:	b003      	add	sp, #12
 800d352:	bd30      	pop	{r4, r5, pc}
 800d354:	20000254 	.word	0x20000254
 800d358:	2001b39c 	.word	0x2001b39c

0800d35c <LCD_SetVSizeEx>:
 800d35c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d35e:	460d      	mov	r5, r1
 800d360:	4614      	mov	r4, r2
 800d362:	f002 fb2b 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800d366:	9001      	str	r0, [sp, #4]
 800d368:	b908      	cbnz	r0, 800d36e <LCD_SetVSizeEx+0x12>
 800d36a:	2001      	movs	r0, #1
 800d36c:	e00c      	b.n	800d388 <LCD_SetVSizeEx+0x2c>
 800d36e:	68c3      	ldr	r3, [r0, #12]
 800d370:	210a      	movs	r1, #10
 800d372:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d374:	a801      	add	r0, sp, #4
 800d376:	4798      	blx	r3
 800d378:	4603      	mov	r3, r0
 800d37a:	2800      	cmp	r0, #0
 800d37c:	d0f5      	beq.n	800d36a <LCD_SetVSizeEx+0xe>
 800d37e:	9801      	ldr	r0, [sp, #4]
 800d380:	4629      	mov	r1, r5
 800d382:	4622      	mov	r2, r4
 800d384:	4798      	blx	r3
 800d386:	2000      	movs	r0, #0
 800d388:	b003      	add	sp, #12
 800d38a:	bd30      	pop	{r4, r5, pc}

0800d38c <LCD_SetSizeEx>:
 800d38c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d38e:	460d      	mov	r5, r1
 800d390:	4614      	mov	r4, r2
 800d392:	f002 fb13 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800d396:	9001      	str	r0, [sp, #4]
 800d398:	b908      	cbnz	r0, 800d39e <LCD_SetSizeEx+0x12>
 800d39a:	2001      	movs	r0, #1
 800d39c:	e00c      	b.n	800d3b8 <LCD_SetSizeEx+0x2c>
 800d39e:	68c3      	ldr	r3, [r0, #12]
 800d3a0:	210b      	movs	r1, #11
 800d3a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d3a4:	a801      	add	r0, sp, #4
 800d3a6:	4798      	blx	r3
 800d3a8:	4603      	mov	r3, r0
 800d3aa:	2800      	cmp	r0, #0
 800d3ac:	d0f5      	beq.n	800d39a <LCD_SetSizeEx+0xe>
 800d3ae:	9801      	ldr	r0, [sp, #4]
 800d3b0:	4629      	mov	r1, r5
 800d3b2:	4622      	mov	r2, r4
 800d3b4:	4798      	blx	r3
 800d3b6:	2000      	movs	r0, #0
 800d3b8:	b003      	add	sp, #12
 800d3ba:	bd30      	pop	{r4, r5, pc}

0800d3bc <LCD_SetPosEx>:
 800d3bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d3be:	460d      	mov	r5, r1
 800d3c0:	4614      	mov	r4, r2
 800d3c2:	f002 fafb 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800d3c6:	9001      	str	r0, [sp, #4]
 800d3c8:	b908      	cbnz	r0, 800d3ce <LCD_SetPosEx+0x12>
 800d3ca:	2001      	movs	r0, #1
 800d3cc:	e00c      	b.n	800d3e8 <LCD_SetPosEx+0x2c>
 800d3ce:	68c3      	ldr	r3, [r0, #12]
 800d3d0:	2103      	movs	r1, #3
 800d3d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d3d4:	a801      	add	r0, sp, #4
 800d3d6:	4798      	blx	r3
 800d3d8:	4603      	mov	r3, r0
 800d3da:	2800      	cmp	r0, #0
 800d3dc:	d0f5      	beq.n	800d3ca <LCD_SetPosEx+0xe>
 800d3de:	9801      	ldr	r0, [sp, #4]
 800d3e0:	4629      	mov	r1, r5
 800d3e2:	4622      	mov	r2, r4
 800d3e4:	4798      	blx	r3
 800d3e6:	2000      	movs	r0, #0
 800d3e8:	b003      	add	sp, #12
 800d3ea:	bd30      	pop	{r4, r5, pc}

0800d3ec <LCD_SetLUTEntryEx>:
 800d3ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d3ee:	460d      	mov	r5, r1
 800d3f0:	4614      	mov	r4, r2
 800d3f2:	f002 fae3 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800d3f6:	9001      	str	r0, [sp, #4]
 800d3f8:	b908      	cbnz	r0, 800d3fe <LCD_SetLUTEntryEx+0x12>
 800d3fa:	2001      	movs	r0, #1
 800d3fc:	e00c      	b.n	800d418 <LCD_SetLUTEntryEx+0x2c>
 800d3fe:	68c3      	ldr	r3, [r0, #12]
 800d400:	2110      	movs	r1, #16
 800d402:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d404:	a801      	add	r0, sp, #4
 800d406:	4798      	blx	r3
 800d408:	4603      	mov	r3, r0
 800d40a:	2800      	cmp	r0, #0
 800d40c:	d0f5      	beq.n	800d3fa <LCD_SetLUTEntryEx+0xe>
 800d40e:	9801      	ldr	r0, [sp, #4]
 800d410:	4629      	mov	r1, r5
 800d412:	4622      	mov	r2, r4
 800d414:	4798      	blx	r3
 800d416:	2000      	movs	r0, #0
 800d418:	b003      	add	sp, #12
 800d41a:	bd30      	pop	{r4, r5, pc}

0800d41c <LCD_GetPosEx>:
 800d41c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d41e:	460d      	mov	r5, r1
 800d420:	4614      	mov	r4, r2
 800d422:	f002 facb 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800d426:	9001      	str	r0, [sp, #4]
 800d428:	b908      	cbnz	r0, 800d42e <LCD_GetPosEx+0x12>
 800d42a:	2001      	movs	r0, #1
 800d42c:	e00c      	b.n	800d448 <LCD_GetPosEx+0x2c>
 800d42e:	68c3      	ldr	r3, [r0, #12]
 800d430:	2104      	movs	r1, #4
 800d432:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d434:	a801      	add	r0, sp, #4
 800d436:	4798      	blx	r3
 800d438:	4603      	mov	r3, r0
 800d43a:	2800      	cmp	r0, #0
 800d43c:	d0f5      	beq.n	800d42a <LCD_GetPosEx+0xe>
 800d43e:	9801      	ldr	r0, [sp, #4]
 800d440:	4629      	mov	r1, r5
 800d442:	4622      	mov	r2, r4
 800d444:	4798      	blx	r3
 800d446:	2000      	movs	r0, #0
 800d448:	b003      	add	sp, #12
 800d44a:	bd30      	pop	{r4, r5, pc}

0800d44c <_GetDevProp>:
 800d44c:	2801      	cmp	r0, #1
 800d44e:	b510      	push	{r4, lr}
 800d450:	460c      	mov	r4, r1
 800d452:	dc08      	bgt.n	800d466 <_GetDevProp+0x1a>
 800d454:	f002 fab2 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800d458:	b120      	cbz	r0, 800d464 <_GetDevProp+0x18>
 800d45a:	68c3      	ldr	r3, [r0, #12]
 800d45c:	4621      	mov	r1, r4
 800d45e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d460:	4798      	blx	r3
 800d462:	bd10      	pop	{r4, pc}
 800d464:	bd10      	pop	{r4, pc}
 800d466:	2000      	movs	r0, #0
 800d468:	bd10      	pop	{r4, pc}

0800d46a <_GetMaxValue>:
 800d46a:	b538      	push	{r3, r4, r5, lr}
 800d46c:	4604      	mov	r4, r0
 800d46e:	4621      	mov	r1, r4
 800d470:	2001      	movs	r0, #1
 800d472:	f7ff ffeb 	bl	800d44c <_GetDevProp>
 800d476:	4621      	mov	r1, r4
 800d478:	4605      	mov	r5, r0
 800d47a:	2000      	movs	r0, #0
 800d47c:	f7ff ffe6 	bl	800d44c <_GetDevProp>
 800d480:	42a8      	cmp	r0, r5
 800d482:	bfb8      	it	lt
 800d484:	4628      	movlt	r0, r5
 800d486:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 800d48a:	bd38      	pop	{r3, r4, r5, pc}

0800d48c <LCD_GetXSizeEx>:
 800d48c:	2101      	movs	r1, #1
 800d48e:	f7ff bfdd 	b.w	800d44c <_GetDevProp>

0800d492 <LCD_GetYSizeEx>:
 800d492:	2102      	movs	r1, #2
 800d494:	f7ff bfda 	b.w	800d44c <_GetDevProp>

0800d498 <LCD_GetVXSizeEx>:
 800d498:	2103      	movs	r1, #3
 800d49a:	f7ff bfd7 	b.w	800d44c <_GetDevProp>

0800d49e <LCD_GetVYSizeEx>:
 800d49e:	2104      	movs	r1, #4
 800d4a0:	f7ff bfd4 	b.w	800d44c <_GetDevProp>

0800d4a4 <LCD_GetBitsPerPixelEx>:
 800d4a4:	2108      	movs	r1, #8
 800d4a6:	f7ff bfd1 	b.w	800d44c <_GetDevProp>

0800d4aa <LCD_GetNumColorsEx>:
 800d4aa:	2109      	movs	r1, #9
 800d4ac:	f7ff bfce 	b.w	800d44c <_GetDevProp>

0800d4b0 <LCD_GetXSize>:
 800d4b0:	4b02      	ldr	r3, [pc, #8]	; (800d4bc <LCD_GetXSize+0xc>)
 800d4b2:	681b      	ldr	r3, [r3, #0]
 800d4b4:	7c58      	ldrb	r0, [r3, #17]
 800d4b6:	f7ff bfe9 	b.w	800d48c <LCD_GetXSizeEx>
 800d4ba:	bf00      	nop
 800d4bc:	20000254 	.word	0x20000254

0800d4c0 <LCD_GetYSize>:
 800d4c0:	4b02      	ldr	r3, [pc, #8]	; (800d4cc <LCD_GetYSize+0xc>)
 800d4c2:	681b      	ldr	r3, [r3, #0]
 800d4c4:	7c58      	ldrb	r0, [r3, #17]
 800d4c6:	f7ff bfe4 	b.w	800d492 <LCD_GetYSizeEx>
 800d4ca:	bf00      	nop
 800d4cc:	20000254 	.word	0x20000254

0800d4d0 <LCD_GetNumColors>:
 800d4d0:	4b02      	ldr	r3, [pc, #8]	; (800d4dc <LCD_GetNumColors+0xc>)
 800d4d2:	681b      	ldr	r3, [r3, #0]
 800d4d4:	7c58      	ldrb	r0, [r3, #17]
 800d4d6:	f7ff bfe8 	b.w	800d4aa <LCD_GetNumColorsEx>
 800d4da:	bf00      	nop
 800d4dc:	20000254 	.word	0x20000254

0800d4e0 <GUI_GetBitsPerPixelEx>:
 800d4e0:	b508      	push	{r3, lr}
 800d4e2:	4b04      	ldr	r3, [pc, #16]	; (800d4f4 <GUI_GetBitsPerPixelEx+0x14>)
 800d4e4:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800d4e8:	68c3      	ldr	r3, [r0, #12]
 800d4ea:	2108      	movs	r1, #8
 800d4ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d4ee:	4798      	blx	r3
 800d4f0:	bd08      	pop	{r3, pc}
 800d4f2:	bf00      	nop
 800d4f4:	2001b39c 	.word	0x2001b39c

0800d4f8 <LCD_GetPaletteEx>:
 800d4f8:	b508      	push	{r3, lr}
 800d4fa:	f002 fa5f 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800d4fe:	b120      	cbz	r0, 800d50a <LCD_GetPaletteEx+0x12>
 800d500:	68c3      	ldr	r3, [r0, #12]
 800d502:	2102      	movs	r1, #2
 800d504:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d506:	4798      	blx	r3
 800d508:	bd08      	pop	{r3, pc}
 800d50a:	bd08      	pop	{r3, pc}

0800d50c <LCD_GetPalette>:
 800d50c:	4b02      	ldr	r3, [pc, #8]	; (800d518 <LCD_GetPalette+0xc>)
 800d50e:	681b      	ldr	r3, [r3, #0]
 800d510:	7c58      	ldrb	r0, [r3, #17]
 800d512:	f7ff bff1 	b.w	800d4f8 <LCD_GetPaletteEx>
 800d516:	bf00      	nop
 800d518:	20000254 	.word	0x20000254

0800d51c <GUI_GetpfIndex2ColorEx>:
 800d51c:	4b02      	ldr	r3, [pc, #8]	; (800d528 <GUI_GetpfIndex2ColorEx+0xc>)
 800d51e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800d522:	691b      	ldr	r3, [r3, #16]
 800d524:	6858      	ldr	r0, [r3, #4]
 800d526:	4770      	bx	lr
 800d528:	2001b39c 	.word	0x2001b39c

0800d52c <GUI_GetpfColor2IndexEx>:
 800d52c:	4b02      	ldr	r3, [pc, #8]	; (800d538 <GUI_GetpfColor2IndexEx+0xc>)
 800d52e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800d532:	691b      	ldr	r3, [r3, #16]
 800d534:	6818      	ldr	r0, [r3, #0]
 800d536:	4770      	bx	lr
 800d538:	2001b39c 	.word	0x2001b39c

0800d53c <LCD_GetXSizeMax>:
 800d53c:	2001      	movs	r0, #1
 800d53e:	f7ff bf94 	b.w	800d46a <_GetMaxValue>

0800d542 <LCD_GetYSizeMax>:
 800d542:	2002      	movs	r0, #2
 800d544:	f7ff bf91 	b.w	800d46a <_GetMaxValue>

0800d548 <LCD_GetVXSizeMax>:
 800d548:	2003      	movs	r0, #3
 800d54a:	f7ff bf8e 	b.w	800d46a <_GetMaxValue>
	...

0800d550 <LCD_SetDisplaySize>:
 800d550:	4b02      	ldr	r3, [pc, #8]	; (800d55c <LCD_SetDisplaySize+0xc>)
 800d552:	6018      	str	r0, [r3, #0]
 800d554:	4b02      	ldr	r3, [pc, #8]	; (800d560 <LCD_SetDisplaySize+0x10>)
 800d556:	6019      	str	r1, [r3, #0]
 800d558:	4770      	bx	lr
 800d55a:	bf00      	nop
 800d55c:	200194b0 	.word	0x200194b0
 800d560:	200194ac 	.word	0x200194ac

0800d564 <LCD_GetXSizeDisplay>:
 800d564:	4b01      	ldr	r3, [pc, #4]	; (800d56c <LCD_GetXSizeDisplay+0x8>)
 800d566:	6818      	ldr	r0, [r3, #0]
 800d568:	4770      	bx	lr
 800d56a:	bf00      	nop
 800d56c:	200194b0 	.word	0x200194b0

0800d570 <LCD_GetYSizeDisplay>:
 800d570:	4b01      	ldr	r3, [pc, #4]	; (800d578 <LCD_GetYSizeDisplay+0x8>)
 800d572:	6818      	ldr	r0, [r3, #0]
 800d574:	4770      	bx	lr
 800d576:	bf00      	nop
 800d578:	200194ac 	.word	0x200194ac

0800d57c <LCD__GetBPP>:
 800d57c:	2800      	cmp	r0, #0
 800d57e:	d03b      	beq.n	800d5f8 <LCD__GetBPP+0x7c>
 800d580:	f030 0301 	bics.w	r3, r0, #1
 800d584:	d029      	beq.n	800d5da <LCD__GetBPP+0x5e>
 800d586:	f030 0303 	bics.w	r3, r0, #3
 800d58a:	d028      	beq.n	800d5de <LCD__GetBPP+0x62>
 800d58c:	f030 0307 	bics.w	r3, r0, #7
 800d590:	d027      	beq.n	800d5e2 <LCD__GetBPP+0x66>
 800d592:	f030 030f 	bics.w	r3, r0, #15
 800d596:	d026      	beq.n	800d5e6 <LCD__GetBPP+0x6a>
 800d598:	f030 031f 	bics.w	r3, r0, #31
 800d59c:	d025      	beq.n	800d5ea <LCD__GetBPP+0x6e>
 800d59e:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 800d5a2:	d024      	beq.n	800d5ee <LCD__GetBPP+0x72>
 800d5a4:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 800d5a8:	f023 0301 	bic.w	r3, r3, #1
 800d5ac:	b30b      	cbz	r3, 800d5f2 <LCD__GetBPP+0x76>
 800d5ae:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
 800d5b2:	f023 030f 	bic.w	r3, r3, #15
 800d5b6:	b1e3      	cbz	r3, 800d5f2 <LCD__GetBPP+0x76>
 800d5b8:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
 800d5bc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d5c0:	b1bb      	cbz	r3, 800d5f2 <LCD__GetBPP+0x76>
 800d5c2:	0c03      	lsrs	r3, r0, #16
 800d5c4:	041b      	lsls	r3, r3, #16
 800d5c6:	b1a3      	cbz	r3, 800d5f2 <LCD__GetBPP+0x76>
 800d5c8:	0c83      	lsrs	r3, r0, #18
 800d5ca:	049b      	lsls	r3, r3, #18
 800d5cc:	b19b      	cbz	r3, 800d5f6 <LCD__GetBPP+0x7a>
 800d5ce:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800d5d2:	bf0c      	ite	eq
 800d5d4:	2018      	moveq	r0, #24
 800d5d6:	2020      	movne	r0, #32
 800d5d8:	4770      	bx	lr
 800d5da:	2001      	movs	r0, #1
 800d5dc:	4770      	bx	lr
 800d5de:	2002      	movs	r0, #2
 800d5e0:	4770      	bx	lr
 800d5e2:	2003      	movs	r0, #3
 800d5e4:	4770      	bx	lr
 800d5e6:	2004      	movs	r0, #4
 800d5e8:	4770      	bx	lr
 800d5ea:	2005      	movs	r0, #5
 800d5ec:	4770      	bx	lr
 800d5ee:	2008      	movs	r0, #8
 800d5f0:	4770      	bx	lr
 800d5f2:	2010      	movs	r0, #16
 800d5f4:	4770      	bx	lr
 800d5f6:	2012      	movs	r0, #18
 800d5f8:	4770      	bx	lr

0800d5fa <LCD__GetBPPDevice>:
 800d5fa:	b508      	push	{r3, lr}
 800d5fc:	f7ff ffbe 	bl	800d57c <LCD__GetBPP>
 800d600:	2801      	cmp	r0, #1
 800d602:	d00f      	beq.n	800d624 <LCD__GetBPPDevice+0x2a>
 800d604:	1e83      	subs	r3, r0, #2
 800d606:	2b06      	cmp	r3, #6
 800d608:	d909      	bls.n	800d61e <LCD__GetBPPDevice+0x24>
 800d60a:	f1a0 0309 	sub.w	r3, r0, #9
 800d60e:	2b07      	cmp	r3, #7
 800d610:	d907      	bls.n	800d622 <LCD__GetBPPDevice+0x28>
 800d612:	3811      	subs	r0, #17
 800d614:	2810      	cmp	r0, #16
 800d616:	bf34      	ite	cc
 800d618:	2020      	movcc	r0, #32
 800d61a:	2000      	movcs	r0, #0
 800d61c:	bd08      	pop	{r3, pc}
 800d61e:	2008      	movs	r0, #8
 800d620:	bd08      	pop	{r3, pc}
 800d622:	2010      	movs	r0, #16
 800d624:	bd08      	pop	{r3, pc}
	...

0800d628 <_SetDrawMode>:
 800d628:	b570      	push	{r4, r5, r6, lr}
 800d62a:	4b08      	ldr	r3, [pc, #32]	; (800d64c <_SetDrawMode+0x24>)
 800d62c:	681b      	ldr	r3, [r3, #0]
 800d62e:	7c1a      	ldrb	r2, [r3, #16]
 800d630:	ea80 0102 	eor.w	r1, r0, r2
 800d634:	0749      	lsls	r1, r1, #29
 800d636:	d505      	bpl.n	800d644 <_SetDrawMode+0x1c>
 800d638:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800d63a:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800d63c:	6826      	ldr	r6, [r4, #0]
 800d63e:	680d      	ldr	r5, [r1, #0]
 800d640:	6025      	str	r5, [r4, #0]
 800d642:	600e      	str	r6, [r1, #0]
 800d644:	7418      	strb	r0, [r3, #16]
 800d646:	4610      	mov	r0, r2
 800d648:	bd70      	pop	{r4, r5, r6, pc}
 800d64a:	bf00      	nop
 800d64c:	20000254 	.word	0x20000254

0800d650 <LCD_SetDrawMode>:
 800d650:	b508      	push	{r3, lr}
 800d652:	4b02      	ldr	r3, [pc, #8]	; (800d65c <LCD_SetDrawMode+0xc>)
 800d654:	681b      	ldr	r3, [r3, #0]
 800d656:	689b      	ldr	r3, [r3, #8]
 800d658:	4798      	blx	r3
 800d65a:	bd08      	pop	{r3, pc}
 800d65c:	20000238 	.word	0x20000238

0800d660 <LCD_DrawPixel>:
 800d660:	b538      	push	{r3, r4, r5, lr}
 800d662:	4b14      	ldr	r3, [pc, #80]	; (800d6b4 <LCD_DrawPixel+0x54>)
 800d664:	681b      	ldr	r3, [r3, #0]
 800d666:	460a      	mov	r2, r1
 800d668:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 800d66c:	428a      	cmp	r2, r1
 800d66e:	4604      	mov	r4, r0
 800d670:	db1e      	blt.n	800d6b0 <LCD_DrawPixel+0x50>
 800d672:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800d676:	428a      	cmp	r2, r1
 800d678:	dc1a      	bgt.n	800d6b0 <LCD_DrawPixel+0x50>
 800d67a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 800d67e:	4288      	cmp	r0, r1
 800d680:	db16      	blt.n	800d6b0 <LCD_DrawPixel+0x50>
 800d682:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
 800d686:	4288      	cmp	r0, r1
 800d688:	dc12      	bgt.n	800d6b0 <LCD_DrawPixel+0x50>
 800d68a:	7c19      	ldrb	r1, [r3, #16]
 800d68c:	7c58      	ldrb	r0, [r3, #17]
 800d68e:	f011 0f01 	tst.w	r1, #1
 800d692:	4909      	ldr	r1, [pc, #36]	; (800d6b8 <LCD_DrawPixel+0x58>)
 800d694:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800d698:	d004      	beq.n	800d6a4 <LCD_DrawPixel+0x44>
 800d69a:	68c3      	ldr	r3, [r0, #12]
 800d69c:	4621      	mov	r1, r4
 800d69e:	69db      	ldr	r3, [r3, #28]
 800d6a0:	4798      	blx	r3
 800d6a2:	bd38      	pop	{r3, r4, r5, pc}
 800d6a4:	68c1      	ldr	r1, [r0, #12]
 800d6a6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d6a8:	698d      	ldr	r5, [r1, #24]
 800d6aa:	681b      	ldr	r3, [r3, #0]
 800d6ac:	4621      	mov	r1, r4
 800d6ae:	47a8      	blx	r5
 800d6b0:	bd38      	pop	{r3, r4, r5, pc}
 800d6b2:	bf00      	nop
 800d6b4:	20000254 	.word	0x20000254
 800d6b8:	2001b39c 	.word	0x2001b39c

0800d6bc <LCD_DrawHLine>:
 800d6bc:	b538      	push	{r3, r4, r5, lr}
 800d6be:	4b10      	ldr	r3, [pc, #64]	; (800d700 <LCD_DrawHLine+0x44>)
 800d6c0:	681c      	ldr	r4, [r3, #0]
 800d6c2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d6c6:	4299      	cmp	r1, r3
 800d6c8:	460d      	mov	r5, r1
 800d6ca:	db17      	blt.n	800d6fc <LCD_DrawHLine+0x40>
 800d6cc:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800d6d0:	4299      	cmp	r1, r3
 800d6d2:	dc13      	bgt.n	800d6fc <LCD_DrawHLine+0x40>
 800d6d4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800d6d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d6dc:	4288      	cmp	r0, r1
 800d6de:	bfa8      	it	ge
 800d6e0:	4601      	movge	r1, r0
 800d6e2:	429a      	cmp	r2, r3
 800d6e4:	bfb8      	it	lt
 800d6e6:	4613      	movlt	r3, r2
 800d6e8:	428b      	cmp	r3, r1
 800d6ea:	db07      	blt.n	800d6fc <LCD_DrawHLine+0x40>
 800d6ec:	7c60      	ldrb	r0, [r4, #17]
 800d6ee:	4a05      	ldr	r2, [pc, #20]	; (800d704 <LCD_DrawHLine+0x48>)
 800d6f0:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 800d6f4:	68c2      	ldr	r2, [r0, #12]
 800d6f6:	6894      	ldr	r4, [r2, #8]
 800d6f8:	462a      	mov	r2, r5
 800d6fa:	47a0      	blx	r4
 800d6fc:	bd38      	pop	{r3, r4, r5, pc}
 800d6fe:	bf00      	nop
 800d700:	20000254 	.word	0x20000254
 800d704:	2001b39c 	.word	0x2001b39c

0800d708 <LCD_DrawVLine>:
 800d708:	b538      	push	{r3, r4, r5, lr}
 800d70a:	4b10      	ldr	r3, [pc, #64]	; (800d74c <LCD_DrawVLine+0x44>)
 800d70c:	681c      	ldr	r4, [r3, #0]
 800d70e:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d712:	4605      	mov	r5, r0
 800d714:	429d      	cmp	r5, r3
 800d716:	4610      	mov	r0, r2
 800d718:	db17      	blt.n	800d74a <LCD_DrawVLine+0x42>
 800d71a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d71e:	429d      	cmp	r5, r3
 800d720:	dc13      	bgt.n	800d74a <LCD_DrawVLine+0x42>
 800d722:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800d726:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800d72a:	4291      	cmp	r1, r2
 800d72c:	bfa8      	it	ge
 800d72e:	460a      	movge	r2, r1
 800d730:	4298      	cmp	r0, r3
 800d732:	bfb8      	it	lt
 800d734:	4603      	movlt	r3, r0
 800d736:	4293      	cmp	r3, r2
 800d738:	db07      	blt.n	800d74a <LCD_DrawVLine+0x42>
 800d73a:	7c60      	ldrb	r0, [r4, #17]
 800d73c:	4904      	ldr	r1, [pc, #16]	; (800d750 <LCD_DrawVLine+0x48>)
 800d73e:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800d742:	68c1      	ldr	r1, [r0, #12]
 800d744:	68cc      	ldr	r4, [r1, #12]
 800d746:	4629      	mov	r1, r5
 800d748:	47a0      	blx	r4
 800d74a:	bd38      	pop	{r3, r4, r5, pc}
 800d74c:	20000254 	.word	0x20000254
 800d750:	2001b39c 	.word	0x2001b39c

0800d754 <LCD_FillRect>:
 800d754:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d756:	460e      	mov	r6, r1
 800d758:	4912      	ldr	r1, [pc, #72]	; (800d7a4 <LCD_FillRect+0x50>)
 800d75a:	680c      	ldr	r4, [r1, #0]
 800d75c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800d760:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800d764:	4288      	cmp	r0, r1
 800d766:	bfa8      	it	ge
 800d768:	4601      	movge	r1, r0
 800d76a:	42aa      	cmp	r2, r5
 800d76c:	bfb8      	it	lt
 800d76e:	4615      	movlt	r5, r2
 800d770:	428d      	cmp	r5, r1
 800d772:	db14      	blt.n	800d79e <LCD_FillRect+0x4a>
 800d774:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800d778:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800d77c:	4296      	cmp	r6, r2
 800d77e:	bfa8      	it	ge
 800d780:	4632      	movge	r2, r6
 800d782:	4283      	cmp	r3, r0
 800d784:	bfa8      	it	ge
 800d786:	4603      	movge	r3, r0
 800d788:	4293      	cmp	r3, r2
 800d78a:	db08      	blt.n	800d79e <LCD_FillRect+0x4a>
 800d78c:	7c64      	ldrb	r4, [r4, #17]
 800d78e:	4806      	ldr	r0, [pc, #24]	; (800d7a8 <LCD_FillRect+0x54>)
 800d790:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800d794:	68c4      	ldr	r4, [r0, #12]
 800d796:	9300      	str	r3, [sp, #0]
 800d798:	6924      	ldr	r4, [r4, #16]
 800d79a:	462b      	mov	r3, r5
 800d79c:	47a0      	blx	r4
 800d79e:	b002      	add	sp, #8
 800d7a0:	bd70      	pop	{r4, r5, r6, pc}
 800d7a2:	bf00      	nop
 800d7a4:	20000254 	.word	0x20000254
 800d7a8:	2001b39c 	.word	0x2001b39c

0800d7ac <LCD__DrawBitmap_1bpp>:
 800d7ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7b0:	f8df c1ac 	ldr.w	ip, [pc, #428]	; 800d960 <LCD__DrawBitmap_1bpp+0x1b4>
 800d7b4:	b08f      	sub	sp, #60	; 0x3c
 800d7b6:	f8dc c000 	ldr.w	ip, [ip]
 800d7ba:	9009      	str	r0, [sp, #36]	; 0x24
 800d7bc:	460e      	mov	r6, r1
 800d7be:	4615      	mov	r5, r2
 800d7c0:	469b      	mov	fp, r3
 800d7c2:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800d7c4:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 800d7c8:	f1bc 0f00 	cmp.w	ip, #0
 800d7cc:	d00d      	beq.n	800d7ea <LCD__DrawBitmap_1bpp+0x3e>
 800d7ce:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800d7d0:	9e19      	ldr	r6, [sp, #100]	; 0x64
 800d7d2:	9500      	str	r5, [sp, #0]
 800d7d4:	9601      	str	r6, [sp, #4]
 800d7d6:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800d7d8:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800d7da:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800d7dc:	9702      	str	r7, [sp, #8]
 800d7de:	9503      	str	r5, [sp, #12]
 800d7e0:	9404      	str	r4, [sp, #16]
 800d7e2:	9605      	str	r6, [sp, #20]
 800d7e4:	f8dc 4000 	ldr.w	r4, [ip]
 800d7e8:	e053      	b.n	800d892 <LCD__DrawBitmap_1bpp+0xe6>
 800d7ea:	9f18      	ldr	r7, [sp, #96]	; 0x60
 800d7ec:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d7ee:	ea47 0300 	orr.w	r3, r7, r0
 800d7f2:	2b01      	cmp	r3, #1
 800d7f4:	d14f      	bne.n	800d896 <LCD__DrawBitmap_1bpp+0xea>
 800d7f6:	4b58      	ldr	r3, [pc, #352]	; (800d958 <LCD__DrawBitmap_1bpp+0x1ac>)
 800d7f8:	6818      	ldr	r0, [r3, #0]
 800d7fa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d7fe:	1a51      	subs	r1, r2, r1
 800d800:	2900      	cmp	r1, #0
 800d802:	dd08      	ble.n	800d816 <LCD__DrawBitmap_1bpp+0x6a>
 800d804:	ebc1 030b 	rsb	r3, r1, fp
 800d808:	2b00      	cmp	r3, #0
 800d80a:	f340 80a2 	ble.w	800d952 <LCD__DrawBitmap_1bpp+0x1a6>
 800d80e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800d810:	fb07 4401 	mla	r4, r7, r1, r4
 800d814:	e001      	b.n	800d81a <LCD__DrawBitmap_1bpp+0x6e>
 800d816:	465b      	mov	r3, fp
 800d818:	4632      	mov	r2, r6
 800d81a:	445e      	add	r6, fp
 800d81c:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 800d820:	3e01      	subs	r6, #1
 800d822:	1a76      	subs	r6, r6, r1
 800d824:	2e00      	cmp	r6, #0
 800d826:	dd03      	ble.n	800d830 <LCD__DrawBitmap_1bpp+0x84>
 800d828:	1b9b      	subs	r3, r3, r6
 800d82a:	2b00      	cmp	r3, #0
 800d82c:	f340 8091 	ble.w	800d952 <LCD__DrawBitmap_1bpp+0x1a6>
 800d830:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d832:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 800d836:	4429      	add	r1, r5
 800d838:	3901      	subs	r1, #1
 800d83a:	1b89      	subs	r1, r1, r6
 800d83c:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800d83e:	2900      	cmp	r1, #0
 800d840:	bfc8      	it	gt
 800d842:	ebc1 0505 	rsbgt	r5, r1, r5
 800d846:	ebc8 0106 	rsb	r1, r8, r6
 800d84a:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800d84e:	42b1      	cmp	r1, r6
 800d850:	da0c      	bge.n	800d86c <LCD__DrawBitmap_1bpp+0xc0>
 800d852:	ebc1 0c06 	rsb	ip, r1, r6
 800d856:	eb08 070c 	add.w	r7, r8, ip
 800d85a:	1b8e      	subs	r6, r1, r6
 800d85c:	f02c 0c07 	bic.w	ip, ip, #7
 800d860:	4435      	add	r5, r6
 800d862:	eb04 04e7 	add.w	r4, r4, r7, asr #3
 800d866:	4461      	add	r1, ip
 800d868:	f007 0807 	and.w	r8, r7, #7
 800d86c:	2d00      	cmp	r5, #0
 800d86e:	dd70      	ble.n	800d952 <LCD__DrawBitmap_1bpp+0x1a6>
 800d870:	7c46      	ldrb	r6, [r0, #17]
 800d872:	483a      	ldr	r0, [pc, #232]	; (800d95c <LCD__DrawBitmap_1bpp+0x1b0>)
 800d874:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800d876:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 800d87a:	68c6      	ldr	r6, [r0, #12]
 800d87c:	9701      	str	r7, [sp, #4]
 800d87e:	9403      	str	r4, [sp, #12]
 800d880:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800d882:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800d884:	9300      	str	r3, [sp, #0]
 800d886:	9702      	str	r7, [sp, #8]
 800d888:	f8cd 8010 	str.w	r8, [sp, #16]
 800d88c:	9405      	str	r4, [sp, #20]
 800d88e:	6874      	ldr	r4, [r6, #4]
 800d890:	462b      	mov	r3, r5
 800d892:	47a0      	blx	r4
 800d894:	e05d      	b.n	800d952 <LCD__DrawBitmap_1bpp+0x1a6>
 800d896:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800d898:	f1c7 0708 	rsb	r7, r7, #8
 800d89c:	970c      	str	r7, [sp, #48]	; 0x30
 800d89e:	4667      	mov	r7, ip
 800d8a0:	45dc      	cmp	ip, fp
 800d8a2:	da56      	bge.n	800d952 <LCD__DrawBitmap_1bpp+0x1a6>
 800d8a4:	4b2c      	ldr	r3, [pc, #176]	; (800d958 <LCD__DrawBitmap_1bpp+0x1ac>)
 800d8a6:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d8a8:	681b      	ldr	r3, [r3, #0]
 800d8aa:	4430      	add	r0, r6
 800d8ac:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800d8b0:	900a      	str	r0, [sp, #40]	; 0x28
 800d8b2:	1e41      	subs	r1, r0, #1
 800d8b4:	4291      	cmp	r1, r2
 800d8b6:	910b      	str	r1, [sp, #44]	; 0x2c
 800d8b8:	db45      	blt.n	800d946 <LCD__DrawBitmap_1bpp+0x19a>
 800d8ba:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 800d8be:	429e      	cmp	r6, r3
 800d8c0:	dc41      	bgt.n	800d946 <LCD__DrawBitmap_1bpp+0x19a>
 800d8c2:	f04f 0800 	mov.w	r8, #0
 800d8c6:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800d8ca:	9408      	str	r4, [sp, #32]
 800d8cc:	46c2      	mov	sl, r8
 800d8ce:	45aa      	cmp	sl, r5
 800d8d0:	da39      	bge.n	800d946 <LCD__DrawBitmap_1bpp+0x19a>
 800d8d2:	f1b8 0f00 	cmp.w	r8, #0
 800d8d6:	d105      	bne.n	800d8e4 <LCD__DrawBitmap_1bpp+0x138>
 800d8d8:	9a08      	ldr	r2, [sp, #32]
 800d8da:	7817      	ldrb	r7, [r2, #0]
 800d8dc:	3201      	adds	r2, #1
 800d8de:	9208      	str	r2, [sp, #32]
 800d8e0:	f04f 0808 	mov.w	r8, #8
 800d8e4:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d8e6:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d8e8:	4a1b      	ldr	r2, [pc, #108]	; (800d958 <LCD__DrawBitmap_1bpp+0x1ac>)
 800d8ea:	fa47 f300 	asr.w	r3, r7, r0
 800d8ee:	ebc1 0808 	rsb	r8, r1, r8
 800d8f2:	408f      	lsls	r7, r1
 800d8f4:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 800d8f8:	b2ff      	uxtb	r7, r7
 800d8fa:	d103      	bne.n	800d904 <LCD__DrawBitmap_1bpp+0x158>
 800d8fc:	6810      	ldr	r0, [r2, #0]
 800d8fe:	7c00      	ldrb	r0, [r0, #16]
 800d900:	0780      	lsls	r0, r0, #30
 800d902:	d41b      	bmi.n	800d93c <LCD__DrawBitmap_1bpp+0x190>
 800d904:	6812      	ldr	r2, [r2, #0]
 800d906:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800d908:	6810      	ldr	r0, [r2, #0]
 800d90a:	900d      	str	r0, [sp, #52]	; 0x34
 800d90c:	981d      	ldr	r0, [sp, #116]	; 0x74
 800d90e:	b110      	cbz	r0, 800d916 <LCD__DrawBitmap_1bpp+0x16a>
 800d910:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 800d914:	e000      	b.n	800d918 <LCD__DrawBitmap_1bpp+0x16c>
 800d916:	b2db      	uxtb	r3, r3
 800d918:	9918      	ldr	r1, [sp, #96]	; 0x60
 800d91a:	6013      	str	r3, [r2, #0]
 800d91c:	1e4a      	subs	r2, r1, #1
 800d91e:	444a      	add	r2, r9
 800d920:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d922:	f8cd c01c 	str.w	ip, [sp, #28]
 800d926:	4648      	mov	r0, r9
 800d928:	4631      	mov	r1, r6
 800d92a:	f7ff ff13 	bl	800d754 <LCD_FillRect>
 800d92e:	4b0a      	ldr	r3, [pc, #40]	; (800d958 <LCD__DrawBitmap_1bpp+0x1ac>)
 800d930:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d932:	681b      	ldr	r3, [r3, #0]
 800d934:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800d938:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d93a:	601a      	str	r2, [r3, #0]
 800d93c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800d93e:	f10a 0a01 	add.w	sl, sl, #1
 800d942:	4499      	add	r9, r3
 800d944:	e7c3      	b.n	800d8ce <LCD__DrawBitmap_1bpp+0x122>
 800d946:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 800d948:	f10c 0c01 	add.w	ip, ip, #1
 800d94c:	4434      	add	r4, r6
 800d94e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800d950:	e7a6      	b.n	800d8a0 <LCD__DrawBitmap_1bpp+0xf4>
 800d952:	b00f      	add	sp, #60	; 0x3c
 800d954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d958:	20000254 	.word	0x20000254
 800d95c:	2001b39c 	.word	0x2001b39c
 800d960:	2001b370 	.word	0x2001b370

0800d964 <LCD_DrawBitmap>:
 800d964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d968:	f8df c20c 	ldr.w	ip, [pc, #524]	; 800db78 <LCD_DrawBitmap+0x214>
 800d96c:	b091      	sub	sp, #68	; 0x44
 800d96e:	f8dc 9000 	ldr.w	r9, [ip]
 800d972:	9207      	str	r2, [sp, #28]
 800d974:	4605      	mov	r5, r0
 800d976:	4688      	mov	r8, r1
 800d978:	469b      	mov	fp, r3
 800d97a:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800d97c:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 800d97e:	f1b9 0f00 	cmp.w	r9, #0
 800d982:	d00c      	beq.n	800d99e <LCD_DrawBitmap+0x3a>
 800d984:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800d986:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800d988:	9500      	str	r5, [sp, #0]
 800d98a:	9701      	str	r7, [sp, #4]
 800d98c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 800d98e:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 800d990:	9602      	str	r6, [sp, #8]
 800d992:	9503      	str	r5, [sp, #12]
 800d994:	9404      	str	r4, [sp, #16]
 800d996:	9705      	str	r7, [sp, #20]
 800d998:	f8d9 4000 	ldr.w	r4, [r9]
 800d99c:	e081      	b.n	800daa2 <LCD_DrawBitmap+0x13e>
 800d99e:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800d9a0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800d9a2:	ea47 0300 	orr.w	r3, r7, r0
 800d9a6:	2b01      	cmp	r3, #1
 800d9a8:	d17d      	bne.n	800daa6 <LCD_DrawBitmap+0x142>
 800d9aa:	4b71      	ldr	r3, [pc, #452]	; (800db70 <LCD_DrawBitmap+0x20c>)
 800d9ac:	6818      	ldr	r0, [r3, #0]
 800d9ae:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d9b2:	1a53      	subs	r3, r2, r1
 800d9b4:	2b00      	cmp	r3, #0
 800d9b6:	dd08      	ble.n	800d9ca <LCD_DrawBitmap+0x66>
 800d9b8:	ebc3 010b 	rsb	r1, r3, fp
 800d9bc:	2900      	cmp	r1, #0
 800d9be:	f340 80d4 	ble.w	800db6a <LCD_DrawBitmap+0x206>
 800d9c2:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800d9c4:	fb07 4403 	mla	r4, r7, r3, r4
 800d9c8:	e001      	b.n	800d9ce <LCD_DrawBitmap+0x6a>
 800d9ca:	4659      	mov	r1, fp
 800d9cc:	4642      	mov	r2, r8
 800d9ce:	44d8      	add	r8, fp
 800d9d0:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 800d9d4:	f108 38ff 	add.w	r8, r8, #4294967295
 800d9d8:	ebc3 0808 	rsb	r8, r3, r8
 800d9dc:	f1b8 0f00 	cmp.w	r8, #0
 800d9e0:	dd04      	ble.n	800d9ec <LCD_DrawBitmap+0x88>
 800d9e2:	ebc8 0101 	rsb	r1, r8, r1
 800d9e6:	2900      	cmp	r1, #0
 800d9e8:	f340 80bf 	ble.w	800db6a <LCD_DrawBitmap+0x206>
 800d9ec:	9b07      	ldr	r3, [sp, #28]
 800d9ee:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 800d9f2:	442b      	add	r3, r5
 800d9f4:	3b01      	subs	r3, #1
 800d9f6:	ebcc 0303 	rsb	r3, ip, r3
 800d9fa:	2b00      	cmp	r3, #0
 800d9fc:	dd02      	ble.n	800da04 <LCD_DrawBitmap+0xa0>
 800d9fe:	9f07      	ldr	r7, [sp, #28]
 800da00:	1aff      	subs	r7, r7, r3
 800da02:	9707      	str	r7, [sp, #28]
 800da04:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800da08:	4565      	cmp	r5, ip
 800da0a:	da33      	bge.n	800da74 <LCD_DrawBitmap+0x110>
 800da0c:	9f07      	ldr	r7, [sp, #28]
 800da0e:	ebc5 030c 	rsb	r3, r5, ip
 800da12:	1aff      	subs	r7, r7, r3
 800da14:	2e08      	cmp	r6, #8
 800da16:	9707      	str	r7, [sp, #28]
 800da18:	d027      	beq.n	800da6a <LCD_DrawBitmap+0x106>
 800da1a:	dc0d      	bgt.n	800da38 <LCD_DrawBitmap+0xd4>
 800da1c:	2e02      	cmp	r6, #2
 800da1e:	d014      	beq.n	800da4a <LCD_DrawBitmap+0xe6>
 800da20:	2e04      	cmp	r6, #4
 800da22:	d01a      	beq.n	800da5a <LCD_DrawBitmap+0xf6>
 800da24:	2e01      	cmp	r6, #1
 800da26:	d126      	bne.n	800da76 <LCD_DrawBitmap+0x112>
 800da28:	f023 0c07 	bic.w	ip, r3, #7
 800da2c:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800da30:	4465      	add	r5, ip
 800da32:	f003 0307 	and.w	r3, r3, #7
 800da36:	e01e      	b.n	800da76 <LCD_DrawBitmap+0x112>
 800da38:	2e18      	cmp	r6, #24
 800da3a:	d018      	beq.n	800da6e <LCD_DrawBitmap+0x10a>
 800da3c:	2e20      	cmp	r6, #32
 800da3e:	d016      	beq.n	800da6e <LCD_DrawBitmap+0x10a>
 800da40:	2e10      	cmp	r6, #16
 800da42:	d118      	bne.n	800da76 <LCD_DrawBitmap+0x112>
 800da44:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800da48:	e013      	b.n	800da72 <LCD_DrawBitmap+0x10e>
 800da4a:	f023 0c03 	bic.w	ip, r3, #3
 800da4e:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 800da52:	4465      	add	r5, ip
 800da54:	f003 0303 	and.w	r3, r3, #3
 800da58:	e00d      	b.n	800da76 <LCD_DrawBitmap+0x112>
 800da5a:	f023 0c01 	bic.w	ip, r3, #1
 800da5e:	eb04 0463 	add.w	r4, r4, r3, asr #1
 800da62:	4465      	add	r5, ip
 800da64:	f003 0301 	and.w	r3, r3, #1
 800da68:	e005      	b.n	800da76 <LCD_DrawBitmap+0x112>
 800da6a:	441c      	add	r4, r3
 800da6c:	e001      	b.n	800da72 <LCD_DrawBitmap+0x10e>
 800da6e:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800da72:	4665      	mov	r5, ip
 800da74:	2300      	movs	r3, #0
 800da76:	9f07      	ldr	r7, [sp, #28]
 800da78:	2f00      	cmp	r7, #0
 800da7a:	dd76      	ble.n	800db6a <LCD_DrawBitmap+0x206>
 800da7c:	f890 e011 	ldrb.w	lr, [r0, #17]
 800da80:	483c      	ldr	r0, [pc, #240]	; (800db74 <LCD_DrawBitmap+0x210>)
 800da82:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800da84:	f850 002e 	ldr.w	r0, [r0, lr, lsl #2]
 800da88:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 800da8c:	9403      	str	r4, [sp, #12]
 800da8e:	e88d 0042 	stmia.w	sp, {r1, r6}
 800da92:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 800da94:	9304      	str	r3, [sp, #16]
 800da96:	9702      	str	r7, [sp, #8]
 800da98:	9405      	str	r4, [sp, #20]
 800da9a:	f8de 4004 	ldr.w	r4, [lr, #4]
 800da9e:	9b07      	ldr	r3, [sp, #28]
 800daa0:	4629      	mov	r1, r5
 800daa2:	47a0      	blx	r4
 800daa4:	e061      	b.n	800db6a <LCD_DrawBitmap+0x206>
 800daa6:	f1c6 0708 	rsb	r7, r6, #8
 800daaa:	970e      	str	r7, [sp, #56]	; 0x38
 800daac:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800dab0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800dab2:	455f      	cmp	r7, fp
 800dab4:	da59      	bge.n	800db6a <LCD_DrawBitmap+0x206>
 800dab6:	4b2e      	ldr	r3, [pc, #184]	; (800db70 <LCD_DrawBitmap+0x20c>)
 800dab8:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800daba:	681b      	ldr	r3, [r3, #0]
 800dabc:	4447      	add	r7, r8
 800dabe:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800dac2:	970c      	str	r7, [sp, #48]	; 0x30
 800dac4:	3f01      	subs	r7, #1
 800dac6:	4297      	cmp	r7, r2
 800dac8:	970d      	str	r7, [sp, #52]	; 0x34
 800daca:	db46      	blt.n	800db5a <LCD_DrawBitmap+0x1f6>
 800dacc:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 800dad0:	4598      	cmp	r8, r3
 800dad2:	dc42      	bgt.n	800db5a <LCD_DrawBitmap+0x1f6>
 800dad4:	f04f 0a00 	mov.w	sl, #0
 800dad8:	940b      	str	r4, [sp, #44]	; 0x2c
 800dada:	46ac      	mov	ip, r5
 800dadc:	4657      	mov	r7, sl
 800dade:	9807      	ldr	r0, [sp, #28]
 800dae0:	4287      	cmp	r7, r0
 800dae2:	da3a      	bge.n	800db5a <LCD_DrawBitmap+0x1f6>
 800dae4:	f1ba 0f00 	cmp.w	sl, #0
 800dae8:	d106      	bne.n	800daf8 <LCD_DrawBitmap+0x194>
 800daea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800daec:	f890 9000 	ldrb.w	r9, [r0]
 800daf0:	3001      	adds	r0, #1
 800daf2:	900b      	str	r0, [sp, #44]	; 0x2c
 800daf4:	f04f 0a08 	mov.w	sl, #8
 800daf8:	990e      	ldr	r1, [sp, #56]	; 0x38
 800dafa:	4a1d      	ldr	r2, [pc, #116]	; (800db70 <LCD_DrawBitmap+0x20c>)
 800dafc:	fa49 f301 	asr.w	r3, r9, r1
 800db00:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 800db04:	fa09 f906 	lsl.w	r9, r9, r6
 800db08:	fa5f f989 	uxtb.w	r9, r9
 800db0c:	ebc6 0a0a 	rsb	sl, r6, sl
 800db10:	d103      	bne.n	800db1a <LCD_DrawBitmap+0x1b6>
 800db12:	6810      	ldr	r0, [r2, #0]
 800db14:	7c00      	ldrb	r0, [r0, #16]
 800db16:	0780      	lsls	r0, r0, #30
 800db18:	d41b      	bmi.n	800db52 <LCD_DrawBitmap+0x1ee>
 800db1a:	6812      	ldr	r2, [r2, #0]
 800db1c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800db1e:	6810      	ldr	r0, [r2, #0]
 800db20:	900f      	str	r0, [sp, #60]	; 0x3c
 800db22:	981f      	ldr	r0, [sp, #124]	; 0x7c
 800db24:	b110      	cbz	r0, 800db2c <LCD_DrawBitmap+0x1c8>
 800db26:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 800db2a:	e000      	b.n	800db2e <LCD_DrawBitmap+0x1ca>
 800db2c:	b2db      	uxtb	r3, r3
 800db2e:	991a      	ldr	r1, [sp, #104]	; 0x68
 800db30:	6013      	str	r3, [r2, #0]
 800db32:	1e4a      	subs	r2, r1, #1
 800db34:	4462      	add	r2, ip
 800db36:	4660      	mov	r0, ip
 800db38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800db3a:	f8cd c020 	str.w	ip, [sp, #32]
 800db3e:	4641      	mov	r1, r8
 800db40:	f7ff fe08 	bl	800d754 <LCD_FillRect>
 800db44:	4b0a      	ldr	r3, [pc, #40]	; (800db70 <LCD_DrawBitmap+0x20c>)
 800db46:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800db48:	681b      	ldr	r3, [r3, #0]
 800db4a:	f8dd c020 	ldr.w	ip, [sp, #32]
 800db4e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800db50:	601a      	str	r2, [r3, #0]
 800db52:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800db54:	3701      	adds	r7, #1
 800db56:	449c      	add	ip, r3
 800db58:	e7c1      	b.n	800dade <LCD_DrawBitmap+0x17a>
 800db5a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800db5c:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800db60:	3701      	adds	r7, #1
 800db62:	970a      	str	r7, [sp, #40]	; 0x28
 800db64:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800db66:	443c      	add	r4, r7
 800db68:	e7a2      	b.n	800dab0 <LCD_DrawBitmap+0x14c>
 800db6a:	b011      	add	sp, #68	; 0x44
 800db6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800db70:	20000254 	.word	0x20000254
 800db74:	2001b39c 	.word	0x2001b39c
 800db78:	2001b370 	.word	0x2001b370

0800db7c <LCD_SetClipRectMax>:
 800db7c:	b508      	push	{r3, lr}
 800db7e:	4b05      	ldr	r3, [pc, #20]	; (800db94 <LCD_SetClipRectMax+0x18>)
 800db80:	6819      	ldr	r1, [r3, #0]
 800db82:	4b05      	ldr	r3, [pc, #20]	; (800db98 <LCD_SetClipRectMax+0x1c>)
 800db84:	7c4a      	ldrb	r2, [r1, #17]
 800db86:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800db8a:	68c3      	ldr	r3, [r0, #12]
 800db8c:	3108      	adds	r1, #8
 800db8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800db90:	4798      	blx	r3
 800db92:	bd08      	pop	{r3, pc}
 800db94:	20000254 	.word	0x20000254
 800db98:	2001b39c 	.word	0x2001b39c

0800db9c <emWin_LCD_Init>:
 800db9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800db9e:	f7ff ffed 	bl	800db7c <LCD_SetClipRectMax>
 800dba2:	f006 f8d3 	bl	8013d4c <LCD_InitColors>
 800dba6:	4604      	mov	r4, r0
 800dba8:	2800      	cmp	r0, #0
 800dbaa:	d13d      	bne.n	800dc28 <emWin_LCD_Init+0x8c>
 800dbac:	4605      	mov	r5, r0
 800dbae:	4628      	mov	r0, r5
 800dbb0:	f001 ff04 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800dbb4:	9001      	str	r0, [sp, #4]
 800dbb6:	b148      	cbz	r0, 800dbcc <emWin_LCD_Init+0x30>
 800dbb8:	68c3      	ldr	r3, [r0, #12]
 800dbba:	210c      	movs	r1, #12
 800dbbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dbbe:	a801      	add	r0, sp, #4
 800dbc0:	4798      	blx	r3
 800dbc2:	4603      	mov	r3, r0
 800dbc4:	b370      	cbz	r0, 800dc24 <emWin_LCD_Init+0x88>
 800dbc6:	9801      	ldr	r0, [sp, #4]
 800dbc8:	4798      	blx	r3
 800dbca:	4304      	orrs	r4, r0
 800dbcc:	3501      	adds	r5, #1
 800dbce:	2d02      	cmp	r5, #2
 800dbd0:	d1ed      	bne.n	800dbae <emWin_LCD_Init+0x12>
 800dbd2:	bb4c      	cbnz	r4, 800dc28 <emWin_LCD_Init+0x8c>
 800dbd4:	f006 f8d6 	bl	8013d84 <LCD_InitLUT>
 800dbd8:	2401      	movs	r4, #1
 800dbda:	4620      	mov	r0, r4
 800dbdc:	f001 feee 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800dbe0:	9001      	str	r0, [sp, #4]
 800dbe2:	b1d0      	cbz	r0, 800dc1a <emWin_LCD_Init+0x7e>
 800dbe4:	4620      	mov	r0, r4
 800dbe6:	f001 f98b 	bl	800ef00 <GUI_SelectLayer>
 800dbea:	2004      	movs	r0, #4
 800dbec:	f7ff fd30 	bl	800d650 <LCD_SetDrawMode>
 800dbf0:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800dbf4:	2000      	movs	r0, #0
 800dbf6:	4601      	mov	r1, r0
 800dbf8:	4613      	mov	r3, r2
 800dbfa:	f7ff fdab 	bl	800d754 <LCD_FillRect>
 800dbfe:	2000      	movs	r0, #0
 800dc00:	f7ff fd26 	bl	800d650 <LCD_SetDrawMode>
 800dc04:	a802      	add	r0, sp, #8
 800dc06:	210e      	movs	r1, #14
 800dc08:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800dc0c:	68db      	ldr	r3, [r3, #12]
 800dc0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dc10:	4798      	blx	r3
 800dc12:	4603      	mov	r3, r0
 800dc14:	b108      	cbz	r0, 800dc1a <emWin_LCD_Init+0x7e>
 800dc16:	9801      	ldr	r0, [sp, #4]
 800dc18:	4798      	blx	r3
 800dc1a:	f114 34ff 	adds.w	r4, r4, #4294967295
 800dc1e:	d2dc      	bcs.n	800dbda <emWin_LCD_Init+0x3e>
 800dc20:	2000      	movs	r0, #0
 800dc22:	e002      	b.n	800dc2a <emWin_LCD_Init+0x8e>
 800dc24:	2001      	movs	r0, #1
 800dc26:	e000      	b.n	800dc2a <emWin_LCD_Init+0x8e>
 800dc28:	4620      	mov	r0, r4
 800dc2a:	b003      	add	sp, #12
 800dc2c:	bd30      	pop	{r4, r5, pc}
	...

0800dc30 <LCD_Color2Index>:
 800dc30:	b508      	push	{r3, lr}
 800dc32:	4b05      	ldr	r3, [pc, #20]	; (800dc48 <LCD_Color2Index+0x18>)
 800dc34:	681b      	ldr	r3, [r3, #0]
 800dc36:	7c5a      	ldrb	r2, [r3, #17]
 800dc38:	4b04      	ldr	r3, [pc, #16]	; (800dc4c <LCD_Color2Index+0x1c>)
 800dc3a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800dc3e:	691b      	ldr	r3, [r3, #16]
 800dc40:	681b      	ldr	r3, [r3, #0]
 800dc42:	4798      	blx	r3
 800dc44:	bd08      	pop	{r3, pc}
 800dc46:	bf00      	nop
 800dc48:	20000254 	.word	0x20000254
 800dc4c:	2001b39c 	.word	0x2001b39c

0800dc50 <LCD_Index2Color>:
 800dc50:	b508      	push	{r3, lr}
 800dc52:	4b05      	ldr	r3, [pc, #20]	; (800dc68 <LCD_Index2Color+0x18>)
 800dc54:	681b      	ldr	r3, [r3, #0]
 800dc56:	7c5a      	ldrb	r2, [r3, #17]
 800dc58:	4b04      	ldr	r3, [pc, #16]	; (800dc6c <LCD_Index2Color+0x1c>)
 800dc5a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800dc5e:	691b      	ldr	r3, [r3, #16]
 800dc60:	685b      	ldr	r3, [r3, #4]
 800dc62:	4798      	blx	r3
 800dc64:	bd08      	pop	{r3, pc}
 800dc66:	bf00      	nop
 800dc68:	20000254 	.word	0x20000254
 800dc6c:	2001b39c 	.word	0x2001b39c

0800dc70 <LCD_SetColorIndex>:
 800dc70:	4b04      	ldr	r3, [pc, #16]	; (800dc84 <LCD_SetColorIndex+0x14>)
 800dc72:	681b      	ldr	r3, [r3, #0]
 800dc74:	7c1a      	ldrb	r2, [r3, #16]
 800dc76:	0752      	lsls	r2, r2, #29
 800dc78:	bf4c      	ite	mi
 800dc7a:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
 800dc7c:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
 800dc7e:	6018      	str	r0, [r3, #0]
 800dc80:	4770      	bx	lr
 800dc82:	bf00      	nop
 800dc84:	20000254 	.word	0x20000254

0800dc88 <_SetColor>:
 800dc88:	b508      	push	{r3, lr}
 800dc8a:	4b06      	ldr	r3, [pc, #24]	; (800dca4 <_SetColor+0x1c>)
 800dc8c:	681b      	ldr	r3, [r3, #0]
 800dc8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800dc90:	4281      	cmp	r1, r0
 800dc92:	d006      	beq.n	800dca2 <_SetColor+0x1a>
 800dc94:	6318      	str	r0, [r3, #48]	; 0x30
 800dc96:	f7ff ffcb 	bl	800dc30 <LCD_Color2Index>
 800dc9a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800dc9e:	f7ff bfe7 	b.w	800dc70 <LCD_SetColorIndex>
 800dca2:	bd08      	pop	{r3, pc}
 800dca4:	20000254 	.word	0x20000254

0800dca8 <LCD_SetBkColorIndex>:
 800dca8:	4b04      	ldr	r3, [pc, #16]	; (800dcbc <LCD_SetBkColorIndex+0x14>)
 800dcaa:	681b      	ldr	r3, [r3, #0]
 800dcac:	7c1a      	ldrb	r2, [r3, #16]
 800dcae:	0752      	lsls	r2, r2, #29
 800dcb0:	bf4c      	ite	mi
 800dcb2:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
 800dcb4:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
 800dcb6:	6018      	str	r0, [r3, #0]
 800dcb8:	4770      	bx	lr
 800dcba:	bf00      	nop
 800dcbc:	20000254 	.word	0x20000254

0800dcc0 <_SetBkColor>:
 800dcc0:	b508      	push	{r3, lr}
 800dcc2:	4b06      	ldr	r3, [pc, #24]	; (800dcdc <_SetBkColor+0x1c>)
 800dcc4:	681b      	ldr	r3, [r3, #0]
 800dcc6:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800dcc8:	4281      	cmp	r1, r0
 800dcca:	d006      	beq.n	800dcda <_SetBkColor+0x1a>
 800dccc:	6358      	str	r0, [r3, #52]	; 0x34
 800dcce:	f7ff ffaf 	bl	800dc30 <LCD_Color2Index>
 800dcd2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800dcd6:	f7ff bfe7 	b.w	800dca8 <LCD_SetBkColorIndex>
 800dcda:	bd08      	pop	{r3, pc}
 800dcdc:	20000254 	.word	0x20000254

0800dce0 <LCD_SetBkColor>:
 800dce0:	b508      	push	{r3, lr}
 800dce2:	4b02      	ldr	r3, [pc, #8]	; (800dcec <LCD_SetBkColor+0xc>)
 800dce4:	681b      	ldr	r3, [r3, #0]
 800dce6:	685b      	ldr	r3, [r3, #4]
 800dce8:	4798      	blx	r3
 800dcea:	bd08      	pop	{r3, pc}
 800dcec:	20000238 	.word	0x20000238

0800dcf0 <LCD_SetColor>:
 800dcf0:	b508      	push	{r3, lr}
 800dcf2:	4b02      	ldr	r3, [pc, #8]	; (800dcfc <LCD_SetColor+0xc>)
 800dcf4:	681b      	ldr	r3, [r3, #0]
 800dcf6:	681b      	ldr	r3, [r3, #0]
 800dcf8:	4798      	blx	r3
 800dcfa:	bd08      	pop	{r3, pc}
 800dcfc:	20000238 	.word	0x20000238

0800dd00 <GUI__memset16>:
 800dd00:	b570      	push	{r4, r5, r6, lr}
 800dd02:	0784      	lsls	r4, r0, #30
 800dd04:	d502      	bpl.n	800dd0c <GUI__memset16+0xc>
 800dd06:	8001      	strh	r1, [r0, #0]
 800dd08:	3a01      	subs	r2, #1
 800dd0a:	3002      	adds	r0, #2
 800dd0c:	0855      	lsrs	r5, r2, #1
 800dd0e:	462b      	mov	r3, r5
 800dd10:	b305      	cbz	r5, 800dd54 <GUI__memset16+0x54>
 800dd12:	2d03      	cmp	r5, #3
 800dd14:	eb01 4401 	add.w	r4, r1, r1, lsl #16
 800dd18:	dc02      	bgt.n	800dd20 <GUI__memset16+0x20>
 800dd1a:	4606      	mov	r6, r0
 800dd1c:	461d      	mov	r5, r3
 800dd1e:	e012      	b.n	800dd46 <GUI__memset16+0x46>
 800dd20:	4603      	mov	r3, r0
 800dd22:	462e      	mov	r6, r5
 800dd24:	3e04      	subs	r6, #4
 800dd26:	2e03      	cmp	r6, #3
 800dd28:	601c      	str	r4, [r3, #0]
 800dd2a:	605c      	str	r4, [r3, #4]
 800dd2c:	609c      	str	r4, [r3, #8]
 800dd2e:	60dc      	str	r4, [r3, #12]
 800dd30:	f103 0310 	add.w	r3, r3, #16
 800dd34:	dcf6      	bgt.n	800dd24 <GUI__memset16+0x24>
 800dd36:	3d04      	subs	r5, #4
 800dd38:	08ab      	lsrs	r3, r5, #2
 800dd3a:	1c5e      	adds	r6, r3, #1
 800dd3c:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 800dd40:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 800dd44:	e7e9      	b.n	800dd1a <GUI__memset16+0x1a>
 800dd46:	b11d      	cbz	r5, 800dd50 <GUI__memset16+0x50>
 800dd48:	f846 4b04 	str.w	r4, [r6], #4
 800dd4c:	3d01      	subs	r5, #1
 800dd4e:	e7fa      	b.n	800dd46 <GUI__memset16+0x46>
 800dd50:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800dd54:	07d3      	lsls	r3, r2, #31
 800dd56:	bf48      	it	mi
 800dd58:	8001      	strhmi	r1, [r0, #0]
 800dd5a:	bd70      	pop	{r4, r5, r6, pc}

0800dd5c <GUI__memset>:
 800dd5c:	b570      	push	{r4, r5, r6, lr}
 800dd5e:	b12a      	cbz	r2, 800dd6c <GUI__memset+0x10>
 800dd60:	0783      	lsls	r3, r0, #30
 800dd62:	d003      	beq.n	800dd6c <GUI__memset+0x10>
 800dd64:	f800 1b01 	strb.w	r1, [r0], #1
 800dd68:	3a01      	subs	r2, #1
 800dd6a:	e7f8      	b.n	800dd5e <GUI__memset+0x2>
 800dd6c:	0893      	lsrs	r3, r2, #2
 800dd6e:	d101      	bne.n	800dd74 <GUI__memset+0x18>
 800dd70:	4402      	add	r2, r0
 800dd72:	e017      	b.n	800dda4 <GUI__memset+0x48>
 800dd74:	f04f 3401 	mov.w	r4, #16843009	; 0x1010101
 800dd78:	f002 0203 	and.w	r2, r2, #3
 800dd7c:	434c      	muls	r4, r1
 800dd7e:	2b03      	cmp	r3, #3
 800dd80:	4605      	mov	r5, r0
 800dd82:	dd06      	ble.n	800dd92 <GUI__memset+0x36>
 800dd84:	6004      	str	r4, [r0, #0]
 800dd86:	6044      	str	r4, [r0, #4]
 800dd88:	6084      	str	r4, [r0, #8]
 800dd8a:	60c4      	str	r4, [r0, #12]
 800dd8c:	3b04      	subs	r3, #4
 800dd8e:	3010      	adds	r0, #16
 800dd90:	e7f5      	b.n	800dd7e <GUI__memset+0x22>
 800dd92:	461e      	mov	r6, r3
 800dd94:	b11b      	cbz	r3, 800dd9e <GUI__memset+0x42>
 800dd96:	f845 4b04 	str.w	r4, [r5], #4
 800dd9a:	3b01      	subs	r3, #1
 800dd9c:	e7fa      	b.n	800dd94 <GUI__memset+0x38>
 800dd9e:	eb00 0086 	add.w	r0, r0, r6, lsl #2
 800dda2:	e7e5      	b.n	800dd70 <GUI__memset+0x14>
 800dda4:	4290      	cmp	r0, r2
 800dda6:	d002      	beq.n	800ddae <GUI__memset+0x52>
 800dda8:	f800 1b01 	strb.w	r1, [r0], #1
 800ddac:	e7fa      	b.n	800dda4 <GUI__memset+0x48>
 800ddae:	bd70      	pop	{r4, r5, r6, pc}

0800ddb0 <GUI__SetText>:
 800ddb0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ddb2:	6807      	ldr	r7, [r0, #0]
 800ddb4:	4605      	mov	r5, r0
 800ddb6:	4638      	mov	r0, r7
 800ddb8:	460e      	mov	r6, r1
 800ddba:	f006 f849 	bl	8013e50 <GUI__strcmp_hp>
 800ddbe:	b908      	cbnz	r0, 800ddc4 <GUI__SetText+0x14>
 800ddc0:	2000      	movs	r0, #0
 800ddc2:	e02e      	b.n	800de22 <GUI__SetText+0x72>
 800ddc4:	4630      	mov	r0, r6
 800ddc6:	f006 f823 	bl	8013e10 <GUI__strlen>
 800ddca:	1c44      	adds	r4, r0, #1
 800ddcc:	4638      	mov	r0, r7
 800ddce:	f002 fb65 	bl	801049c <GUI_ALLOC_GetSize>
 800ddd2:	4284      	cmp	r4, r0
 800ddd4:	d10f      	bne.n	800ddf6 <GUI__SetText+0x46>
 800ddd6:	2c00      	cmp	r4, #0
 800ddd8:	d0f2      	beq.n	800ddc0 <GUI__SetText+0x10>
 800ddda:	4638      	mov	r0, r7
 800dddc:	f002 fb30 	bl	8010440 <GUI_ALLOC_LockH>
 800dde0:	ad02      	add	r5, sp, #8
 800dde2:	4631      	mov	r1, r6
 800dde4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800dde8:	4622      	mov	r2, r4
 800ddea:	f008 f9c6 	bl	801617a <memcpy>
 800ddee:	4628      	mov	r0, r5
 800ddf0:	f002 fb34 	bl	801045c <GUI_ALLOC_UnlockH>
 800ddf4:	e014      	b.n	800de20 <GUI__SetText+0x70>
 800ddf6:	4620      	mov	r0, r4
 800ddf8:	f002 fd76 	bl	80108e8 <GUI_ALLOC_AllocNoInit>
 800ddfc:	4607      	mov	r7, r0
 800ddfe:	2800      	cmp	r0, #0
 800de00:	d0de      	beq.n	800ddc0 <GUI__SetText+0x10>
 800de02:	f002 fb1d 	bl	8010440 <GUI_ALLOC_LockH>
 800de06:	ac02      	add	r4, sp, #8
 800de08:	4631      	mov	r1, r6
 800de0a:	f844 0d04 	str.w	r0, [r4, #-4]!
 800de0e:	f008 fa99 	bl	8016344 <strcpy>
 800de12:	4620      	mov	r0, r4
 800de14:	f002 fb22 	bl	801045c <GUI_ALLOC_UnlockH>
 800de18:	4628      	mov	r0, r5
 800de1a:	f002 fd69 	bl	80108f0 <GUI_ALLOC_FreePtr>
 800de1e:	602f      	str	r7, [r5, #0]
 800de20:	2001      	movs	r0, #1
 800de22:	b003      	add	sp, #12
 800de24:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800de26 <GUI__ReduceRect>:
 800de26:	880b      	ldrh	r3, [r1, #0]
 800de28:	b292      	uxth	r2, r2
 800de2a:	4413      	add	r3, r2
 800de2c:	8003      	strh	r3, [r0, #0]
 800de2e:	888b      	ldrh	r3, [r1, #4]
 800de30:	1a9b      	subs	r3, r3, r2
 800de32:	8083      	strh	r3, [r0, #4]
 800de34:	884b      	ldrh	r3, [r1, #2]
 800de36:	4413      	add	r3, r2
 800de38:	8043      	strh	r3, [r0, #2]
 800de3a:	88cb      	ldrh	r3, [r1, #6]
 800de3c:	1a9a      	subs	r2, r3, r2
 800de3e:	80c2      	strh	r2, [r0, #6]
 800de40:	4770      	bx	lr
	...

0800de44 <GUI__ManageCacheEx>:
 800de44:	2801      	cmp	r0, #1
 800de46:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800de48:	4604      	mov	r4, r0
 800de4a:	460d      	mov	r5, r1
 800de4c:	dc65      	bgt.n	800df1a <GUI__ManageCacheEx+0xd6>
 800de4e:	4b34      	ldr	r3, [pc, #208]	; (800df20 <GUI__ManageCacheEx+0xdc>)
 800de50:	681b      	ldr	r3, [r3, #0]
 800de52:	b103      	cbz	r3, 800de56 <GUI__ManageCacheEx+0x12>
 800de54:	4798      	blx	r3
 800de56:	2d01      	cmp	r5, #1
 800de58:	d004      	beq.n	800de64 <GUI__ManageCacheEx+0x20>
 800de5a:	2d02      	cmp	r5, #2
 800de5c:	d021      	beq.n	800dea2 <GUI__ManageCacheEx+0x5e>
 800de5e:	2d00      	cmp	r5, #0
 800de60:	d15b      	bne.n	800df1a <GUI__ManageCacheEx+0xd6>
 800de62:	e035      	b.n	800ded0 <GUI__ManageCacheEx+0x8c>
 800de64:	4e2f      	ldr	r6, [pc, #188]	; (800df24 <GUI__ManageCacheEx+0xe0>)
 800de66:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
 800de6a:	b9b7      	cbnz	r7, 800de9a <GUI__ManageCacheEx+0x56>
 800de6c:	4620      	mov	r0, r4
 800de6e:	f001 fda5 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800de72:	9001      	str	r0, [sp, #4]
 800de74:	2800      	cmp	r0, #0
 800de76:	d050      	beq.n	800df1a <GUI__ManageCacheEx+0xd6>
 800de78:	68c3      	ldr	r3, [r0, #12]
 800de7a:	210d      	movs	r1, #13
 800de7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800de7e:	a801      	add	r0, sp, #4
 800de80:	4798      	blx	r3
 800de82:	4603      	mov	r3, r0
 800de84:	2800      	cmp	r0, #0
 800de86:	d048      	beq.n	800df1a <GUI__ManageCacheEx+0xd6>
 800de88:	9801      	ldr	r0, [sp, #4]
 800de8a:	4629      	mov	r1, r5
 800de8c:	4798      	blx	r3
 800de8e:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 800de92:	3301      	adds	r3, #1
 800de94:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
 800de98:	e018      	b.n	800decc <GUI__ManageCacheEx+0x88>
 800de9a:	3701      	adds	r7, #1
 800de9c:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
 800dea0:	e03b      	b.n	800df1a <GUI__ManageCacheEx+0xd6>
 800dea2:	4620      	mov	r0, r4
 800dea4:	f001 fd8a 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800dea8:	9001      	str	r0, [sp, #4]
 800deaa:	2800      	cmp	r0, #0
 800deac:	d035      	beq.n	800df1a <GUI__ManageCacheEx+0xd6>
 800deae:	68c3      	ldr	r3, [r0, #12]
 800deb0:	210d      	movs	r1, #13
 800deb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800deb4:	a801      	add	r0, sp, #4
 800deb6:	4798      	blx	r3
 800deb8:	4604      	mov	r4, r0
 800deba:	2800      	cmp	r0, #0
 800debc:	d02d      	beq.n	800df1a <GUI__ManageCacheEx+0xd6>
 800debe:	4b1a      	ldr	r3, [pc, #104]	; (800df28 <GUI__ManageCacheEx+0xe4>)
 800dec0:	681b      	ldr	r3, [r3, #0]
 800dec2:	b103      	cbz	r3, 800dec6 <GUI__ManageCacheEx+0x82>
 800dec4:	4798      	blx	r3
 800dec6:	9801      	ldr	r0, [sp, #4]
 800dec8:	2102      	movs	r1, #2
 800deca:	47a0      	blx	r4
 800decc:	2000      	movs	r0, #0
 800dece:	e025      	b.n	800df1c <GUI__ManageCacheEx+0xd8>
 800ded0:	4d14      	ldr	r5, [pc, #80]	; (800df24 <GUI__ManageCacheEx+0xe0>)
 800ded2:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 800ded6:	2b01      	cmp	r3, #1
 800ded8:	d001      	beq.n	800dede <GUI__ManageCacheEx+0x9a>
 800deda:	2001      	movs	r0, #1
 800dedc:	e015      	b.n	800df0a <GUI__ManageCacheEx+0xc6>
 800dede:	4620      	mov	r0, r4
 800dee0:	f001 fd6c 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800dee4:	9001      	str	r0, [sp, #4]
 800dee6:	2800      	cmp	r0, #0
 800dee8:	d0f7      	beq.n	800deda <GUI__ManageCacheEx+0x96>
 800deea:	68c3      	ldr	r3, [r0, #12]
 800deec:	210d      	movs	r1, #13
 800deee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800def0:	a801      	add	r0, sp, #4
 800def2:	4798      	blx	r3
 800def4:	4606      	mov	r6, r0
 800def6:	2800      	cmp	r0, #0
 800def8:	d0ef      	beq.n	800deda <GUI__ManageCacheEx+0x96>
 800defa:	4b0b      	ldr	r3, [pc, #44]	; (800df28 <GUI__ManageCacheEx+0xe4>)
 800defc:	681b      	ldr	r3, [r3, #0]
 800defe:	b103      	cbz	r3, 800df02 <GUI__ManageCacheEx+0xbe>
 800df00:	4798      	blx	r3
 800df02:	9801      	ldr	r0, [sp, #4]
 800df04:	2100      	movs	r1, #0
 800df06:	47b0      	blx	r6
 800df08:	2000      	movs	r0, #0
 800df0a:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 800df0e:	2b00      	cmp	r3, #0
 800df10:	bf18      	it	ne
 800df12:	3b01      	subne	r3, #1
 800df14:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 800df18:	e000      	b.n	800df1c <GUI__ManageCacheEx+0xd8>
 800df1a:	2001      	movs	r0, #1
 800df1c:	b003      	add	sp, #12
 800df1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800df20:	200194c0 	.word	0x200194c0
 800df24:	200194b8 	.word	0x200194b8
 800df28:	200194b4 	.word	0x200194b4

0800df2c <GUI__ManageCache>:
 800df2c:	4b02      	ldr	r3, [pc, #8]	; (800df38 <GUI__ManageCache+0xc>)
 800df2e:	681b      	ldr	r3, [r3, #0]
 800df30:	4601      	mov	r1, r0
 800df32:	7c58      	ldrb	r0, [r3, #17]
 800df34:	f7ff bf86 	b.w	800de44 <GUI__ManageCacheEx>
 800df38:	20000254 	.word	0x20000254

0800df3c <GUI__IntersectRects>:
 800df3c:	b570      	push	{r4, r5, r6, lr}
 800df3e:	f9b2 3000 	ldrsh.w	r3, [r2]
 800df42:	f9b1 4000 	ldrsh.w	r4, [r1]
 800df46:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800df4a:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 800df4e:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800df52:	429c      	cmp	r4, r3
 800df54:	bfb8      	it	lt
 800df56:	461c      	movlt	r4, r3
 800df58:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800df5c:	429d      	cmp	r5, r3
 800df5e:	bfa8      	it	ge
 800df60:	462b      	movge	r3, r5
 800df62:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 800df66:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800df6a:	42ae      	cmp	r6, r5
 800df6c:	bfb8      	it	lt
 800df6e:	4635      	movlt	r5, r6
 800df70:	b2a4      	uxth	r4, r4
 800df72:	b2ad      	uxth	r5, r5
 800df74:	4291      	cmp	r1, r2
 800df76:	bfb8      	it	lt
 800df78:	460a      	movlt	r2, r1
 800df7a:	8004      	strh	r4, [r0, #0]
 800df7c:	8085      	strh	r5, [r0, #4]
 800df7e:	b224      	sxth	r4, r4
 800df80:	b22d      	sxth	r5, r5
 800df82:	b29b      	uxth	r3, r3
 800df84:	b292      	uxth	r2, r2
 800df86:	42a5      	cmp	r5, r4
 800df88:	8043      	strh	r3, [r0, #2]
 800df8a:	80c2      	strh	r2, [r0, #6]
 800df8c:	db06      	blt.n	800df9c <GUI__IntersectRects+0x60>
 800df8e:	b210      	sxth	r0, r2
 800df90:	b21b      	sxth	r3, r3
 800df92:	4298      	cmp	r0, r3
 800df94:	bfb4      	ite	lt
 800df96:	2000      	movlt	r0, #0
 800df98:	2001      	movge	r0, #1
 800df9a:	bd70      	pop	{r4, r5, r6, pc}
 800df9c:	2000      	movs	r0, #0
 800df9e:	bd70      	pop	{r4, r5, r6, pc}

0800dfa0 <GUI__IntersectRect>:
 800dfa0:	880b      	ldrh	r3, [r1, #0]
 800dfa2:	b510      	push	{r4, lr}
 800dfa4:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dfa8:	b21a      	sxth	r2, r3
 800dfaa:	4294      	cmp	r4, r2
 800dfac:	bfb8      	it	lt
 800dfae:	8003      	strhlt	r3, [r0, #0]
 800dfb0:	884b      	ldrh	r3, [r1, #2]
 800dfb2:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800dfb6:	b21a      	sxth	r2, r3
 800dfb8:	4294      	cmp	r4, r2
 800dfba:	bfb8      	it	lt
 800dfbc:	8043      	strhlt	r3, [r0, #2]
 800dfbe:	888b      	ldrh	r3, [r1, #4]
 800dfc0:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800dfc4:	b21a      	sxth	r2, r3
 800dfc6:	4294      	cmp	r4, r2
 800dfc8:	bfc8      	it	gt
 800dfca:	8083      	strhgt	r3, [r0, #4]
 800dfcc:	88cb      	ldrh	r3, [r1, #6]
 800dfce:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800dfd2:	b21a      	sxth	r2, r3
 800dfd4:	4291      	cmp	r1, r2
 800dfd6:	bfc8      	it	gt
 800dfd8:	80c3      	strhgt	r3, [r0, #6]
 800dfda:	bd10      	pop	{r4, pc}

0800dfdc <GUI__MixColors>:
 800dfdc:	f001 437f 	and.w	r3, r1, #4278190080	; 0xff000000
 800dfe0:	f1b3 4f7f 	cmp.w	r3, #4278190080	; 0xff000000
 800dfe4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dfe6:	d027      	beq.n	800e038 <GUI__MixColors+0x5c>
 800dfe8:	43d3      	mvns	r3, r2
 800dfea:	b2db      	uxtb	r3, r3
 800dfec:	b2cd      	uxtb	r5, r1
 800dfee:	b2c6      	uxtb	r6, r0
 800dff0:	435d      	muls	r5, r3
 800dff2:	fb02 5506 	mla	r5, r2, r6, r5
 800dff6:	f401 467f 	and.w	r6, r1, #65280	; 0xff00
 800dffa:	f400 447f 	and.w	r4, r0, #65280	; 0xff00
 800dffe:	435e      	muls	r6, r3
 800e000:	fb02 6604 	mla	r6, r2, r4, r6
 800e004:	f401 047f 	and.w	r4, r1, #16711680	; 0xff0000
 800e008:	f400 077f 	and.w	r7, r0, #16711680	; 0xff0000
 800e00c:	435c      	muls	r4, r3
 800e00e:	0e09      	lsrs	r1, r1, #24
 800e010:	0e00      	lsrs	r0, r0, #24
 800e012:	fb02 4407 	mla	r4, r2, r7, r4
 800e016:	434b      	muls	r3, r1
 800e018:	0a36      	lsrs	r6, r6, #8
 800e01a:	fb02 3200 	mla	r2, r2, r0, r3
 800e01e:	0a24      	lsrs	r4, r4, #8
 800e020:	f3c5 2307 	ubfx	r3, r5, #8, #8
 800e024:	f406 407f 	and.w	r0, r6, #65280	; 0xff00
 800e028:	4318      	orrs	r0, r3
 800e02a:	0412      	lsls	r2, r2, #16
 800e02c:	f404 037f 	and.w	r3, r4, #16711680	; 0xff0000
 800e030:	4318      	orrs	r0, r3
 800e032:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800e036:	4310      	orrs	r0, r2
 800e038:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800e03c <_OnExit>:
 800e03c:	b570      	push	{r4, r5, r6, lr}
 800e03e:	4c0a      	ldr	r4, [pc, #40]	; (800e068 <_OnExit+0x2c>)
 800e040:	4d0a      	ldr	r5, [pc, #40]	; (800e06c <_OnExit+0x30>)
 800e042:	6820      	ldr	r0, [r4, #0]
 800e044:	4e0a      	ldr	r6, [pc, #40]	; (800e070 <_OnExit+0x34>)
 800e046:	f002 f9e7 	bl	8010418 <GUI_ALLOC_FreeFixedBlock>
 800e04a:	6828      	ldr	r0, [r5, #0]
 800e04c:	f002 f9e4 	bl	8010418 <GUI_ALLOC_FreeFixedBlock>
 800e050:	6830      	ldr	r0, [r6, #0]
 800e052:	f002 f9e1 	bl	8010418 <GUI_ALLOC_FreeFixedBlock>
 800e056:	4a07      	ldr	r2, [pc, #28]	; (800e074 <_OnExit+0x38>)
 800e058:	2300      	movs	r3, #0
 800e05a:	6013      	str	r3, [r2, #0]
 800e05c:	4a06      	ldr	r2, [pc, #24]	; (800e078 <_OnExit+0x3c>)
 800e05e:	6033      	str	r3, [r6, #0]
 800e060:	602b      	str	r3, [r5, #0]
 800e062:	6023      	str	r3, [r4, #0]
 800e064:	6013      	str	r3, [r2, #0]
 800e066:	bd70      	pop	{r4, r5, r6, pc}
 800e068:	200194c8 	.word	0x200194c8
 800e06c:	200194c4 	.word	0x200194c4
 800e070:	200194cc 	.word	0x200194cc
 800e074:	200194d0 	.word	0x200194d0
 800e078:	200194e0 	.word	0x200194e0

0800e07c <GUI__GetAlphaBuffer>:
 800e07c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e080:	461c      	mov	r4, r3
 800e082:	4b28      	ldr	r3, [pc, #160]	; (800e124 <GUI__GetAlphaBuffer+0xa8>)
 800e084:	4617      	mov	r7, r2
 800e086:	681a      	ldr	r2, [r3, #0]
 800e088:	4606      	mov	r6, r0
 800e08a:	4688      	mov	r8, r1
 800e08c:	b932      	cbnz	r2, 800e09c <GUI__GetAlphaBuffer+0x20>
 800e08e:	2201      	movs	r2, #1
 800e090:	4825      	ldr	r0, [pc, #148]	; (800e128 <GUI__GetAlphaBuffer+0xac>)
 800e092:	601a      	str	r2, [r3, #0]
 800e094:	4b25      	ldr	r3, [pc, #148]	; (800e12c <GUI__GetAlphaBuffer+0xb0>)
 800e096:	6003      	str	r3, [r0, #0]
 800e098:	f001 fdca 	bl	800fc30 <GUI__RegisterExit>
 800e09c:	4d24      	ldr	r5, [pc, #144]	; (800e130 <GUI__GetAlphaBuffer+0xb4>)
 800e09e:	682b      	ldr	r3, [r5, #0]
 800e0a0:	b933      	cbnz	r3, 800e0b0 <GUI__GetAlphaBuffer+0x34>
 800e0a2:	4b24      	ldr	r3, [pc, #144]	; (800e134 <GUI__GetAlphaBuffer+0xb8>)
 800e0a4:	681b      	ldr	r3, [r3, #0]
 800e0a6:	602b      	str	r3, [r5, #0]
 800e0a8:	b913      	cbnz	r3, 800e0b0 <GUI__GetAlphaBuffer+0x34>
 800e0aa:	f7ff fa4d 	bl	800d548 <LCD_GetVXSizeMax>
 800e0ae:	6028      	str	r0, [r5, #0]
 800e0b0:	b10c      	cbz	r4, 800e0b6 <GUI__GetAlphaBuffer+0x3a>
 800e0b2:	682b      	ldr	r3, [r5, #0]
 800e0b4:	6023      	str	r3, [r4, #0]
 800e0b6:	b196      	cbz	r6, 800e0de <GUI__GetAlphaBuffer+0x62>
 800e0b8:	4b1f      	ldr	r3, [pc, #124]	; (800e138 <GUI__GetAlphaBuffer+0xbc>)
 800e0ba:	681a      	ldr	r2, [r3, #0]
 800e0bc:	4699      	mov	r9, r3
 800e0be:	2400      	movs	r4, #0
 800e0c0:	b94a      	cbnz	r2, 800e0d6 <GUI__GetAlphaBuffer+0x5a>
 800e0c2:	6828      	ldr	r0, [r5, #0]
 800e0c4:	0080      	lsls	r0, r0, #2
 800e0c6:	f002 fb13 	bl	80106f0 <GUI_ALLOC_GetFixedBlock>
 800e0ca:	f1d0 0401 	rsbs	r4, r0, #1
 800e0ce:	f8c9 0000 	str.w	r0, [r9]
 800e0d2:	bf38      	it	cc
 800e0d4:	2400      	movcc	r4, #0
 800e0d6:	f8d9 3000 	ldr.w	r3, [r9]
 800e0da:	6033      	str	r3, [r6, #0]
 800e0dc:	e000      	b.n	800e0e0 <GUI__GetAlphaBuffer+0x64>
 800e0de:	4634      	mov	r4, r6
 800e0e0:	f1b8 0f00 	cmp.w	r8, #0
 800e0e4:	d00d      	beq.n	800e102 <GUI__GetAlphaBuffer+0x86>
 800e0e6:	4e15      	ldr	r6, [pc, #84]	; (800e13c <GUI__GetAlphaBuffer+0xc0>)
 800e0e8:	6833      	ldr	r3, [r6, #0]
 800e0ea:	b93b      	cbnz	r3, 800e0fc <GUI__GetAlphaBuffer+0x80>
 800e0ec:	6828      	ldr	r0, [r5, #0]
 800e0ee:	0080      	lsls	r0, r0, #2
 800e0f0:	f002 fafe 	bl	80106f0 <GUI_ALLOC_GetFixedBlock>
 800e0f4:	2800      	cmp	r0, #0
 800e0f6:	6030      	str	r0, [r6, #0]
 800e0f8:	bf08      	it	eq
 800e0fa:	2401      	moveq	r4, #1
 800e0fc:	6833      	ldr	r3, [r6, #0]
 800e0fe:	f8c8 3000 	str.w	r3, [r8]
 800e102:	b167      	cbz	r7, 800e11e <GUI__GetAlphaBuffer+0xa2>
 800e104:	4e0e      	ldr	r6, [pc, #56]	; (800e140 <GUI__GetAlphaBuffer+0xc4>)
 800e106:	6833      	ldr	r3, [r6, #0]
 800e108:	b93b      	cbnz	r3, 800e11a <GUI__GetAlphaBuffer+0x9e>
 800e10a:	6828      	ldr	r0, [r5, #0]
 800e10c:	0080      	lsls	r0, r0, #2
 800e10e:	f002 faef 	bl	80106f0 <GUI_ALLOC_GetFixedBlock>
 800e112:	2800      	cmp	r0, #0
 800e114:	6030      	str	r0, [r6, #0]
 800e116:	bf08      	it	eq
 800e118:	2401      	moveq	r4, #1
 800e11a:	6833      	ldr	r3, [r6, #0]
 800e11c:	603b      	str	r3, [r7, #0]
 800e11e:	4620      	mov	r0, r4
 800e120:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e124:	200194e0 	.word	0x200194e0
 800e128:	200194d8 	.word	0x200194d8
 800e12c:	0800e03d 	.word	0x0800e03d
 800e130:	200194d0 	.word	0x200194d0
 800e134:	2001b3a4 	.word	0x2001b3a4
 800e138:	200194c8 	.word	0x200194c8
 800e13c:	200194c4 	.word	0x200194c4
 800e140:	200194cc 	.word	0x200194cc

0800e144 <GUI__DoAlphaBlending>:
 800e144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e148:	b093      	sub	sp, #76	; 0x4c
 800e14a:	2400      	movs	r4, #0
 800e14c:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800e14e:	900b      	str	r0, [sp, #44]	; 0x2c
 800e150:	910c      	str	r1, [sp, #48]	; 0x30
 800e152:	4690      	mov	r8, r2
 800e154:	461f      	mov	r7, r3
 800e156:	6034      	str	r4, [r6, #0]
 800e158:	a80f      	add	r0, sp, #60	; 0x3c
 800e15a:	a910      	add	r1, sp, #64	; 0x40
 800e15c:	4622      	mov	r2, r4
 800e15e:	ab11      	add	r3, sp, #68	; 0x44
 800e160:	f7ff ff8c 	bl	800e07c <GUI__GetAlphaBuffer>
 800e164:	4605      	mov	r5, r0
 800e166:	2800      	cmp	r0, #0
 800e168:	f040 80c3 	bne.w	800e2f2 <GUI__DoAlphaBlending+0x1ae>
 800e16c:	4c63      	ldr	r4, [pc, #396]	; (800e2fc <GUI__DoAlphaBlending+0x1b8>)
 800e16e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e170:	6823      	ldr	r3, [r4, #0]
 800e172:	7c58      	ldrb	r0, [r3, #17]
 800e174:	4b62      	ldr	r3, [pc, #392]	; (800e300 <GUI__DoAlphaBlending+0x1bc>)
 800e176:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800e17a:	9307      	str	r3, [sp, #28]
 800e17c:	4297      	cmp	r7, r2
 800e17e:	bfa8      	it	ge
 800e180:	4617      	movge	r7, r2
 800e182:	691a      	ldr	r2, [r3, #16]
 800e184:	920d      	str	r2, [sp, #52]	; 0x34
 800e186:	970a      	str	r7, [sp, #40]	; 0x28
 800e188:	f7ff f9aa 	bl	800d4e0 <GUI_GetBitsPerPixelEx>
 800e18c:	6823      	ldr	r3, [r4, #0]
 800e18e:	9008      	str	r0, [sp, #32]
 800e190:	7c58      	ldrb	r0, [r3, #17]
 800e192:	f7ff f9c3 	bl	800d51c <GUI_GetpfIndex2ColorEx>
 800e196:	4b5b      	ldr	r3, [pc, #364]	; (800e304 <GUI__DoAlphaBlending+0x1c0>)
 800e198:	9004      	str	r0, [sp, #16]
 800e19a:	4298      	cmp	r0, r3
 800e19c:	d005      	beq.n	800e1aa <GUI__DoAlphaBlending+0x66>
 800e19e:	4b5a      	ldr	r3, [pc, #360]	; (800e308 <GUI__DoAlphaBlending+0x1c4>)
 800e1a0:	1ac3      	subs	r3, r0, r3
 800e1a2:	bf18      	it	ne
 800e1a4:	2301      	movne	r3, #1
 800e1a6:	9306      	str	r3, [sp, #24]
 800e1a8:	e000      	b.n	800e1ac <GUI__DoAlphaBlending+0x68>
 800e1aa:	9506      	str	r5, [sp, #24]
 800e1ac:	2500      	movs	r5, #0
 800e1ae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e1b0:	46ab      	mov	fp, r5
 800e1b2:	4643      	mov	r3, r8
 800e1b4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800e1b6:	f853 0b04 	ldr.w	r0, [r3], #4
 800e1ba:	9305      	str	r3, [sp, #20]
 800e1bc:	4790      	blx	r2
 800e1be:	0e03      	lsrs	r3, r0, #24
 800e1c0:	4681      	mov	r9, r0
 800e1c2:	9309      	str	r3, [sp, #36]	; 0x24
 800e1c4:	f000 8085 	beq.w	800e2d2 <GUI__DoAlphaBlending+0x18e>
 800e1c8:	f1bb 0f00 	cmp.w	fp, #0
 800e1cc:	d13f      	bne.n	800e24e <GUI__DoAlphaBlending+0x10a>
 800e1ce:	4b4b      	ldr	r3, [pc, #300]	; (800e2fc <GUI__DoAlphaBlending+0x1b8>)
 800e1d0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 800e1d2:	681b      	ldr	r3, [r3, #0]
 800e1d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e1d6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800e1da:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 800e1de:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e1e0:	442f      	add	r7, r5
 800e1e2:	42bb      	cmp	r3, r7
 800e1e4:	bfc8      	it	gt
 800e1e6:	ebc7 0b03 	rsbgt	fp, r7, r3
 800e1ea:	eb0b 0a05 	add.w	sl, fp, r5
 800e1ee:	bfc8      	it	gt
 800e1f0:	461f      	movgt	r7, r3
 800e1f2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e1f4:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 800e1f8:	4453      	add	r3, sl
 800e1fa:	4494      	add	ip, r2
 800e1fc:	9300      	str	r3, [sp, #0]
 800e1fe:	9b07      	ldr	r3, [sp, #28]
 800e200:	9301      	str	r3, [sp, #4]
 800e202:	f10c 32ff 	add.w	r2, ip, #4294967295
 800e206:	4638      	mov	r0, r7
 800e208:	460b      	mov	r3, r1
 800e20a:	f8cd c00c 	str.w	ip, [sp, #12]
 800e20e:	f005 fd63 	bl	8013cd8 <GUI_ReadRectEx>
 800e212:	9a08      	ldr	r2, [sp, #32]
 800e214:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800e216:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e21a:	2a17      	cmp	r2, #23
 800e21c:	dc06      	bgt.n	800e22c <GUI__DoAlphaBlending+0xe8>
 800e21e:	4450      	add	r0, sl
 800e220:	ebcb 0104 	rsb	r1, fp, r4
 800e224:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e226:	f005 fec7 	bl	8013fb8 <GUI__ExpandPixelIndicesEx>
 800e22a:	e001      	b.n	800e230 <GUI__DoAlphaBlending+0xec>
 800e22c:	9b06      	ldr	r3, [sp, #24]
 800e22e:	b913      	cbnz	r3, 800e236 <GUI__DoAlphaBlending+0xf2>
 800e230:	f04f 0b01 	mov.w	fp, #1
 800e234:	e00b      	b.n	800e24e <GUI__DoAlphaBlending+0x10a>
 800e236:	ebc7 070c 	rsb	r7, r7, ip
 800e23a:	4482      	add	sl, r0
 800e23c:	f8da 0000 	ldr.w	r0, [sl]
 800e240:	9a04      	ldr	r2, [sp, #16]
 800e242:	4790      	blx	r2
 800e244:	3f01      	subs	r7, #1
 800e246:	f84a 0b04 	str.w	r0, [sl], #4
 800e24a:	d1f7      	bne.n	800e23c <GUI__DoAlphaBlending+0xf8>
 800e24c:	e7f0      	b.n	800e230 <GUI__DoAlphaBlending+0xec>
 800e24e:	4b2f      	ldr	r3, [pc, #188]	; (800e30c <GUI__DoAlphaBlending+0x1c8>)
 800e250:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800e252:	f8d3 c000 	ldr.w	ip, [r3]
 800e256:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800e258:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 800e25c:	f1bc 0f00 	cmp.w	ip, #0
 800e260:	d024      	beq.n	800e2ac <GUI__DoAlphaBlending+0x168>
 800e262:	eb07 020a 	add.w	r2, r7, sl
 800e266:	4451      	add	r1, sl
 800e268:	9210      	str	r2, [sp, #64]	; 0x40
 800e26a:	4623      	mov	r3, r4
 800e26c:	910f      	str	r1, [sp, #60]	; 0x3c
 800e26e:	4640      	mov	r0, r8
 800e270:	47e0      	blx	ip
 800e272:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800e274:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e276:	2300      	movs	r3, #0
 800e278:	f858 1003 	ldr.w	r1, [r8, r3]
 800e27c:	f001 407f 	and.w	r0, r1, #4278190080	; 0xff000000
 800e280:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 800e284:	58e8      	ldr	r0, [r5, r3]
 800e286:	d101      	bne.n	800e28c <GUI__DoAlphaBlending+0x148>
 800e288:	50d0      	str	r0, [r2, r3]
 800e28a:	e005      	b.n	800e298 <GUI__DoAlphaBlending+0x154>
 800e28c:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 800e290:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 800e294:	bf08      	it	eq
 800e296:	50d1      	streq	r1, [r2, r3]
 800e298:	3c01      	subs	r4, #1
 800e29a:	f103 0304 	add.w	r3, r3, #4
 800e29e:	d1eb      	bne.n	800e278 <GUI__DoAlphaBlending+0x134>
 800e2a0:	6833      	ldr	r3, [r6, #0]
 800e2a2:	9710      	str	r7, [sp, #64]	; 0x40
 800e2a4:	f043 0301 	orr.w	r3, r3, #1
 800e2a8:	6033      	str	r3, [r6, #0]
 800e2aa:	e020      	b.n	800e2ee <GUI__DoAlphaBlending+0x1aa>
 800e2ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e2ae:	2bff      	cmp	r3, #255	; 0xff
 800e2b0:	d104      	bne.n	800e2bc <GUI__DoAlphaBlending+0x178>
 800e2b2:	f851 300a 	ldr.w	r3, [r1, sl]
 800e2b6:	f847 300a 	str.w	r3, [r7, sl]
 800e2ba:	e011      	b.n	800e2e0 <GUI__DoAlphaBlending+0x19c>
 800e2bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e2be:	f851 100a 	ldr.w	r1, [r1, sl]
 800e2c2:	43da      	mvns	r2, r3
 800e2c4:	4648      	mov	r0, r9
 800e2c6:	b2d2      	uxtb	r2, r2
 800e2c8:	f7ff fe88 	bl	800dfdc <GUI__MixColors>
 800e2cc:	f847 000a 	str.w	r0, [r7, sl]
 800e2d0:	e002      	b.n	800e2d8 <GUI__DoAlphaBlending+0x194>
 800e2d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e2d4:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 800e2d8:	6833      	ldr	r3, [r6, #0]
 800e2da:	f043 0301 	orr.w	r3, r3, #1
 800e2de:	6033      	str	r3, [r6, #0]
 800e2e0:	3c01      	subs	r4, #1
 800e2e2:	f105 0501 	add.w	r5, r5, #1
 800e2e6:	d002      	beq.n	800e2ee <GUI__DoAlphaBlending+0x1aa>
 800e2e8:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800e2ec:	e761      	b.n	800e1b2 <GUI__DoAlphaBlending+0x6e>
 800e2ee:	9810      	ldr	r0, [sp, #64]	; 0x40
 800e2f0:	e000      	b.n	800e2f4 <GUI__DoAlphaBlending+0x1b0>
 800e2f2:	4620      	mov	r0, r4
 800e2f4:	b013      	add	sp, #76	; 0x4c
 800e2f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2fa:	bf00      	nop
 800e2fc:	20000254 	.word	0x20000254
 800e300:	2001b39c 	.word	0x2001b39c
 800e304:	08010adb 	.word	0x08010adb
 800e308:	08010ad9 	.word	0x08010ad9
 800e30c:	200194d4 	.word	0x200194d4

0800e310 <GUI__AllocAlphaBuffer>:
 800e310:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e312:	b108      	cbz	r0, 800e318 <GUI__AllocAlphaBuffer+0x8>
 800e314:	aa03      	add	r2, sp, #12
 800e316:	e000      	b.n	800e31a <GUI__AllocAlphaBuffer+0xa>
 800e318:	4602      	mov	r2, r0
 800e31a:	a801      	add	r0, sp, #4
 800e31c:	a902      	add	r1, sp, #8
 800e31e:	2300      	movs	r3, #0
 800e320:	f7ff feac 	bl	800e07c <GUI__GetAlphaBuffer>
 800e324:	b005      	add	sp, #20
 800e326:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800e32c <GUI_SignalEvent>:
 800e32c:	b508      	push	{r3, lr}
 800e32e:	4b02      	ldr	r3, [pc, #8]	; (800e338 <GUI_SignalEvent+0xc>)
 800e330:	681b      	ldr	r3, [r3, #0]
 800e332:	b103      	cbz	r3, 800e336 <GUI_SignalEvent+0xa>
 800e334:	4798      	blx	r3
 800e336:	bd08      	pop	{r3, pc}
 800e338:	200194e4 	.word	0x200194e4

0800e33c <_OnExit>:
 800e33c:	4a03      	ldr	r2, [pc, #12]	; (800e34c <_OnExit+0x10>)
 800e33e:	2300      	movs	r3, #0
 800e340:	6013      	str	r3, [r2, #0]
 800e342:	4a03      	ldr	r2, [pc, #12]	; (800e350 <_OnExit+0x14>)
 800e344:	6013      	str	r3, [r2, #0]
 800e346:	4a03      	ldr	r2, [pc, #12]	; (800e354 <_OnExit+0x18>)
 800e348:	6013      	str	r3, [r2, #0]
 800e34a:	4770      	bx	lr
 800e34c:	200194e8 	.word	0x200194e8
 800e350:	200194ec 	.word	0x200194ec
 800e354:	200194f8 	.word	0x200194f8

0800e358 <GUI_TIMER_Exec>:
 800e358:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e35c:	4b19      	ldr	r3, [pc, #100]	; (800e3c4 <GUI_TIMER_Exec+0x6c>)
 800e35e:	681f      	ldr	r7, [r3, #0]
 800e360:	b085      	sub	sp, #20
 800e362:	2500      	movs	r5, #0
 800e364:	4698      	mov	r8, r3
 800e366:	f8d8 3000 	ldr.w	r3, [r8]
 800e36a:	4c16      	ldr	r4, [pc, #88]	; (800e3c4 <GUI_TIMER_Exec+0x6c>)
 800e36c:	b333      	cbz	r3, 800e3bc <GUI_TIMER_Exec+0x64>
 800e36e:	f000 f991 	bl	800e694 <GUI_GetTime>
 800e372:	4606      	mov	r6, r0
 800e374:	6820      	ldr	r0, [r4, #0]
 800e376:	f002 f863 	bl	8010440 <GUI_ALLOC_LockH>
 800e37a:	4603      	mov	r3, r0
 800e37c:	a804      	add	r0, sp, #16
 800e37e:	6959      	ldr	r1, [r3, #20]
 800e380:	f840 3d10 	str.w	r3, [r0, #-16]!
 800e384:	1b89      	subs	r1, r1, r6
 800e386:	2900      	cmp	r1, #0
 800e388:	dc13      	bgt.n	800e3b2 <GUI_TIMER_Exec+0x5a>
 800e38a:	6821      	ldr	r1, [r4, #0]
 800e38c:	9103      	str	r1, [sp, #12]
 800e38e:	9601      	str	r6, [sp, #4]
 800e390:	6919      	ldr	r1, [r3, #16]
 800e392:	685e      	ldr	r6, [r3, #4]
 800e394:	9102      	str	r1, [sp, #8]
 800e396:	4668      	mov	r0, sp
 800e398:	6026      	str	r6, [r4, #0]
 800e39a:	f8d3 9000 	ldr.w	r9, [r3]
 800e39e:	f002 f85d 	bl	801045c <GUI_ALLOC_UnlockH>
 800e3a2:	a801      	add	r0, sp, #4
 800e3a4:	47c8      	blx	r9
 800e3a6:	b14e      	cbz	r6, 800e3bc <GUI_TIMER_Exec+0x64>
 800e3a8:	6823      	ldr	r3, [r4, #0]
 800e3aa:	42bb      	cmp	r3, r7
 800e3ac:	d005      	beq.n	800e3ba <GUI_TIMER_Exec+0x62>
 800e3ae:	2501      	movs	r5, #1
 800e3b0:	e7d9      	b.n	800e366 <GUI_TIMER_Exec+0xe>
 800e3b2:	4668      	mov	r0, sp
 800e3b4:	f002 f852 	bl	801045c <GUI_ALLOC_UnlockH>
 800e3b8:	e000      	b.n	800e3bc <GUI_TIMER_Exec+0x64>
 800e3ba:	2500      	movs	r5, #0
 800e3bc:	4628      	mov	r0, r5
 800e3be:	b005      	add	sp, #20
 800e3c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e3c4:	200194ec 	.word	0x200194ec

0800e3c8 <_Link>:
 800e3c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e3ca:	4c25      	ldr	r4, [pc, #148]	; (800e460 <_Link+0x98>)
 800e3cc:	b085      	sub	sp, #20
 800e3ce:	4605      	mov	r5, r0
 800e3d0:	f002 f836 	bl	8010440 <GUI_ALLOC_LockH>
 800e3d4:	6823      	ldr	r3, [r4, #0]
 800e3d6:	9001      	str	r0, [sp, #4]
 800e3d8:	b913      	cbnz	r3, 800e3e0 <_Link+0x18>
 800e3da:	6025      	str	r5, [r4, #0]
 800e3dc:	6043      	str	r3, [r0, #4]
 800e3de:	e039      	b.n	800e454 <_Link+0x8c>
 800e3e0:	4618      	mov	r0, r3
 800e3e2:	f002 f82d 	bl	8010440 <GUI_ALLOC_LockH>
 800e3e6:	ab04      	add	r3, sp, #16
 800e3e8:	6946      	ldr	r6, [r0, #20]
 800e3ea:	f843 0d10 	str.w	r0, [r3, #-16]!
 800e3ee:	4668      	mov	r0, sp
 800e3f0:	f002 f834 	bl	801045c <GUI_ALLOC_UnlockH>
 800e3f4:	9b01      	ldr	r3, [sp, #4]
 800e3f6:	695a      	ldr	r2, [r3, #20]
 800e3f8:	1b92      	subs	r2, r2, r6
 800e3fa:	2a00      	cmp	r2, #0
 800e3fc:	dc03      	bgt.n	800e406 <_Link+0x3e>
 800e3fe:	6822      	ldr	r2, [r4, #0]
 800e400:	605a      	str	r2, [r3, #4]
 800e402:	6025      	str	r5, [r4, #0]
 800e404:	e026      	b.n	800e454 <_Link+0x8c>
 800e406:	6826      	ldr	r6, [r4, #0]
 800e408:	4630      	mov	r0, r6
 800e40a:	f002 f819 	bl	8010440 <GUI_ALLOC_LockH>
 800e40e:	ac04      	add	r4, sp, #16
 800e410:	6846      	ldr	r6, [r0, #4]
 800e412:	f844 0d08 	str.w	r0, [r4, #-8]!
 800e416:	b1be      	cbz	r6, 800e448 <_Link+0x80>
 800e418:	4630      	mov	r0, r6
 800e41a:	f002 f811 	bl	8010440 <GUI_ALLOC_LockH>
 800e41e:	ab04      	add	r3, sp, #16
 800e420:	6947      	ldr	r7, [r0, #20]
 800e422:	f843 0d04 	str.w	r0, [r3, #-4]!
 800e426:	4618      	mov	r0, r3
 800e428:	f002 f818 	bl	801045c <GUI_ALLOC_UnlockH>
 800e42c:	9a01      	ldr	r2, [sp, #4]
 800e42e:	6953      	ldr	r3, [r2, #20]
 800e430:	1bdb      	subs	r3, r3, r7
 800e432:	2b00      	cmp	r3, #0
 800e434:	9b02      	ldr	r3, [sp, #8]
 800e436:	dc02      	bgt.n	800e43e <_Link+0x76>
 800e438:	6056      	str	r6, [r2, #4]
 800e43a:	605d      	str	r5, [r3, #4]
 800e43c:	e007      	b.n	800e44e <_Link+0x86>
 800e43e:	4620      	mov	r0, r4
 800e440:	685e      	ldr	r6, [r3, #4]
 800e442:	f002 f80b 	bl	801045c <GUI_ALLOC_UnlockH>
 800e446:	e7df      	b.n	800e408 <_Link+0x40>
 800e448:	9b01      	ldr	r3, [sp, #4]
 800e44a:	605e      	str	r6, [r3, #4]
 800e44c:	6045      	str	r5, [r0, #4]
 800e44e:	4620      	mov	r0, r4
 800e450:	f002 f804 	bl	801045c <GUI_ALLOC_UnlockH>
 800e454:	a801      	add	r0, sp, #4
 800e456:	f002 f801 	bl	801045c <GUI_ALLOC_UnlockH>
 800e45a:	b005      	add	sp, #20
 800e45c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e45e:	bf00      	nop
 800e460:	200194ec 	.word	0x200194ec

0800e464 <_Unlink>:
 800e464:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e466:	4605      	mov	r5, r0
 800e468:	b1f0      	cbz	r0, 800e4a8 <_Unlink+0x44>
 800e46a:	f001 ffe9 	bl	8010440 <GUI_ALLOC_LockH>
 800e46e:	4b0f      	ldr	r3, [pc, #60]	; (800e4ac <_Unlink+0x48>)
 800e470:	9000      	str	r0, [sp, #0]
 800e472:	681c      	ldr	r4, [r3, #0]
 800e474:	42ac      	cmp	r4, r5
 800e476:	d104      	bne.n	800e482 <_Unlink+0x1e>
 800e478:	6842      	ldr	r2, [r0, #4]
 800e47a:	601a      	str	r2, [r3, #0]
 800e47c:	e011      	b.n	800e4a2 <_Unlink+0x3e>
 800e47e:	f001 ffed 	bl	801045c <GUI_ALLOC_UnlockH>
 800e482:	b174      	cbz	r4, 800e4a2 <_Unlink+0x3e>
 800e484:	4620      	mov	r0, r4
 800e486:	f001 ffdb 	bl	8010440 <GUI_ALLOC_LockH>
 800e48a:	4603      	mov	r3, r0
 800e48c:	a802      	add	r0, sp, #8
 800e48e:	685c      	ldr	r4, [r3, #4]
 800e490:	f840 3d04 	str.w	r3, [r0, #-4]!
 800e494:	42ac      	cmp	r4, r5
 800e496:	d1f2      	bne.n	800e47e <_Unlink+0x1a>
 800e498:	9a00      	ldr	r2, [sp, #0]
 800e49a:	6852      	ldr	r2, [r2, #4]
 800e49c:	605a      	str	r2, [r3, #4]
 800e49e:	f001 ffdd 	bl	801045c <GUI_ALLOC_UnlockH>
 800e4a2:	4668      	mov	r0, sp
 800e4a4:	f001 ffda 	bl	801045c <GUI_ALLOC_UnlockH>
 800e4a8:	b003      	add	sp, #12
 800e4aa:	bd30      	pop	{r4, r5, pc}
 800e4ac:	200194ec 	.word	0x200194ec

0800e4b0 <GUI_TIMER__GetFirstTimer>:
 800e4b0:	2300      	movs	r3, #0
 800e4b2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e4b4:	6003      	str	r3, [r0, #0]
 800e4b6:	4b09      	ldr	r3, [pc, #36]	; (800e4dc <GUI_TIMER__GetFirstTimer+0x2c>)
 800e4b8:	681c      	ldr	r4, [r3, #0]
 800e4ba:	4605      	mov	r5, r0
 800e4bc:	b154      	cbz	r4, 800e4d4 <GUI_TIMER__GetFirstTimer+0x24>
 800e4be:	4620      	mov	r0, r4
 800e4c0:	f001 ffbe 	bl	8010440 <GUI_ALLOC_LockH>
 800e4c4:	ab02      	add	r3, sp, #8
 800e4c6:	6902      	ldr	r2, [r0, #16]
 800e4c8:	f843 0d04 	str.w	r0, [r3, #-4]!
 800e4cc:	602a      	str	r2, [r5, #0]
 800e4ce:	4618      	mov	r0, r3
 800e4d0:	f001 ffc4 	bl	801045c <GUI_ALLOC_UnlockH>
 800e4d4:	4620      	mov	r0, r4
 800e4d6:	b003      	add	sp, #12
 800e4d8:	bd30      	pop	{r4, r5, pc}
 800e4da:	bf00      	nop
 800e4dc:	200194e8 	.word	0x200194e8

0800e4e0 <GUI_TIMER__GetNextTimerLin>:
 800e4e0:	2300      	movs	r3, #0
 800e4e2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e4e4:	600b      	str	r3, [r1, #0]
 800e4e6:	460e      	mov	r6, r1
 800e4e8:	4604      	mov	r4, r0
 800e4ea:	b190      	cbz	r0, 800e512 <GUI_TIMER__GetNextTimerLin+0x32>
 800e4ec:	f001 ffa8 	bl	8010440 <GUI_ALLOC_LockH>
 800e4f0:	ad02      	add	r5, sp, #8
 800e4f2:	6884      	ldr	r4, [r0, #8]
 800e4f4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800e4f8:	b144      	cbz	r4, 800e50c <GUI_TIMER__GetNextTimerLin+0x2c>
 800e4fa:	4628      	mov	r0, r5
 800e4fc:	f001 ffae 	bl	801045c <GUI_ALLOC_UnlockH>
 800e500:	4620      	mov	r0, r4
 800e502:	f001 ff9d 	bl	8010440 <GUI_ALLOC_LockH>
 800e506:	6903      	ldr	r3, [r0, #16]
 800e508:	9001      	str	r0, [sp, #4]
 800e50a:	6033      	str	r3, [r6, #0]
 800e50c:	4628      	mov	r0, r5
 800e50e:	f001 ffa5 	bl	801045c <GUI_ALLOC_UnlockH>
 800e512:	4620      	mov	r0, r4
 800e514:	b002      	add	sp, #8
 800e516:	bd70      	pop	{r4, r5, r6, pc}

0800e518 <GUI_TIMER_Create>:
 800e518:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e51c:	4681      	mov	r9, r0
 800e51e:	201c      	movs	r0, #28
 800e520:	460e      	mov	r6, r1
 800e522:	4690      	mov	r8, r2
 800e524:	461f      	mov	r7, r3
 800e526:	f002 f9f8 	bl	801091a <GUI_ALLOC_AllocZero>
 800e52a:	4604      	mov	r4, r0
 800e52c:	2800      	cmp	r0, #0
 800e52e:	d031      	beq.n	800e594 <GUI_TIMER_Create+0x7c>
 800e530:	4b1a      	ldr	r3, [pc, #104]	; (800e59c <GUI_TIMER_Create+0x84>)
 800e532:	4a1b      	ldr	r2, [pc, #108]	; (800e5a0 <GUI_TIMER_Create+0x88>)
 800e534:	601a      	str	r2, [r3, #0]
 800e536:	f001 ff83 	bl	8010440 <GUI_ALLOC_LockH>
 800e53a:	9000      	str	r0, [sp, #0]
 800e53c:	b916      	cbnz	r6, 800e544 <GUI_TIMER_Create+0x2c>
 800e53e:	f000 f8a9 	bl	800e694 <GUI_GetTime>
 800e542:	4606      	mov	r6, r0
 800e544:	a802      	add	r0, sp, #8
 800e546:	f850 5d08 	ldr.w	r5, [r0, #-8]!
 800e54a:	4668      	mov	r0, sp
 800e54c:	616e      	str	r6, [r5, #20]
 800e54e:	f8c5 9000 	str.w	r9, [r5]
 800e552:	f8c5 8010 	str.w	r8, [r5, #16]
 800e556:	81af      	strh	r7, [r5, #12]
 800e558:	f001 ff80 	bl	801045c <GUI_ALLOC_UnlockH>
 800e55c:	4620      	mov	r0, r4
 800e55e:	f7ff ff33 	bl	800e3c8 <_Link>
 800e562:	4b10      	ldr	r3, [pc, #64]	; (800e5a4 <GUI_TIMER_Create+0x8c>)
 800e564:	681a      	ldr	r2, [r3, #0]
 800e566:	b932      	cbnz	r2, 800e576 <GUI_TIMER_Create+0x5e>
 800e568:	2201      	movs	r2, #1
 800e56a:	480f      	ldr	r0, [pc, #60]	; (800e5a8 <GUI_TIMER_Create+0x90>)
 800e56c:	601a      	str	r2, [r3, #0]
 800e56e:	4b0f      	ldr	r3, [pc, #60]	; (800e5ac <GUI_TIMER_Create+0x94>)
 800e570:	6003      	str	r3, [r0, #0]
 800e572:	f001 fb5d 	bl	800fc30 <GUI__RegisterExit>
 800e576:	4620      	mov	r0, r4
 800e578:	f001 ff62 	bl	8010440 <GUI_ALLOC_LockH>
 800e57c:	4a0c      	ldr	r2, [pc, #48]	; (800e5b0 <GUI_TIMER_Create+0x98>)
 800e57e:	9001      	str	r0, [sp, #4]
 800e580:	6813      	ldr	r3, [r2, #0]
 800e582:	b913      	cbnz	r3, 800e58a <GUI_TIMER_Create+0x72>
 800e584:	6014      	str	r4, [r2, #0]
 800e586:	6083      	str	r3, [r0, #8]
 800e588:	e001      	b.n	800e58e <GUI_TIMER_Create+0x76>
 800e58a:	6083      	str	r3, [r0, #8]
 800e58c:	6014      	str	r4, [r2, #0]
 800e58e:	a801      	add	r0, sp, #4
 800e590:	f001 ff64 	bl	801045c <GUI_ALLOC_UnlockH>
 800e594:	4620      	mov	r0, r4
 800e596:	b003      	add	sp, #12
 800e598:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e59c:	2001b380 	.word	0x2001b380
 800e5a0:	0800e359 	.word	0x0800e359
 800e5a4:	200194f8 	.word	0x200194f8
 800e5a8:	200194f0 	.word	0x200194f0
 800e5ac:	0800e33d 	.word	0x0800e33d
 800e5b0:	200194e8 	.word	0x200194e8

0800e5b4 <GUI_TIMER_Delete>:
 800e5b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e5b6:	4604      	mov	r4, r0
 800e5b8:	b358      	cbz	r0, 800e612 <GUI_TIMER_Delete+0x5e>
 800e5ba:	4d17      	ldr	r5, [pc, #92]	; (800e618 <GUI_TIMER_Delete+0x64>)
 800e5bc:	682e      	ldr	r6, [r5, #0]
 800e5be:	4286      	cmp	r6, r0
 800e5c0:	d10b      	bne.n	800e5da <GUI_TIMER_Delete+0x26>
 800e5c2:	f001 ff3d 	bl	8010440 <GUI_ALLOC_LockH>
 800e5c6:	ab02      	add	r3, sp, #8
 800e5c8:	6882      	ldr	r2, [r0, #8]
 800e5ca:	f843 0d04 	str.w	r0, [r3, #-4]!
 800e5ce:	602a      	str	r2, [r5, #0]
 800e5d0:	4618      	mov	r0, r3
 800e5d2:	e016      	b.n	800e602 <GUI_TIMER_Delete+0x4e>
 800e5d4:	4668      	mov	r0, sp
 800e5d6:	f001 ff41 	bl	801045c <GUI_ALLOC_UnlockH>
 800e5da:	4630      	mov	r0, r6
 800e5dc:	f001 ff30 	bl	8010440 <GUI_ALLOC_LockH>
 800e5e0:	6886      	ldr	r6, [r0, #8]
 800e5e2:	ad02      	add	r5, sp, #8
 800e5e4:	42a6      	cmp	r6, r4
 800e5e6:	f845 0d08 	str.w	r0, [r5, #-8]!
 800e5ea:	d1f3      	bne.n	800e5d4 <GUI_TIMER_Delete+0x20>
 800e5ec:	4620      	mov	r0, r4
 800e5ee:	f001 ff27 	bl	8010440 <GUI_ALLOC_LockH>
 800e5f2:	9b00      	ldr	r3, [sp, #0]
 800e5f4:	6882      	ldr	r2, [r0, #8]
 800e5f6:	9001      	str	r0, [sp, #4]
 800e5f8:	609a      	str	r2, [r3, #8]
 800e5fa:	a801      	add	r0, sp, #4
 800e5fc:	f001 ff2e 	bl	801045c <GUI_ALLOC_UnlockH>
 800e600:	4668      	mov	r0, sp
 800e602:	f001 ff2b 	bl	801045c <GUI_ALLOC_UnlockH>
 800e606:	4620      	mov	r0, r4
 800e608:	f7ff ff2c 	bl	800e464 <_Unlink>
 800e60c:	4620      	mov	r0, r4
 800e60e:	f001 ff51 	bl	80104b4 <GUI_ALLOC_Free>
 800e612:	b002      	add	sp, #8
 800e614:	bd70      	pop	{r4, r5, r6, pc}
 800e616:	bf00      	nop
 800e618:	200194e8 	.word	0x200194e8

0800e61c <GUI_TIMER_SetPeriod>:
 800e61c:	b513      	push	{r0, r1, r4, lr}
 800e61e:	460c      	mov	r4, r1
 800e620:	b140      	cbz	r0, 800e634 <GUI_TIMER_SetPeriod+0x18>
 800e622:	f001 ff0d 	bl	8010440 <GUI_ALLOC_LockH>
 800e626:	ab02      	add	r3, sp, #8
 800e628:	6184      	str	r4, [r0, #24]
 800e62a:	f843 0d04 	str.w	r0, [r3, #-4]!
 800e62e:	4618      	mov	r0, r3
 800e630:	f001 ff14 	bl	801045c <GUI_ALLOC_UnlockH>
 800e634:	b002      	add	sp, #8
 800e636:	bd10      	pop	{r4, pc}

0800e638 <GUI_TIMER_Restart>:
 800e638:	b513      	push	{r0, r1, r4, lr}
 800e63a:	4604      	mov	r4, r0
 800e63c:	b198      	cbz	r0, 800e666 <GUI_TIMER_Restart+0x2e>
 800e63e:	f001 feff 	bl	8010440 <GUI_ALLOC_LockH>
 800e642:	9001      	str	r0, [sp, #4]
 800e644:	f000 f826 	bl	800e694 <GUI_GetTime>
 800e648:	ab02      	add	r3, sp, #8
 800e64a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 800e64e:	6991      	ldr	r1, [r2, #24]
 800e650:	4408      	add	r0, r1
 800e652:	6150      	str	r0, [r2, #20]
 800e654:	4618      	mov	r0, r3
 800e656:	f001 ff01 	bl	801045c <GUI_ALLOC_UnlockH>
 800e65a:	4620      	mov	r0, r4
 800e65c:	f7ff ff02 	bl	800e464 <_Unlink>
 800e660:	4620      	mov	r0, r4
 800e662:	f7ff feb1 	bl	800e3c8 <_Link>
 800e666:	b002      	add	sp, #8
 800e668:	bd10      	pop	{r4, pc}

0800e66a <GUI_TIMER_GetFlag>:
 800e66a:	b513      	push	{r0, r1, r4, lr}
 800e66c:	460c      	mov	r4, r1
 800e66e:	b168      	cbz	r0, 800e68c <GUI_TIMER_GetFlag+0x22>
 800e670:	f001 fee6 	bl	8010440 <GUI_ALLOC_LockH>
 800e674:	ab02      	add	r3, sp, #8
 800e676:	8982      	ldrh	r2, [r0, #12]
 800e678:	f843 0d04 	str.w	r0, [r3, #-4]!
 800e67c:	4214      	tst	r4, r2
 800e67e:	4618      	mov	r0, r3
 800e680:	bf0c      	ite	eq
 800e682:	2400      	moveq	r4, #0
 800e684:	2401      	movne	r4, #1
 800e686:	f001 fee9 	bl	801045c <GUI_ALLOC_UnlockH>
 800e68a:	e000      	b.n	800e68e <GUI_TIMER_GetFlag+0x24>
 800e68c:	2401      	movs	r4, #1
 800e68e:	4620      	mov	r0, r4
 800e690:	b002      	add	sp, #8
 800e692:	bd10      	pop	{r4, pc}

0800e694 <GUI_GetTime>:
 800e694:	f7f8 b936 	b.w	8006904 <GUI_X_GetTime>

0800e698 <GUI_Delay>:
 800e698:	b538      	push	{r3, r4, r5, lr}
 800e69a:	4605      	mov	r5, r0
 800e69c:	f7f8 f932 	bl	8006904 <GUI_X_GetTime>
 800e6a0:	4405      	add	r5, r0
 800e6a2:	f7f8 f92f 	bl	8006904 <GUI_X_GetTime>
 800e6a6:	1a2c      	subs	r4, r5, r0
 800e6a8:	2c00      	cmp	r4, #0
 800e6aa:	dd08      	ble.n	800e6be <GUI_Delay+0x26>
 800e6ac:	f000 fdcc 	bl	800f248 <GUI_Exec>
 800e6b0:	2c05      	cmp	r4, #5
 800e6b2:	bfb4      	ite	lt
 800e6b4:	4620      	movlt	r0, r4
 800e6b6:	2005      	movge	r0, #5
 800e6b8:	f7f8 f92a 	bl	8006910 <GUI_X_Delay>
 800e6bc:	e7f1      	b.n	800e6a2 <GUI_Delay+0xa>
 800e6be:	bd38      	pop	{r3, r4, r5, pc}

0800e6c0 <GUI_TOUCH_Calibrate>:
 800e6c0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e6c2:	2801      	cmp	r0, #1
 800e6c4:	9c08      	ldr	r4, [sp, #32]
 800e6c6:	d845      	bhi.n	800e754 <GUI_TOUCH_Calibrate+0x94>
 800e6c8:	4d25      	ldr	r5, [pc, #148]	; (800e760 <GUI_TOUCH_Calibrate+0xa0>)
 800e6ca:	d00c      	beq.n	800e6e6 <GUI_TOUCH_Calibrate+0x26>
 800e6cc:	4e25      	ldr	r6, [pc, #148]	; (800e764 <GUI_TOUCH_Calibrate+0xa4>)
 800e6ce:	e886 0006 	stmia.w	r6, {r1, r2}
 800e6d2:	6829      	ldr	r1, [r5, #0]
 800e6d4:	f001 0206 	and.w	r2, r1, #6
 800e6d8:	2a06      	cmp	r2, #6
 800e6da:	4a23      	ldr	r2, [pc, #140]	; (800e768 <GUI_TOUCH_Calibrate+0xa8>)
 800e6dc:	d010      	beq.n	800e700 <GUI_TOUCH_Calibrate+0x40>
 800e6de:	f001 0105 	and.w	r1, r1, #5
 800e6e2:	2901      	cmp	r1, #1
 800e6e4:	e00b      	b.n	800e6fe <GUI_TOUCH_Calibrate+0x3e>
 800e6e6:	4e21      	ldr	r6, [pc, #132]	; (800e76c <GUI_TOUCH_Calibrate+0xac>)
 800e6e8:	e886 0006 	stmia.w	r6, {r1, r2}
 800e6ec:	6829      	ldr	r1, [r5, #0]
 800e6ee:	f001 0205 	and.w	r2, r1, #5
 800e6f2:	2a05      	cmp	r2, #5
 800e6f4:	4a1e      	ldr	r2, [pc, #120]	; (800e770 <GUI_TOUCH_Calibrate+0xb0>)
 800e6f6:	d003      	beq.n	800e700 <GUI_TOUCH_Calibrate+0x40>
 800e6f8:	f001 0106 	and.w	r1, r1, #6
 800e6fc:	2902      	cmp	r1, #2
 800e6fe:	d102      	bne.n	800e706 <GUI_TOUCH_Calibrate+0x46>
 800e700:	6014      	str	r4, [r2, #0]
 800e702:	6053      	str	r3, [r2, #4]
 800e704:	e001      	b.n	800e70a <GUI_TOUCH_Calibrate+0x4a>
 800e706:	e882 0018 	stmia.w	r2, {r3, r4}
 800e70a:	4b1a      	ldr	r3, [pc, #104]	; (800e774 <GUI_TOUCH_Calibrate+0xb4>)
 800e70c:	781a      	ldrb	r2, [r3, #0]
 800e70e:	4102      	asrs	r2, r0
 800e710:	07d2      	lsls	r2, r2, #31
 800e712:	bf44      	itt	mi
 800e714:	2200      	movmi	r2, #0
 800e716:	701a      	strbmi	r2, [r3, #0]
 800e718:	2201      	movs	r2, #1
 800e71a:	fa02 f000 	lsl.w	r0, r2, r0
 800e71e:	781a      	ldrb	r2, [r3, #0]
 800e720:	4310      	orrs	r0, r2
 800e722:	b2c0      	uxtb	r0, r0
 800e724:	2803      	cmp	r0, #3
 800e726:	7018      	strb	r0, [r3, #0]
 800e728:	d116      	bne.n	800e758 <GUI_TOUCH_Calibrate+0x98>
 800e72a:	4c13      	ldr	r4, [pc, #76]	; (800e778 <GUI_TOUCH_Calibrate+0xb8>)
 800e72c:	6823      	ldr	r3, [r4, #0]
 800e72e:	7c58      	ldrb	r0, [r3, #17]
 800e730:	f7fe feac 	bl	800d48c <LCD_GetXSizeEx>
 800e734:	6823      	ldr	r3, [r4, #0]
 800e736:	4605      	mov	r5, r0
 800e738:	7c58      	ldrb	r0, [r3, #17]
 800e73a:	f7fe feaa 	bl	800d492 <LCD_GetYSizeEx>
 800e73e:	4b0c      	ldr	r3, [pc, #48]	; (800e770 <GUI_TOUCH_Calibrate+0xb0>)
 800e740:	9002      	str	r0, [sp, #8]
 800e742:	e88d 0028 	stmia.w	sp, {r3, r5}
 800e746:	4907      	ldr	r1, [pc, #28]	; (800e764 <GUI_TOUCH_Calibrate+0xa4>)
 800e748:	4a08      	ldr	r2, [pc, #32]	; (800e76c <GUI_TOUCH_Calibrate+0xac>)
 800e74a:	4b07      	ldr	r3, [pc, #28]	; (800e768 <GUI_TOUCH_Calibrate+0xa8>)
 800e74c:	2002      	movs	r0, #2
 800e74e:	f000 f8ff 	bl	800e950 <GUI_TOUCH_CalcCoefficients>
 800e752:	e002      	b.n	800e75a <GUI_TOUCH_Calibrate+0x9a>
 800e754:	2001      	movs	r0, #1
 800e756:	e000      	b.n	800e75a <GUI_TOUCH_Calibrate+0x9a>
 800e758:	2000      	movs	r0, #0
 800e75a:	b004      	add	sp, #16
 800e75c:	bd70      	pop	{r4, r5, r6, pc}
 800e75e:	bf00      	nop
 800e760:	20019510 	.word	0x20019510
 800e764:	200194fc 	.word	0x200194fc
 800e768:	20019518 	.word	0x20019518
 800e76c:	20019524 	.word	0x20019524
 800e770:	20019504 	.word	0x20019504
 800e774:	2001950c 	.word	0x2001950c
 800e778:	20000254 	.word	0x20000254

0800e77c <GUI_TOUCH_Exec>:
 800e77c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e77e:	4c29      	ldr	r4, [pc, #164]	; (800e824 <GUI_TOUCH_Exec+0xa8>)
 800e780:	4d29      	ldr	r5, [pc, #164]	; (800e828 <GUI_TOUCH_Exec+0xac>)
 800e782:	7823      	ldrb	r3, [r4, #0]
 800e784:	b087      	sub	sp, #28
 800e786:	4626      	mov	r6, r4
 800e788:	b943      	cbnz	r3, 800e79c <GUI_TOUCH_Exec+0x20>
 800e78a:	f7f8 f8d4 	bl	8006936 <GUI_TOUCH_X_MeasureY>
 800e78e:	6028      	str	r0, [r5, #0]
 800e790:	f7f8 f8cc 	bl	800692c <GUI_TOUCH_X_ActivateY>
 800e794:	7823      	ldrb	r3, [r4, #0]
 800e796:	3301      	adds	r3, #1
 800e798:	7023      	strb	r3, [r4, #0]
 800e79a:	e040      	b.n	800e81e <GUI_TOUCH_Exec+0xa2>
 800e79c:	f7f8 f8c7 	bl	800692e <GUI_TOUCH_X_MeasureX>
 800e7a0:	4c22      	ldr	r4, [pc, #136]	; (800e82c <GUI_TOUCH_Exec+0xb0>)
 800e7a2:	6020      	str	r0, [r4, #0]
 800e7a4:	f7f8 f8c1 	bl	800692a <GUI_TOUCH_X_ActivateX>
 800e7a8:	6823      	ldr	r3, [r4, #0]
 800e7aa:	9301      	str	r3, [sp, #4]
 800e7ac:	682b      	ldr	r3, [r5, #0]
 800e7ae:	9302      	str	r3, [sp, #8]
 800e7b0:	f005 ffa8 	bl	8014704 <GUI_TOUCH_GetLayer>
 800e7b4:	a902      	add	r1, sp, #8
 800e7b6:	f88d 0015 	strb.w	r0, [sp, #21]
 800e7ba:	a801      	add	r0, sp, #4
 800e7bc:	f000 f88a 	bl	800e8d4 <GUI_TOUCH_CalibratePoint>
 800e7c0:	4c1b      	ldr	r4, [pc, #108]	; (800e830 <GUI_TOUCH_Exec+0xb4>)
 800e7c2:	b148      	cbz	r0, 800e7d8 <GUI_TOUCH_Exec+0x5c>
 800e7c4:	7823      	ldrb	r3, [r4, #0]
 800e7c6:	b343      	cbz	r3, 800e81a <GUI_TOUCH_Exec+0x9e>
 800e7c8:	4b1a      	ldr	r3, [pc, #104]	; (800e834 <GUI_TOUCH_Exec+0xb8>)
 800e7ca:	681b      	ldr	r3, [r3, #0]
 800e7cc:	9303      	str	r3, [sp, #12]
 800e7ce:	4b1a      	ldr	r3, [pc, #104]	; (800e838 <GUI_TOUCH_Exec+0xbc>)
 800e7d0:	681b      	ldr	r3, [r3, #0]
 800e7d2:	9304      	str	r3, [sp, #16]
 800e7d4:	2500      	movs	r5, #0
 800e7d6:	e01a      	b.n	800e80e <GUI_TOUCH_Exec+0x92>
 800e7d8:	4816      	ldr	r0, [pc, #88]	; (800e834 <GUI_TOUCH_Exec+0xb8>)
 800e7da:	4917      	ldr	r1, [pc, #92]	; (800e838 <GUI_TOUCH_Exec+0xbc>)
 800e7dc:	f894 c000 	ldrb.w	ip, [r4]
 800e7e0:	9a01      	ldr	r2, [sp, #4]
 800e7e2:	6807      	ldr	r7, [r0, #0]
 800e7e4:	9b02      	ldr	r3, [sp, #8]
 800e7e6:	680d      	ldr	r5, [r1, #0]
 800e7e8:	f1bc 0f00 	cmp.w	ip, #0
 800e7ec:	d00a      	beq.n	800e804 <GUI_TOUCH_Exec+0x88>
 800e7ee:	1bd7      	subs	r7, r2, r7
 800e7f0:	1b5d      	subs	r5, r3, r5
 800e7f2:	2f00      	cmp	r7, #0
 800e7f4:	bfb8      	it	lt
 800e7f6:	427f      	neglt	r7, r7
 800e7f8:	2d00      	cmp	r5, #0
 800e7fa:	bfb8      	it	lt
 800e7fc:	426d      	neglt	r5, r5
 800e7fe:	443d      	add	r5, r7
 800e800:	2d02      	cmp	r5, #2
 800e802:	dd0a      	ble.n	800e81a <GUI_TOUCH_Exec+0x9e>
 800e804:	6002      	str	r2, [r0, #0]
 800e806:	9203      	str	r2, [sp, #12]
 800e808:	600b      	str	r3, [r1, #0]
 800e80a:	9304      	str	r3, [sp, #16]
 800e80c:	2501      	movs	r5, #1
 800e80e:	a803      	add	r0, sp, #12
 800e810:	f88d 5014 	strb.w	r5, [sp, #20]
 800e814:	f000 fae8 	bl	800ede8 <GUI_TOUCH_StoreStateEx>
 800e818:	7025      	strb	r5, [r4, #0]
 800e81a:	2300      	movs	r3, #0
 800e81c:	7033      	strb	r3, [r6, #0]
 800e81e:	b007      	add	sp, #28
 800e820:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e822:	bf00      	nop
 800e824:	20019515 	.word	0x20019515
 800e828:	2001952c 	.word	0x2001952c
 800e82c:	20019520 	.word	0x20019520
 800e830:	20019514 	.word	0x20019514
 800e834:	20000240 	.word	0x20000240
 800e838:	2000023c 	.word	0x2000023c

0800e83c <GUI_TOUCH_TransformPoint>:
 800e83c:	b570      	push	{r4, r5, r6, lr}
 800e83e:	4b22      	ldr	r3, [pc, #136]	; (800e8c8 <GUI_TOUCH_TransformPoint+0x8c>)
 800e840:	681b      	ldr	r3, [r3, #0]
 800e842:	ed2d 8b02 	vpush	{d8}
 800e846:	4606      	mov	r6, r0
 800e848:	460d      	mov	r5, r1
 800e84a:	b3c3      	cbz	r3, 800e8be <GUI_TOUCH_TransformPoint+0x82>
 800e84c:	edd0 7a00 	vldr	s15, [r0]
 800e850:	4c1e      	ldr	r4, [pc, #120]	; (800e8cc <GUI_TOUCH_TransformPoint+0x90>)
 800e852:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 800e856:	edd1 7a00 	vldr	s15, [r1]
 800e85a:	ed94 7a01 	vldr	s14, [r4, #4]
 800e85e:	eef8 8ae7 	vcvt.f32.s32	s17, s15
 800e862:	edd4 7a00 	vldr	s15, [r4]
 800e866:	ee28 7a87 	vmul.f32	s14, s17, s14
 800e86a:	eea7 7a88 	vfma.f32	s14, s15, s16
 800e86e:	edd4 7a02 	vldr	s15, [r4, #8]
 800e872:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e876:	ee17 0a90 	vmov	r0, s15
 800e87a:	f7f1 fe31 	bl	80004e0 <__aeabi_f2d>
 800e87e:	2200      	movs	r2, #0
 800e880:	4b13      	ldr	r3, [pc, #76]	; (800e8d0 <GUI_TOUCH_TransformPoint+0x94>)
 800e882:	f7f1 fccf 	bl	8000224 <__adddf3>
 800e886:	f7f2 f895 	bl	80009b4 <__aeabi_d2iz>
 800e88a:	edd4 7a04 	vldr	s15, [r4, #16]
 800e88e:	ed94 7a03 	vldr	s14, [r4, #12]
 800e892:	6030      	str	r0, [r6, #0]
 800e894:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800e898:	eee7 7a08 	vfma.f32	s15, s14, s16
 800e89c:	ed94 7a05 	vldr	s14, [r4, #20]
 800e8a0:	ee37 7a87 	vadd.f32	s14, s15, s14
 800e8a4:	ee17 0a10 	vmov	r0, s14
 800e8a8:	f7f1 fe1a 	bl	80004e0 <__aeabi_f2d>
 800e8ac:	2200      	movs	r2, #0
 800e8ae:	4b08      	ldr	r3, [pc, #32]	; (800e8d0 <GUI_TOUCH_TransformPoint+0x94>)
 800e8b0:	f7f1 fcb8 	bl	8000224 <__adddf3>
 800e8b4:	f7f2 f87e 	bl	80009b4 <__aeabi_d2iz>
 800e8b8:	6028      	str	r0, [r5, #0]
 800e8ba:	2000      	movs	r0, #0
 800e8bc:	e000      	b.n	800e8c0 <GUI_TOUCH_TransformPoint+0x84>
 800e8be:	2001      	movs	r0, #1
 800e8c0:	ecbd 8b02 	vpop	{d8}
 800e8c4:	bd70      	pop	{r4, r5, r6, pc}
 800e8c6:	bf00      	nop
 800e8c8:	20019540 	.word	0x20019540
 800e8cc:	20019544 	.word	0x20019544
 800e8d0:	3fe00000 	.word	0x3fe00000

0800e8d4 <GUI_TOUCH_CalibratePoint>:
 800e8d4:	4b18      	ldr	r3, [pc, #96]	; (800e938 <GUI_TOUCH_CalibratePoint+0x64>)
 800e8d6:	6802      	ldr	r2, [r0, #0]
 800e8d8:	681b      	ldr	r3, [r3, #0]
 800e8da:	429a      	cmp	r2, r3
 800e8dc:	b570      	push	{r4, r5, r6, lr}
 800e8de:	4605      	mov	r5, r0
 800e8e0:	460c      	mov	r4, r1
 800e8e2:	db27      	blt.n	800e934 <GUI_TOUCH_CalibratePoint+0x60>
 800e8e4:	4e15      	ldr	r6, [pc, #84]	; (800e93c <GUI_TOUCH_CalibratePoint+0x68>)
 800e8e6:	680b      	ldr	r3, [r1, #0]
 800e8e8:	6836      	ldr	r6, [r6, #0]
 800e8ea:	42b3      	cmp	r3, r6
 800e8ec:	db22      	blt.n	800e934 <GUI_TOUCH_CalibratePoint+0x60>
 800e8ee:	4e14      	ldr	r6, [pc, #80]	; (800e940 <GUI_TOUCH_CalibratePoint+0x6c>)
 800e8f0:	6836      	ldr	r6, [r6, #0]
 800e8f2:	42b2      	cmp	r2, r6
 800e8f4:	dc1e      	bgt.n	800e934 <GUI_TOUCH_CalibratePoint+0x60>
 800e8f6:	4a13      	ldr	r2, [pc, #76]	; (800e944 <GUI_TOUCH_CalibratePoint+0x70>)
 800e8f8:	6812      	ldr	r2, [r2, #0]
 800e8fa:	4293      	cmp	r3, r2
 800e8fc:	dc1a      	bgt.n	800e934 <GUI_TOUCH_CalibratePoint+0x60>
 800e8fe:	f7ff ff9d 	bl	800e83c <GUI_TOUCH_TransformPoint>
 800e902:	b9c0      	cbnz	r0, 800e936 <GUI_TOUCH_CalibratePoint+0x62>
 800e904:	682a      	ldr	r2, [r5, #0]
 800e906:	2a00      	cmp	r2, #0
 800e908:	da01      	bge.n	800e90e <GUI_TOUCH_CalibratePoint+0x3a>
 800e90a:	6028      	str	r0, [r5, #0]
 800e90c:	e006      	b.n	800e91c <GUI_TOUCH_CalibratePoint+0x48>
 800e90e:	4b0e      	ldr	r3, [pc, #56]	; (800e948 <GUI_TOUCH_CalibratePoint+0x74>)
 800e910:	681b      	ldr	r3, [r3, #0]
 800e912:	429a      	cmp	r2, r3
 800e914:	bfa4      	itt	ge
 800e916:	f103 33ff 	addge.w	r3, r3, #4294967295
 800e91a:	602b      	strge	r3, [r5, #0]
 800e91c:	6822      	ldr	r2, [r4, #0]
 800e91e:	2a00      	cmp	r2, #0
 800e920:	da01      	bge.n	800e926 <GUI_TOUCH_CalibratePoint+0x52>
 800e922:	2300      	movs	r3, #0
 800e924:	e004      	b.n	800e930 <GUI_TOUCH_CalibratePoint+0x5c>
 800e926:	4b09      	ldr	r3, [pc, #36]	; (800e94c <GUI_TOUCH_CalibratePoint+0x78>)
 800e928:	681b      	ldr	r3, [r3, #0]
 800e92a:	429a      	cmp	r2, r3
 800e92c:	db03      	blt.n	800e936 <GUI_TOUCH_CalibratePoint+0x62>
 800e92e:	3b01      	subs	r3, #1
 800e930:	6023      	str	r3, [r4, #0]
 800e932:	bd70      	pop	{r4, r5, r6, pc}
 800e934:	2001      	movs	r0, #1
 800e936:	bd70      	pop	{r4, r5, r6, pc}
 800e938:	20019530 	.word	0x20019530
 800e93c:	20019534 	.word	0x20019534
 800e940:	20019560 	.word	0x20019560
 800e944:	2001955c 	.word	0x2001955c
 800e948:	20019538 	.word	0x20019538
 800e94c:	2001953c 	.word	0x2001953c

0800e950 <GUI_TOUCH_CalcCoefficients>:
 800e950:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e954:	ed2d 8b02 	vpush	{d8}
 800e958:	f8df c3bc 	ldr.w	ip, [pc, #956]	; 800ed18 <GUI_TOUCH_CalcCoefficients+0x3c8>
 800e95c:	b08c      	sub	sp, #48	; 0x30
 800e95e:	2400      	movs	r4, #0
 800e960:	2802      	cmp	r0, #2
 800e962:	9f16      	ldr	r7, [sp, #88]	; 0x58
 800e964:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 800e966:	f8dd a060 	ldr.w	sl, [sp, #96]	; 0x60
 800e96a:	f8cc 4000 	str.w	r4, [ip]
 800e96e:	d135      	bne.n	800e9dc <GUI_TOUCH_CalcCoefficients+0x8c>
 800e970:	c912      	ldmia	r1, {r1, r4}
 800e972:	6818      	ldr	r0, [r3, #0]
 800e974:	685b      	ldr	r3, [r3, #4]
 800e976:	1a61      	subs	r1, r4, r1
 800e978:	1a1b      	subs	r3, r3, r0
 800e97a:	ee00 1a10 	vmov	s0, r1
 800e97e:	ee07 3a90 	vmov	s15, r3
 800e982:	eeb8 7ac0 	vcvt.f32.s32	s14, s0
 800e986:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e98a:	ee05 0a10 	vmov	s10, r0
 800e98e:	eec7 7a27 	vdiv.f32	s15, s14, s15
 800e992:	6850      	ldr	r0, [r2, #4]
 800e994:	6812      	ldr	r2, [r2, #0]
 800e996:	4bdb      	ldr	r3, [pc, #876]	; (800ed04 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 800e998:	2100      	movs	r1, #0
 800e99a:	1a82      	subs	r2, r0, r2
 800e99c:	6059      	str	r1, [r3, #4]
 800e99e:	60d9      	str	r1, [r3, #12]
 800e9a0:	6839      	ldr	r1, [r7, #0]
 800e9a2:	eeb8 7ac5 	vcvt.f32.s32	s14, s10
 800e9a6:	ee06 2a10 	vmov	s12, r2
 800e9aa:	687a      	ldr	r2, [r7, #4]
 800e9ac:	edc3 7a00 	vstr	s15, [r3]
 800e9b0:	ee67 7a67 	vnmul.f32	s15, s14, s15
 800e9b4:	1a52      	subs	r2, r2, r1
 800e9b6:	edc3 7a02 	vstr	s15, [r3, #8]
 800e9ba:	ee07 2a90 	vmov	s15, r2
 800e9be:	eeb8 7ac6 	vcvt.f32.s32	s14, s12
 800e9c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e9c6:	ee06 1a90 	vmov	s13, r1
 800e9ca:	eec7 7a27 	vdiv.f32	s15, s14, s15
 800e9ce:	eeb8 7ae6 	vcvt.f32.s32	s14, s13
 800e9d2:	edc3 7a04 	vstr	s15, [r3, #16]
 800e9d6:	ee67 7a67 	vnmul.f32	s15, s14, s15
 800e9da:	e144      	b.n	800ec66 <GUI_TOUCH_CalcCoefficients+0x316>
 800e9dc:	f340 8148 	ble.w	800ec70 <GUI_TOUCH_CalcCoefficients+0x320>
 800e9e0:	2803      	cmp	r0, #3
 800e9e2:	d128      	bne.n	800ea36 <GUI_TOUCH_CalcCoefficients+0xe6>
 800e9e4:	4620      	mov	r0, r4
 800e9e6:	581d      	ldr	r5, [r3, r0]
 800e9e8:	ee00 5a10 	vmov	s0, r5
 800e9ec:	583d      	ldr	r5, [r7, r0]
 800e9ee:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 800e9f2:	ac00      	add	r4, sp, #0
 800e9f4:	ee00 5a10 	vmov	s0, r5
 800e9f8:	580d      	ldr	r5, [r1, r0]
 800e9fa:	4404      	add	r4, r0
 800e9fc:	edc4 7a00 	vstr	s15, [r4]
 800ea00:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 800ea04:	ac03      	add	r4, sp, #12
 800ea06:	ee00 5a10 	vmov	s0, r5
 800ea0a:	4404      	add	r4, r0
 800ea0c:	5815      	ldr	r5, [r2, r0]
 800ea0e:	edc4 7a00 	vstr	s15, [r4]
 800ea12:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 800ea16:	ac0c      	add	r4, sp, #48	; 0x30
 800ea18:	4404      	add	r4, r0
 800ea1a:	ee00 5a10 	vmov	s0, r5
 800ea1e:	ed44 7a06 	vstr	s15, [r4, #-24]	; 0xffffffe8
 800ea22:	ac0c      	add	r4, sp, #48	; 0x30
 800ea24:	4404      	add	r4, r0
 800ea26:	eef8 7ac0 	vcvt.f32.s32	s15, s0
 800ea2a:	3004      	adds	r0, #4
 800ea2c:	280c      	cmp	r0, #12
 800ea2e:	ed44 7a03 	vstr	s15, [r4, #-12]
 800ea32:	d1d8      	bne.n	800e9e6 <GUI_TOUCH_CalcCoefficients+0x96>
 800ea34:	e09b      	b.n	800eb6e <GUI_TOUCH_CalcCoefficients+0x21e>
 800ea36:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800ea3a:	44a1      	add	r9, r4
 800ea3c:	f04f 0800 	mov.w	r8, #0
 800ea40:	f849 8c0c 	str.w	r8, [r9, #-12]
 800ea44:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800ea48:	44a1      	add	r9, r4
 800ea4a:	f849 8c18 	str.w	r8, [r9, #-24]
 800ea4e:	f10d 090c 	add.w	r9, sp, #12
 800ea52:	44a1      	add	r9, r4
 800ea54:	f8c9 8000 	str.w	r8, [r9]
 800ea58:	f10d 0900 	add.w	r9, sp, #0
 800ea5c:	44a1      	add	r9, r4
 800ea5e:	3404      	adds	r4, #4
 800ea60:	2c0c      	cmp	r4, #12
 800ea62:	f8c9 8000 	str.w	r8, [r9]
 800ea66:	d1e6      	bne.n	800ea36 <GUI_TOUCH_CalcCoefficients+0xe6>
 800ea68:	ed9d 7a02 	vldr	s14, [sp, #8]
 800ea6c:	eddd 7a05 	vldr	s15, [sp, #20]
 800ea70:	eddd 3a08 	vldr	s7, [sp, #32]
 800ea74:	ed9d 4a0b 	vldr	s8, [sp, #44]	; 0x2c
 800ea78:	eddd 1a00 	vldr	s3, [sp]
 800ea7c:	eddd 5a01 	vldr	s11, [sp, #4]
 800ea80:	ed9d 2a04 	vldr	s4, [sp, #16]
 800ea84:	eddd 2a06 	vldr	s5, [sp, #24]
 800ea88:	ed9d 3a07 	vldr	s6, [sp, #28]
 800ea8c:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 800ea90:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 800ea94:	ea4f 0880 	mov.w	r8, r0, lsl #2
 800ea98:	2400      	movs	r4, #0
 800ea9a:	591d      	ldr	r5, [r3, r4]
 800ea9c:	ee00 5a10 	vmov	s0, r5
 800eaa0:	593d      	ldr	r5, [r7, r4]
 800eaa2:	eeb8 6ac0 	vcvt.f32.s32	s12, s0
 800eaa6:	ee00 5a10 	vmov	s0, r5
 800eaaa:	590d      	ldr	r5, [r1, r4]
 800eaac:	eef8 6ac0 	vcvt.f32.s32	s13, s0
 800eab0:	ee00 5a10 	vmov	s0, r5
 800eab4:	5915      	ldr	r5, [r2, r4]
 800eab6:	eef8 4ac0 	vcvt.f32.s32	s9, s0
 800eaba:	ee00 5a10 	vmov	s0, r5
 800eabe:	eeb8 5ac0 	vcvt.f32.s32	s10, s0
 800eac2:	eee6 2a24 	vfma.f32	s5, s12, s9
 800eac6:	3404      	adds	r4, #4
 800eac8:	4544      	cmp	r4, r8
 800eaca:	ee73 3aa4 	vadd.f32	s7, s7, s9
 800eace:	eea6 3aa4 	vfma.f32	s6, s13, s9
 800ead2:	eef0 4a60 	vmov.f32	s9, s1
 800ead6:	ee37 7a06 	vadd.f32	s14, s14, s12
 800eada:	eee6 1a06 	vfma.f32	s3, s12, s12
 800eade:	eee6 5a26 	vfma.f32	s11, s12, s13
 800eae2:	eee6 4a05 	vfma.f32	s9, s12, s10
 800eae6:	eeb0 6a41 	vmov.f32	s12, s2
 800eaea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eaee:	ee34 4a05 	vadd.f32	s8, s8, s10
 800eaf2:	eea6 2aa6 	vfma.f32	s4, s13, s13
 800eaf6:	eea6 6a85 	vfma.f32	s12, s13, s10
 800eafa:	d004      	beq.n	800eb06 <GUI_TOUCH_CalcCoefficients+0x1b6>
 800eafc:	eef0 0a64 	vmov.f32	s1, s9
 800eb00:	eeb0 1a46 	vmov.f32	s2, s12
 800eb04:	e7c9      	b.n	800ea9a <GUI_TOUCH_CalcCoefficients+0x14a>
 800eb06:	eec5 6aa7 	vdiv.f32	s13, s11, s15
 800eb0a:	ee05 0a10 	vmov	s10, r0
 800eb0e:	edcd 6a01 	vstr	s13, [sp, #4]
 800eb12:	eef8 6ac5 	vcvt.f32.s32	s13, s10
 800eb16:	eec1 1a87 	vdiv.f32	s3, s3, s14
 800eb1a:	eec5 5a87 	vdiv.f32	s11, s11, s14
 800eb1e:	ee82 2a27 	vdiv.f32	s4, s4, s15
 800eb22:	eec2 2a87 	vdiv.f32	s5, s5, s14
 800eb26:	ee83 3a27 	vdiv.f32	s6, s6, s15
 800eb2a:	eec4 4a87 	vdiv.f32	s9, s9, s14
 800eb2e:	ee86 6a27 	vdiv.f32	s12, s12, s15
 800eb32:	ee87 7a26 	vdiv.f32	s14, s14, s13
 800eb36:	eec7 7aa6 	vdiv.f32	s15, s15, s13
 800eb3a:	eec3 3aa6 	vdiv.f32	s7, s7, s13
 800eb3e:	eec4 6a26 	vdiv.f32	s13, s8, s13
 800eb42:	edcd 1a00 	vstr	s3, [sp]
 800eb46:	edcd 5a03 	vstr	s11, [sp, #12]
 800eb4a:	ed8d 2a04 	vstr	s4, [sp, #16]
 800eb4e:	edcd 2a06 	vstr	s5, [sp, #24]
 800eb52:	ed8d 3a07 	vstr	s6, [sp, #28]
 800eb56:	edcd 4a09 	vstr	s9, [sp, #36]	; 0x24
 800eb5a:	ed8d 6a0a 	vstr	s12, [sp, #40]	; 0x28
 800eb5e:	ed8d 7a02 	vstr	s14, [sp, #8]
 800eb62:	edcd 7a05 	vstr	s15, [sp, #20]
 800eb66:	edcd 3a08 	vstr	s7, [sp, #32]
 800eb6a:	edcd 6a0b 	vstr	s13, [sp, #44]	; 0x2c
 800eb6e:	ed9d 7a02 	vldr	s14, [sp, #8]
 800eb72:	eddd 4a05 	vldr	s9, [sp, #20]
 800eb76:	ed9d 6a01 	vldr	s12, [sp, #4]
 800eb7a:	ed9d 3a03 	vldr	s6, [sp, #12]
 800eb7e:	eddd 5a00 	vldr	s11, [sp]
 800eb82:	eddd 2a04 	vldr	s5, [sp, #16]
 800eb86:	ee76 6a47 	vsub.f32	s13, s12, s14
 800eb8a:	ee73 1a64 	vsub.f32	s3, s6, s9
 800eb8e:	ee35 2ac7 	vsub.f32	s4, s11, s14
 800eb92:	ee32 1ae4 	vsub.f32	s2, s5, s9
 800eb96:	ee61 7ae6 	vnmul.f32	s15, s3, s13
 800eb9a:	eee2 7a01 	vfma.f32	s15, s4, s2
 800eb9e:	eef5 7a40 	vcmp.f32	s15, #0.0
 800eba2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eba6:	d063      	beq.n	800ec70 <GUI_TOUCH_CalcCoefficients+0x320>
 800eba8:	ed9d 4a08 	vldr	s8, [sp, #32]
 800ebac:	eddd 0a07 	vldr	s1, [sp, #28]
 800ebb0:	eddd 3a06 	vldr	s7, [sp, #24]
 800ebb4:	4b53      	ldr	r3, [pc, #332]	; (800ed04 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 800ebb6:	ee30 8ac4 	vsub.f32	s16, s1, s8
 800ebba:	ee33 5ac4 	vsub.f32	s10, s7, s8
 800ebbe:	ee21 0ac8 	vnmul.f32	s0, s3, s16
 800ebc2:	eea5 0a01 	vfma.f32	s0, s10, s2
 800ebc6:	ee26 5ac5 	vnmul.f32	s10, s13, s10
 800ebca:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800ebce:	eea8 5a02 	vfma.f32	s10, s16, s4
 800ebd2:	ed83 0a00 	vstr	s0, [r3]
 800ebd6:	ee85 5a27 	vdiv.f32	s10, s10, s15
 800ebda:	ed83 5a01 	vstr	s10, [r3, #4]
 800ebde:	ee23 5ac7 	vnmul.f32	s10, s7, s14
 800ebe2:	eea5 5a84 	vfma.f32	s10, s11, s8
 800ebe6:	ee24 4a46 	vnmul.f32	s8, s8, s12
 800ebea:	ee22 5a85 	vmul.f32	s10, s5, s10
 800ebee:	eea7 4a20 	vfma.f32	s8, s14, s1
 800ebf2:	eea3 5a04 	vfma.f32	s10, s6, s8
 800ebf6:	ee20 4ae5 	vnmul.f32	s8, s1, s11
 800ebfa:	eea6 4a23 	vfma.f32	s8, s12, s7
 800ebfe:	eddd 3a0a 	vldr	s7, [sp, #40]	; 0x28
 800ec02:	eea4 5a84 	vfma.f32	s10, s9, s8
 800ec06:	ed9d 4a09 	vldr	s8, [sp, #36]	; 0x24
 800ec0a:	ee85 5a27 	vdiv.f32	s10, s10, s15
 800ec0e:	ed83 5a02 	vstr	s10, [r3, #8]
 800ec12:	ed9d 5a0b 	vldr	s10, [sp, #44]	; 0x2c
 800ec16:	ee34 0a45 	vsub.f32	s0, s8, s10
 800ec1a:	ee73 0ac5 	vsub.f32	s1, s7, s10
 800ec1e:	ee66 6ac0 	vnmul.f32	s13, s13, s0
 800ec22:	ee61 1ae0 	vnmul.f32	s3, s3, s1
 800ec26:	eee0 6a82 	vfma.f32	s13, s1, s4
 800ec2a:	eee0 1a01 	vfma.f32	s3, s0, s2
 800ec2e:	eec6 6aa7 	vdiv.f32	s13, s13, s15
 800ec32:	eec1 1aa7 	vdiv.f32	s3, s3, s15
 800ec36:	edc3 6a04 	vstr	s13, [r3, #16]
 800ec3a:	ee64 6a47 	vnmul.f32	s13, s8, s14
 800ec3e:	edc3 1a03 	vstr	s3, [r3, #12]
 800ec42:	eee5 6a85 	vfma.f32	s13, s11, s10
 800ec46:	ee25 5a46 	vnmul.f32	s10, s10, s12
 800ec4a:	ee62 6aa6 	vmul.f32	s13, s5, s13
 800ec4e:	eea7 5a23 	vfma.f32	s10, s14, s7
 800ec52:	ee63 5ae5 	vnmul.f32	s11, s7, s11
 800ec56:	eee3 6a05 	vfma.f32	s13, s6, s10
 800ec5a:	eee6 5a04 	vfma.f32	s11, s12, s8
 800ec5e:	eee4 6aa5 	vfma.f32	s13, s9, s11
 800ec62:	eec6 7aa7 	vdiv.f32	s15, s13, s15
 800ec66:	edc3 7a05 	vstr	s15, [r3, #20]
 800ec6a:	2301      	movs	r3, #1
 800ec6c:	f8cc 3000 	str.w	r3, [ip]
 800ec70:	f8dc 0000 	ldr.w	r0, [ip]
 800ec74:	2800      	cmp	r0, #0
 800ec76:	f000 80a7 	beq.w	800edc8 <GUI_TOUCH_CalcCoefficients+0x478>
 800ec7a:	4b23      	ldr	r3, [pc, #140]	; (800ed08 <GUI_TOUCH_CalcCoefficients+0x3b8>)
 800ec7c:	eddf 7a23 	vldr	s15, [pc, #140]	; 800ed0c <GUI_TOUCH_CalcCoefficients+0x3bc>
 800ec80:	601e      	str	r6, [r3, #0]
 800ec82:	4b23      	ldr	r3, [pc, #140]	; (800ed10 <GUI_TOUCH_CalcCoefficients+0x3c0>)
 800ec84:	f8c3 a000 	str.w	sl, [r3]
 800ec88:	4b1e      	ldr	r3, [pc, #120]	; (800ed04 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 800ec8a:	ed93 7a00 	vldr	s14, [r3]
 800ec8e:	eeb4 7a67 	vcmp.f32	s14, s15
 800ec92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec96:	d012      	beq.n	800ecbe <GUI_TOUCH_CalcCoefficients+0x36e>
 800ec98:	edd3 6a01 	vldr	s13, [r3, #4]
 800ec9c:	eee6 7ae7 	vfms.f32	s15, s13, s15
 800eca0:	edd3 6a02 	vldr	s13, [r3, #8]
 800eca4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800eca8:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 800ecac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ecb0:	eec7 7a87 	vdiv.f32	s15, s15, s14
 800ecb4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ecb8:	ee17 1a90 	vmov	r1, s15
 800ecbc:	e001      	b.n	800ecc2 <GUI_TOUCH_CalcCoefficients+0x372>
 800ecbe:	f04f 31ff 	mov.w	r1, #4294967295
 800ecc2:	edd3 7a04 	vldr	s15, [r3, #16]
 800ecc6:	eddf 6a11 	vldr	s13, [pc, #68]	; 800ed0c <GUI_TOUCH_CalcCoefficients+0x3bc>
 800ecca:	4c12      	ldr	r4, [pc, #72]	; (800ed14 <GUI_TOUCH_CalcCoefficients+0x3c4>)
 800eccc:	4a0d      	ldr	r2, [pc, #52]	; (800ed04 <GUI_TOUCH_CalcCoefficients+0x3b4>)
 800ecce:	6021      	str	r1, [r4, #0]
 800ecd0:	eef4 7a66 	vcmp.f32	s15, s13
 800ecd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ecd8:	4627      	mov	r7, r4
 800ecda:	d01f      	beq.n	800ed1c <GUI_TOUCH_CalcCoefficients+0x3cc>
 800ecdc:	ed92 6a03 	vldr	s12, [r2, #12]
 800ece0:	eee6 6a66 	vfms.f32	s13, s12, s13
 800ece4:	ed92 6a05 	vldr	s12, [r2, #20]
 800ece8:	ee76 6ac6 	vsub.f32	s13, s13, s12
 800ecec:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 800ecf0:	ee76 6ac6 	vsub.f32	s13, s13, s12
 800ecf4:	eec6 6aa7 	vdiv.f32	s13, s13, s15
 800ecf8:	eefd 6ae6 	vcvt.s32.f32	s13, s13
 800ecfc:	ee16 2a90 	vmov	r2, s13
 800ed00:	e00e      	b.n	800ed20 <GUI_TOUCH_CalcCoefficients+0x3d0>
 800ed02:	bf00      	nop
 800ed04:	20019544 	.word	0x20019544
 800ed08:	20019538 	.word	0x20019538
 800ed0c:	00000000 	.word	0x00000000
 800ed10:	2001953c 	.word	0x2001953c
 800ed14:	20019530 	.word	0x20019530
 800ed18:	20019540 	.word	0x20019540
 800ed1c:	f04f 32ff 	mov.w	r2, #4294967295
 800ed20:	4c2e      	ldr	r4, [pc, #184]	; (800eddc <GUI_TOUCH_CalcCoefficients+0x48c>)
 800ed22:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800ed26:	3e01      	subs	r6, #1
 800ed28:	f10a 3aff 	add.w	sl, sl, #4294967295
 800ed2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ed30:	ee05 6a90 	vmov	s11, r6
 800ed34:	6022      	str	r2, [r4, #0]
 800ed36:	ee06 aa10 	vmov	s12, sl
 800ed3a:	4626      	mov	r6, r4
 800ed3c:	d016      	beq.n	800ed6c <GUI_TOUCH_CalcCoefficients+0x41c>
 800ed3e:	ed93 5a01 	vldr	s10, [r3, #4]
 800ed42:	eef8 4ac6 	vcvt.f32.s32	s9, s12
 800ed46:	eef8 6ae5 	vcvt.f32.s32	s13, s11
 800ed4a:	eee4 6ac5 	vfms.f32	s13, s9, s10
 800ed4e:	ed93 5a02 	vldr	s10, [r3, #8]
 800ed52:	ee76 6ac5 	vsub.f32	s13, s13, s10
 800ed56:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 800ed5a:	ee76 6ac5 	vsub.f32	s13, s13, s10
 800ed5e:	ee86 7a87 	vdiv.f32	s14, s13, s14
 800ed62:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800ed66:	ee17 4a10 	vmov	r4, s14
 800ed6a:	e001      	b.n	800ed70 <GUI_TOUCH_CalcCoefficients+0x420>
 800ed6c:	f04f 34ff 	mov.w	r4, #4294967295
 800ed70:	4d1b      	ldr	r5, [pc, #108]	; (800ede0 <GUI_TOUCH_CalcCoefficients+0x490>)
 800ed72:	eef5 7a40 	vcmp.f32	s15, #0.0
 800ed76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ed7a:	602c      	str	r4, [r5, #0]
 800ed7c:	46ac      	mov	ip, r5
 800ed7e:	d016      	beq.n	800edae <GUI_TOUCH_CalcCoefficients+0x45e>
 800ed80:	edd3 6a03 	vldr	s13, [r3, #12]
 800ed84:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 800ed88:	eeb8 7ac6 	vcvt.f32.s32	s14, s12
 800ed8c:	eea5 7ae6 	vfms.f32	s14, s11, s13
 800ed90:	edd3 6a05 	vldr	s13, [r3, #20]
 800ed94:	ee37 7a66 	vsub.f32	s14, s14, s13
 800ed98:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 800ed9c:	ee37 7a66 	vsub.f32	s14, s14, s13
 800eda0:	eec7 7a27 	vdiv.f32	s15, s14, s15
 800eda4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800eda8:	ee17 3a90 	vmov	r3, s15
 800edac:	e001      	b.n	800edb2 <GUI_TOUCH_CalcCoefficients+0x462>
 800edae:	f04f 33ff 	mov.w	r3, #4294967295
 800edb2:	42a1      	cmp	r1, r4
 800edb4:	4d0b      	ldr	r5, [pc, #44]	; (800ede4 <GUI_TOUCH_CalcCoefficients+0x494>)
 800edb6:	bfc4      	itt	gt
 800edb8:	603c      	strgt	r4, [r7, #0]
 800edba:	f8cc 1000 	strgt.w	r1, [ip]
 800edbe:	429a      	cmp	r2, r3
 800edc0:	602b      	str	r3, [r5, #0]
 800edc2:	bfc4      	itt	gt
 800edc4:	6033      	strgt	r3, [r6, #0]
 800edc6:	602a      	strgt	r2, [r5, #0]
 800edc8:	f1d0 0001 	rsbs	r0, r0, #1
 800edcc:	bf38      	it	cc
 800edce:	2000      	movcc	r0, #0
 800edd0:	b00c      	add	sp, #48	; 0x30
 800edd2:	ecbd 8b02 	vpop	{d8}
 800edd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800edda:	bf00      	nop
 800eddc:	20019534 	.word	0x20019534
 800ede0:	20019560 	.word	0x20019560
 800ede4:	2001955c 	.word	0x2001955c

0800ede8 <GUI_TOUCH_StoreStateEx>:
 800ede8:	b530      	push	{r4, r5, lr}
 800edea:	4d0f      	ldr	r5, [pc, #60]	; (800ee28 <GUI_TOUCH_StoreStateEx+0x40>)
 800edec:	b085      	sub	sp, #20
 800edee:	4629      	mov	r1, r5
 800edf0:	220c      	movs	r2, #12
 800edf2:	4604      	mov	r4, r0
 800edf4:	f007 f9b2 	bl	801615c <memcmp>
 800edf8:	b1a0      	cbz	r0, 800ee24 <GUI_TOUCH_StoreStateEx+0x3c>
 800edfa:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800edfe:	4b0b      	ldr	r3, [pc, #44]	; (800ee2c <GUI_TOUCH_StoreStateEx+0x44>)
 800ee00:	681b      	ldr	r3, [r3, #0]
 800ee02:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800ee06:	b153      	cbz	r3, 800ee1e <GUI_TOUCH_StoreStateEx+0x36>
 800ee08:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800ee0c:	ad01      	add	r5, sp, #4
 800ee0e:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800ee12:	4628      	mov	r0, r5
 800ee14:	a902      	add	r1, sp, #8
 800ee16:	4798      	blx	r3
 800ee18:	b920      	cbnz	r0, 800ee24 <GUI_TOUCH_StoreStateEx+0x3c>
 800ee1a:	4628      	mov	r0, r5
 800ee1c:	e000      	b.n	800ee20 <GUI_TOUCH_StoreStateEx+0x38>
 800ee1e:	4620      	mov	r0, r4
 800ee20:	f000 f8f4 	bl	800f00c <GUI_PID_StoreState>
 800ee24:	b005      	add	sp, #20
 800ee26:	bd30      	pop	{r4, r5, pc}
 800ee28:	20019564 	.word	0x20019564
 800ee2c:	20019570 	.word	0x20019570

0800ee30 <GUI_SetTextMode>:
 800ee30:	4b03      	ldr	r3, [pc, #12]	; (800ee40 <GUI_SetTextMode+0x10>)
 800ee32:	681b      	ldr	r3, [r3, #0]
 800ee34:	f9b3 202a 	ldrsh.w	r2, [r3, #42]	; 0x2a
 800ee38:	8558      	strh	r0, [r3, #42]	; 0x2a
 800ee3a:	4610      	mov	r0, r2
 800ee3c:	4770      	bx	lr
 800ee3e:	bf00      	nop
 800ee40:	20000254 	.word	0x20000254

0800ee44 <GUI_SetLineStyle>:
 800ee44:	4b02      	ldr	r3, [pc, #8]	; (800ee50 <GUI_SetLineStyle+0xc>)
 800ee46:	681b      	ldr	r3, [r3, #0]
 800ee48:	7e9a      	ldrb	r2, [r3, #26]
 800ee4a:	7698      	strb	r0, [r3, #26]
 800ee4c:	4610      	mov	r0, r2
 800ee4e:	4770      	bx	lr
 800ee50:	20000254 	.word	0x20000254

0800ee54 <GUI_SetFont>:
 800ee54:	4b03      	ldr	r3, [pc, #12]	; (800ee64 <GUI_SetFont+0x10>)
 800ee56:	681b      	ldr	r3, [r3, #0]
 800ee58:	69d9      	ldr	r1, [r3, #28]
 800ee5a:	b100      	cbz	r0, 800ee5e <GUI_SetFont+0xa>
 800ee5c:	61d8      	str	r0, [r3, #28]
 800ee5e:	4608      	mov	r0, r1
 800ee60:	4770      	bx	lr
 800ee62:	bf00      	nop
 800ee64:	20000254 	.word	0x20000254

0800ee68 <GUI_SetDrawMode>:
 800ee68:	f7fe bbf2 	b.w	800d650 <LCD_SetDrawMode>

0800ee6c <GL_SetDefault>:
 800ee6c:	b508      	push	{r3, lr}
 800ee6e:	2000      	movs	r0, #0
 800ee70:	f000 f81c 	bl	800eeac <GUI_SetBkColor>
 800ee74:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800ee78:	f000 f81a 	bl	800eeb0 <GUI_SetColor>
 800ee7c:	2001      	movs	r0, #1
 800ee7e:	f000 f893 	bl	800efa8 <GUI_SetPenSize>
 800ee82:	2000      	movs	r0, #0
 800ee84:	f005 fc44 	bl	8014710 <GUI_SetTextAlign>
 800ee88:	2000      	movs	r0, #0
 800ee8a:	f7ff ffd1 	bl	800ee30 <GUI_SetTextMode>
 800ee8e:	2000      	movs	r0, #0
 800ee90:	f7ff ffea 	bl	800ee68 <GUI_SetDrawMode>
 800ee94:	4b04      	ldr	r3, [pc, #16]	; (800eea8 <GL_SetDefault+0x3c>)
 800ee96:	6818      	ldr	r0, [r3, #0]
 800ee98:	f7ff ffdc 	bl	800ee54 <GUI_SetFont>
 800ee9c:	2000      	movs	r0, #0
 800ee9e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800eea2:	f7ff bfcf 	b.w	800ee44 <GUI_SetLineStyle>
 800eea6:	bf00      	nop
 800eea8:	20000258 	.word	0x20000258

0800eeac <GUI_SetBkColor>:
 800eeac:	f7fe bf18 	b.w	800dce0 <LCD_SetBkColor>

0800eeb0 <GUI_SetColor>:
 800eeb0:	f7fe bf1e 	b.w	800dcf0 <LCD_SetColor>

0800eeb4 <GUI__AlphaPreserveTrans>:
 800eeb4:	b510      	push	{r4, lr}
 800eeb6:	4b07      	ldr	r3, [pc, #28]	; (800eed4 <GUI__AlphaPreserveTrans+0x20>)
 800eeb8:	781c      	ldrb	r4, [r3, #0]
 800eeba:	b120      	cbz	r0, 800eec6 <GUI__AlphaPreserveTrans+0x12>
 800eebc:	2201      	movs	r2, #1
 800eebe:	701a      	strb	r2, [r3, #0]
 800eec0:	f04f 30ff 	mov.w	r0, #4294967295
 800eec4:	e002      	b.n	800eecc <GUI__AlphaPreserveTrans+0x18>
 800eec6:	7018      	strb	r0, [r3, #0]
 800eec8:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800eecc:	f004 ff98 	bl	8013e00 <LCD_AA_SetAndMask>
 800eed0:	4620      	mov	r0, r4
 800eed2:	bd10      	pop	{r4, pc}
 800eed4:	2001b38d 	.word	0x2001b38d

0800eed8 <GUI_GetCursorLayer>:
 800eed8:	2801      	cmp	r0, #1
 800eeda:	bf9a      	itte	ls
 800eedc:	4b02      	ldrls	r3, [pc, #8]	; (800eee8 <GUI_GetCursorLayer+0x10>)
 800eede:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 800eee2:	2000      	movhi	r0, #0
 800eee4:	4770      	bx	lr
 800eee6:	bf00      	nop
 800eee8:	20019574 	.word	0x20019574

0800eeec <GUI_GetLayerPosEx>:
 800eeec:	b538      	push	{r3, r4, r5, lr}
 800eeee:	460d      	mov	r5, r1
 800eef0:	4614      	mov	r4, r2
 800eef2:	f7fe fa93 	bl	800d41c <LCD_GetPosEx>
 800eef6:	b110      	cbz	r0, 800eefe <GUI_GetLayerPosEx+0x12>
 800eef8:	2300      	movs	r3, #0
 800eefa:	602b      	str	r3, [r5, #0]
 800eefc:	6023      	str	r3, [r4, #0]
 800eefe:	bd38      	pop	{r3, r4, r5, pc}

0800ef00 <GUI_SelectLayer>:
 800ef00:	b570      	push	{r4, r5, r6, lr}
 800ef02:	4d08      	ldr	r5, [pc, #32]	; (800ef24 <GUI_SelectLayer+0x24>)
 800ef04:	682b      	ldr	r3, [r5, #0]
 800ef06:	2801      	cmp	r0, #1
 800ef08:	4604      	mov	r4, r0
 800ef0a:	7c5e      	ldrb	r6, [r3, #17]
 800ef0c:	d808      	bhi.n	800ef20 <GUI_SelectLayer+0x20>
 800ef0e:	f000 fd55 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 800ef12:	b128      	cbz	r0, 800ef20 <GUI_SelectLayer+0x20>
 800ef14:	682b      	ldr	r3, [r5, #0]
 800ef16:	745c      	strb	r4, [r3, #17]
 800ef18:	f000 f80a 	bl	800ef30 <GUI_SelectLCD>
 800ef1c:	4b02      	ldr	r3, [pc, #8]	; (800ef28 <GUI_SelectLayer+0x28>)
 800ef1e:	601c      	str	r4, [r3, #0]
 800ef20:	4630      	mov	r0, r6
 800ef22:	bd70      	pop	{r4, r5, r6, pc}
 800ef24:	20000254 	.word	0x20000254
 800ef28:	2001b340 	.word	0x2001b340

0800ef2c <GUI_SetLayerPosEx>:
 800ef2c:	f7fe ba46 	b.w	800d3bc <LCD_SetPosEx>

0800ef30 <GUI_SelectLCD>:
 800ef30:	b508      	push	{r3, lr}
 800ef32:	f004 fdbd 	bl	8013ab0 <LCD_SelectLCD>
 800ef36:	f7fe f9e7 	bl	800d308 <LCD_UpdateColorIndices>
 800ef3a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ef3e:	f7fc b811 	b.w	800af64 <WM_Activate>
	...

0800ef44 <GUI_SaveContext_W>:
 800ef44:	b508      	push	{r3, lr}
 800ef46:	4b03      	ldr	r3, [pc, #12]	; (800ef54 <GUI_SaveContext_W+0x10>)
 800ef48:	2270      	movs	r2, #112	; 0x70
 800ef4a:	6819      	ldr	r1, [r3, #0]
 800ef4c:	f007 f915 	bl	801617a <memcpy>
 800ef50:	bd08      	pop	{r3, pc}
 800ef52:	bf00      	nop
 800ef54:	20000254 	.word	0x20000254

0800ef58 <GUI_RestoreContext>:
 800ef58:	b508      	push	{r3, lr}
 800ef5a:	4b03      	ldr	r3, [pc, #12]	; (800ef68 <GUI_RestoreContext+0x10>)
 800ef5c:	4601      	mov	r1, r0
 800ef5e:	2270      	movs	r2, #112	; 0x70
 800ef60:	6818      	ldr	r0, [r3, #0]
 800ef62:	f007 f90a 	bl	801617a <memcpy>
 800ef66:	bd08      	pop	{r3, pc}
 800ef68:	20000254 	.word	0x20000254

0800ef6c <GUI_RectsIntersect>:
 800ef6c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ef70:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800ef74:	429a      	cmp	r2, r3
 800ef76:	dc14      	bgt.n	800efa2 <GUI_RectsIntersect+0x36>
 800ef78:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800ef7c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800ef80:	429a      	cmp	r2, r3
 800ef82:	dc0e      	bgt.n	800efa2 <GUI_RectsIntersect+0x36>
 800ef84:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ef88:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800ef8c:	429a      	cmp	r2, r3
 800ef8e:	dc08      	bgt.n	800efa2 <GUI_RectsIntersect+0x36>
 800ef90:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ef94:	f9b1 2000 	ldrsh.w	r2, [r1]
 800ef98:	429a      	cmp	r2, r3
 800ef9a:	bfcc      	ite	gt
 800ef9c:	2000      	movgt	r0, #0
 800ef9e:	2001      	movle	r0, #1
 800efa0:	4770      	bx	lr
 800efa2:	2000      	movs	r0, #0
 800efa4:	4770      	bx	lr
	...

0800efa8 <GUI_SetPenSize>:
 800efa8:	4b02      	ldr	r3, [pc, #8]	; (800efb4 <GUI_SetPenSize+0xc>)
 800efaa:	681b      	ldr	r3, [r3, #0]
 800efac:	7e1a      	ldrb	r2, [r3, #24]
 800efae:	7618      	strb	r0, [r3, #24]
 800efb0:	4610      	mov	r0, r2
 800efb2:	4770      	bx	lr
 800efb4:	20000254 	.word	0x20000254

0800efb8 <GUI_PID_GetState>:
 800efb8:	4a11      	ldr	r2, [pc, #68]	; (800f000 <GUI_PID_GetState+0x48>)
 800efba:	4912      	ldr	r1, [pc, #72]	; (800f004 <GUI_PID_GetState+0x4c>)
 800efbc:	6813      	ldr	r3, [r2, #0]
 800efbe:	6809      	ldr	r1, [r1, #0]
 800efc0:	428b      	cmp	r3, r1
 800efc2:	b570      	push	{r4, r5, r6, lr}
 800efc4:	4604      	mov	r4, r0
 800efc6:	4616      	mov	r6, r2
 800efc8:	4d0f      	ldr	r5, [pc, #60]	; (800f008 <GUI_PID_GetState+0x50>)
 800efca:	d109      	bne.n	800efe0 <GUI_PID_GetState+0x28>
 800efcc:	42ab      	cmp	r3, r5
 800efce:	bf06      	itte	eq
 800efd0:	333c      	addeq	r3, #60	; 0x3c
 800efd2:	e893 0007 	ldmiaeq.w	r3, {r0, r1, r2}
 800efd6:	e913 0007 	ldmdbne	r3, {r0, r1, r2}
 800efda:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800efde:	e00a      	b.n	800eff6 <GUI_PID_GetState+0x3e>
 800efe0:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800efe4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800efe8:	f105 023c 	add.w	r2, r5, #60	; 0x3c
 800efec:	4293      	cmp	r3, r2
 800efee:	bf18      	it	ne
 800eff0:	f103 050c 	addne.w	r5, r3, #12
 800eff4:	6035      	str	r5, [r6, #0]
 800eff6:	7a20      	ldrb	r0, [r4, #8]
 800eff8:	3000      	adds	r0, #0
 800effa:	bf18      	it	ne
 800effc:	2001      	movne	r0, #1
 800effe:	bd70      	pop	{r4, r5, r6, pc}
 800f000:	20000248 	.word	0x20000248
 800f004:	20000244 	.word	0x20000244
 800f008:	20019580 	.word	0x20019580

0800f00c <GUI_PID_StoreState>:
 800f00c:	4a21      	ldr	r2, [pc, #132]	; (800f094 <GUI_PID_StoreState+0x88>)
 800f00e:	4922      	ldr	r1, [pc, #136]	; (800f098 <GUI_PID_StoreState+0x8c>)
 800f010:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f014:	6011      	str	r1, [r2, #0]
 800f016:	4f21      	ldr	r7, [pc, #132]	; (800f09c <GUI_PID_StoreState+0x90>)
 800f018:	4921      	ldr	r1, [pc, #132]	; (800f0a0 <GUI_PID_StoreState+0x94>)
 800f01a:	683a      	ldr	r2, [r7, #0]
 800f01c:	680c      	ldr	r4, [r1, #0]
 800f01e:	4603      	mov	r3, r0
 800f020:	4820      	ldr	r0, [pc, #128]	; (800f0a4 <GUI_PID_StoreState+0x98>)
 800f022:	4294      	cmp	r4, r2
 800f024:	468c      	mov	ip, r1
 800f026:	f100 063c 	add.w	r6, r0, #60	; 0x3c
 800f02a:	d017      	beq.n	800f05c <GUI_PID_StoreState+0x50>
 800f02c:	4282      	cmp	r2, r0
 800f02e:	bf14      	ite	ne
 800f030:	f1a2 010c 	subne.w	r1, r2, #12
 800f034:	4631      	moveq	r1, r6
 800f036:	7a1d      	ldrb	r5, [r3, #8]
 800f038:	f891 8008 	ldrb.w	r8, [r1, #8]
 800f03c:	45a8      	cmp	r8, r5
 800f03e:	d10d      	bne.n	800f05c <GUI_PID_StoreState+0x50>
 800f040:	428c      	cmp	r4, r1
 800f042:	d00b      	beq.n	800f05c <GUI_PID_StoreState+0x50>
 800f044:	4281      	cmp	r1, r0
 800f046:	bf14      	ite	ne
 800f048:	390c      	subne	r1, #12
 800f04a:	4917      	ldreq	r1, [pc, #92]	; (800f0a8 <GUI_PID_StoreState+0x9c>)
 800f04c:	7a09      	ldrb	r1, [r1, #8]
 800f04e:	42a9      	cmp	r1, r5
 800f050:	d104      	bne.n	800f05c <GUI_PID_StoreState+0x50>
 800f052:	4282      	cmp	r2, r0
 800f054:	bf14      	ite	ne
 800f056:	3a0c      	subne	r2, #12
 800f058:	4a13      	ldreq	r2, [pc, #76]	; (800f0a8 <GUI_PID_StoreState+0x9c>)
 800f05a:	603a      	str	r2, [r7, #0]
 800f05c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800f060:	683d      	ldr	r5, [r7, #0]
 800f062:	42b5      	cmp	r5, r6
 800f064:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800f068:	bf0c      	ite	eq
 800f06a:	4d0e      	ldreq	r5, [pc, #56]	; (800f0a4 <GUI_PID_StoreState+0x98>)
 800f06c:	350c      	addne	r5, #12
 800f06e:	42ac      	cmp	r4, r5
 800f070:	603d      	str	r5, [r7, #0]
 800f072:	d105      	bne.n	800f080 <GUI_PID_StoreState+0x74>
 800f074:	42b4      	cmp	r4, r6
 800f076:	bf14      	ite	ne
 800f078:	340c      	addne	r4, #12
 800f07a:	4c0a      	ldreq	r4, [pc, #40]	; (800f0a4 <GUI_PID_StoreState+0x98>)
 800f07c:	f8cc 4000 	str.w	r4, [ip]
 800f080:	4a0a      	ldr	r2, [pc, #40]	; (800f0ac <GUI_PID_StoreState+0xa0>)
 800f082:	6812      	ldr	r2, [r2, #0]
 800f084:	b10a      	cbz	r2, 800f08a <GUI_PID_StoreState+0x7e>
 800f086:	4618      	mov	r0, r3
 800f088:	4790      	blx	r2
 800f08a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f08e:	f7ff b94d 	b.w	800e32c <GUI_SignalEvent>
 800f092:	bf00      	nop
 800f094:	2001b3a8 	.word	0x2001b3a8
 800f098:	08011d7d 	.word	0x08011d7d
 800f09c:	20000244 	.word	0x20000244
 800f0a0:	20000248 	.word	0x20000248
 800f0a4:	20019580 	.word	0x20019580
 800f0a8:	200195bc 	.word	0x200195bc
 800f0ac:	2001957c 	.word	0x2001957c

0800f0b0 <GUI_PID_IsEmpty>:
 800f0b0:	4b03      	ldr	r3, [pc, #12]	; (800f0c0 <GUI_PID_IsEmpty+0x10>)
 800f0b2:	6818      	ldr	r0, [r3, #0]
 800f0b4:	4b03      	ldr	r3, [pc, #12]	; (800f0c4 <GUI_PID_IsEmpty+0x14>)
 800f0b6:	681b      	ldr	r3, [r3, #0]
 800f0b8:	1ac3      	subs	r3, r0, r3
 800f0ba:	4258      	negs	r0, r3
 800f0bc:	4158      	adcs	r0, r3
 800f0be:	4770      	bx	lr
 800f0c0:	20000248 	.word	0x20000248
 800f0c4:	20000244 	.word	0x20000244

0800f0c8 <GUI_GetKey>:
 800f0c8:	4b02      	ldr	r3, [pc, #8]	; (800f0d4 <GUI_GetKey+0xc>)
 800f0ca:	2200      	movs	r2, #0
 800f0cc:	6818      	ldr	r0, [r3, #0]
 800f0ce:	601a      	str	r2, [r3, #0]
 800f0d0:	4770      	bx	lr
 800f0d2:	bf00      	nop
 800f0d4:	200195c8 	.word	0x200195c8

0800f0d8 <GUI_StoreKey>:
 800f0d8:	4b02      	ldr	r3, [pc, #8]	; (800f0e4 <GUI_StoreKey+0xc>)
 800f0da:	681a      	ldr	r2, [r3, #0]
 800f0dc:	b902      	cbnz	r2, 800f0e0 <GUI_StoreKey+0x8>
 800f0de:	6018      	str	r0, [r3, #0]
 800f0e0:	f7ff b924 	b.w	800e32c <GUI_SignalEvent>
 800f0e4:	200195c8 	.word	0x200195c8

0800f0e8 <GUI_PollKeyMsg>:
 800f0e8:	4a0a      	ldr	r2, [pc, #40]	; (800f114 <GUI_PollKeyMsg+0x2c>)
 800f0ea:	490b      	ldr	r1, [pc, #44]	; (800f118 <GUI_PollKeyMsg+0x30>)
 800f0ec:	6813      	ldr	r3, [r2, #0]
 800f0ee:	6809      	ldr	r1, [r1, #0]
 800f0f0:	428b      	cmp	r3, r1
 800f0f2:	b510      	push	{r4, lr}
 800f0f4:	d00b      	beq.n	800f10e <GUI_PollKeyMsg+0x26>
 800f0f6:	4c09      	ldr	r4, [pc, #36]	; (800f11c <GUI_PollKeyMsg+0x34>)
 800f0f8:	42a3      	cmp	r3, r4
 800f0fa:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f0fe:	bf14      	ite	ne
 800f100:	3308      	addne	r3, #8
 800f102:	3b50      	subeq	r3, #80	; 0x50
 800f104:	6013      	str	r3, [r2, #0]
 800f106:	f003 f925 	bl	8012354 <WM_OnKey>
 800f10a:	2001      	movs	r0, #1
 800f10c:	bd10      	pop	{r4, pc}
 800f10e:	2000      	movs	r0, #0
 800f110:	bd10      	pop	{r4, pc}
 800f112:	bf00      	nop
 800f114:	20000250 	.word	0x20000250
 800f118:	2000024c 	.word	0x2000024c
 800f11c:	2001961c 	.word	0x2001961c

0800f120 <GUI_MoveRect>:
 800f120:	b168      	cbz	r0, 800f13e <GUI_MoveRect+0x1e>
 800f122:	8803      	ldrh	r3, [r0, #0]
 800f124:	b289      	uxth	r1, r1
 800f126:	440b      	add	r3, r1
 800f128:	8003      	strh	r3, [r0, #0]
 800f12a:	8883      	ldrh	r3, [r0, #4]
 800f12c:	4419      	add	r1, r3
 800f12e:	8843      	ldrh	r3, [r0, #2]
 800f130:	8081      	strh	r1, [r0, #4]
 800f132:	b292      	uxth	r2, r2
 800f134:	4413      	add	r3, r2
 800f136:	8043      	strh	r3, [r0, #2]
 800f138:	88c3      	ldrh	r3, [r0, #6]
 800f13a:	441a      	add	r2, r3
 800f13c:	80c2      	strh	r2, [r0, #6]
 800f13e:	4770      	bx	lr

0800f140 <GUI_MergeRect>:
 800f140:	b510      	push	{r4, lr}
 800f142:	b338      	cbz	r0, 800f194 <GUI_MergeRect+0x54>
 800f144:	b309      	cbz	r1, 800f18a <GUI_MergeRect+0x4a>
 800f146:	b30a      	cbz	r2, 800f18c <GUI_MergeRect+0x4c>
 800f148:	f9b1 4000 	ldrsh.w	r4, [r1]
 800f14c:	f9b2 3000 	ldrsh.w	r3, [r2]
 800f150:	429c      	cmp	r4, r3
 800f152:	bfb8      	it	lt
 800f154:	4623      	movlt	r3, r4
 800f156:	8003      	strh	r3, [r0, #0]
 800f158:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800f15c:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800f160:	429c      	cmp	r4, r3
 800f162:	bfb8      	it	lt
 800f164:	4623      	movlt	r3, r4
 800f166:	8043      	strh	r3, [r0, #2]
 800f168:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 800f16c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800f170:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800f174:	429c      	cmp	r4, r3
 800f176:	bfa8      	it	ge
 800f178:	4623      	movge	r3, r4
 800f17a:	8083      	strh	r3, [r0, #4]
 800f17c:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 800f180:	4299      	cmp	r1, r3
 800f182:	bfa8      	it	ge
 800f184:	460b      	movge	r3, r1
 800f186:	80c3      	strh	r3, [r0, #6]
 800f188:	bd10      	pop	{r4, pc}
 800f18a:	4611      	mov	r1, r2
 800f18c:	680b      	ldr	r3, [r1, #0]
 800f18e:	6003      	str	r3, [r0, #0]
 800f190:	684b      	ldr	r3, [r1, #4]
 800f192:	6043      	str	r3, [r0, #4]
 800f194:	bd10      	pop	{r4, pc}
	...

0800f198 <GUI_GotoXY>:
 800f198:	4b02      	ldr	r3, [pc, #8]	; (800f1a4 <GUI_GotoXY+0xc>)
 800f19a:	681b      	ldr	r3, [r3, #0]
 800f19c:	8458      	strh	r0, [r3, #34]	; 0x22
 800f19e:	8499      	strh	r1, [r3, #36]	; 0x24
 800f1a0:	2000      	movs	r0, #0
 800f1a2:	4770      	bx	lr
 800f1a4:	20000254 	.word	0x20000254

0800f1a8 <GUI_GetOrg>:
 800f1a8:	4b04      	ldr	r3, [pc, #16]	; (800f1bc <GUI_GetOrg+0x14>)
 800f1aa:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f1ae:	6003      	str	r3, [r0, #0]
 800f1b0:	4b03      	ldr	r3, [pc, #12]	; (800f1c0 <GUI_GetOrg+0x18>)
 800f1b2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f1b6:	600b      	str	r3, [r1, #0]
 800f1b8:	4770      	bx	lr
 800f1ba:	bf00      	nop
 800f1bc:	2001b384 	.word	0x2001b384
 800f1c0:	2001b378 	.word	0x2001b378

0800f1c4 <GUI_GetLineStyle>:
 800f1c4:	4b01      	ldr	r3, [pc, #4]	; (800f1cc <GUI_GetLineStyle+0x8>)
 800f1c6:	681b      	ldr	r3, [r3, #0]
 800f1c8:	7e98      	ldrb	r0, [r3, #26]
 800f1ca:	4770      	bx	lr
 800f1cc:	20000254 	.word	0x20000254

0800f1d0 <GUI_FillRect>:
 800f1d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f1d2:	4c0f      	ldr	r4, [pc, #60]	; (800f210 <GUI_FillRect+0x40>)
 800f1d4:	6824      	ldr	r4, [r4, #0]
 800f1d6:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800f1d8:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800f1da:	1947      	adds	r7, r0, r5
 800f1dc:	190e      	adds	r6, r1, r4
 800f1de:	4415      	add	r5, r2
 800f1e0:	441c      	add	r4, r3
 800f1e2:	4668      	mov	r0, sp
 800f1e4:	f8ad 7000 	strh.w	r7, [sp]
 800f1e8:	f8ad 5004 	strh.w	r5, [sp, #4]
 800f1ec:	f8ad 6002 	strh.w	r6, [sp, #2]
 800f1f0:	f8ad 4006 	strh.w	r4, [sp, #6]
 800f1f4:	f7fb fcd4 	bl	800aba0 <WM__InitIVRSearch>
 800f1f8:	b140      	cbz	r0, 800f20c <GUI_FillRect+0x3c>
 800f1fa:	4638      	mov	r0, r7
 800f1fc:	4631      	mov	r1, r6
 800f1fe:	462a      	mov	r2, r5
 800f200:	4623      	mov	r3, r4
 800f202:	f7fe faa7 	bl	800d754 <LCD_FillRect>
 800f206:	f7fb fc09 	bl	800aa1c <WM__GetNextIVR>
 800f20a:	e7f5      	b.n	800f1f8 <GUI_FillRect+0x28>
 800f20c:	b003      	add	sp, #12
 800f20e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f210:	20000254 	.word	0x20000254

0800f214 <GUI_Exec1>:
 800f214:	4b0a      	ldr	r3, [pc, #40]	; (800f240 <GUI_Exec1+0x2c>)
 800f216:	b510      	push	{r4, lr}
 800f218:	681c      	ldr	r4, [r3, #0]
 800f21a:	b11c      	cbz	r4, 800f224 <GUI_Exec1+0x10>
 800f21c:	47a0      	blx	r4
 800f21e:	1c04      	adds	r4, r0, #0
 800f220:	bf18      	it	ne
 800f222:	2401      	movne	r4, #1
 800f224:	f7fb fdf0 	bl	800ae08 <WM_Exec>
 800f228:	4b06      	ldr	r3, [pc, #24]	; (800f244 <GUI_Exec1+0x30>)
 800f22a:	681b      	ldr	r3, [r3, #0]
 800f22c:	2800      	cmp	r0, #0
 800f22e:	bf18      	it	ne
 800f230:	2401      	movne	r4, #1
 800f232:	b11b      	cbz	r3, 800f23c <GUI_Exec1+0x28>
 800f234:	4798      	blx	r3
 800f236:	2800      	cmp	r0, #0
 800f238:	bf18      	it	ne
 800f23a:	2401      	movne	r4, #1
 800f23c:	4620      	mov	r0, r4
 800f23e:	bd10      	pop	{r4, pc}
 800f240:	2001b380 	.word	0x2001b380
 800f244:	2001b398 	.word	0x2001b398

0800f248 <GUI_Exec>:
 800f248:	b510      	push	{r4, lr}
 800f24a:	2400      	movs	r4, #0
 800f24c:	f7ff ffe2 	bl	800f214 <GUI_Exec1>
 800f250:	b108      	cbz	r0, 800f256 <GUI_Exec+0xe>
 800f252:	2401      	movs	r4, #1
 800f254:	e7fa      	b.n	800f24c <GUI_Exec+0x4>
 800f256:	4620      	mov	r0, r4
 800f258:	bd10      	pop	{r4, pc}
	...

0800f25c <GUI_DrawVLine>:
 800f25c:	4b0f      	ldr	r3, [pc, #60]	; (800f29c <GUI_DrawVLine+0x40>)
 800f25e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f260:	681b      	ldr	r3, [r3, #0]
 800f262:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800f264:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 800f266:	4406      	add	r6, r0
 800f268:	190d      	adds	r5, r1, r4
 800f26a:	b2b3      	uxth	r3, r6
 800f26c:	4414      	add	r4, r2
 800f26e:	4668      	mov	r0, sp
 800f270:	f8ad 3000 	strh.w	r3, [sp]
 800f274:	f8ad 3004 	strh.w	r3, [sp, #4]
 800f278:	f8ad 5002 	strh.w	r5, [sp, #2]
 800f27c:	f8ad 4006 	strh.w	r4, [sp, #6]
 800f280:	f7fb fc8e 	bl	800aba0 <WM__InitIVRSearch>
 800f284:	b138      	cbz	r0, 800f296 <GUI_DrawVLine+0x3a>
 800f286:	4630      	mov	r0, r6
 800f288:	4629      	mov	r1, r5
 800f28a:	4622      	mov	r2, r4
 800f28c:	f7fe fa3c 	bl	800d708 <LCD_DrawVLine>
 800f290:	f7fb fbc4 	bl	800aa1c <WM__GetNextIVR>
 800f294:	e7f6      	b.n	800f284 <GUI_DrawVLine+0x28>
 800f296:	b002      	add	sp, #8
 800f298:	bd70      	pop	{r4, r5, r6, pc}
 800f29a:	bf00      	nop
 800f29c:	20000254 	.word	0x20000254

0800f2a0 <_SetLineColor>:
 800f2a0:	4b1e      	ldr	r3, [pc, #120]	; (800f31c <_SetLineColor+0x7c>)
 800f2a2:	681b      	ldr	r3, [r3, #0]
 800f2a4:	7e9b      	ldrb	r3, [r3, #26]
 800f2a6:	3b01      	subs	r3, #1
 800f2a8:	2b03      	cmp	r3, #3
 800f2aa:	d832      	bhi.n	800f312 <_SetLineColor+0x72>
 800f2ac:	e8df f003 	tbb	[pc, r3]
 800f2b0:	221a0d02 	.word	0x221a0d02
 800f2b4:	4b1a      	ldr	r3, [pc, #104]	; (800f320 <_SetLineColor+0x80>)
 800f2b6:	3006      	adds	r0, #6
 800f2b8:	4003      	ands	r3, r0
 800f2ba:	2b00      	cmp	r3, #0
 800f2bc:	da03      	bge.n	800f2c6 <_SetLineColor+0x26>
 800f2be:	3b01      	subs	r3, #1
 800f2c0:	f063 030f 	orn	r3, r3, #15
 800f2c4:	3301      	adds	r3, #1
 800f2c6:	2b0b      	cmp	r3, #11
 800f2c8:	e008      	b.n	800f2dc <_SetLineColor+0x3c>
 800f2ca:	4b16      	ldr	r3, [pc, #88]	; (800f324 <_SetLineColor+0x84>)
 800f2cc:	4003      	ands	r3, r0
 800f2ce:	2b00      	cmp	r3, #0
 800f2d0:	da03      	bge.n	800f2da <_SetLineColor+0x3a>
 800f2d2:	3b01      	subs	r3, #1
 800f2d4:	f063 0303 	orn	r3, r3, #3
 800f2d8:	3301      	adds	r3, #1
 800f2da:	2b01      	cmp	r3, #1
 800f2dc:	bfcc      	ite	gt
 800f2de:	2000      	movgt	r0, #0
 800f2e0:	2001      	movle	r0, #1
 800f2e2:	4770      	bx	lr
 800f2e4:	2314      	movs	r3, #20
 800f2e6:	fb90 f2f3 	sdiv	r2, r0, r3
 800f2ea:	fb03 0012 	mls	r0, r3, r2, r0
 800f2ee:	280b      	cmp	r0, #11
 800f2f0:	dc09      	bgt.n	800f306 <_SetLineColor+0x66>
 800f2f2:	e010      	b.n	800f316 <_SetLineColor+0x76>
 800f2f4:	2318      	movs	r3, #24
 800f2f6:	fb90 f2f3 	sdiv	r2, r0, r3
 800f2fa:	fb03 0012 	mls	r0, r3, r2, r0
 800f2fe:	280b      	cmp	r0, #11
 800f300:	dd09      	ble.n	800f316 <_SetLineColor+0x76>
 800f302:	f020 0004 	bic.w	r0, r0, #4
 800f306:	3810      	subs	r0, #16
 800f308:	2801      	cmp	r0, #1
 800f30a:	bf8c      	ite	hi
 800f30c:	2000      	movhi	r0, #0
 800f30e:	2001      	movls	r0, #1
 800f310:	4770      	bx	lr
 800f312:	2000      	movs	r0, #0
 800f314:	4770      	bx	lr
 800f316:	2001      	movs	r0, #1
 800f318:	4770      	bx	lr
 800f31a:	bf00      	nop
 800f31c:	20000254 	.word	0x20000254
 800f320:	8000000f 	.word	0x8000000f
 800f324:	80000003 	.word	0x80000003

0800f328 <GUI_sin>:
 800f328:	f3c0 000b 	ubfx	r0, r0, #0, #12
 800f32c:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 800f330:	bfc6      	itte	gt
 800f332:	f5a0 6000 	subgt.w	r0, r0, #2048	; 0x800
 800f336:	2101      	movgt	r1, #1
 800f338:	2100      	movle	r1, #0
 800f33a:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 800f33e:	bfc8      	it	gt
 800f340:	f5c0 6000 	rsbgt	r0, r0, #2048	; 0x800
 800f344:	f000 033f 	and.w	r3, r0, #63	; 0x3f
 800f348:	b510      	push	{r4, lr}
 800f34a:	1182      	asrs	r2, r0, #6
 800f34c:	4c0b      	ldr	r4, [pc, #44]	; (800f37c <GUI_sin+0x54>)
 800f34e:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 800f352:	b29b      	uxth	r3, r3
 800f354:	f834 0012 	ldrh.w	r0, [r4, r2, lsl #1]
 800f358:	2b40      	cmp	r3, #64	; 0x40
 800f35a:	fb00 f003 	mul.w	r0, r0, r3
 800f35e:	d008      	beq.n	800f372 <GUI_sin+0x4a>
 800f360:	2a10      	cmp	r2, #16
 800f362:	d006      	beq.n	800f372 <GUI_sin+0x4a>
 800f364:	3201      	adds	r2, #1
 800f366:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 800f36a:	f834 2012 	ldrh.w	r2, [r4, r2, lsl #1]
 800f36e:	fb03 0002 	mla	r0, r3, r2, r0
 800f372:	3020      	adds	r0, #32
 800f374:	0980      	lsrs	r0, r0, #6
 800f376:	b101      	cbz	r1, 800f37a <GUI_sin+0x52>
 800f378:	4240      	negs	r0, r0
 800f37a:	bd10      	pop	{r4, pc}
 800f37c:	08017768 	.word	0x08017768

0800f380 <GUI_cos>:
 800f380:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 800f384:	f7ff bfd0 	b.w	800f328 <GUI_sin>

0800f388 <GL_DrawLine1Ex>:
 800f388:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f38c:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800f390:	1a17      	subs	r7, r2, r0
 800f392:	1a5c      	subs	r4, r3, r1
 800f394:	ea54 0c07 	orrs.w	ip, r4, r7
 800f398:	4605      	mov	r5, r0
 800f39a:	460e      	mov	r6, r1
 800f39c:	f8d8 b000 	ldr.w	fp, [r8]
 800f3a0:	d104      	bne.n	800f3ac <GL_DrawLine1Ex+0x24>
 800f3a2:	b003      	add	sp, #12
 800f3a4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3a8:	f005 bb16 	b.w	80149d8 <GL_DrawPoint>
 800f3ac:	ea87 70e7 	eor.w	r0, r7, r7, asr #31
 800f3b0:	eba0 70e7 	sub.w	r0, r0, r7, asr #31
 800f3b4:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 800f3b8:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 800f3bc:	4288      	cmp	r0, r1
 800f3be:	db04      	blt.n	800f3ca <GL_DrawLine1Ex+0x42>
 800f3c0:	4621      	mov	r1, r4
 800f3c2:	463c      	mov	r4, r7
 800f3c4:	460f      	mov	r7, r1
 800f3c6:	2100      	movs	r1, #0
 800f3c8:	e006      	b.n	800f3d8 <GL_DrawLine1Ex+0x50>
 800f3ca:	4611      	mov	r1, r2
 800f3cc:	461a      	mov	r2, r3
 800f3ce:	460b      	mov	r3, r1
 800f3d0:	4629      	mov	r1, r5
 800f3d2:	4635      	mov	r5, r6
 800f3d4:	460e      	mov	r6, r1
 800f3d6:	2101      	movs	r1, #1
 800f3d8:	9100      	str	r1, [sp, #0]
 800f3da:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 800f3de:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 800f3e2:	428c      	cmp	r4, r1
 800f3e4:	d008      	beq.n	800f3f8 <GL_DrawLine1Ex+0x70>
 800f3e6:	461e      	mov	r6, r3
 800f3e8:	462b      	mov	r3, r5
 800f3ea:	4264      	negs	r4, r4
 800f3ec:	4615      	mov	r5, r2
 800f3ee:	427f      	negs	r7, r7
 800f3f0:	461a      	mov	r2, r3
 800f3f2:	f04f 3aff 	mov.w	sl, #4294967295
 800f3f6:	e001      	b.n	800f3fc <GL_DrawLine1Ex+0x74>
 800f3f8:	f04f 0a01 	mov.w	sl, #1
 800f3fc:	2f00      	cmp	r7, #0
 800f3fe:	f8df 9148 	ldr.w	r9, [pc, #328]	; 800f548 <GL_DrawLine1Ex+0x1c0>
 800f402:	d13e      	bne.n	800f482 <GL_DrawLine1Ex+0xfa>
 800f404:	9b00      	ldr	r3, [sp, #0]
 800f406:	b1d3      	cbz	r3, 800f43e <GL_DrawLine1Ex+0xb6>
 800f408:	f8d9 3000 	ldr.w	r3, [r9]
 800f40c:	7e9b      	ldrb	r3, [r3, #26]
 800f40e:	b98b      	cbnz	r3, 800f434 <GL_DrawLine1Ex+0xac>
 800f410:	4630      	mov	r0, r6
 800f412:	4629      	mov	r1, r5
 800f414:	b003      	add	sp, #12
 800f416:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f41a:	f7fe b975 	b.w	800d708 <LCD_DrawVLine>
 800f41e:	f7ff ff3f 	bl	800f2a0 <_SetLineColor>
 800f422:	b930      	cbnz	r0, 800f432 <GL_DrawLine1Ex+0xaa>
 800f424:	f8d9 3000 	ldr.w	r3, [r9]
 800f428:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f42a:	4630      	mov	r0, r6
 800f42c:	685b      	ldr	r3, [r3, #4]
 800f42e:	1979      	adds	r1, r7, r5
 800f430:	4798      	blx	r3
 800f432:	3701      	adds	r7, #1
 800f434:	42a7      	cmp	r7, r4
 800f436:	eb07 000b 	add.w	r0, r7, fp
 800f43a:	ddf0      	ble.n	800f41e <GL_DrawLine1Ex+0x96>
 800f43c:	e01d      	b.n	800f47a <GL_DrawLine1Ex+0xf2>
 800f43e:	f8d9 3000 	ldr.w	r3, [r9]
 800f442:	7e99      	ldrb	r1, [r3, #26]
 800f444:	b111      	cbz	r1, 800f44c <GL_DrawLine1Ex+0xc4>
 800f446:	f8dd a000 	ldr.w	sl, [sp]
 800f44a:	e012      	b.n	800f472 <GL_DrawLine1Ex+0xea>
 800f44c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f44e:	4628      	mov	r0, r5
 800f450:	681b      	ldr	r3, [r3, #0]
 800f452:	4631      	mov	r1, r6
 800f454:	4798      	blx	r3
 800f456:	e074      	b.n	800f542 <GL_DrawLine1Ex+0x1ba>
 800f458:	f7ff ff22 	bl	800f2a0 <_SetLineColor>
 800f45c:	b938      	cbnz	r0, 800f46e <GL_DrawLine1Ex+0xe6>
 800f45e:	f8d9 3000 	ldr.w	r3, [r9]
 800f462:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f464:	eb0a 0005 	add.w	r0, sl, r5
 800f468:	685b      	ldr	r3, [r3, #4]
 800f46a:	4631      	mov	r1, r6
 800f46c:	4798      	blx	r3
 800f46e:	f10a 0a01 	add.w	sl, sl, #1
 800f472:	45a2      	cmp	sl, r4
 800f474:	eb0a 000b 	add.w	r0, sl, fp
 800f478:	ddee      	ble.n	800f458 <GL_DrawLine1Ex+0xd0>
 800f47a:	3801      	subs	r0, #1
 800f47c:	f8c8 0000 	str.w	r0, [r8]
 800f480:	e05f      	b.n	800f542 <GL_DrawLine1Ex+0x1ba>
 800f482:	f8d9 1000 	ldr.w	r1, [r9]
 800f486:	f04f 0202 	mov.w	r2, #2
 800f48a:	7e89      	ldrb	r1, [r1, #26]
 800f48c:	fb94 f2f2 	sdiv	r2, r4, r2
 800f490:	bfb8      	it	lt
 800f492:	4252      	neglt	r2, r2
 800f494:	b9d9      	cbnz	r1, 800f4ce <GL_DrawLine1Ex+0x146>
 800f496:	4693      	mov	fp, r2
 800f498:	46a8      	mov	r8, r5
 800f49a:	ebc5 0308 	rsb	r3, r5, r8
 800f49e:	42a3      	cmp	r3, r4
 800f4a0:	dc4f      	bgt.n	800f542 <GL_DrawLine1Ex+0x1ba>
 800f4a2:	9b00      	ldr	r3, [sp, #0]
 800f4a4:	fb9b f1f4 	sdiv	r1, fp, r4
 800f4a8:	4431      	add	r1, r6
 800f4aa:	b92b      	cbnz	r3, 800f4b8 <GL_DrawLine1Ex+0x130>
 800f4ac:	f8d9 3000 	ldr.w	r3, [r9]
 800f4b0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f4b2:	4640      	mov	r0, r8
 800f4b4:	685b      	ldr	r3, [r3, #4]
 800f4b6:	e005      	b.n	800f4c4 <GL_DrawLine1Ex+0x13c>
 800f4b8:	f8d9 3000 	ldr.w	r3, [r9]
 800f4bc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f4be:	685b      	ldr	r3, [r3, #4]
 800f4c0:	4608      	mov	r0, r1
 800f4c2:	4641      	mov	r1, r8
 800f4c4:	4798      	blx	r3
 800f4c6:	f108 0801 	add.w	r8, r8, #1
 800f4ca:	44bb      	add	fp, r7
 800f4cc:	e7e5      	b.n	800f49a <GL_DrawLine1Ex+0x112>
 800f4ce:	f1ba 3fff 	cmp.w	sl, #4294967295
 800f4d2:	bf04      	itt	eq
 800f4d4:	eb04 010b 	addeq.w	r1, r4, fp
 800f4d8:	f8c8 1000 	streq.w	r1, [r8]
 800f4dc:	9201      	str	r2, [sp, #4]
 800f4de:	46ab      	mov	fp, r5
 800f4e0:	ebc5 010b 	rsb	r1, r5, fp
 800f4e4:	42a1      	cmp	r1, r4
 800f4e6:	f8d8 0000 	ldr.w	r0, [r8]
 800f4ea:	dc1e      	bgt.n	800f52a <GL_DrawLine1Ex+0x1a2>
 800f4ec:	4450      	add	r0, sl
 800f4ee:	f8c8 0000 	str.w	r0, [r8]
 800f4f2:	f7ff fed5 	bl	800f2a0 <_SetLineColor>
 800f4f6:	b980      	cbnz	r0, 800f51a <GL_DrawLine1Ex+0x192>
 800f4f8:	f8dd c004 	ldr.w	ip, [sp, #4]
 800f4fc:	f8d9 0000 	ldr.w	r0, [r9]
 800f500:	9b00      	ldr	r3, [sp, #0]
 800f502:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800f504:	fb9c f1f4 	sdiv	r1, ip, r4
 800f508:	4431      	add	r1, r6
 800f50a:	b913      	cbnz	r3, 800f512 <GL_DrawLine1Ex+0x18a>
 800f50c:	6843      	ldr	r3, [r0, #4]
 800f50e:	4658      	mov	r0, fp
 800f510:	e002      	b.n	800f518 <GL_DrawLine1Ex+0x190>
 800f512:	6843      	ldr	r3, [r0, #4]
 800f514:	4608      	mov	r0, r1
 800f516:	4659      	mov	r1, fp
 800f518:	4798      	blx	r3
 800f51a:	f8dd c004 	ldr.w	ip, [sp, #4]
 800f51e:	44bc      	add	ip, r7
 800f520:	f10b 0b01 	add.w	fp, fp, #1
 800f524:	f8cd c004 	str.w	ip, [sp, #4]
 800f528:	e7da      	b.n	800f4e0 <GL_DrawLine1Ex+0x158>
 800f52a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800f52e:	bf04      	itt	eq
 800f530:	1824      	addeq	r4, r4, r0
 800f532:	f8c8 4000 	streq.w	r4, [r8]
 800f536:	f8d8 2000 	ldr.w	r2, [r8]
 800f53a:	ebca 0302 	rsb	r3, sl, r2
 800f53e:	f8c8 3000 	str.w	r3, [r8]
 800f542:	b003      	add	sp, #12
 800f544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f548:	20000254 	.word	0x20000254

0800f54c <GL_DrawLineEx>:
 800f54c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f550:	4d67      	ldr	r5, [pc, #412]	; (800f6f0 <GL_DrawLineEx+0x1a4>)
 800f552:	682c      	ldr	r4, [r5, #0]
 800f554:	f894 b018 	ldrb.w	fp, [r4, #24]
 800f558:	f1bb 0f01 	cmp.w	fp, #1
 800f55c:	b087      	sub	sp, #28
 800f55e:	4681      	mov	r9, r0
 800f560:	4688      	mov	r8, r1
 800f562:	4617      	mov	r7, r2
 800f564:	461e      	mov	r6, r3
 800f566:	46aa      	mov	sl, r5
 800f568:	d104      	bne.n	800f574 <GL_DrawLineEx+0x28>
 800f56a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800f56c:	9400      	str	r4, [sp, #0]
 800f56e:	f7ff ff0b 	bl	800f388 <GL_DrawLine1Ex>
 800f572:	e0ba      	b.n	800f6ea <GL_DrawLineEx+0x19e>
 800f574:	1a84      	subs	r4, r0, r2
 800f576:	1acd      	subs	r5, r1, r3
 800f578:	ea54 0305 	orrs.w	r3, r4, r5
 800f57c:	f000 80b5 	beq.w	800f6ea <GL_DrawLineEx+0x19e>
 800f580:	2c00      	cmp	r4, #0
 800f582:	bfba      	itte	lt
 800f584:	4264      	neglt	r4, r4
 800f586:	2301      	movlt	r3, #1
 800f588:	2300      	movge	r3, #0
 800f58a:	2d00      	cmp	r5, #0
 800f58c:	bfbc      	itt	lt
 800f58e:	426d      	neglt	r5, r5
 800f590:	f043 0302 	orrlt.w	r3, r3, #2
 800f594:	42a5      	cmp	r5, r4
 800f596:	f10b 3bff 	add.w	fp, fp, #4294967295
 800f59a:	dd04      	ble.n	800f5a6 <GL_DrawLineEx+0x5a>
 800f59c:	4622      	mov	r2, r4
 800f59e:	f043 0304 	orr.w	r3, r3, #4
 800f5a2:	462c      	mov	r4, r5
 800f5a4:	4615      	mov	r5, r2
 800f5a6:	2202      	movs	r2, #2
 800f5a8:	fb94 f2f2 	sdiv	r2, r4, r2
 800f5ac:	eb02 2585 	add.w	r5, r2, r5, lsl #10
 800f5b0:	fb95 f4f4 	sdiv	r4, r5, r4
 800f5b4:	11a1      	asrs	r1, r4, #6
 800f5b6:	4a4f      	ldr	r2, [pc, #316]	; (800f6f4 <GL_DrawLineEx+0x1a8>)
 800f5b8:	f3c4 0483 	ubfx	r4, r4, #2, #4
 800f5bc:	f1c4 0510 	rsb	r5, r4, #16
 800f5c0:	f932 0011 	ldrsh.w	r0, [r2, r1, lsl #1]
 800f5c4:	2d10      	cmp	r5, #16
 800f5c6:	fb05 f000 	mul.w	r0, r5, r0
 800f5ca:	d004      	beq.n	800f5d6 <GL_DrawLineEx+0x8a>
 800f5cc:	3101      	adds	r1, #1
 800f5ce:	f932 2011 	ldrsh.w	r2, [r2, r1, lsl #1]
 800f5d2:	fb04 0002 	mla	r0, r4, r2, r0
 800f5d6:	2210      	movs	r2, #16
 800f5d8:	3008      	adds	r0, #8
 800f5da:	fb90 f0f2 	sdiv	r0, r0, r2
 800f5de:	0759      	lsls	r1, r3, #29
 800f5e0:	bf48      	it	mi
 800f5e2:	f5c0 6080 	rsbmi	r0, r0, #1024	; 0x400
 800f5e6:	07da      	lsls	r2, r3, #31
 800f5e8:	bf48      	it	mi
 800f5ea:	f5c0 6000 	rsbmi	r0, r0, #2048	; 0x800
 800f5ee:	079b      	lsls	r3, r3, #30
 800f5f0:	bf48      	it	mi
 800f5f2:	f5c0 5080 	rsbmi	r0, r0, #4096	; 0x1000
 800f5f6:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 800f5fa:	4628      	mov	r0, r5
 800f5fc:	f7ff fec0 	bl	800f380 <GUI_cos>
 800f600:	fb00 f40b 	mul.w	r4, r0, fp
 800f604:	4628      	mov	r0, r5
 800f606:	f7ff fe8f 	bl	800f328 <GUI_sin>
 800f60a:	2c00      	cmp	r4, #0
 800f60c:	fb00 f00b 	mul.w	r0, r0, fp
 800f610:	da04      	bge.n	800f61c <GL_DrawLineEx+0xd0>
 800f612:	f5c4 7300 	rsb	r3, r4, #512	; 0x200
 800f616:	129b      	asrs	r3, r3, #10
 800f618:	425b      	negs	r3, r3
 800f61a:	e002      	b.n	800f622 <GL_DrawLineEx+0xd6>
 800f61c:	f504 7300 	add.w	r3, r4, #512	; 0x200
 800f620:	129b      	asrs	r3, r3, #10
 800f622:	2800      	cmp	r0, #0
 800f624:	da06      	bge.n	800f634 <GL_DrawLineEx+0xe8>
 800f626:	f5c0 7b00 	rsb	fp, r0, #512	; 0x200
 800f62a:	ea4f 2bab 	mov.w	fp, fp, asr #10
 800f62e:	f1cb 0b00 	rsb	fp, fp, #0
 800f632:	e003      	b.n	800f63c <GL_DrawLineEx+0xf0>
 800f634:	f500 7b00 	add.w	fp, r0, #512	; 0x200
 800f638:	ea4f 2bab 	mov.w	fp, fp, asr #10
 800f63c:	2b00      	cmp	r3, #0
 800f63e:	dd03      	ble.n	800f648 <GL_DrawLineEx+0xfc>
 800f640:	1c58      	adds	r0, r3, #1
 800f642:	1040      	asrs	r0, r0, #1
 800f644:	105b      	asrs	r3, r3, #1
 800f646:	e005      	b.n	800f654 <GL_DrawLineEx+0x108>
 800f648:	2202      	movs	r2, #2
 800f64a:	fb93 f0f2 	sdiv	r0, r3, r2
 800f64e:	3b01      	subs	r3, #1
 800f650:	fb93 f3f2 	sdiv	r3, r3, r2
 800f654:	f1bb 0f00 	cmp.w	fp, #0
 800f658:	dd05      	ble.n	800f666 <GL_DrawLineEx+0x11a>
 800f65a:	f10b 0201 	add.w	r2, fp, #1
 800f65e:	1052      	asrs	r2, r2, #1
 800f660:	ea4f 0b6b 	mov.w	fp, fp, asr #1
 800f664:	e006      	b.n	800f674 <GL_DrawLineEx+0x128>
 800f666:	2102      	movs	r1, #2
 800f668:	fb9b f2f1 	sdiv	r2, fp, r1
 800f66c:	f10b 3bff 	add.w	fp, fp, #4294967295
 800f670:	fb9b fbf1 	sdiv	fp, fp, r1
 800f674:	b280      	uxth	r0, r0
 800f676:	fa1f f489 	uxth.w	r4, r9
 800f67a:	1901      	adds	r1, r0, r4
 800f67c:	b292      	uxth	r2, r2
 800f67e:	f8ad 1008 	strh.w	r1, [sp, #8]
 800f682:	fa1f fb8b 	uxth.w	fp, fp
 800f686:	fa1f f188 	uxth.w	r1, r8
 800f68a:	1855      	adds	r5, r2, r1
 800f68c:	ebcb 0101 	rsb	r1, fp, r1
 800f690:	b29b      	uxth	r3, r3
 800f692:	f8ad 100e 	strh.w	r1, [sp, #14]
 800f696:	b2b9      	uxth	r1, r7
 800f698:	1ae4      	subs	r4, r4, r3
 800f69a:	1acb      	subs	r3, r1, r3
 800f69c:	f8ad 3010 	strh.w	r3, [sp, #16]
 800f6a0:	b2b3      	uxth	r3, r6
 800f6a2:	4401      	add	r1, r0
 800f6a4:	ebcb 0b03 	rsb	fp, fp, r3
 800f6a8:	4413      	add	r3, r2
 800f6aa:	2200      	movs	r2, #0
 800f6ac:	f8ad 1014 	strh.w	r1, [sp, #20]
 800f6b0:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f6b4:	a802      	add	r0, sp, #8
 800f6b6:	4613      	mov	r3, r2
 800f6b8:	2104      	movs	r1, #4
 800f6ba:	f8ad 500a 	strh.w	r5, [sp, #10]
 800f6be:	f8ad 400c 	strh.w	r4, [sp, #12]
 800f6c2:	f8ad b012 	strh.w	fp, [sp, #18]
 800f6c6:	f005 f8a5 	bl	8014814 <GL_FillPolygon>
 800f6ca:	f8da 3000 	ldr.w	r3, [sl]
 800f6ce:	7e5b      	ldrb	r3, [r3, #25]
 800f6d0:	b91b      	cbnz	r3, 800f6da <GL_DrawLineEx+0x18e>
 800f6d2:	4648      	mov	r0, r9
 800f6d4:	4641      	mov	r1, r8
 800f6d6:	f005 f97f 	bl	80149d8 <GL_DrawPoint>
 800f6da:	f8da 3000 	ldr.w	r3, [sl]
 800f6de:	7e5b      	ldrb	r3, [r3, #25]
 800f6e0:	b91b      	cbnz	r3, 800f6ea <GL_DrawLineEx+0x19e>
 800f6e2:	4638      	mov	r0, r7
 800f6e4:	4631      	mov	r1, r6
 800f6e6:	f005 f977 	bl	80149d8 <GL_DrawPoint>
 800f6ea:	b007      	add	sp, #28
 800f6ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f6f0:	20000254 	.word	0x20000254
 800f6f4:	0801778a 	.word	0x0801778a

0800f6f8 <GL_DrawLine>:
 800f6f8:	b530      	push	{r4, r5, lr}
 800f6fa:	b085      	sub	sp, #20
 800f6fc:	ac04      	add	r4, sp, #16
 800f6fe:	2500      	movs	r5, #0
 800f700:	f844 5d04 	str.w	r5, [r4, #-4]!
 800f704:	9400      	str	r4, [sp, #0]
 800f706:	f7ff ff21 	bl	800f54c <GL_DrawLineEx>
 800f70a:	b005      	add	sp, #20
 800f70c:	bd30      	pop	{r4, r5, pc}
	...

0800f710 <GUI_DrawLine>:
 800f710:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f714:	461e      	mov	r6, r3
 800f716:	4b0c      	ldr	r3, [pc, #48]	; (800f748 <GUI_DrawLine+0x38>)
 800f718:	681c      	ldr	r4, [r3, #0]
 800f71a:	4681      	mov	r9, r0
 800f71c:	2000      	movs	r0, #0
 800f71e:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800f720:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800f722:	4688      	mov	r8, r1
 800f724:	4617      	mov	r7, r2
 800f726:	f7fb fa3b 	bl	800aba0 <WM__InitIVRSearch>
 800f72a:	b150      	cbz	r0, 800f742 <GUI_DrawLine+0x32>
 800f72c:	eb09 0005 	add.w	r0, r9, r5
 800f730:	eb08 0104 	add.w	r1, r8, r4
 800f734:	197a      	adds	r2, r7, r5
 800f736:	1933      	adds	r3, r6, r4
 800f738:	f7ff ffde 	bl	800f6f8 <GL_DrawLine>
 800f73c:	f7fb f96e 	bl	800aa1c <WM__GetNextIVR>
 800f740:	e7f3      	b.n	800f72a <GUI_DrawLine+0x1a>
 800f742:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f746:	bf00      	nop
 800f748:	20000254 	.word	0x20000254

0800f74c <GL_DrawLineToEx>:
 800f74c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f74e:	4e09      	ldr	r6, [pc, #36]	; (800f774 <GL_DrawLineToEx+0x28>)
 800f750:	6833      	ldr	r3, [r6, #0]
 800f752:	4605      	mov	r5, r0
 800f754:	460c      	mov	r4, r1
 800f756:	f9b3 0026 	ldrsh.w	r0, [r3, #38]	; 0x26
 800f75a:	f9b3 1028 	ldrsh.w	r1, [r3, #40]	; 0x28
 800f75e:	9200      	str	r2, [sp, #0]
 800f760:	4623      	mov	r3, r4
 800f762:	462a      	mov	r2, r5
 800f764:	f7ff fef2 	bl	800f54c <GL_DrawLineEx>
 800f768:	6833      	ldr	r3, [r6, #0]
 800f76a:	84dd      	strh	r5, [r3, #38]	; 0x26
 800f76c:	851c      	strh	r4, [r3, #40]	; 0x28
 800f76e:	b002      	add	sp, #8
 800f770:	bd70      	pop	{r4, r5, r6, pc}
 800f772:	bf00      	nop
 800f774:	20000254 	.word	0x20000254

0800f778 <GUI_DrawHLine>:
 800f778:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f77a:	4f10      	ldr	r7, [pc, #64]	; (800f7bc <GUI_DrawHLine+0x44>)
 800f77c:	683b      	ldr	r3, [r7, #0]
 800f77e:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 800f780:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800f782:	4405      	add	r5, r0
 800f784:	190e      	adds	r6, r1, r4
 800f786:	b2ab      	uxth	r3, r5
 800f788:	4414      	add	r4, r2
 800f78a:	4668      	mov	r0, sp
 800f78c:	f8ad 6000 	strh.w	r6, [sp]
 800f790:	f8ad 4004 	strh.w	r4, [sp, #4]
 800f794:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f798:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f79c:	f7fb fa00 	bl	800aba0 <WM__InitIVRSearch>
 800f7a0:	b148      	cbz	r0, 800f7b6 <GUI_DrawHLine+0x3e>
 800f7a2:	683b      	ldr	r3, [r7, #0]
 800f7a4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f7a6:	4630      	mov	r0, r6
 800f7a8:	681b      	ldr	r3, [r3, #0]
 800f7aa:	4629      	mov	r1, r5
 800f7ac:	4622      	mov	r2, r4
 800f7ae:	4798      	blx	r3
 800f7b0:	f7fb f934 	bl	800aa1c <WM__GetNextIVR>
 800f7b4:	e7f4      	b.n	800f7a0 <GUI_DrawHLine+0x28>
 800f7b6:	b003      	add	sp, #12
 800f7b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f7ba:	bf00      	nop
 800f7bc:	20000254 	.word	0x20000254

0800f7c0 <GUI_DrawFocusRect>:
 800f7c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f7c2:	4603      	mov	r3, r0
 800f7c4:	460a      	mov	r2, r1
 800f7c6:	4668      	mov	r0, sp
 800f7c8:	4619      	mov	r1, r3
 800f7ca:	f7fe fb2c 	bl	800de26 <GUI__ReduceRect>
 800f7ce:	4b23      	ldr	r3, [pc, #140]	; (800f85c <GUI_DrawFocusRect+0x9c>)
 800f7d0:	f8bd 1000 	ldrh.w	r1, [sp]
 800f7d4:	681b      	ldr	r3, [r3, #0]
 800f7d6:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 800f7da:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 800f7de:	4411      	add	r1, r2
 800f7e0:	f8ad 1000 	strh.w	r1, [sp]
 800f7e4:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800f7e8:	4419      	add	r1, r3
 800f7ea:	f8ad 1002 	strh.w	r1, [sp, #2]
 800f7ee:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 800f7f2:	440a      	add	r2, r1
 800f7f4:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f7f8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800f7fc:	4668      	mov	r0, sp
 800f7fe:	4413      	add	r3, r2
 800f800:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f804:	f7fb f9cc 	bl	800aba0 <WM__InitIVRSearch>
 800f808:	b328      	cbz	r0, 800f856 <GUI_DrawFocusRect+0x96>
 800f80a:	f9bd 5000 	ldrsh.w	r5, [sp]
 800f80e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800f812:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 800f816:	429d      	cmp	r5, r3
 800f818:	dc09      	bgt.n	800f82e <GUI_DrawFocusRect+0x6e>
 800f81a:	4628      	mov	r0, r5
 800f81c:	f7fd ff20 	bl	800d660 <LCD_DrawPixel>
 800f820:	4628      	mov	r0, r5
 800f822:	f9bd 1006 	ldrsh.w	r1, [sp, #6]
 800f826:	f7fd ff1b 	bl	800d660 <LCD_DrawPixel>
 800f82a:	3502      	adds	r5, #2
 800f82c:	e7ef      	b.n	800f80e <GUI_DrawFocusRect+0x4e>
 800f82e:	460c      	mov	r4, r1
 800f830:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800f834:	429c      	cmp	r4, r3
 800f836:	dc0b      	bgt.n	800f850 <GUI_DrawFocusRect+0x90>
 800f838:	4621      	mov	r1, r4
 800f83a:	f9bd 0000 	ldrsh.w	r0, [sp]
 800f83e:	f7fd ff0f 	bl	800d660 <LCD_DrawPixel>
 800f842:	4621      	mov	r1, r4
 800f844:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 800f848:	f7fd ff0a 	bl	800d660 <LCD_DrawPixel>
 800f84c:	3402      	adds	r4, #2
 800f84e:	e7ef      	b.n	800f830 <GUI_DrawFocusRect+0x70>
 800f850:	f7fb f8e4 	bl	800aa1c <WM__GetNextIVR>
 800f854:	e7d8      	b.n	800f808 <GUI_DrawFocusRect+0x48>
 800f856:	b003      	add	sp, #12
 800f858:	bd30      	pop	{r4, r5, pc}
 800f85a:	bf00      	nop
 800f85c:	20000254 	.word	0x20000254

0800f860 <GUI_WrapGetNumLines>:
 800f860:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f862:	4605      	mov	r5, r0
 800f864:	460e      	mov	r6, r1
 800f866:	4617      	mov	r7, r2
 800f868:	2400      	movs	r4, #0
 800f86a:	4628      	mov	r0, r5
 800f86c:	4631      	mov	r1, r6
 800f86e:	463a      	mov	r2, r7
 800f870:	f004 fb98 	bl	8013fa4 <GUI__WrapGetNumBytesToNextLine>
 800f874:	b110      	cbz	r0, 800f87c <GUI_WrapGetNumLines+0x1c>
 800f876:	4405      	add	r5, r0
 800f878:	3401      	adds	r4, #1
 800f87a:	e7f6      	b.n	800f86a <GUI_WrapGetNumLines+0xa>
 800f87c:	4620      	mov	r0, r4
 800f87e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f880 <GUI_DispStringInRectWrap>:
 800f880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f884:	b089      	sub	sp, #36	; 0x24
 800f886:	460c      	mov	r4, r1
 800f888:	9202      	str	r2, [sp, #8]
 800f88a:	9303      	str	r3, [sp, #12]
 800f88c:	4605      	mov	r5, r0
 800f88e:	2800      	cmp	r0, #0
 800f890:	f000 8091 	beq.w	800f9b6 <GUI_DispStringInRectWrap+0x136>
 800f894:	f8b1 a000 	ldrh.w	sl, [r1]
 800f898:	f8b1 9004 	ldrh.w	r9, [r1, #4]
 800f89c:	884e      	ldrh	r6, [r1, #2]
 800f89e:	f8b1 b006 	ldrh.w	fp, [r1, #6]
 800f8a2:	fa0f f289 	sxth.w	r2, r9
 800f8a6:	fa0f f38a 	sxth.w	r3, sl
 800f8aa:	1ad3      	subs	r3, r2, r3
 800f8ac:	3301      	adds	r3, #1
 800f8ae:	9301      	str	r3, [sp, #4]
 800f8b0:	f000 fcaa 	bl	8010208 <GUI_GetFontDistY>
 800f8b4:	9902      	ldr	r1, [sp, #8]
 800f8b6:	f011 070c 	ands.w	r7, r1, #12
 800f8ba:	4680      	mov	r8, r0
 800f8bc:	d01b      	beq.n	800f8f6 <GUI_DispStringInRectWrap+0x76>
 800f8be:	4628      	mov	r0, r5
 800f8c0:	9901      	ldr	r1, [sp, #4]
 800f8c2:	9a03      	ldr	r2, [sp, #12]
 800f8c4:	f7ff ffcc 	bl	800f860 <GUI_WrapGetNumLines>
 800f8c8:	2f08      	cmp	r7, #8
 800f8ca:	d003      	beq.n	800f8d4 <GUI_DispStringInRectWrap+0x54>
 800f8cc:	2f0c      	cmp	r7, #12
 800f8ce:	d006      	beq.n	800f8de <GUI_DispStringInRectWrap+0x5e>
 800f8d0:	2f04      	cmp	r7, #4
 800f8d2:	d110      	bne.n	800f8f6 <GUI_DispStringInRectWrap+0x76>
 800f8d4:	f10b 0601 	add.w	r6, fp, #1
 800f8d8:	fb00 6618 	mls	r6, r0, r8, r6
 800f8dc:	e00a      	b.n	800f8f4 <GUI_DispStringInRectWrap+0x74>
 800f8de:	b232      	sxth	r2, r6
 800f8e0:	fa0f f38b 	sxth.w	r3, fp
 800f8e4:	1a9b      	subs	r3, r3, r2
 800f8e6:	3301      	adds	r3, #1
 800f8e8:	fb08 3010 	mls	r0, r8, r0, r3
 800f8ec:	2302      	movs	r3, #2
 800f8ee:	fb90 f0f3 	sdiv	r0, r0, r3
 800f8f2:	4406      	add	r6, r0
 800f8f4:	b2b6      	uxth	r6, r6
 800f8f6:	4620      	mov	r0, r4
 800f8f8:	f7f9 fe04 	bl	8009504 <WM_SetUserClipRect>
 800f8fc:	4607      	mov	r7, r0
 800f8fe:	b178      	cbz	r0, 800f920 <GUI_DispStringInRectWrap+0xa0>
 800f900:	a804      	add	r0, sp, #16
 800f902:	4621      	mov	r1, r4
 800f904:	463a      	mov	r2, r7
 800f906:	f8ad a010 	strh.w	sl, [sp, #16]
 800f90a:	f8ad 6012 	strh.w	r6, [sp, #18]
 800f90e:	f8ad 9014 	strh.w	r9, [sp, #20]
 800f912:	f8ad b016 	strh.w	fp, [sp, #22]
 800f916:	f7fe fb11 	bl	800df3c <GUI__IntersectRects>
 800f91a:	a804      	add	r0, sp, #16
 800f91c:	f7f9 fdf2 	bl	8009504 <WM_SetUserClipRect>
 800f920:	9901      	ldr	r1, [sp, #4]
 800f922:	9a03      	ldr	r2, [sp, #12]
 800f924:	4628      	mov	r0, r5
 800f926:	f004 fb0b 	bl	8013f40 <GUI__WrapGetNumCharsDisp>
 800f92a:	eb06 0b08 	add.w	fp, r6, r8
 800f92e:	4602      	mov	r2, r0
 800f930:	fa1f fb8b 	uxth.w	fp, fp
 800f934:	f10b 33ff 	add.w	r3, fp, #4294967295
 800f938:	4611      	mov	r1, r2
 800f93a:	4628      	mov	r0, r5
 800f93c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800f940:	9200      	str	r2, [sp, #0]
 800f942:	f8ad a018 	strh.w	sl, [sp, #24]
 800f946:	f8ad 601a 	strh.w	r6, [sp, #26]
 800f94a:	f8ad 901c 	strh.w	r9, [sp, #28]
 800f94e:	f000 fbd7 	bl	8010100 <GUI__GetLineDistX>
 800f952:	9902      	ldr	r1, [sp, #8]
 800f954:	9a00      	ldr	r2, [sp, #0]
 800f956:	f001 0303 	and.w	r3, r1, #3
 800f95a:	2b01      	cmp	r3, #1
 800f95c:	d013      	beq.n	800f986 <GUI_DispStringInRectWrap+0x106>
 800f95e:	2b02      	cmp	r3, #2
 800f960:	d004      	beq.n	800f96c <GUI_DispStringInRectWrap+0xec>
 800f962:	b9ab      	cbnz	r3, 800f990 <GUI_DispStringInRectWrap+0x110>
 800f964:	8823      	ldrh	r3, [r4, #0]
 800f966:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f96a:	e011      	b.n	800f990 <GUI_DispStringInRectWrap+0x110>
 800f96c:	8821      	ldrh	r1, [r4, #0]
 800f96e:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 800f972:	b20e      	sxth	r6, r1
 800f974:	ebc6 060e 	rsb	r6, r6, lr
 800f978:	1a30      	subs	r0, r6, r0
 800f97a:	fb90 f3f3 	sdiv	r3, r0, r3
 800f97e:	4419      	add	r1, r3
 800f980:	f8ad 1018 	strh.w	r1, [sp, #24]
 800f984:	e004      	b.n	800f990 <GUI_DispStringInRectWrap+0x110>
 800f986:	88a3      	ldrh	r3, [r4, #4]
 800f988:	3301      	adds	r3, #1
 800f98a:	1a18      	subs	r0, r3, r0
 800f98c:	f8ad 0018 	strh.w	r0, [sp, #24]
 800f990:	4628      	mov	r0, r5
 800f992:	4611      	mov	r1, r2
 800f994:	aa06      	add	r2, sp, #24
 800f996:	f000 fbe3 	bl	8010160 <GUI__DispLine>
 800f99a:	4628      	mov	r0, r5
 800f99c:	9901      	ldr	r1, [sp, #4]
 800f99e:	9a03      	ldr	r2, [sp, #12]
 800f9a0:	f004 fb00 	bl	8013fa4 <GUI__WrapGetNumBytesToNextLine>
 800f9a4:	4405      	add	r5, r0
 800f9a6:	fa1f f68b 	uxth.w	r6, fp
 800f9aa:	782b      	ldrb	r3, [r5, #0]
 800f9ac:	2b00      	cmp	r3, #0
 800f9ae:	d1b7      	bne.n	800f920 <GUI_DispStringInRectWrap+0xa0>
 800f9b0:	4638      	mov	r0, r7
 800f9b2:	f7f9 fda7 	bl	8009504 <WM_SetUserClipRect>
 800f9b6:	b009      	add	sp, #36	; 0x24
 800f9b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f9bc <GUI_DEVICE__GetpDriver>:
 800f9bc:	2801      	cmp	r0, #1
 800f9be:	dc09      	bgt.n	800f9d4 <GUI_DEVICE__GetpDriver+0x18>
 800f9c0:	4b05      	ldr	r3, [pc, #20]	; (800f9d8 <GUI_DEVICE__GetpDriver+0x1c>)
 800f9c2:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800f9c6:	b120      	cbz	r0, 800f9d2 <GUI_DEVICE__GetpDriver+0x16>
 800f9c8:	68c3      	ldr	r3, [r0, #12]
 800f9ca:	681b      	ldr	r3, [r3, #0]
 800f9cc:	b11b      	cbz	r3, 800f9d6 <GUI_DEVICE__GetpDriver+0x1a>
 800f9ce:	6800      	ldr	r0, [r0, #0]
 800f9d0:	e7f9      	b.n	800f9c6 <GUI_DEVICE__GetpDriver+0xa>
 800f9d2:	4770      	bx	lr
 800f9d4:	2000      	movs	r0, #0
 800f9d6:	4770      	bx	lr
 800f9d8:	2001b39c 	.word	0x2001b39c

0800f9dc <GUI_DEVICE_Delete>:
 800f9dc:	f000 bd1c 	b.w	8010418 <GUI_ALLOC_FreeFixedBlock>

0800f9e0 <GUI_DEVICE_Create>:
 800f9e0:	2b01      	cmp	r3, #1
 800f9e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f9e4:	4606      	mov	r6, r0
 800f9e6:	460d      	mov	r5, r1
 800f9e8:	4617      	mov	r7, r2
 800f9ea:	461c      	mov	r4, r3
 800f9ec:	dd01      	ble.n	800f9f2 <GUI_DEVICE_Create+0x12>
 800f9ee:	2000      	movs	r0, #0
 800f9f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f9f2:	201c      	movs	r0, #28
 800f9f4:	f000 fe7c 	bl	80106f0 <GUI_ALLOC_GetFixedBlock>
 800f9f8:	2800      	cmp	r0, #0
 800f9fa:	d0f8      	beq.n	800f9ee <GUI_DEVICE_Create+0xe>
 800f9fc:	b10d      	cbz	r5, 800fa02 <GUI_DEVICE_Create+0x22>
 800f9fe:	6105      	str	r5, [r0, #16]
 800fa00:	e009      	b.n	800fa16 <GUI_DEVICE_Create+0x36>
 800fa02:	4b09      	ldr	r3, [pc, #36]	; (800fa28 <GUI_DEVICE_Create+0x48>)
 800fa04:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 800fa08:	b129      	cbz	r1, 800fa16 <GUI_DEVICE_Create+0x36>
 800fa0a:	680b      	ldr	r3, [r1, #0]
 800fa0c:	b10b      	cbz	r3, 800fa12 <GUI_DEVICE_Create+0x32>
 800fa0e:	4619      	mov	r1, r3
 800fa10:	e7fb      	b.n	800fa0a <GUI_DEVICE_Create+0x2a>
 800fa12:	690b      	ldr	r3, [r1, #16]
 800fa14:	6103      	str	r3, [r0, #16]
 800fa16:	2300      	movs	r3, #0
 800fa18:	6083      	str	r3, [r0, #8]
 800fa1a:	6184      	str	r4, [r0, #24]
 800fa1c:	8287      	strh	r7, [r0, #20]
 800fa1e:	60c6      	str	r6, [r0, #12]
 800fa20:	6003      	str	r3, [r0, #0]
 800fa22:	6043      	str	r3, [r0, #4]
 800fa24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fa26:	bf00      	nop
 800fa28:	2001b39c 	.word	0x2001b39c

0800fa2c <GUI_DEVICE_Unlink>:
 800fa2c:	4b09      	ldr	r3, [pc, #36]	; (800fa54 <GUI_DEVICE_Unlink+0x28>)
 800fa2e:	6982      	ldr	r2, [r0, #24]
 800fa30:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800fa34:	4281      	cmp	r1, r0
 800fa36:	bf04      	itt	eq
 800fa38:	6801      	ldreq	r1, [r0, #0]
 800fa3a:	f843 1022 	streq.w	r1, [r3, r2, lsl #2]
 800fa3e:	6843      	ldr	r3, [r0, #4]
 800fa40:	b10b      	cbz	r3, 800fa46 <GUI_DEVICE_Unlink+0x1a>
 800fa42:	6802      	ldr	r2, [r0, #0]
 800fa44:	601a      	str	r2, [r3, #0]
 800fa46:	6802      	ldr	r2, [r0, #0]
 800fa48:	b102      	cbz	r2, 800fa4c <GUI_DEVICE_Unlink+0x20>
 800fa4a:	6053      	str	r3, [r2, #4]
 800fa4c:	2300      	movs	r3, #0
 800fa4e:	6003      	str	r3, [r0, #0]
 800fa50:	6043      	str	r3, [r0, #4]
 800fa52:	4770      	bx	lr
 800fa54:	2001b39c 	.word	0x2001b39c

0800fa58 <GUI_DEVICE_Link>:
 800fa58:	b570      	push	{r4, r5, r6, lr}
 800fa5a:	b338      	cbz	r0, 800faac <GUI_DEVICE_Link+0x54>
 800fa5c:	6982      	ldr	r2, [r0, #24]
 800fa5e:	2a01      	cmp	r2, #1
 800fa60:	dc24      	bgt.n	800faac <GUI_DEVICE_Link+0x54>
 800fa62:	4919      	ldr	r1, [pc, #100]	; (800fac8 <GUI_DEVICE_Link+0x70>)
 800fa64:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 800fa68:	460d      	mov	r5, r1
 800fa6a:	b913      	cbnz	r3, 800fa72 <GUI_DEVICE_Link+0x1a>
 800fa6c:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 800fa70:	e01a      	b.n	800faa8 <GUI_DEVICE_Link+0x50>
 800fa72:	6859      	ldr	r1, [r3, #4]
 800fa74:	b109      	cbz	r1, 800fa7a <GUI_DEVICE_Link+0x22>
 800fa76:	460b      	mov	r3, r1
 800fa78:	e7fb      	b.n	800fa72 <GUI_DEVICE_Link+0x1a>
 800fa7a:	68c1      	ldr	r1, [r0, #12]
 800fa7c:	680e      	ldr	r6, [r1, #0]
 800fa7e:	68d9      	ldr	r1, [r3, #12]
 800fa80:	680c      	ldr	r4, [r1, #0]
 800fa82:	42b4      	cmp	r4, r6
 800fa84:	dd03      	ble.n	800fa8e <GUI_DEVICE_Link+0x36>
 800fa86:	681b      	ldr	r3, [r3, #0]
 800fa88:	2b00      	cmp	r3, #0
 800fa8a:	d1f8      	bne.n	800fa7e <GUI_DEVICE_Link+0x26>
 800fa8c:	e00e      	b.n	800faac <GUI_DEVICE_Link+0x54>
 800fa8e:	d102      	bne.n	800fa96 <GUI_DEVICE_Link+0x3e>
 800fa90:	8a81      	ldrh	r1, [r0, #20]
 800fa92:	2901      	cmp	r1, #1
 800fa94:	d011      	beq.n	800faba <GUI_DEVICE_Link+0x62>
 800fa96:	6859      	ldr	r1, [r3, #4]
 800fa98:	b199      	cbz	r1, 800fac2 <GUI_DEVICE_Link+0x6a>
 800fa9a:	6008      	str	r0, [r1, #0]
 800fa9c:	6041      	str	r1, [r0, #4]
 800fa9e:	6058      	str	r0, [r3, #4]
 800faa0:	4298      	cmp	r0, r3
 800faa2:	bf08      	it	eq
 800faa4:	2300      	moveq	r3, #0
 800faa6:	6003      	str	r3, [r0, #0]
 800faa8:	2000      	movs	r0, #0
 800faaa:	bd70      	pop	{r4, r5, r6, pc}
 800faac:	2001      	movs	r0, #1
 800faae:	bd70      	pop	{r4, r5, r6, pc}
 800fab0:	68cb      	ldr	r3, [r1, #12]
 800fab2:	681b      	ldr	r3, [r3, #0]
 800fab4:	42a3      	cmp	r3, r4
 800fab6:	460b      	mov	r3, r1
 800fab8:	dbed      	blt.n	800fa96 <GUI_DEVICE_Link+0x3e>
 800faba:	6819      	ldr	r1, [r3, #0]
 800fabc:	2900      	cmp	r1, #0
 800fabe:	d1f7      	bne.n	800fab0 <GUI_DEVICE_Link+0x58>
 800fac0:	e7e9      	b.n	800fa96 <GUI_DEVICE_Link+0x3e>
 800fac2:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
 800fac6:	e7ea      	b.n	800fa9e <GUI_DEVICE_Link+0x46>
 800fac8:	2001b39c 	.word	0x2001b39c

0800facc <GUI_DEVICE_CreateAndLink>:
 800facc:	b538      	push	{r3, r4, r5, lr}
 800face:	461d      	mov	r5, r3
 800fad0:	f7ff ff86 	bl	800f9e0 <GUI_DEVICE_Create>
 800fad4:	4604      	mov	r4, r0
 800fad6:	b148      	cbz	r0, 800faec <GUI_DEVICE_CreateAndLink+0x20>
 800fad8:	f7ff ffbe 	bl	800fa58 <GUI_DEVICE_Link>
 800fadc:	68e3      	ldr	r3, [r4, #12]
 800fade:	681b      	ldr	r3, [r3, #0]
 800fae0:	b923      	cbnz	r3, 800faec <GUI_DEVICE_CreateAndLink+0x20>
 800fae2:	4b03      	ldr	r3, [pc, #12]	; (800faf0 <GUI_DEVICE_CreateAndLink+0x24>)
 800fae4:	3516      	adds	r5, #22
 800fae6:	681b      	ldr	r3, [r3, #0]
 800fae8:	f843 4025 	str.w	r4, [r3, r5, lsl #2]
 800faec:	4620      	mov	r0, r4
 800faee:	bd38      	pop	{r3, r4, r5, pc}
 800faf0:	20000254 	.word	0x20000254

0800faf4 <_OnExit>:
 800faf4:	b510      	push	{r4, lr}
 800faf6:	4b07      	ldr	r3, [pc, #28]	; (800fb14 <_OnExit+0x20>)
 800faf8:	4807      	ldr	r0, [pc, #28]	; (800fb18 <_OnExit+0x24>)
 800fafa:	2400      	movs	r4, #0
 800fafc:	4621      	mov	r1, r4
 800fafe:	2270      	movs	r2, #112	; 0x70
 800fb00:	601c      	str	r4, [r3, #0]
 800fb02:	f7fe f92b 	bl	800dd5c <GUI__memset>
 800fb06:	4621      	mov	r1, r4
 800fb08:	4804      	ldr	r0, [pc, #16]	; (800fb1c <_OnExit+0x28>)
 800fb0a:	2208      	movs	r2, #8
 800fb0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fb10:	f7fe b924 	b.w	800dd5c <GUI__memset>
 800fb14:	200196a0 	.word	0x200196a0
 800fb18:	20019628 	.word	0x20019628
 800fb1c:	2001b39c 	.word	0x2001b39c

0800fb20 <_InitContext>:
 800fb20:	b538      	push	{r3, r4, r5, lr}
 800fb22:	4d19      	ldr	r5, [pc, #100]	; (800fb88 <_InitContext+0x68>)
 800fb24:	682b      	ldr	r3, [r5, #0]
 800fb26:	1d1a      	adds	r2, r3, #4
 800fb28:	63da      	str	r2, [r3, #60]	; 0x3c
 800fb2a:	f103 0208 	add.w	r2, r3, #8
 800fb2e:	639b      	str	r3, [r3, #56]	; 0x38
 800fb30:	641b      	str	r3, [r3, #64]	; 0x40
 800fb32:	6142      	str	r2, [r0, #20]
 800fb34:	7c5a      	ldrb	r2, [r3, #17]
 800fb36:	4b15      	ldr	r3, [pc, #84]	; (800fb8c <_InitContext+0x6c>)
 800fb38:	4604      	mov	r4, r0
 800fb3a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800fb3e:	68c3      	ldr	r3, [r0, #12]
 800fb40:	f104 0108 	add.w	r1, r4, #8
 800fb44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fb46:	4798      	blx	r3
 800fb48:	4b11      	ldr	r3, [pc, #68]	; (800fb90 <_InitContext+0x70>)
 800fb4a:	6663      	str	r3, [r4, #100]	; 0x64
 800fb4c:	4b11      	ldr	r3, [pc, #68]	; (800fb94 <_InitContext+0x74>)
 800fb4e:	681b      	ldr	r3, [r3, #0]
 800fb50:	61e3      	str	r3, [r4, #28]
 800fb52:	682b      	ldr	r3, [r5, #0]
 800fb54:	3308      	adds	r3, #8
 800fb56:	6163      	str	r3, [r4, #20]
 800fb58:	2301      	movs	r3, #1
 800fb5a:	7623      	strb	r3, [r4, #24]
 800fb5c:	f7fa f8be 	bl	8009cdc <WM_GetDesktopWindow>
 800fb60:	2303      	movs	r3, #3
 800fb62:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 800fb66:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800fb6a:	6323      	str	r3, [r4, #48]	; 0x30
 800fb6c:	6363      	str	r3, [r4, #52]	; 0x34
 800fb6e:	64a0      	str	r0, [r4, #72]	; 0x48
 800fb70:	2000      	movs	r0, #0
 800fb72:	f7fe f8b5 	bl	800dce0 <LCD_SetBkColor>
 800fb76:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800fb7a:	f7fe f8b9 	bl	800dcf0 <LCD_SetColor>
 800fb7e:	4b06      	ldr	r3, [pc, #24]	; (800fb98 <_InitContext+0x78>)
 800fb80:	4a06      	ldr	r2, [pc, #24]	; (800fb9c <_InitContext+0x7c>)
 800fb82:	601a      	str	r2, [r3, #0]
 800fb84:	bd38      	pop	{r3, r4, r5, pc}
 800fb86:	bf00      	nop
 800fb88:	20000254 	.word	0x20000254
 800fb8c:	2001b39c 	.word	0x2001b39c
 800fb90:	080177ac 	.word	0x080177ac
 800fb94:	20000258 	.word	0x20000258
 800fb98:	2001b394 	.word	0x2001b394
 800fb9c:	08018300 	.word	0x08018300

0800fba0 <GUI_SetDefaultFont>:
 800fba0:	4b01      	ldr	r3, [pc, #4]	; (800fba8 <GUI_SetDefaultFont+0x8>)
 800fba2:	6018      	str	r0, [r3, #0]
 800fba4:	4770      	bx	lr
 800fba6:	bf00      	nop
 800fba8:	20000258 	.word	0x20000258

0800fbac <GUI_ClearRect>:
 800fbac:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800fbb0:	4607      	mov	r7, r0
 800fbb2:	2004      	movs	r0, #4
 800fbb4:	469a      	mov	sl, r3
 800fbb6:	460e      	mov	r6, r1
 800fbb8:	4691      	mov	r9, r2
 800fbba:	f7fd fd49 	bl	800d650 <LCD_SetDrawMode>
 800fbbe:	4b13      	ldr	r3, [pc, #76]	; (800fc0c <GUI_ClearRect+0x60>)
 800fbc0:	681c      	ldr	r4, [r3, #0]
 800fbc2:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800fbc4:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800fbc6:	442f      	add	r7, r5
 800fbc8:	4426      	add	r6, r4
 800fbca:	4680      	mov	r8, r0
 800fbcc:	444d      	add	r5, r9
 800fbce:	4454      	add	r4, sl
 800fbd0:	4668      	mov	r0, sp
 800fbd2:	f8ad 7000 	strh.w	r7, [sp]
 800fbd6:	f8ad 5004 	strh.w	r5, [sp, #4]
 800fbda:	f8ad 6002 	strh.w	r6, [sp, #2]
 800fbde:	f8ad 4006 	strh.w	r4, [sp, #6]
 800fbe2:	f7fa ffdd 	bl	800aba0 <WM__InitIVRSearch>
 800fbe6:	b928      	cbnz	r0, 800fbf4 <GUI_ClearRect+0x48>
 800fbe8:	4640      	mov	r0, r8
 800fbea:	f7fd fd31 	bl	800d650 <LCD_SetDrawMode>
 800fbee:	b002      	add	sp, #8
 800fbf0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fbf4:	4638      	mov	r0, r7
 800fbf6:	4631      	mov	r1, r6
 800fbf8:	462a      	mov	r2, r5
 800fbfa:	4623      	mov	r3, r4
 800fbfc:	f7fd fdaa 	bl	800d754 <LCD_FillRect>
 800fc00:	f7fa ff0c 	bl	800aa1c <WM__GetNextIVR>
 800fc04:	2800      	cmp	r0, #0
 800fc06:	d1f5      	bne.n	800fbf4 <GUI_ClearRect+0x48>
 800fc08:	e7ee      	b.n	800fbe8 <GUI_ClearRect+0x3c>
 800fc0a:	bf00      	nop
 800fc0c:	20000254 	.word	0x20000254

0800fc10 <GUI_Clear>:
 800fc10:	b510      	push	{r4, lr}
 800fc12:	2000      	movs	r0, #0
 800fc14:	4601      	mov	r1, r0
 800fc16:	f7ff fabf 	bl	800f198 <GUI_GotoXY>
 800fc1a:	4804      	ldr	r0, [pc, #16]	; (800fc2c <GUI_Clear+0x1c>)
 800fc1c:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800fc20:	4601      	mov	r1, r0
 800fc22:	4613      	mov	r3, r2
 800fc24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fc28:	f7ff bfc0 	b.w	800fbac <GUI_ClearRect>
 800fc2c:	ffffc001 	.word	0xffffc001

0800fc30 <GUI__RegisterExit>:
 800fc30:	b480      	push	{r7}
 800fc32:	b083      	sub	sp, #12
 800fc34:	af00      	add	r7, sp, #0
 800fc36:	6078      	str	r0, [r7, #4]
 800fc38:	4b05      	ldr	r3, [pc, #20]	; (800fc50 <GUI__RegisterExit+0x20>)
 800fc3a:	681a      	ldr	r2, [r3, #0]
 800fc3c:	687b      	ldr	r3, [r7, #4]
 800fc3e:	605a      	str	r2, [r3, #4]
 800fc40:	4b03      	ldr	r3, [pc, #12]	; (800fc50 <GUI__RegisterExit+0x20>)
 800fc42:	687a      	ldr	r2, [r7, #4]
 800fc44:	601a      	str	r2, [r3, #0]
 800fc46:	370c      	adds	r7, #12
 800fc48:	46bd      	mov	sp, r7
 800fc4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc4e:	4770      	bx	lr
 800fc50:	20019624 	.word	0x20019624

0800fc54 <GUI__Config>:
 800fc54:	b508      	push	{r3, lr}
 800fc56:	4b08      	ldr	r3, [pc, #32]	; (800fc78 <GUI__Config+0x24>)
 800fc58:	681a      	ldr	r2, [r3, #0]
 800fc5a:	b962      	cbnz	r2, 800fc76 <GUI__Config+0x22>
 800fc5c:	2201      	movs	r2, #1
 800fc5e:	601a      	str	r2, [r3, #0]
 800fc60:	f7f6 fe42 	bl	80068e8 <GUI_X_Config>
 800fc64:	f7f6 fe6c 	bl	8006940 <LCD_X_Config>
 800fc68:	4804      	ldr	r0, [pc, #16]	; (800fc7c <GUI__Config+0x28>)
 800fc6a:	4b05      	ldr	r3, [pc, #20]	; (800fc80 <GUI__Config+0x2c>)
 800fc6c:	6003      	str	r3, [r0, #0]
 800fc6e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fc72:	f7ff bfdd 	b.w	800fc30 <GUI__RegisterExit>
 800fc76:	bd08      	pop	{r3, pc}
 800fc78:	200196a0 	.word	0x200196a0
 800fc7c:	20019698 	.word	0x20019698
 800fc80:	0800faf5 	.word	0x0800faf5

0800fc84 <GUI_Init>:
 800fc84:	b590      	push	{r4, r7, lr}
 800fc86:	b083      	sub	sp, #12
 800fc88:	af00      	add	r7, sp, #0
 800fc8a:	4b20      	ldr	r3, [pc, #128]	; (800fd0c <GUI_Init+0x88>)
 800fc8c:	4a1f      	ldr	r2, [pc, #124]	; (800fd0c <GUI_Init+0x88>)
 800fc8e:	6812      	ldr	r2, [r2, #0]
 800fc90:	f022 0201 	bic.w	r2, r2, #1
 800fc94:	601a      	str	r2, [r3, #0]
 800fc96:	4b1e      	ldr	r3, [pc, #120]	; (800fd10 <GUI_Init+0x8c>)
 800fc98:	2201      	movs	r2, #1
 800fc9a:	601a      	str	r2, [r3, #0]
 800fc9c:	4b1d      	ldr	r3, [pc, #116]	; (800fd14 <GUI_Init+0x90>)
 800fc9e:	4a1e      	ldr	r2, [pc, #120]	; (800fd18 <GUI_Init+0x94>)
 800fca0:	601a      	str	r2, [r3, #0]
 800fca2:	4b1c      	ldr	r3, [pc, #112]	; (800fd14 <GUI_Init+0x90>)
 800fca4:	681a      	ldr	r2, [r3, #0]
 800fca6:	4b1d      	ldr	r3, [pc, #116]	; (800fd1c <GUI_Init+0x98>)
 800fca8:	429a      	cmp	r2, r3
 800fcaa:	d000      	beq.n	800fcae <GUI_Init+0x2a>
 800fcac:	e7fe      	b.n	800fcac <GUI_Init+0x28>
 800fcae:	f7ff ffd1 	bl	800fc54 <GUI__Config>
 800fcb2:	4b1b      	ldr	r3, [pc, #108]	; (800fd20 <GUI_Init+0x9c>)
 800fcb4:	222e      	movs	r2, #46	; 0x2e
 800fcb6:	701a      	strb	r2, [r3, #0]
 800fcb8:	f7f6 fe36 	bl	8006928 <GUI_X_Init>
 800fcbc:	4819      	ldr	r0, [pc, #100]	; (800fd24 <GUI_Init+0xa0>)
 800fcbe:	f7ff ff2f 	bl	800fb20 <_InitContext>
 800fcc2:	f7fd ff6b 	bl	800db9c <emWin_LCD_Init>
 800fcc6:	6078      	str	r0, [r7, #4]
 800fcc8:	f7fd fc4c 	bl	800d564 <LCD_GetXSizeDisplay>
 800fccc:	4603      	mov	r3, r0
 800fcce:	2b00      	cmp	r3, #0
 800fcd0:	d004      	beq.n	800fcdc <GUI_Init+0x58>
 800fcd2:	f7fd fc4d 	bl	800d570 <LCD_GetYSizeDisplay>
 800fcd6:	4603      	mov	r3, r0
 800fcd8:	2b00      	cmp	r3, #0
 800fcda:	d109      	bne.n	800fcf0 <GUI_Init+0x6c>
 800fcdc:	f7fd fc2e 	bl	800d53c <LCD_GetXSizeMax>
 800fce0:	4604      	mov	r4, r0
 800fce2:	f7fd fc2e 	bl	800d542 <LCD_GetYSizeMax>
 800fce6:	4603      	mov	r3, r0
 800fce8:	4620      	mov	r0, r4
 800fcea:	4619      	mov	r1, r3
 800fcec:	f7fd fc30 	bl	800d550 <LCD_SetDisplaySize>
 800fcf0:	2000      	movs	r0, #0
 800fcf2:	2100      	movs	r1, #0
 800fcf4:	f004 fd16 	bl	8014724 <GUI_SetOrg>
 800fcf8:	f7fb f99e 	bl	800b038 <WM_Init>
 800fcfc:	4b0a      	ldr	r3, [pc, #40]	; (800fd28 <GUI_Init+0xa4>)
 800fcfe:	2201      	movs	r2, #1
 800fd00:	701a      	strb	r2, [r3, #0]
 800fd02:	687b      	ldr	r3, [r7, #4]
 800fd04:	4618      	mov	r0, r3
 800fd06:	370c      	adds	r7, #12
 800fd08:	46bd      	mov	sp, r7
 800fd0a:	bd90      	pop	{r4, r7, pc}
 800fd0c:	e0002000 	.word	0xe0002000
 800fd10:	40023008 	.word	0x40023008
 800fd14:	40023000 	.word	0x40023000
 800fd18:	f407a5c2 	.word	0xf407a5c2
 800fd1c:	b5e8b5cd 	.word	0xb5e8b5cd
 800fd20:	2001b36e 	.word	0x2001b36e
 800fd24:	20019628 	.word	0x20019628
 800fd28:	2001b38c 	.word	0x2001b38c

0800fd2c <GUIPROP__FindChar>:
 800fd2c:	b138      	cbz	r0, 800fd3e <GUIPROP__FindChar+0x12>
 800fd2e:	8803      	ldrh	r3, [r0, #0]
 800fd30:	428b      	cmp	r3, r1
 800fd32:	d802      	bhi.n	800fd3a <GUIPROP__FindChar+0xe>
 800fd34:	8843      	ldrh	r3, [r0, #2]
 800fd36:	428b      	cmp	r3, r1
 800fd38:	d201      	bcs.n	800fd3e <GUIPROP__FindChar+0x12>
 800fd3a:	6880      	ldr	r0, [r0, #8]
 800fd3c:	e7f6      	b.n	800fd2c <GUIPROP__FindChar>
 800fd3e:	4770      	bx	lr

0800fd40 <GUIPROP_DispChar>:
 800fd40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd44:	4c38      	ldr	r4, [pc, #224]	; (800fe28 <GUIPROP_DispChar+0xe8>)
 800fd46:	6823      	ldr	r3, [r4, #0]
 800fd48:	f9b3 902a 	ldrsh.w	r9, [r3, #42]	; 0x2a
 800fd4c:	69db      	ldr	r3, [r3, #28]
 800fd4e:	4605      	mov	r5, r0
 800fd50:	b089      	sub	sp, #36	; 0x24
 800fd52:	69d8      	ldr	r0, [r3, #28]
 800fd54:	4629      	mov	r1, r5
 800fd56:	f7ff ffe9 	bl	800fd2c <GUIPROP__FindChar>
 800fd5a:	2800      	cmp	r0, #0
 800fd5c:	d061      	beq.n	800fe22 <GUIPROP_DispChar+0xe2>
 800fd5e:	f8b0 8000 	ldrh.w	r8, [r0]
 800fd62:	6847      	ldr	r7, [r0, #4]
 800fd64:	ebc8 0805 	rsb	r8, r8, r5
 800fd68:	eb07 06c8 	add.w	r6, r7, r8, lsl #3
 800fd6c:	4648      	mov	r0, r9
 800fd6e:	f896 b002 	ldrb.w	fp, [r6, #2]
 800fd72:	f7fd fc6d 	bl	800d650 <LCD_SetDrawMode>
 800fd76:	6825      	ldr	r5, [r4, #0]
 800fd78:	f817 2038 	ldrb.w	r2, [r7, r8, lsl #3]
 800fd7c:	f8d5 e01c 	ldr.w	lr, [r5, #28]
 800fd80:	f9b5 1024 	ldrsh.w	r1, [r5, #36]	; 0x24
 800fd84:	f89e c01a 	ldrb.w	ip, [lr, #26]
 800fd88:	f89e 3018 	ldrb.w	r3, [lr, #24]
 800fd8c:	9306      	str	r3, [sp, #24]
 800fd8e:	4682      	mov	sl, r0
 800fd90:	f9b5 0022 	ldrsh.w	r0, [r5, #34]	; 0x22
 800fd94:	f8cd c000 	str.w	ip, [sp]
 800fd98:	f89e e01b 	ldrb.w	lr, [lr, #27]
 800fd9c:	f8cd e004 	str.w	lr, [sp, #4]
 800fda0:	f04f 0e01 	mov.w	lr, #1
 800fda4:	f8cd b00c 	str.w	fp, [sp, #12]
 800fda8:	f8cd e008 	str.w	lr, [sp, #8]
 800fdac:	6873      	ldr	r3, [r6, #4]
 800fdae:	9304      	str	r3, [sp, #16]
 800fdb0:	6bad      	ldr	r5, [r5, #56]	; 0x38
 800fdb2:	9b06      	ldr	r3, [sp, #24]
 800fdb4:	9505      	str	r5, [sp, #20]
 800fdb6:	f7fd fdd5 	bl	800d964 <LCD_DrawBitmap>
 800fdba:	6823      	ldr	r3, [r4, #0]
 800fdbc:	69da      	ldr	r2, [r3, #28]
 800fdbe:	f892 b019 	ldrb.w	fp, [r2, #25]
 800fdc2:	7e11      	ldrb	r1, [r2, #24]
 800fdc4:	458b      	cmp	fp, r1
 800fdc6:	d920      	bls.n	800fe0a <GUIPROP_DispChar+0xca>
 800fdc8:	f1b9 0f02 	cmp.w	r9, #2
 800fdcc:	7ed5      	ldrb	r5, [r2, #27]
 800fdce:	d01c      	beq.n	800fe0a <GUIPROP_DispChar+0xca>
 800fdd0:	9107      	str	r1, [sp, #28]
 800fdd2:	f004 fcf3 	bl	80147bc <GUI_GetColor>
 800fdd6:	4681      	mov	r9, r0
 800fdd8:	f004 fce9 	bl	80147ae <GUI_GetBkColor>
 800fddc:	f7ff f868 	bl	800eeb0 <GUI_SetColor>
 800fde0:	6824      	ldr	r4, [r4, #0]
 800fde2:	f817 7038 	ldrb.w	r7, [r7, r8, lsl #3]
 800fde6:	69e2      	ldr	r2, [r4, #28]
 800fde8:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
 800fdec:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800fdf0:	7ed2      	ldrb	r2, [r2, #27]
 800fdf2:	9907      	ldr	r1, [sp, #28]
 800fdf4:	fb07 0202 	mla	r2, r7, r2, r0
 800fdf8:	fb01 3105 	mla	r1, r1, r5, r3
 800fdfc:	fb0b 3305 	mla	r3, fp, r5, r3
 800fe00:	f7fd fca8 	bl	800d754 <LCD_FillRect>
 800fe04:	4648      	mov	r0, r9
 800fe06:	f7ff f853 	bl	800eeb0 <GUI_SetColor>
 800fe0a:	4650      	mov	r0, sl
 800fe0c:	f7fd fc20 	bl	800d650 <LCD_SetDrawMode>
 800fe10:	4b05      	ldr	r3, [pc, #20]	; (800fe28 <GUIPROP_DispChar+0xe8>)
 800fe12:	681b      	ldr	r3, [r3, #0]
 800fe14:	69da      	ldr	r2, [r3, #28]
 800fe16:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800fe18:	7e90      	ldrb	r0, [r2, #26]
 800fe1a:	7872      	ldrb	r2, [r6, #1]
 800fe1c:	fb00 1202 	mla	r2, r0, r2, r1
 800fe20:	845a      	strh	r2, [r3, #34]	; 0x22
 800fe22:	b009      	add	sp, #36	; 0x24
 800fe24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe28:	20000254 	.word	0x20000254

0800fe2c <GUIPROP_GetCharDistX>:
 800fe2c:	4b0d      	ldr	r3, [pc, #52]	; (800fe64 <GUIPROP_GetCharDistX+0x38>)
 800fe2e:	b570      	push	{r4, r5, r6, lr}
 800fe30:	681b      	ldr	r3, [r3, #0]
 800fe32:	69dd      	ldr	r5, [r3, #28]
 800fe34:	4606      	mov	r6, r0
 800fe36:	460c      	mov	r4, r1
 800fe38:	69e8      	ldr	r0, [r5, #28]
 800fe3a:	4631      	mov	r1, r6
 800fe3c:	f7ff ff76 	bl	800fd2c <GUIPROP__FindChar>
 800fe40:	b170      	cbz	r0, 800fe60 <GUIPROP_GetCharDistX+0x34>
 800fe42:	8803      	ldrh	r3, [r0, #0]
 800fe44:	6842      	ldr	r2, [r0, #4]
 800fe46:	1af6      	subs	r6, r6, r3
 800fe48:	eb02 03c6 	add.w	r3, r2, r6, lsl #3
 800fe4c:	7858      	ldrb	r0, [r3, #1]
 800fe4e:	7eab      	ldrb	r3, [r5, #26]
 800fe50:	fb10 f003 	smulbb	r0, r0, r3
 800fe54:	b124      	cbz	r4, 800fe60 <GUIPROP_GetCharDistX+0x34>
 800fe56:	f812 2036 	ldrb.w	r2, [r2, r6, lsl #3]
 800fe5a:	fb12 f303 	smulbb	r3, r2, r3
 800fe5e:	6023      	str	r3, [r4, #0]
 800fe60:	bd70      	pop	{r4, r5, r6, pc}
 800fe62:	bf00      	nop
 800fe64:	20000254 	.word	0x20000254

0800fe68 <GUIPROP_GetFontInfo>:
 800fe68:	2301      	movs	r3, #1
 800fe6a:	800b      	strh	r3, [r1, #0]
 800fe6c:	4770      	bx	lr

0800fe6e <GUIPROP_IsInFont>:
 800fe6e:	b508      	push	{r3, lr}
 800fe70:	69c0      	ldr	r0, [r0, #28]
 800fe72:	f7ff ff5b 	bl	800fd2c <GUIPROP__FindChar>
 800fe76:	3000      	adds	r0, #0
 800fe78:	bf18      	it	ne
 800fe7a:	2001      	movne	r0, #1
 800fe7c:	bd08      	pop	{r3, pc}
	...

0800fe80 <GUIMONO_DispChar>:
 800fe80:	4b52      	ldr	r3, [pc, #328]	; (800ffcc <GUIMONO_DispChar+0x14c>)
 800fe82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe86:	681b      	ldr	r3, [r3, #0]
 800fe88:	69d9      	ldr	r1, [r3, #28]
 800fe8a:	8c5f      	ldrh	r7, [r3, #34]	; 0x22
 800fe8c:	69cc      	ldr	r4, [r1, #28]
 800fe8e:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
 800fe90:	89a2      	ldrh	r2, [r4, #12]
 800fe92:	4290      	cmp	r0, r2
 800fe94:	b08b      	sub	sp, #44	; 0x2c
 800fe96:	d308      	bcc.n	800feaa <GUIMONO_DispChar+0x2a>
 800fe98:	89e6      	ldrh	r6, [r4, #14]
 800fe9a:	4286      	cmp	r6, r0
 800fe9c:	d305      	bcc.n	800feaa <GUIMONO_DispChar+0x2a>
 800fe9e:	f8d4 9000 	ldr.w	r9, [r4]
 800fea2:	1a82      	subs	r2, r0, r2
 800fea4:	f04f 3bff 	mov.w	fp, #4294967295
 800fea8:	e015      	b.n	800fed6 <GUIMONO_DispChar+0x56>
 800feaa:	68a2      	ldr	r2, [r4, #8]
 800feac:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800feb0:	2a00      	cmp	r2, #0
 800feb2:	f000 8081 	beq.w	800ffb8 <GUIMONO_DispChar+0x138>
 800feb6:	8816      	ldrh	r6, [r2, #0]
 800feb8:	42b0      	cmp	r0, r6
 800feba:	d37d      	bcc.n	800ffb8 <GUIMONO_DispChar+0x138>
 800febc:	f8b2 c002 	ldrh.w	ip, [r2, #2]
 800fec0:	4584      	cmp	ip, r0
 800fec2:	d379      	bcc.n	800ffb8 <GUIMONO_DispChar+0x138>
 800fec4:	6852      	ldr	r2, [r2, #4]
 800fec6:	1b80      	subs	r0, r0, r6
 800fec8:	b280      	uxth	r0, r0
 800feca:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 800fece:	f932 2020 	ldrsh.w	r2, [r2, r0, lsl #2]
 800fed2:	f9b6 b002 	ldrsh.w	fp, [r6, #2]
 800fed6:	1c50      	adds	r0, r2, #1
 800fed8:	d06e      	beq.n	800ffb8 <GUIMONO_DispChar+0x138>
 800feda:	f891 8018 	ldrb.w	r8, [r1, #24]
 800fede:	7ca1      	ldrb	r1, [r4, #18]
 800fee0:	f8b3 a02a 	ldrh.w	sl, [r3, #42]	; 0x2a
 800fee4:	7c26      	ldrb	r6, [r4, #16]
 800fee6:	9206      	str	r2, [sp, #24]
 800fee8:	fb18 f101 	smulbb	r1, r8, r1
 800feec:	9107      	str	r1, [sp, #28]
 800feee:	fa0f f18a 	sxth.w	r1, sl
 800fef2:	4608      	mov	r0, r1
 800fef4:	9108      	str	r1, [sp, #32]
 800fef6:	f7fd fbab 	bl	800d650 <LCD_SetDrawMode>
 800fefa:	4934      	ldr	r1, [pc, #208]	; (800ffcc <GUIMONO_DispChar+0x14c>)
 800fefc:	9009      	str	r0, [sp, #36]	; 0x24
 800fefe:	680b      	ldr	r3, [r1, #0]
 800ff00:	9a06      	ldr	r2, [sp, #24]
 800ff02:	69d9      	ldr	r1, [r3, #28]
 800ff04:	7e88      	ldrb	r0, [r1, #26]
 800ff06:	9000      	str	r0, [sp, #0]
 800ff08:	7ec9      	ldrb	r1, [r1, #27]
 800ff0a:	9101      	str	r1, [sp, #4]
 800ff0c:	2101      	movs	r1, #1
 800ff0e:	9102      	str	r1, [sp, #8]
 800ff10:	7ca1      	ldrb	r1, [r4, #18]
 800ff12:	9103      	str	r1, [sp, #12]
 800ff14:	9907      	ldr	r1, [sp, #28]
 800ff16:	fb01 9202 	mla	r2, r1, r2, r9
 800ff1a:	9204      	str	r2, [sp, #16]
 800ff1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ff1e:	9305      	str	r3, [sp, #20]
 800ff20:	b23f      	sxth	r7, r7
 800ff22:	b22d      	sxth	r5, r5
 800ff24:	4638      	mov	r0, r7
 800ff26:	4629      	mov	r1, r5
 800ff28:	4632      	mov	r2, r6
 800ff2a:	4643      	mov	r3, r8
 800ff2c:	f7fd fd1a 	bl	800d964 <LCD_DrawBitmap>
 800ff30:	f1bb 3fff 	cmp.w	fp, #4294967295
 800ff34:	d01b      	beq.n	800ff6e <GUIMONO_DispChar+0xee>
 800ff36:	f04a 0002 	orr.w	r0, sl, #2
 800ff3a:	b200      	sxth	r0, r0
 800ff3c:	f7fd fb88 	bl	800d650 <LCD_SetDrawMode>
 800ff40:	4a22      	ldr	r2, [pc, #136]	; (800ffcc <GUIMONO_DispChar+0x14c>)
 800ff42:	6813      	ldr	r3, [r2, #0]
 800ff44:	69da      	ldr	r2, [r3, #28]
 800ff46:	7e91      	ldrb	r1, [r2, #26]
 800ff48:	9100      	str	r1, [sp, #0]
 800ff4a:	7ed2      	ldrb	r2, [r2, #27]
 800ff4c:	9201      	str	r2, [sp, #4]
 800ff4e:	2101      	movs	r1, #1
 800ff50:	9102      	str	r1, [sp, #8]
 800ff52:	9907      	ldr	r1, [sp, #28]
 800ff54:	7ca2      	ldrb	r2, [r4, #18]
 800ff56:	9203      	str	r2, [sp, #12]
 800ff58:	fb01 920b 	mla	r2, r1, fp, r9
 800ff5c:	9204      	str	r2, [sp, #16]
 800ff5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ff60:	9305      	str	r3, [sp, #20]
 800ff62:	4638      	mov	r0, r7
 800ff64:	4629      	mov	r1, r5
 800ff66:	4632      	mov	r2, r6
 800ff68:	4643      	mov	r3, r8
 800ff6a:	f7fd fcfb 	bl	800d964 <LCD_DrawBitmap>
 800ff6e:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800ffcc <GUIMONO_DispChar+0x14c>
 800ff72:	f8d8 3000 	ldr.w	r3, [r8]
 800ff76:	69db      	ldr	r3, [r3, #28]
 800ff78:	7e5a      	ldrb	r2, [r3, #25]
 800ff7a:	7e1b      	ldrb	r3, [r3, #24]
 800ff7c:	429a      	cmp	r2, r3
 800ff7e:	d917      	bls.n	800ffb0 <GUIMONO_DispChar+0x130>
 800ff80:	9a08      	ldr	r2, [sp, #32]
 800ff82:	2a02      	cmp	r2, #2
 800ff84:	d014      	beq.n	800ffb0 <GUIMONO_DispChar+0x130>
 800ff86:	f08a 0004 	eor.w	r0, sl, #4
 800ff8a:	b200      	sxth	r0, r0
 800ff8c:	f7fd fb60 	bl	800d650 <LCD_SetDrawMode>
 800ff90:	f8d8 3000 	ldr.w	r3, [r8]
 800ff94:	69db      	ldr	r3, [r3, #28]
 800ff96:	f893 e018 	ldrb.w	lr, [r3, #24]
 800ff9a:	7ed9      	ldrb	r1, [r3, #27]
 800ff9c:	7e9a      	ldrb	r2, [r3, #26]
 800ff9e:	7e5b      	ldrb	r3, [r3, #25]
 800ffa0:	4638      	mov	r0, r7
 800ffa2:	fb0e 5101 	mla	r1, lr, r1, r5
 800ffa6:	fb06 7202 	mla	r2, r6, r2, r7
 800ffaa:	442b      	add	r3, r5
 800ffac:	f7fd fbd2 	bl	800d754 <LCD_FillRect>
 800ffb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ffb2:	b2d8      	uxtb	r0, r3
 800ffb4:	f7fd fb4c 	bl	800d650 <LCD_SetDrawMode>
 800ffb8:	4b04      	ldr	r3, [pc, #16]	; (800ffcc <GUIMONO_DispChar+0x14c>)
 800ffba:	7c61      	ldrb	r1, [r4, #17]
 800ffbc:	681b      	ldr	r3, [r3, #0]
 800ffbe:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 800ffc0:	440a      	add	r2, r1
 800ffc2:	845a      	strh	r2, [r3, #34]	; 0x22
 800ffc4:	b00b      	add	sp, #44	; 0x2c
 800ffc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ffca:	bf00      	nop
 800ffcc:	20000254 	.word	0x20000254

0800ffd0 <GUIMONO_GetCharDistX>:
 800ffd0:	4b04      	ldr	r3, [pc, #16]	; (800ffe4 <GUIMONO_GetCharDistX+0x14>)
 800ffd2:	681b      	ldr	r3, [r3, #0]
 800ffd4:	69db      	ldr	r3, [r3, #28]
 800ffd6:	69db      	ldr	r3, [r3, #28]
 800ffd8:	b109      	cbz	r1, 800ffde <GUIMONO_GetCharDistX+0xe>
 800ffda:	7c1a      	ldrb	r2, [r3, #16]
 800ffdc:	600a      	str	r2, [r1, #0]
 800ffde:	7c58      	ldrb	r0, [r3, #17]
 800ffe0:	4770      	bx	lr
 800ffe2:	bf00      	nop
 800ffe4:	20000254 	.word	0x20000254

0800ffe8 <GUIMONO_GetFontInfo>:
 800ffe8:	2302      	movs	r3, #2
 800ffea:	800b      	strh	r3, [r1, #0]
 800ffec:	4770      	bx	lr

0800ffee <GUIMONO_IsInFont>:
 800ffee:	69c3      	ldr	r3, [r0, #28]
 800fff0:	899a      	ldrh	r2, [r3, #12]
 800fff2:	428a      	cmp	r2, r1
 800fff4:	d802      	bhi.n	800fffc <GUIMONO_IsInFont+0xe>
 800fff6:	89da      	ldrh	r2, [r3, #14]
 800fff8:	428a      	cmp	r2, r1
 800fffa:	d20f      	bcs.n	801001c <GUIMONO_IsInFont+0x2e>
 800fffc:	6898      	ldr	r0, [r3, #8]
 800fffe:	b180      	cbz	r0, 8010022 <GUIMONO_IsInFont+0x34>
 8010000:	8803      	ldrh	r3, [r0, #0]
 8010002:	4299      	cmp	r1, r3
 8010004:	d30c      	bcc.n	8010020 <GUIMONO_IsInFont+0x32>
 8010006:	8842      	ldrh	r2, [r0, #2]
 8010008:	428a      	cmp	r2, r1
 801000a:	d309      	bcc.n	8010020 <GUIMONO_IsInFont+0x32>
 801000c:	1ac9      	subs	r1, r1, r3
 801000e:	6842      	ldr	r2, [r0, #4]
 8010010:	f832 0021 	ldrh.w	r0, [r2, r1, lsl #2]
 8010014:	43c0      	mvns	r0, r0
 8010016:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 801001a:	4770      	bx	lr
 801001c:	2001      	movs	r0, #1
 801001e:	4770      	bx	lr
 8010020:	2000      	movs	r0, #0
 8010022:	4770      	bx	lr

08010024 <_Log2VisBuffered>:
 8010024:	4770      	bx	lr
	...

08010028 <_DispLine>:
 8010028:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801002a:	4615      	mov	r5, r2
 801002c:	ab02      	add	r3, sp, #8
 801002e:	4a1a      	ldr	r2, [pc, #104]	; (8010098 <_DispLine+0x70>)
 8010030:	f843 1d08 	str.w	r1, [r3, #-8]!
 8010034:	9001      	str	r0, [sp, #4]
 8010036:	6812      	ldr	r2, [r2, #0]
 8010038:	4c18      	ldr	r4, [pc, #96]	; (801009c <_DispLine+0x74>)
 801003a:	4669      	mov	r1, sp
 801003c:	4790      	blx	r2
 801003e:	6823      	ldr	r3, [r4, #0]
 8010040:	9001      	str	r0, [sp, #4]
 8010042:	6958      	ldr	r0, [r3, #20]
 8010044:	b958      	cbnz	r0, 801005e <_DispLine+0x36>
 8010046:	2001      	movs	r0, #1
 8010048:	f7fd ff70 	bl	800df2c <GUI__ManageCache>
 801004c:	6823      	ldr	r3, [r4, #0]
 801004e:	69db      	ldr	r3, [r3, #28]
 8010050:	695b      	ldr	r3, [r3, #20]
 8010052:	b1bb      	cbz	r3, 8010084 <_DispLine+0x5c>
 8010054:	689b      	ldr	r3, [r3, #8]
 8010056:	9801      	ldr	r0, [sp, #4]
 8010058:	9900      	ldr	r1, [sp, #0]
 801005a:	4798      	blx	r3
 801005c:	e017      	b.n	801008e <_DispLine+0x66>
 801005e:	4629      	mov	r1, r5
 8010060:	f7fe ff84 	bl	800ef6c <GUI_RectsIntersect>
 8010064:	2800      	cmp	r0, #0
 8010066:	d1ee      	bne.n	8010046 <_DispLine+0x1e>
 8010068:	e014      	b.n	8010094 <_DispLine+0x6c>
 801006a:	a801      	add	r0, sp, #4
 801006c:	f004 fb24 	bl	80146b8 <GUI_UC__GetCharCodeInc>
 8010070:	6823      	ldr	r3, [r4, #0]
 8010072:	69db      	ldr	r3, [r3, #28]
 8010074:	681b      	ldr	r3, [r3, #0]
 8010076:	4605      	mov	r5, r0
 8010078:	4798      	blx	r3
 801007a:	4b09      	ldr	r3, [pc, #36]	; (80100a0 <_DispLine+0x78>)
 801007c:	681b      	ldr	r3, [r3, #0]
 801007e:	b10b      	cbz	r3, 8010084 <_DispLine+0x5c>
 8010080:	4628      	mov	r0, r5
 8010082:	4798      	blx	r3
 8010084:	9b00      	ldr	r3, [sp, #0]
 8010086:	3b01      	subs	r3, #1
 8010088:	2b00      	cmp	r3, #0
 801008a:	9300      	str	r3, [sp, #0]
 801008c:	daed      	bge.n	801006a <_DispLine+0x42>
 801008e:	2000      	movs	r0, #0
 8010090:	f7fd ff4c 	bl	800df2c <GUI__ManageCache>
 8010094:	b003      	add	sp, #12
 8010096:	bd30      	pop	{r4, r5, pc}
 8010098:	2000025c 	.word	0x2000025c
 801009c:	20000254 	.word	0x20000254
 80100a0:	2001b388 	.word	0x2001b388

080100a4 <GUI__GetLineNumChars>:
 80100a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80100a6:	460d      	mov	r5, r1
 80100a8:	9001      	str	r0, [sp, #4]
 80100aa:	4604      	mov	r4, r0
 80100ac:	b198      	cbz	r0, 80100d6 <GUI__GetLineNumChars+0x32>
 80100ae:	4b0b      	ldr	r3, [pc, #44]	; (80100dc <GUI__GetLineNumChars+0x38>)
 80100b0:	681b      	ldr	r3, [r3, #0]
 80100b2:	69db      	ldr	r3, [r3, #28]
 80100b4:	695b      	ldr	r3, [r3, #20]
 80100b6:	b10b      	cbz	r3, 80100bc <GUI__GetLineNumChars+0x18>
 80100b8:	685b      	ldr	r3, [r3, #4]
 80100ba:	b90b      	cbnz	r3, 80100c0 <GUI__GetLineNumChars+0x1c>
 80100bc:	2400      	movs	r4, #0
 80100be:	e008      	b.n	80100d2 <GUI__GetLineNumChars+0x2e>
 80100c0:	4798      	blx	r3
 80100c2:	e009      	b.n	80100d8 <GUI__GetLineNumChars+0x34>
 80100c4:	a801      	add	r0, sp, #4
 80100c6:	f004 faf7 	bl	80146b8 <GUI_UC__GetCharCodeInc>
 80100ca:	b120      	cbz	r0, 80100d6 <GUI__GetLineNumChars+0x32>
 80100cc:	280a      	cmp	r0, #10
 80100ce:	d002      	beq.n	80100d6 <GUI__GetLineNumChars+0x32>
 80100d0:	3401      	adds	r4, #1
 80100d2:	42ac      	cmp	r4, r5
 80100d4:	dbf6      	blt.n	80100c4 <GUI__GetLineNumChars+0x20>
 80100d6:	4620      	mov	r0, r4
 80100d8:	b003      	add	sp, #12
 80100da:	bd30      	pop	{r4, r5, pc}
 80100dc:	20000254 	.word	0x20000254

080100e0 <GUI__GetOverlap>:
 80100e0:	b513      	push	{r0, r1, r4, lr}
 80100e2:	a902      	add	r1, sp, #8
 80100e4:	2400      	movs	r4, #0
 80100e6:	f841 4d04 	str.w	r4, [r1, #-4]!
 80100ea:	f000 f89f 	bl	801022c <GUI_GetCharDistXEx>
 80100ee:	9b01      	ldr	r3, [sp, #4]
 80100f0:	4283      	cmp	r3, r0
 80100f2:	bfcc      	ite	gt
 80100f4:	ebc0 0003 	rsbgt	r0, r0, r3
 80100f8:	4620      	movle	r0, r4
 80100fa:	b002      	add	sp, #8
 80100fc:	bd10      	pop	{r4, pc}
	...

08010100 <GUI__GetLineDistX>:
 8010100:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010102:	4a15      	ldr	r2, [pc, #84]	; (8010158 <GUI__GetLineDistX+0x58>)
 8010104:	9001      	str	r0, [sp, #4]
 8010106:	ab02      	add	r3, sp, #8
 8010108:	6812      	ldr	r2, [r2, #0]
 801010a:	f843 1d08 	str.w	r1, [r3, #-8]!
 801010e:	4669      	mov	r1, sp
 8010110:	4790      	blx	r2
 8010112:	9001      	str	r0, [sp, #4]
 8010114:	b1f0      	cbz	r0, 8010154 <GUI__GetLineDistX+0x54>
 8010116:	4b11      	ldr	r3, [pc, #68]	; (801015c <GUI__GetLineDistX+0x5c>)
 8010118:	681b      	ldr	r3, [r3, #0]
 801011a:	69db      	ldr	r3, [r3, #28]
 801011c:	695b      	ldr	r3, [r3, #20]
 801011e:	b10b      	cbz	r3, 8010124 <GUI__GetLineDistX+0x24>
 8010120:	681b      	ldr	r3, [r3, #0]
 8010122:	b913      	cbnz	r3, 801012a <GUI__GetLineDistX+0x2a>
 8010124:	2500      	movs	r5, #0
 8010126:	462c      	mov	r4, r5
 8010128:	e002      	b.n	8010130 <GUI__GetLineDistX+0x30>
 801012a:	9900      	ldr	r1, [sp, #0]
 801012c:	4798      	blx	r3
 801012e:	e011      	b.n	8010154 <GUI__GetLineDistX+0x54>
 8010130:	9b00      	ldr	r3, [sp, #0]
 8010132:	3b01      	subs	r3, #1
 8010134:	2b00      	cmp	r3, #0
 8010136:	9300      	str	r3, [sp, #0]
 8010138:	db07      	blt.n	801014a <GUI__GetLineDistX+0x4a>
 801013a:	a801      	add	r0, sp, #4
 801013c:	f004 fabc 	bl	80146b8 <GUI_UC__GetCharCodeInc>
 8010140:	4605      	mov	r5, r0
 8010142:	f000 f869 	bl	8010218 <GUI_GetCharDistX>
 8010146:	4404      	add	r4, r0
 8010148:	e7f2      	b.n	8010130 <GUI__GetLineDistX+0x30>
 801014a:	4628      	mov	r0, r5
 801014c:	f7ff ffc8 	bl	80100e0 <GUI__GetOverlap>
 8010150:	4420      	add	r0, r4
 8010152:	e7ff      	b.n	8010154 <GUI__GetLineDistX+0x54>
 8010154:	b003      	add	sp, #12
 8010156:	bd30      	pop	{r4, r5, pc}
 8010158:	2000025c 	.word	0x2000025c
 801015c:	20000254 	.word	0x20000254

08010160 <GUI__DispLine>:
 8010160:	4b27      	ldr	r3, [pc, #156]	; (8010200 <GUI__DispLine+0xa0>)
 8010162:	681b      	ldr	r3, [r3, #0]
 8010164:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010166:	4605      	mov	r5, r0
 8010168:	460c      	mov	r4, r1
 801016a:	b163      	cbz	r3, 8010186 <GUI__DispLine+0x26>
 801016c:	2000      	movs	r0, #0
 801016e:	f7fa fd17 	bl	800aba0 <WM__InitIVRSearch>
 8010172:	2800      	cmp	r0, #0
 8010174:	d041      	beq.n	80101fa <GUI__DispLine+0x9a>
 8010176:	4628      	mov	r0, r5
 8010178:	4621      	mov	r1, r4
 801017a:	466a      	mov	r2, sp
 801017c:	f7ff ff54 	bl	8010028 <_DispLine>
 8010180:	f7fa fc4c 	bl	800aa1c <WM__GetNextIVR>
 8010184:	e7f5      	b.n	8010172 <GUI__DispLine+0x12>
 8010186:	6810      	ldr	r0, [r2, #0]
 8010188:	6851      	ldr	r1, [r2, #4]
 801018a:	4e1e      	ldr	r6, [pc, #120]	; (8010204 <GUI__DispLine+0xa4>)
 801018c:	466b      	mov	r3, sp
 801018e:	c303      	stmia	r3!, {r0, r1}
 8010190:	6833      	ldr	r3, [r6, #0]
 8010192:	f8bd 1000 	ldrh.w	r1, [sp]
 8010196:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 801019a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 801019e:	4411      	add	r1, r2
 80101a0:	f8ad 1000 	strh.w	r1, [sp]
 80101a4:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 80101a8:	4419      	add	r1, r3
 80101aa:	f8ad 1002 	strh.w	r1, [sp, #2]
 80101ae:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80101b2:	440a      	add	r2, r1
 80101b4:	f8ad 2004 	strh.w	r2, [sp, #4]
 80101b8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80101bc:	4668      	mov	r0, sp
 80101be:	4413      	add	r3, r2
 80101c0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80101c4:	f7fa fcec 	bl	800aba0 <WM__InitIVRSearch>
 80101c8:	6833      	ldr	r3, [r6, #0]
 80101ca:	b940      	cbnz	r0, 80101de <GUI__DispLine+0x7e>
 80101cc:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80101ce:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80101d0:	1a8a      	subs	r2, r1, r2
 80101d2:	845a      	strh	r2, [r3, #34]	; 0x22
 80101d4:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 80101d6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80101d8:	1a8a      	subs	r2, r1, r2
 80101da:	849a      	strh	r2, [r3, #36]	; 0x24
 80101dc:	e00d      	b.n	80101fa <GUI__DispLine+0x9a>
 80101de:	f8bd 2000 	ldrh.w	r2, [sp]
 80101e2:	845a      	strh	r2, [r3, #34]	; 0x22
 80101e4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80101e8:	849a      	strh	r2, [r3, #36]	; 0x24
 80101ea:	4628      	mov	r0, r5
 80101ec:	4621      	mov	r1, r4
 80101ee:	466a      	mov	r2, sp
 80101f0:	f7ff ff1a 	bl	8010028 <_DispLine>
 80101f4:	f7fa fc12 	bl	800aa1c <WM__GetNextIVR>
 80101f8:	e7e6      	b.n	80101c8 <GUI__DispLine+0x68>
 80101fa:	b002      	add	sp, #8
 80101fc:	bd70      	pop	{r4, r5, r6, pc}
 80101fe:	bf00      	nop
 8010200:	2001b370 	.word	0x2001b370
 8010204:	20000254 	.word	0x20000254

08010208 <GUI_GetFontDistY>:
 8010208:	4b02      	ldr	r3, [pc, #8]	; (8010214 <GUI_GetFontDistY+0xc>)
 801020a:	681b      	ldr	r3, [r3, #0]
 801020c:	69db      	ldr	r3, [r3, #28]
 801020e:	7e58      	ldrb	r0, [r3, #25]
 8010210:	4770      	bx	lr
 8010212:	bf00      	nop
 8010214:	20000254 	.word	0x20000254

08010218 <GUI_GetCharDistX>:
 8010218:	b508      	push	{r3, lr}
 801021a:	4b03      	ldr	r3, [pc, #12]	; (8010228 <GUI_GetCharDistX+0x10>)
 801021c:	681b      	ldr	r3, [r3, #0]
 801021e:	69db      	ldr	r3, [r3, #28]
 8010220:	2100      	movs	r1, #0
 8010222:	685b      	ldr	r3, [r3, #4]
 8010224:	4798      	blx	r3
 8010226:	bd08      	pop	{r3, pc}
 8010228:	20000254 	.word	0x20000254

0801022c <GUI_GetCharDistXEx>:
 801022c:	b508      	push	{r3, lr}
 801022e:	4b03      	ldr	r3, [pc, #12]	; (801023c <GUI_GetCharDistXEx+0x10>)
 8010230:	681b      	ldr	r3, [r3, #0]
 8010232:	69db      	ldr	r3, [r3, #28]
 8010234:	685b      	ldr	r3, [r3, #4]
 8010236:	4798      	blx	r3
 8010238:	bd08      	pop	{r3, pc}
 801023a:	bf00      	nop
 801023c:	20000254 	.word	0x20000254

08010240 <_PushFreeBlock>:
 8010240:	4b07      	ldr	r3, [pc, #28]	; (8010260 <_PushFreeBlock+0x20>)
 8010242:	685a      	ldr	r2, [r3, #4]
 8010244:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8010246:	3201      	adds	r2, #1
 8010248:	b510      	push	{r4, lr}
 801024a:	605a      	str	r2, [r3, #4]
 801024c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 801024e:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 8010252:	6061      	str	r1, [r4, #4]
 8010254:	2100      	movs	r1, #0
 8010256:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 801025a:	6258      	str	r0, [r3, #36]	; 0x24
 801025c:	bd10      	pop	{r4, pc}
 801025e:	bf00      	nop
 8010260:	2001b3ac 	.word	0x2001b3ac

08010264 <_OnExit>:
 8010264:	b538      	push	{r3, r4, r5, lr}
 8010266:	4d0b      	ldr	r5, [pc, #44]	; (8010294 <_OnExit+0x30>)
 8010268:	2400      	movs	r4, #0
 801026a:	f105 0040 	add.w	r0, r5, #64	; 0x40
 801026e:	4621      	mov	r1, r4
 8010270:	2280      	movs	r2, #128	; 0x80
 8010272:	f885 4028 	strb.w	r4, [r5, #40]	; 0x28
 8010276:	f7fd fd71 	bl	800dd5c <GUI__memset>
 801027a:	4628      	mov	r0, r5
 801027c:	4621      	mov	r1, r4
 801027e:	22c0      	movs	r2, #192	; 0xc0
 8010280:	f7fd fd6c 	bl	800dd5c <GUI__memset>
 8010284:	4621      	mov	r1, r4
 8010286:	4804      	ldr	r0, [pc, #16]	; (8010298 <_OnExit+0x34>)
 8010288:	220c      	movs	r2, #12
 801028a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801028e:	f7fd bd65 	b.w	800dd5c <GUI__memset>
 8010292:	bf00      	nop
 8010294:	2001b3ac 	.word	0x2001b3ac
 8010298:	200196a4 	.word	0x200196a4

0801029c <_RemoveFreeBlock>:
 801029c:	b510      	push	{r4, lr}
 801029e:	6842      	ldr	r2, [r0, #4]
 80102a0:	230f      	movs	r3, #15
 80102a2:	490d      	ldr	r1, [pc, #52]	; (80102d8 <_RemoveFreeBlock+0x3c>)
 80102a4:	eb01 04c3 	add.w	r4, r1, r3, lsl #3
 80102a8:	6c24      	ldr	r4, [r4, #64]	; 0x40
 80102aa:	42a2      	cmp	r2, r4
 80102ac:	d203      	bcs.n	80102b6 <_RemoveFreeBlock+0x1a>
 80102ae:	f113 33ff 	adds.w	r3, r3, #4294967295
 80102b2:	d2f6      	bcs.n	80102a2 <_RemoveFreeBlock+0x6>
 80102b4:	bd10      	pop	{r4, pc}
 80102b6:	2b0f      	cmp	r3, #15
 80102b8:	d80c      	bhi.n	80102d4 <_RemoveFreeBlock+0x38>
 80102ba:	680c      	ldr	r4, [r1, #0]
 80102bc:	1aa2      	subs	r2, r4, r2
 80102be:	600a      	str	r2, [r1, #0]
 80102c0:	6882      	ldr	r2, [r0, #8]
 80102c2:	68c0      	ldr	r0, [r0, #12]
 80102c4:	b102      	cbz	r2, 80102c8 <_RemoveFreeBlock+0x2c>
 80102c6:	6050      	str	r0, [r2, #4]
 80102c8:	b108      	cbz	r0, 80102ce <_RemoveFreeBlock+0x32>
 80102ca:	6002      	str	r2, [r0, #0]
 80102cc:	bd10      	pop	{r4, pc}
 80102ce:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80102d2:	645a      	str	r2, [r3, #68]	; 0x44
 80102d4:	bd10      	pop	{r4, pc}
 80102d6:	bf00      	nop
 80102d8:	2001b3ac 	.word	0x2001b3ac

080102dc <_AddFreeMemory>:
 80102dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80102de:	4e26      	ldr	r6, [pc, #152]	; (8010378 <_AddFreeMemory+0x9c>)
 80102e0:	68f3      	ldr	r3, [r6, #12]
 80102e2:	1e5a      	subs	r2, r3, #1
 80102e4:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 80102e6:	4605      	mov	r5, r0
 80102e8:	4413      	add	r3, r2
 80102ea:	1808      	adds	r0, r1, r0
 80102ec:	4298      	cmp	r0, r3
 80102ee:	460c      	mov	r4, r1
 80102f0:	d805      	bhi.n	80102fe <_AddFreeMemory+0x22>
 80102f2:	594b      	ldr	r3, [r1, r5]
 80102f4:	b91b      	cbnz	r3, 80102fe <_AddFreeMemory+0x22>
 80102f6:	6843      	ldr	r3, [r0, #4]
 80102f8:	441d      	add	r5, r3
 80102fa:	f7ff ffcf 	bl	801029c <_RemoveFreeBlock>
 80102fe:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8010300:	429c      	cmp	r4, r3
 8010302:	d90a      	bls.n	801031a <_AddFreeMemory+0x3e>
 8010304:	f854 7c04 	ldr.w	r7, [r4, #-4]
 8010308:	1be7      	subs	r7, r4, r7
 801030a:	683b      	ldr	r3, [r7, #0]
 801030c:	b92b      	cbnz	r3, 801031a <_AddFreeMemory+0x3e>
 801030e:	687b      	ldr	r3, [r7, #4]
 8010310:	4638      	mov	r0, r7
 8010312:	441d      	add	r5, r3
 8010314:	f7ff ffc2 	bl	801029c <_RemoveFreeBlock>
 8010318:	463c      	mov	r4, r7
 801031a:	230f      	movs	r3, #15
 801031c:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8010320:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8010322:	4295      	cmp	r5, r2
 8010324:	d203      	bcs.n	801032e <_AddFreeMemory+0x52>
 8010326:	f113 33ff 	adds.w	r3, r3, #4294967295
 801032a:	d2f7      	bcs.n	801031c <_AddFreeMemory+0x40>
 801032c:	e022      	b.n	8010374 <_AddFreeMemory+0x98>
 801032e:	2b0f      	cmp	r3, #15
 8010330:	d820      	bhi.n	8010374 <_AddFreeMemory+0x98>
 8010332:	3308      	adds	r3, #8
 8010334:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8010338:	1961      	adds	r1, r4, r5
 801033a:	6852      	ldr	r2, [r2, #4]
 801033c:	60a2      	str	r2, [r4, #8]
 801033e:	2000      	movs	r0, #0
 8010340:	e884 0021 	stmia.w	r4, {r0, r5}
 8010344:	6124      	str	r4, [r4, #16]
 8010346:	f841 5c04 	str.w	r5, [r1, #-4]
 801034a:	f104 0108 	add.w	r1, r4, #8
 801034e:	b102      	cbz	r2, 8010352 <_AddFreeMemory+0x76>
 8010350:	6051      	str	r1, [r2, #4]
 8010352:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8010356:	60e0      	str	r0, [r4, #12]
 8010358:	6059      	str	r1, [r3, #4]
 801035a:	6833      	ldr	r3, [r6, #0]
 801035c:	f896 1029 	ldrb.w	r1, [r6, #41]	; 0x29
 8010360:	4a05      	ldr	r2, [pc, #20]	; (8010378 <_AddFreeMemory+0x9c>)
 8010362:	442b      	add	r3, r5
 8010364:	6033      	str	r3, [r6, #0]
 8010366:	b929      	cbnz	r1, 8010374 <_AddFreeMemory+0x98>
 8010368:	68d1      	ldr	r1, [r2, #12]
 801036a:	1acb      	subs	r3, r1, r3
 801036c:	6891      	ldr	r1, [r2, #8]
 801036e:	4299      	cmp	r1, r3
 8010370:	bf38      	it	cc
 8010372:	6093      	strcc	r3, [r2, #8]
 8010374:	4628      	mov	r0, r5
 8010376:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010378:	2001b3ac 	.word	0x2001b3ac

0801037c <_RemoveHoles>:
 801037c:	4b25      	ldr	r3, [pc, #148]	; (8010414 <_RemoveHoles+0x98>)
 801037e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010382:	68da      	ldr	r2, [r3, #12]
 8010384:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8010386:	3a01      	subs	r2, #1
 8010388:	4682      	mov	sl, r0
 801038a:	eb02 0904 	add.w	r9, r2, r4
 801038e:	469b      	mov	fp, r3
 8010390:	e894 0028 	ldmia.w	r4, {r3, r5}
 8010394:	2b00      	cmp	r3, #0
 8010396:	d133      	bne.n	8010400 <_RemoveHoles+0x84>
 8010398:	eb04 0805 	add.w	r8, r4, r5
 801039c:	45c8      	cmp	r8, r9
 801039e:	d22f      	bcs.n	8010400 <_RemoveHoles+0x84>
 80103a0:	f854 c005 	ldr.w	ip, [r4, r5]
 80103a4:	f8d8 6004 	ldr.w	r6, [r8, #4]
 80103a8:	f1bc 0f00 	cmp.w	ip, #0
 80103ac:	d028      	beq.n	8010400 <_RemoveHoles+0x84>
 80103ae:	f8db 3034 	ldr.w	r3, [fp, #52]	; 0x34
 80103b2:	4f18      	ldr	r7, [pc, #96]	; (8010414 <_RemoveHoles+0x98>)
 80103b4:	f813 303c 	ldrb.w	r3, [r3, ip, lsl #3]
 80103b8:	2b01      	cmp	r3, #1
 80103ba:	d121      	bne.n	8010400 <_RemoveHoles+0x84>
 80103bc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80103be:	4620      	mov	r0, r4
 80103c0:	e88d 1008 	stmia.w	sp, {r3, ip}
 80103c4:	f7ff ff6a 	bl	801029c <_RemoveFreeBlock>
 80103c8:	f8d8 1000 	ldr.w	r1, [r8]
 80103cc:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80103ce:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 80103d2:	4620      	mov	r0, r4
 80103d4:	6054      	str	r4, [r2, #4]
 80103d6:	4641      	mov	r1, r8
 80103d8:	4632      	mov	r2, r6
 80103da:	f005 fed9 	bl	8016190 <memmove>
 80103de:	e89d 1008 	ldmia.w	sp, {r3, ip}
 80103e2:	459c      	cmp	ip, r3
 80103e4:	d102      	bne.n	80103ec <_RemoveHoles+0x70>
 80103e6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80103e8:	1b5b      	subs	r3, r3, r5
 80103ea:	637b      	str	r3, [r7, #52]	; 0x34
 80103ec:	4628      	mov	r0, r5
 80103ee:	19a1      	adds	r1, r4, r6
 80103f0:	f7ff ff74 	bl	80102dc <_AddFreeMemory>
 80103f4:	f1ba 0f00 	cmp.w	sl, #0
 80103f8:	d001      	beq.n	80103fe <_RemoveHoles+0x82>
 80103fa:	4582      	cmp	sl, r0
 80103fc:	d905      	bls.n	801040a <_RemoveHoles+0x8e>
 80103fe:	4635      	mov	r5, r6
 8010400:	442c      	add	r4, r5
 8010402:	454c      	cmp	r4, r9
 8010404:	d3c4      	bcc.n	8010390 <_RemoveHoles+0x14>
 8010406:	2001      	movs	r0, #1
 8010408:	e000      	b.n	801040c <_RemoveHoles+0x90>
 801040a:	2000      	movs	r0, #0
 801040c:	b003      	add	sp, #12
 801040e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010412:	bf00      	nop
 8010414:	2001b3ac 	.word	0x2001b3ac

08010418 <GUI_ALLOC_FreeFixedBlock>:
 8010418:	b128      	cbz	r0, 8010426 <GUI_ALLOC_FreeFixedBlock+0xe>
 801041a:	4a03      	ldr	r2, [pc, #12]	; (8010428 <GUI_ALLOC_FreeFixedBlock+0x10>)
 801041c:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 801041e:	6003      	str	r3, [r0, #0]
 8010420:	b103      	cbz	r3, 8010424 <GUI_ALLOC_FreeFixedBlock+0xc>
 8010422:	6058      	str	r0, [r3, #4]
 8010424:	63d0      	str	r0, [r2, #60]	; 0x3c
 8010426:	4770      	bx	lr
 8010428:	2001b3ac 	.word	0x2001b3ac

0801042c <GUI_ALLOC_h2p>:
 801042c:	b128      	cbz	r0, 801043a <GUI_ALLOC_h2p+0xe>
 801042e:	4b03      	ldr	r3, [pc, #12]	; (801043c <GUI_ALLOC_h2p+0x10>)
 8010430:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010432:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 8010436:	6840      	ldr	r0, [r0, #4]
 8010438:	3008      	adds	r0, #8
 801043a:	4770      	bx	lr
 801043c:	2001b3ac 	.word	0x2001b3ac

08010440 <GUI_ALLOC_LockH>:
 8010440:	4b05      	ldr	r3, [pc, #20]	; (8010458 <GUI_ALLOC_LockH+0x18>)
 8010442:	69d9      	ldr	r1, [r3, #28]
 8010444:	3101      	adds	r1, #1
 8010446:	61d9      	str	r1, [r3, #28]
 8010448:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801044a:	f813 1030 	ldrb.w	r1, [r3, r0, lsl #3]
 801044e:	3101      	adds	r1, #1
 8010450:	f803 1030 	strb.w	r1, [r3, r0, lsl #3]
 8010454:	f7ff bfea 	b.w	801042c <GUI_ALLOC_h2p>
 8010458:	2001b3ac 	.word	0x2001b3ac

0801045c <GUI_ALLOC_UnlockH>:
 801045c:	b530      	push	{r4, r5, lr}
 801045e:	6802      	ldr	r2, [r0, #0]
 8010460:	4b09      	ldr	r3, [pc, #36]	; (8010488 <GUI_ALLOC_UnlockH+0x2c>)
 8010462:	f852 1c08 	ldr.w	r1, [r2, #-8]
 8010466:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8010468:	f812 4031 	ldrb.w	r4, [r2, r1, lsl #3]
 801046c:	2c01      	cmp	r4, #1
 801046e:	d903      	bls.n	8010478 <GUI_ALLOC_UnlockH+0x1c>
 8010470:	69dd      	ldr	r5, [r3, #28]
 8010472:	b10d      	cbz	r5, 8010478 <GUI_ALLOC_UnlockH+0x1c>
 8010474:	3d01      	subs	r5, #1
 8010476:	61dd      	str	r5, [r3, #28]
 8010478:	3c01      	subs	r4, #1
 801047a:	f802 4031 	strb.w	r4, [r2, r1, lsl #3]
 801047e:	2300      	movs	r3, #0
 8010480:	6003      	str	r3, [r0, #0]
 8010482:	4618      	mov	r0, r3
 8010484:	bd30      	pop	{r4, r5, pc}
 8010486:	bf00      	nop
 8010488:	2001b3ac 	.word	0x2001b3ac

0801048c <GUI_ALLOC_AssignMemory>:
 801048c:	4b02      	ldr	r3, [pc, #8]	; (8010498 <GUI_ALLOC_AssignMemory+0xc>)
 801048e:	f021 0103 	bic.w	r1, r1, #3
 8010492:	6018      	str	r0, [r3, #0]
 8010494:	6059      	str	r1, [r3, #4]
 8010496:	4770      	bx	lr
 8010498:	200196a4 	.word	0x200196a4

0801049c <GUI_ALLOC_GetSize>:
 801049c:	b130      	cbz	r0, 80104ac <GUI_ALLOC_GetSize+0x10>
 801049e:	4b04      	ldr	r3, [pc, #16]	; (80104b0 <GUI_ALLOC_GetSize+0x14>)
 80104a0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80104a2:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 80104a6:	6843      	ldr	r3, [r0, #4]
 80104a8:	6858      	ldr	r0, [r3, #4]
 80104aa:	380c      	subs	r0, #12
 80104ac:	4770      	bx	lr
 80104ae:	bf00      	nop
 80104b0:	2001b3ac 	.word	0x2001b3ac

080104b4 <GUI_ALLOC_Free>:
 80104b4:	b510      	push	{r4, lr}
 80104b6:	4604      	mov	r4, r0
 80104b8:	b180      	cbz	r0, 80104dc <GUI_ALLOC_Free+0x28>
 80104ba:	4b09      	ldr	r3, [pc, #36]	; (80104e0 <GUI_ALLOC_Free+0x2c>)
 80104bc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80104be:	eb03 02c0 	add.w	r2, r3, r0, lsl #3
 80104c2:	f813 3030 	ldrb.w	r3, [r3, r0, lsl #3]
 80104c6:	2b01      	cmp	r3, #1
 80104c8:	d108      	bne.n	80104dc <GUI_ALLOC_Free+0x28>
 80104ca:	6851      	ldr	r1, [r2, #4]
 80104cc:	6848      	ldr	r0, [r1, #4]
 80104ce:	f7ff ff05 	bl	80102dc <_AddFreeMemory>
 80104d2:	4620      	mov	r0, r4
 80104d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80104d8:	f7ff beb2 	b.w	8010240 <_PushFreeBlock>
 80104dc:	bd10      	pop	{r4, pc}
 80104de:	bf00      	nop
 80104e0:	2001b3ac 	.word	0x2001b3ac

080104e4 <_EnlargeBlocks>:
 80104e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80104e8:	4c22      	ldr	r4, [pc, #136]	; (8010574 <_EnlargeBlocks+0x90>)
 80104ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80104ec:	b93b      	cbnz	r3, 80104fe <_EnlargeBlocks+0x1a>
 80104ee:	4b22      	ldr	r3, [pc, #136]	; (8010578 <_EnlargeBlocks+0x94>)
 80104f0:	689d      	ldr	r5, [r3, #8]
 80104f2:	685b      	ldr	r3, [r3, #4]
 80104f4:	3508      	adds	r5, #8
 80104f6:	fbb3 f5f5 	udiv	r5, r3, r5
 80104fa:	3502      	adds	r5, #2
 80104fc:	e003      	b.n	8010506 <_EnlargeBlocks+0x22>
 80104fe:	6923      	ldr	r3, [r4, #16]
 8010500:	1d1d      	adds	r5, r3, #4
 8010502:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 8010506:	00e8      	lsls	r0, r5, #3
 8010508:	f000 f978 	bl	80107fc <_Alloc>
 801050c:	4680      	mov	r8, r0
 801050e:	b360      	cbz	r0, 801056a <_EnlargeBlocks+0x86>
 8010510:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010512:	6922      	ldr	r2, [r4, #16]
 8010514:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8010516:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
 801051a:	00d2      	lsls	r2, r2, #3
 801051c:	685e      	ldr	r6, [r3, #4]
 801051e:	3608      	adds	r6, #8
 8010520:	4630      	mov	r0, r6
 8010522:	f005 fe2a 	bl	801617a <memcpy>
 8010526:	6922      	ldr	r2, [r4, #16]
 8010528:	6366      	str	r6, [r4, #52]	; 0x34
 801052a:	eb06 01c2 	add.w	r1, r6, r2, lsl #3
 801052e:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 8010532:	3104      	adds	r1, #4
 8010534:	4613      	mov	r3, r2
 8010536:	1e68      	subs	r0, r5, #1
 8010538:	4283      	cmp	r3, r0
 801053a:	f101 0108 	add.w	r1, r1, #8
 801053e:	d203      	bcs.n	8010548 <_EnlargeBlocks+0x64>
 8010540:	3301      	adds	r3, #1
 8010542:	f841 3c08 	str.w	r3, [r1, #-8]
 8010546:	e7f6      	b.n	8010536 <_EnlargeBlocks+0x52>
 8010548:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801054c:	2600      	movs	r6, #0
 801054e:	605e      	str	r6, [r3, #4]
 8010550:	6863      	ldr	r3, [r4, #4]
 8010552:	6262      	str	r2, [r4, #36]	; 0x24
 8010554:	1a9b      	subs	r3, r3, r2
 8010556:	442b      	add	r3, r5
 8010558:	6063      	str	r3, [r4, #4]
 801055a:	6125      	str	r5, [r4, #16]
 801055c:	4638      	mov	r0, r7
 801055e:	b13f      	cbz	r7, 8010570 <_EnlargeBlocks+0x8c>
 8010560:	f7ff ffa8 	bl	80104b4 <GUI_ALLOC_Free>
 8010564:	4630      	mov	r0, r6
 8010566:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801056a:	2001      	movs	r0, #1
 801056c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010570:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010574:	2001b3ac 	.word	0x2001b3ac
 8010578:	200196a4 	.word	0x200196a4

0801057c <_InitOnce>:
 801057c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801057e:	4e58      	ldr	r6, [pc, #352]	; (80106e0 <_InitOnce+0x164>)
 8010580:	f896 1028 	ldrb.w	r1, [r6, #40]	; 0x28
 8010584:	2900      	cmp	r1, #0
 8010586:	f040 80aa 	bne.w	80106de <_InitOnce+0x162>
 801058a:	4d56      	ldr	r5, [pc, #344]	; (80106e4 <_InitOnce+0x168>)
 801058c:	686a      	ldr	r2, [r5, #4]
 801058e:	2301      	movs	r3, #1
 8010590:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
 8010594:	f5b2 5f20 	cmp.w	r2, #10240	; 0x2800
 8010598:	bf28      	it	cs
 801059a:	f44f 5220 	movcs.w	r2, #10240	; 0x2800
 801059e:	682b      	ldr	r3, [r5, #0]
 80105a0:	0894      	lsrs	r4, r2, #2
 80105a2:	2000      	movs	r0, #0
 80105a4:	42a0      	cmp	r0, r4
 80105a6:	d00c      	beq.n	80105c2 <_InitOnce+0x46>
 80105a8:	1847      	adds	r7, r0, r1
 80105aa:	f04f 0eff 	mov.w	lr, #255	; 0xff
 80105ae:	fbb7 fefe 	udiv	lr, r7, lr
 80105b2:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 80105b6:	ebce 0707 	rsb	r7, lr, r7
 80105ba:	f843 7020 	str.w	r7, [r3, r0, lsl #2]
 80105be:	3001      	adds	r0, #1
 80105c0:	e7f0      	b.n	80105a4 <_InitOnce+0x28>
 80105c2:	2000      	movs	r0, #0
 80105c4:	42a0      	cmp	r0, r4
 80105c6:	d016      	beq.n	80105f6 <_InitOnce+0x7a>
 80105c8:	1847      	adds	r7, r0, r1
 80105ca:	f04f 0eff 	mov.w	lr, #255	; 0xff
 80105ce:	fbb7 fefe 	udiv	lr, r7, lr
 80105d2:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 80105d6:	ebce 0e07 	rsb	lr, lr, r7
 80105da:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 80105de:	4577      	cmp	r7, lr
 80105e0:	d007      	beq.n	80105f2 <_InitOnce+0x76>
 80105e2:	68aa      	ldr	r2, [r5, #8]
 80105e4:	4b3f      	ldr	r3, [pc, #252]	; (80106e4 <_InitOnce+0x168>)
 80105e6:	2a00      	cmp	r2, #0
 80105e8:	d155      	bne.n	8010696 <_InitOnce+0x11a>
 80105ea:	685a      	ldr	r2, [r3, #4]
 80105ec:	0892      	lsrs	r2, r2, #2
 80105ee:	609a      	str	r2, [r3, #8]
 80105f0:	e051      	b.n	8010696 <_InitOnce+0x11a>
 80105f2:	3001      	adds	r0, #1
 80105f4:	e7e6      	b.n	80105c4 <_InitOnce+0x48>
 80105f6:	3101      	adds	r1, #1
 80105f8:	2902      	cmp	r1, #2
 80105fa:	d1d2      	bne.n	80105a2 <_InitOnce+0x26>
 80105fc:	0854      	lsrs	r4, r2, #1
 80105fe:	2100      	movs	r1, #0
 8010600:	2000      	movs	r0, #0
 8010602:	42a0      	cmp	r0, r4
 8010604:	d00c      	beq.n	8010620 <_InitOnce+0xa4>
 8010606:	1847      	adds	r7, r0, r1
 8010608:	f04f 0eff 	mov.w	lr, #255	; 0xff
 801060c:	fbb7 fefe 	udiv	lr, r7, lr
 8010610:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8010614:	ebce 0707 	rsb	r7, lr, r7
 8010618:	f823 7010 	strh.w	r7, [r3, r0, lsl #1]
 801061c:	3001      	adds	r0, #1
 801061e:	e7f0      	b.n	8010602 <_InitOnce+0x86>
 8010620:	2000      	movs	r0, #0
 8010622:	42a0      	cmp	r0, r4
 8010624:	d00f      	beq.n	8010646 <_InitOnce+0xca>
 8010626:	1847      	adds	r7, r0, r1
 8010628:	f04f 0eff 	mov.w	lr, #255	; 0xff
 801062c:	fbb7 fefe 	udiv	lr, r7, lr
 8010630:	ebce 2e0e 	rsb	lr, lr, lr, lsl #8
 8010634:	ebce 0707 	rsb	r7, lr, r7
 8010638:	f833 c010 	ldrh.w	ip, [r3, r0, lsl #1]
 801063c:	b2bf      	uxth	r7, r7
 801063e:	45bc      	cmp	ip, r7
 8010640:	d1cf      	bne.n	80105e2 <_InitOnce+0x66>
 8010642:	3001      	adds	r0, #1
 8010644:	e7ed      	b.n	8010622 <_InitOnce+0xa6>
 8010646:	3101      	adds	r1, #1
 8010648:	2902      	cmp	r1, #2
 801064a:	d1d9      	bne.n	8010600 <_InitOnce+0x84>
 801064c:	2100      	movs	r1, #0
 801064e:	2000      	movs	r0, #0
 8010650:	4290      	cmp	r0, r2
 8010652:	d007      	beq.n	8010664 <_InitOnce+0xe8>
 8010654:	1844      	adds	r4, r0, r1
 8010656:	27ff      	movs	r7, #255	; 0xff
 8010658:	fbb4 f7f7 	udiv	r7, r4, r7
 801065c:	443c      	add	r4, r7
 801065e:	541c      	strb	r4, [r3, r0]
 8010660:	3001      	adds	r0, #1
 8010662:	e7f5      	b.n	8010650 <_InitOnce+0xd4>
 8010664:	2000      	movs	r0, #0
 8010666:	4290      	cmp	r0, r2
 8010668:	d00b      	beq.n	8010682 <_InitOnce+0x106>
 801066a:	1844      	adds	r4, r0, r1
 801066c:	27ff      	movs	r7, #255	; 0xff
 801066e:	fbb4 f7f7 	udiv	r7, r4, r7
 8010672:	443c      	add	r4, r7
 8010674:	5c1f      	ldrb	r7, [r3, r0]
 8010676:	f004 04ff 	and.w	r4, r4, #255	; 0xff
 801067a:	42a7      	cmp	r7, r4
 801067c:	d1b1      	bne.n	80105e2 <_InitOnce+0x66>
 801067e:	3001      	adds	r0, #1
 8010680:	e7f1      	b.n	8010666 <_InitOnce+0xea>
 8010682:	3101      	adds	r1, #1
 8010684:	2902      	cmp	r1, #2
 8010686:	d1e2      	bne.n	801064e <_InitOnce+0xd2>
 8010688:	2100      	movs	r1, #0
 801068a:	4291      	cmp	r1, r2
 801068c:	d0a9      	beq.n	80105e2 <_InitOnce+0x66>
 801068e:	2000      	movs	r0, #0
 8010690:	5458      	strb	r0, [r3, r1]
 8010692:	3101      	adds	r1, #1
 8010694:	e7f9      	b.n	801068a <_InitOnce+0x10e>
 8010696:	4814      	ldr	r0, [pc, #80]	; (80106e8 <_InitOnce+0x16c>)
 8010698:	4b14      	ldr	r3, [pc, #80]	; (80106ec <_InitOnce+0x170>)
 801069a:	6003      	str	r3, [r0, #0]
 801069c:	f7ff fac8 	bl	800fc30 <GUI__RegisterExit>
 80106a0:	235a      	movs	r3, #90	; 0x5a
 80106a2:	6233      	str	r3, [r6, #32]
 80106a4:	2300      	movs	r3, #0
 80106a6:	2110      	movs	r1, #16
 80106a8:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 80106ac:	4099      	lsls	r1, r3
 80106ae:	3301      	adds	r3, #1
 80106b0:	2b10      	cmp	r3, #16
 80106b2:	4c0b      	ldr	r4, [pc, #44]	; (80106e0 <_InitOnce+0x164>)
 80106b4:	6411      	str	r1, [r2, #64]	; 0x40
 80106b6:	d1f6      	bne.n	80106a6 <_InitOnce+0x12a>
 80106b8:	6868      	ldr	r0, [r5, #4]
 80106ba:	6829      	ldr	r1, [r5, #0]
 80106bc:	63a1      	str	r1, [r4, #56]	; 0x38
 80106be:	2302      	movs	r3, #2
 80106c0:	6123      	str	r3, [r4, #16]
 80106c2:	f1a0 0314 	sub.w	r3, r0, #20
 80106c6:	440b      	add	r3, r1
 80106c8:	2501      	movs	r5, #1
 80106ca:	6363      	str	r3, [r4, #52]	; 0x34
 80106cc:	60e0      	str	r0, [r4, #12]
 80106ce:	605d      	str	r5, [r3, #4]
 80106d0:	6265      	str	r5, [r4, #36]	; 0x24
 80106d2:	6065      	str	r5, [r4, #4]
 80106d4:	f7ff fe02 	bl	80102dc <_AddFreeMemory>
 80106d8:	f7ff ff04 	bl	80104e4 <_EnlargeBlocks>
 80106dc:	6325      	str	r5, [r4, #48]	; 0x30
 80106de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80106e0:	2001b3ac 	.word	0x2001b3ac
 80106e4:	200196a4 	.word	0x200196a4
 80106e8:	200196b0 	.word	0x200196b0
 80106ec:	08010265 	.word	0x08010265

080106f0 <GUI_ALLOC_GetFixedBlock>:
 80106f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106f4:	4605      	mov	r5, r0
 80106f6:	4e26      	ldr	r6, [pc, #152]	; (8010790 <GUI_ALLOC_GetFixedBlock+0xa0>)
 80106f8:	3503      	adds	r5, #3
 80106fa:	f7ff ff3f 	bl	801057c <_InitOnce>
 80106fe:	f025 0503 	bic.w	r5, r5, #3
 8010702:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8010704:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 8010706:	3504      	adds	r5, #4
 8010708:	429d      	cmp	r5, r3
 801070a:	bf38      	it	cc
 801070c:	461d      	movcc	r5, r3
 801070e:	4614      	mov	r4, r2
 8010710:	b12c      	cbz	r4, 801071e <GUI_ALLOC_GetFixedBlock+0x2e>
 8010712:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8010716:	42ab      	cmp	r3, r5
 8010718:	d02c      	beq.n	8010774 <GUI_ALLOC_GetFixedBlock+0x84>
 801071a:	6824      	ldr	r4, [r4, #0]
 801071c:	e7f8      	b.n	8010710 <GUI_ALLOC_GetFixedBlock+0x20>
 801071e:	68f3      	ldr	r3, [r6, #12]
 8010720:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 8010722:	eb02 0803 	add.w	r8, r2, r3
 8010726:	f858 7c04 	ldr.w	r7, [r8, #-4]
 801072a:	ebc7 0708 	rsb	r7, r7, r8
 801072e:	683b      	ldr	r3, [r7, #0]
 8010730:	b133      	cbz	r3, 8010740 <GUI_ALLOC_GetFixedBlock+0x50>
 8010732:	4620      	mov	r0, r4
 8010734:	f7ff fe22 	bl	801037c <_RemoveHoles>
 8010738:	f858 7c04 	ldr.w	r7, [r8, #-4]
 801073c:	ebc7 0708 	rsb	r7, r7, r8
 8010740:	683b      	ldr	r3, [r7, #0]
 8010742:	bb13      	cbnz	r3, 801078a <GUI_ALLOC_GetFixedBlock+0x9a>
 8010744:	687b      	ldr	r3, [r7, #4]
 8010746:	42ab      	cmp	r3, r5
 8010748:	db1f      	blt.n	801078a <GUI_ALLOC_GetFixedBlock+0x9a>
 801074a:	4638      	mov	r0, r7
 801074c:	1d1c      	adds	r4, r3, #4
 801074e:	f7ff fda5 	bl	801029c <_RemoveFreeBlock>
 8010752:	68f3      	ldr	r3, [r6, #12]
 8010754:	6878      	ldr	r0, [r7, #4]
 8010756:	1b5b      	subs	r3, r3, r5
 8010758:	60f3      	str	r3, [r6, #12]
 801075a:	6973      	ldr	r3, [r6, #20]
 801075c:	1b64      	subs	r4, r4, r5
 801075e:	442b      	add	r3, r5
 8010760:	1b40      	subs	r0, r0, r5
 8010762:	443c      	add	r4, r7
 8010764:	6173      	str	r3, [r6, #20]
 8010766:	d002      	beq.n	801076e <GUI_ALLOC_GetFixedBlock+0x7e>
 8010768:	4639      	mov	r1, r7
 801076a:	f7ff fdb7 	bl	80102dc <_AddFreeMemory>
 801076e:	f844 5c04 	str.w	r5, [r4, #-4]
 8010772:	e00a      	b.n	801078a <GUI_ALLOC_GetFixedBlock+0x9a>
 8010774:	6823      	ldr	r3, [r4, #0]
 8010776:	b10b      	cbz	r3, 801077c <GUI_ALLOC_GetFixedBlock+0x8c>
 8010778:	6861      	ldr	r1, [r4, #4]
 801077a:	6059      	str	r1, [r3, #4]
 801077c:	6861      	ldr	r1, [r4, #4]
 801077e:	b101      	cbz	r1, 8010782 <GUI_ALLOC_GetFixedBlock+0x92>
 8010780:	600b      	str	r3, [r1, #0]
 8010782:	42a2      	cmp	r2, r4
 8010784:	d101      	bne.n	801078a <GUI_ALLOC_GetFixedBlock+0x9a>
 8010786:	6823      	ldr	r3, [r4, #0]
 8010788:	63f3      	str	r3, [r6, #60]	; 0x3c
 801078a:	4620      	mov	r0, r4
 801078c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010790:	2001b3ac 	.word	0x2001b3ac

08010794 <GUI_ALLOC_GetMaxSize>:
 8010794:	b508      	push	{r3, lr}
 8010796:	f7ff fef1 	bl	801057c <_InitOnce>
 801079a:	2200      	movs	r2, #0
 801079c:	4b0b      	ldr	r3, [pc, #44]	; (80107cc <GUI_ALLOC_GetMaxSize+0x38>)
 801079e:	4413      	add	r3, r2
 80107a0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80107a4:	b113      	cbz	r3, 80107ac <GUI_ALLOC_GetMaxSize+0x18>
 80107a6:	689b      	ldr	r3, [r3, #8]
 80107a8:	2000      	movs	r0, #0
 80107aa:	e00b      	b.n	80107c4 <GUI_ALLOC_GetMaxSize+0x30>
 80107ac:	3a08      	subs	r2, #8
 80107ae:	f112 0f80 	cmn.w	r2, #128	; 0x80
 80107b2:	d1f3      	bne.n	801079c <GUI_ALLOC_GetMaxSize+0x8>
 80107b4:	e7f8      	b.n	80107a8 <GUI_ALLOC_GetMaxSize+0x14>
 80107b6:	685a      	ldr	r2, [r3, #4]
 80107b8:	689b      	ldr	r3, [r3, #8]
 80107ba:	4290      	cmp	r0, r2
 80107bc:	bf38      	it	cc
 80107be:	4610      	movcc	r0, r2
 80107c0:	b113      	cbz	r3, 80107c8 <GUI_ALLOC_GetMaxSize+0x34>
 80107c2:	689b      	ldr	r3, [r3, #8]
 80107c4:	2b00      	cmp	r3, #0
 80107c6:	d1f6      	bne.n	80107b6 <GUI_ALLOC_GetMaxSize+0x22>
 80107c8:	380c      	subs	r0, #12
 80107ca:	bd08      	pop	{r3, pc}
 80107cc:	2001b3ac 	.word	0x2001b3ac

080107d0 <GUI_ALLOC_RequestSize>:
 80107d0:	b508      	push	{r3, lr}
 80107d2:	f7ff ffdf 	bl	8010794 <GUI_ALLOC_GetMaxSize>
 80107d6:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 80107da:	f04f 0364 	mov.w	r3, #100	; 0x64
 80107de:	4a06      	ldr	r2, [pc, #24]	; (80107f8 <GUI_ALLOC_RequestSize+0x28>)
 80107e0:	d904      	bls.n	80107ec <GUI_ALLOC_RequestSize+0x1c>
 80107e2:	fb90 f0f3 	sdiv	r0, r0, r3
 80107e6:	6a13      	ldr	r3, [r2, #32]
 80107e8:	4358      	muls	r0, r3
 80107ea:	bd08      	pop	{r3, pc}
 80107ec:	6a12      	ldr	r2, [r2, #32]
 80107ee:	4350      	muls	r0, r2
 80107f0:	fbb0 f0f3 	udiv	r0, r0, r3
 80107f4:	bd08      	pop	{r3, pc}
 80107f6:	bf00      	nop
 80107f8:	2001b3ac 	.word	0x2001b3ac

080107fc <_Alloc>:
 80107fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010800:	4d38      	ldr	r5, [pc, #224]	; (80108e4 <_Alloc+0xe8>)
 8010802:	4604      	mov	r4, r0
 8010804:	f7ff feba 	bl	801057c <_InitOnce>
 8010808:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 801080a:	682b      	ldr	r3, [r5, #0]
 801080c:	42bc      	cmp	r4, r7
 801080e:	bf24      	itt	cs
 8010810:	1ce7      	addcs	r7, r4, #3
 8010812:	f027 0703 	biccs.w	r7, r7, #3
 8010816:	370c      	adds	r7, #12
 8010818:	429f      	cmp	r7, r3
 801081a:	4c32      	ldr	r4, [pc, #200]	; (80108e4 <_Alloc+0xe8>)
 801081c:	d83e      	bhi.n	801089c <_Alloc+0xa0>
 801081e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010820:	6862      	ldr	r2, [r4, #4]
 8010822:	429a      	cmp	r2, r3
 8010824:	d90f      	bls.n	8010846 <_Alloc+0x4a>
 8010826:	686b      	ldr	r3, [r5, #4]
 8010828:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 801082a:	3b01      	subs	r3, #1
 801082c:	606b      	str	r3, [r5, #4]
 801082e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8010830:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 8010834:	eb03 0209 	add.w	r2, r3, r9
 8010838:	6852      	ldr	r2, [r2, #4]
 801083a:	626a      	str	r2, [r5, #36]	; 0x24
 801083c:	2201      	movs	r2, #1
 801083e:	f803 2036 	strb.w	r2, [r3, r6, lsl #3]
 8010842:	b956      	cbnz	r6, 801085a <_Alloc+0x5e>
 8010844:	e02a      	b.n	801089c <_Alloc+0xa0>
 8010846:	3b01      	subs	r3, #1
 8010848:	6323      	str	r3, [r4, #48]	; 0x30
 801084a:	f7ff fe4b 	bl	80104e4 <_EnlargeBlocks>
 801084e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010850:	3301      	adds	r3, #1
 8010852:	6323      	str	r3, [r4, #48]	; 0x30
 8010854:	2800      	cmp	r0, #0
 8010856:	d0e6      	beq.n	8010826 <_Alloc+0x2a>
 8010858:	e020      	b.n	801089c <_Alloc+0xa0>
 801085a:	230f      	movs	r3, #15
 801085c:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 8010860:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8010862:	4297      	cmp	r7, r2
 8010864:	d20c      	bcs.n	8010880 <_Alloc+0x84>
 8010866:	f113 33ff 	adds.w	r3, r3, #4294967295
 801086a:	d2f7      	bcs.n	801085c <_Alloc+0x60>
 801086c:	e008      	b.n	8010880 <_Alloc+0x84>
 801086e:	6894      	ldr	r4, [r2, #8]
 8010870:	b12c      	cbz	r4, 801087e <_Alloc+0x82>
 8010872:	6862      	ldr	r2, [r4, #4]
 8010874:	4297      	cmp	r7, r2
 8010876:	d914      	bls.n	80108a2 <_Alloc+0xa6>
 8010878:	68a2      	ldr	r2, [r4, #8]
 801087a:	2a00      	cmp	r2, #0
 801087c:	d1f7      	bne.n	801086e <_Alloc+0x72>
 801087e:	3301      	adds	r3, #1
 8010880:	2b0f      	cmp	r3, #15
 8010882:	d803      	bhi.n	801088c <_Alloc+0x90>
 8010884:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 8010888:	6c52      	ldr	r2, [r2, #68]	; 0x44
 801088a:	e7f6      	b.n	801087a <_Alloc+0x7e>
 801088c:	4638      	mov	r0, r7
 801088e:	f7ff fd75 	bl	801037c <_RemoveHoles>
 8010892:	2800      	cmp	r0, #0
 8010894:	d0e1      	beq.n	801085a <_Alloc+0x5e>
 8010896:	4630      	mov	r0, r6
 8010898:	f7ff fcd2 	bl	8010240 <_PushFreeBlock>
 801089c:	2000      	movs	r0, #0
 801089e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80108a2:	f8d4 8004 	ldr.w	r8, [r4, #4]
 80108a6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80108a8:	ebc7 0208 	rsb	r2, r7, r8
 80108ac:	330c      	adds	r3, #12
 80108ae:	4620      	mov	r0, r4
 80108b0:	429a      	cmp	r2, r3
 80108b2:	bf38      	it	cc
 80108b4:	4647      	movcc	r7, r8
 80108b6:	f7ff fcf1 	bl	801029c <_RemoveFreeBlock>
 80108ba:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80108bc:	444b      	add	r3, r9
 80108be:	19e1      	adds	r1, r4, r7
 80108c0:	605c      	str	r4, [r3, #4]
 80108c2:	45b8      	cmp	r8, r7
 80108c4:	f04f 0300 	mov.w	r3, #0
 80108c8:	e884 00c0 	stmia.w	r4, {r6, r7}
 80108cc:	60a3      	str	r3, [r4, #8]
 80108ce:	6124      	str	r4, [r4, #16]
 80108d0:	f841 7c04 	str.w	r7, [r1, #-4]
 80108d4:	dd03      	ble.n	80108de <_Alloc+0xe2>
 80108d6:	ebc7 0008 	rsb	r0, r7, r8
 80108da:	f7ff fcff 	bl	80102dc <_AddFreeMemory>
 80108de:	4630      	mov	r0, r6
 80108e0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80108e4:	2001b3ac 	.word	0x2001b3ac

080108e8 <GUI_ALLOC_AllocNoInit>:
 80108e8:	b108      	cbz	r0, 80108ee <GUI_ALLOC_AllocNoInit+0x6>
 80108ea:	f7ff bf87 	b.w	80107fc <_Alloc>
 80108ee:	4770      	bx	lr

080108f0 <GUI_ALLOC_FreePtr>:
 80108f0:	b510      	push	{r4, lr}
 80108f2:	4604      	mov	r4, r0
 80108f4:	6800      	ldr	r0, [r0, #0]
 80108f6:	f7ff fddd 	bl	80104b4 <GUI_ALLOC_Free>
 80108fa:	2300      	movs	r3, #0
 80108fc:	6023      	str	r3, [r4, #0]
 80108fe:	bd10      	pop	{r4, pc}

08010900 <GUI_ALLOC_FreePtrArray>:
 8010900:	b570      	push	{r4, r5, r6, lr}
 8010902:	4605      	mov	r5, r0
 8010904:	460e      	mov	r6, r1
 8010906:	2400      	movs	r4, #0
 8010908:	42b4      	cmp	r4, r6
 801090a:	da05      	bge.n	8010918 <GUI_ALLOC_FreePtrArray+0x18>
 801090c:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 8010910:	f7ff ffee 	bl	80108f0 <GUI_ALLOC_FreePtr>
 8010914:	3401      	adds	r4, #1
 8010916:	e7f7      	b.n	8010908 <GUI_ALLOC_FreePtrArray+0x8>
 8010918:	bd70      	pop	{r4, r5, r6, pc}

0801091a <GUI_ALLOC_AllocZero>:
 801091a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801091c:	4605      	mov	r5, r0
 801091e:	f7ff ffe3 	bl	80108e8 <GUI_ALLOC_AllocNoInit>
 8010922:	4606      	mov	r6, r0
 8010924:	b158      	cbz	r0, 801093e <GUI_ALLOC_AllocZero+0x24>
 8010926:	f7ff fd8b 	bl	8010440 <GUI_ALLOC_LockH>
 801092a:	ac02      	add	r4, sp, #8
 801092c:	2100      	movs	r1, #0
 801092e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8010932:	462a      	mov	r2, r5
 8010934:	f7fd fa12 	bl	800dd5c <GUI__memset>
 8010938:	4620      	mov	r0, r4
 801093a:	f7ff fd8f 	bl	801045c <GUI_ALLOC_UnlockH>
 801093e:	4630      	mov	r0, r6
 8010940:	b002      	add	sp, #8
 8010942:	bd70      	pop	{r4, r5, r6, pc}

08010944 <GL_MoveTo>:
 8010944:	4b02      	ldr	r3, [pc, #8]	; (8010950 <GL_MoveTo+0xc>)
 8010946:	681b      	ldr	r3, [r3, #0]
 8010948:	84d8      	strh	r0, [r3, #38]	; 0x26
 801094a:	8519      	strh	r1, [r3, #40]	; 0x28
 801094c:	4770      	bx	lr
 801094e:	bf00      	nop
 8010950:	20000254 	.word	0x20000254

08010954 <GUI_DrawRect>:
 8010954:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010958:	4c1e      	ldr	r4, [pc, #120]	; (80109d4 <GUI_DrawRect+0x80>)
 801095a:	f8d4 e000 	ldr.w	lr, [r4]
 801095e:	f8de 404c 	ldr.w	r4, [lr, #76]	; 0x4c
 8010962:	f8de 6050 	ldr.w	r6, [lr, #80]	; 0x50
 8010966:	1905      	adds	r5, r0, r4
 8010968:	4414      	add	r4, r2
 801096a:	f89e 2018 	ldrb.w	r2, [lr, #24]
 801096e:	3a01      	subs	r2, #1
 8010970:	b292      	uxth	r2, r2
 8010972:	198f      	adds	r7, r1, r6
 8010974:	441e      	add	r6, r3
 8010976:	1aab      	subs	r3, r5, r2
 8010978:	f8ad 3000 	strh.w	r3, [sp]
 801097c:	1913      	adds	r3, r2, r4
 801097e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010982:	4668      	mov	r0, sp
 8010984:	1abb      	subs	r3, r7, r2
 8010986:	4432      	add	r2, r6
 8010988:	f8ad 3002 	strh.w	r3, [sp, #2]
 801098c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010990:	f7fa f906 	bl	800aba0 <WM__InitIVRSearch>
 8010994:	b1d0      	cbz	r0, 80109cc <GUI_DrawRect+0x78>
 8010996:	4628      	mov	r0, r5
 8010998:	4639      	mov	r1, r7
 801099a:	4622      	mov	r2, r4
 801099c:	f7fc fe8e 	bl	800d6bc <LCD_DrawHLine>
 80109a0:	f107 0901 	add.w	r9, r7, #1
 80109a4:	4628      	mov	r0, r5
 80109a6:	4631      	mov	r1, r6
 80109a8:	4622      	mov	r2, r4
 80109aa:	f106 38ff 	add.w	r8, r6, #4294967295
 80109ae:	f7fc fe85 	bl	800d6bc <LCD_DrawHLine>
 80109b2:	4628      	mov	r0, r5
 80109b4:	4649      	mov	r1, r9
 80109b6:	4642      	mov	r2, r8
 80109b8:	f7fc fea6 	bl	800d708 <LCD_DrawVLine>
 80109bc:	4620      	mov	r0, r4
 80109be:	4649      	mov	r1, r9
 80109c0:	4642      	mov	r2, r8
 80109c2:	f7fc fea1 	bl	800d708 <LCD_DrawVLine>
 80109c6:	f7fa f829 	bl	800aa1c <WM__GetNextIVR>
 80109ca:	e7e3      	b.n	8010994 <GUI_DrawRect+0x40>
 80109cc:	b003      	add	sp, #12
 80109ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80109d2:	bf00      	nop
 80109d4:	20000254 	.word	0x20000254

080109d8 <LCD_Index2Color_M565>:
 80109d8:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 80109dc:	4b06      	ldr	r3, [pc, #24]	; (80109f8 <LCD_Index2Color_M565+0x20>)
 80109de:	f000 021f 	and.w	r2, r0, #31
 80109e2:	f3c0 1045 	ubfx	r0, r0, #5, #6
 80109e6:	5c9a      	ldrb	r2, [r3, r2]
 80109e8:	5c5b      	ldrb	r3, [r3, r1]
 80109ea:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 80109ee:	4a03      	ldr	r2, [pc, #12]	; (80109fc <LCD_Index2Color_M565+0x24>)
 80109f0:	5c10      	ldrb	r0, [r2, r0]
 80109f2:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 80109f6:	4770      	bx	lr
 80109f8:	080180df 	.word	0x080180df
 80109fc:	0801809f 	.word	0x0801809f

08010a00 <_Color2Index_M565>:
 8010a00:	f3c0 4107 	ubfx	r1, r0, #16, #8
 8010a04:	4b06      	ldr	r3, [pc, #24]	; (8010a20 <_Color2Index_M565+0x20>)
 8010a06:	b2c2      	uxtb	r2, r0
 8010a08:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8010a0c:	5c9a      	ldrb	r2, [r3, r2]
 8010a0e:	5c5b      	ldrb	r3, [r3, r1]
 8010a10:	eb03 23c2 	add.w	r3, r3, r2, lsl #11
 8010a14:	4a03      	ldr	r2, [pc, #12]	; (8010a24 <_Color2Index_M565+0x24>)
 8010a16:	5c10      	ldrb	r0, [r2, r0]
 8010a18:	eb03 1040 	add.w	r0, r3, r0, lsl #5
 8010a1c:	4770      	bx	lr
 8010a1e:	bf00      	nop
 8010a20:	080181ff 	.word	0x080181ff
 8010a24:	080180ff 	.word	0x080180ff

08010a28 <_GetIndexMask_M565>:
 8010a28:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010a2c:	4770      	bx	lr
	...

08010a30 <_Color2IndexBulk>:
 8010a30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010a32:	4f0f      	ldr	r7, [pc, #60]	; (8010a70 <_Color2IndexBulk+0x40>)
 8010a34:	683f      	ldr	r7, [r7, #0]
 8010a36:	4606      	mov	r6, r0
 8010a38:	460d      	mov	r5, r1
 8010a3a:	4614      	mov	r4, r2
 8010a3c:	469c      	mov	ip, r3
 8010a3e:	b10f      	cbz	r7, 8010a44 <_Color2IndexBulk+0x14>
 8010a40:	47b8      	blx	r7
 8010a42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010a44:	f856 2b04 	ldr.w	r2, [r6], #4
 8010a48:	490a      	ldr	r1, [pc, #40]	; (8010a74 <_Color2IndexBulk+0x44>)
 8010a4a:	b2d3      	uxtb	r3, r2
 8010a4c:	3c01      	subs	r4, #1
 8010a4e:	5cc8      	ldrb	r0, [r1, r3]
 8010a50:	f3c2 4307 	ubfx	r3, r2, #16, #8
 8010a54:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8010a58:	5ccb      	ldrb	r3, [r1, r3]
 8010a5a:	4907      	ldr	r1, [pc, #28]	; (8010a78 <_Color2IndexBulk+0x48>)
 8010a5c:	5c8a      	ldrb	r2, [r1, r2]
 8010a5e:	eb03 23c0 	add.w	r3, r3, r0, lsl #11
 8010a62:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 8010a66:	802b      	strh	r3, [r5, #0]
 8010a68:	4465      	add	r5, ip
 8010a6a:	d1eb      	bne.n	8010a44 <_Color2IndexBulk+0x14>
 8010a6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010a6e:	bf00      	nop
 8010a70:	200196bc 	.word	0x200196bc
 8010a74:	080181ff 	.word	0x080181ff
 8010a78:	080180ff 	.word	0x080180ff

08010a7c <_Index2ColorBulk>:
 8010a7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010a7e:	4e13      	ldr	r6, [pc, #76]	; (8010acc <_Index2ColorBulk+0x50>)
 8010a80:	6836      	ldr	r6, [r6, #0]
 8010a82:	4684      	mov	ip, r0
 8010a84:	4614      	mov	r4, r2
 8010a86:	461d      	mov	r5, r3
 8010a88:	b10e      	cbz	r6, 8010a8e <_Index2ColorBulk+0x12>
 8010a8a:	47b0      	blx	r6
 8010a8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010a8e:	1e50      	subs	r0, r2, #1
 8010a90:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8010a94:	3a01      	subs	r2, #1
 8010a96:	fb03 c000 	mla	r0, r3, r0, ip
 8010a9a:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8010a9e:	8802      	ldrh	r2, [r0, #0]
 8010aa0:	4b0b      	ldr	r3, [pc, #44]	; (8010ad0 <_Index2ColorBulk+0x54>)
 8010aa2:	f002 061f 	and.w	r6, r2, #31
 8010aa6:	0ad7      	lsrs	r7, r2, #11
 8010aa8:	5d9e      	ldrb	r6, [r3, r6]
 8010aaa:	5ddb      	ldrb	r3, [r3, r7]
 8010aac:	f3c2 1245 	ubfx	r2, r2, #5, #6
 8010ab0:	eb03 4306 	add.w	r3, r3, r6, lsl #16
 8010ab4:	4e07      	ldr	r6, [pc, #28]	; (8010ad4 <_Index2ColorBulk+0x58>)
 8010ab6:	5cb2      	ldrb	r2, [r6, r2]
 8010ab8:	3c01      	subs	r4, #1
 8010aba:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8010abe:	f841 3904 	str.w	r3, [r1], #-4
 8010ac2:	ebc5 0000 	rsb	r0, r5, r0
 8010ac6:	d1ea      	bne.n	8010a9e <_Index2ColorBulk+0x22>
 8010ac8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010aca:	bf00      	nop
 8010acc:	200196b8 	.word	0x200196b8
 8010ad0:	080180df 	.word	0x080180df
 8010ad4:	0801809f 	.word	0x0801809f

08010ad8 <LCD_Index2Color_888>:
 8010ad8:	4770      	bx	lr

08010ada <LCD_Index2Color_8888>:
 8010ada:	4770      	bx	lr

08010adc <_Color2Index_8888>:
 8010adc:	4770      	bx	lr

08010ade <_GetIndexMask_8888>:
 8010ade:	f04f 30ff 	mov.w	r0, #4294967295
 8010ae2:	4770      	bx	lr

08010ae4 <_Color2IndexBulk>:
 8010ae4:	b510      	push	{r4, lr}
 8010ae6:	f850 4b04 	ldr.w	r4, [r0], #4
 8010aea:	600c      	str	r4, [r1, #0]
 8010aec:	3a01      	subs	r2, #1
 8010aee:	4419      	add	r1, r3
 8010af0:	d1f9      	bne.n	8010ae6 <_Color2IndexBulk+0x2>
 8010af2:	bd10      	pop	{r4, pc}

08010af4 <_Index2ColorBulk>:
 8010af4:	b510      	push	{r4, lr}
 8010af6:	6804      	ldr	r4, [r0, #0]
 8010af8:	f841 4b04 	str.w	r4, [r1], #4
 8010afc:	3a01      	subs	r2, #1
 8010afe:	4418      	add	r0, r3
 8010b00:	d1f9      	bne.n	8010af6 <_Index2ColorBulk+0x2>
 8010b02:	bd10      	pop	{r4, pc}

08010b04 <_DrawDownRect>:
 8010b04:	b510      	push	{r4, lr}
 8010b06:	b09c      	sub	sp, #112	; 0x70
 8010b08:	4604      	mov	r4, r0
 8010b0a:	4668      	mov	r0, sp
 8010b0c:	f7fe fa1a 	bl	800ef44 <GUI_SaveContext_W>
 8010b10:	4b09      	ldr	r3, [pc, #36]	; (8010b38 <_DrawDownRect+0x34>)
 8010b12:	6818      	ldr	r0, [r3, #0]
 8010b14:	f7fd f8ec 	bl	800dcf0 <LCD_SetColor>
 8010b18:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010b1c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010b20:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010b24:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010b28:	f7ff ff14 	bl	8010954 <GUI_DrawRect>
 8010b2c:	4668      	mov	r0, sp
 8010b2e:	f7fe fa13 	bl	800ef58 <GUI_RestoreContext>
 8010b32:	b01c      	add	sp, #112	; 0x70
 8010b34:	bd10      	pop	{r4, pc}
 8010b36:	bf00      	nop
 8010b38:	200196c0 	.word	0x200196c0

08010b3c <_DrawUpRect>:
 8010b3c:	b510      	push	{r4, lr}
 8010b3e:	b09c      	sub	sp, #112	; 0x70
 8010b40:	4604      	mov	r4, r0
 8010b42:	4668      	mov	r0, sp
 8010b44:	f7fe f9fe 	bl	800ef44 <GUI_SaveContext_W>
 8010b48:	4b09      	ldr	r3, [pc, #36]	; (8010b70 <_DrawUpRect+0x34>)
 8010b4a:	6818      	ldr	r0, [r3, #0]
 8010b4c:	f7fd f8d0 	bl	800dcf0 <LCD_SetColor>
 8010b50:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010b54:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010b58:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010b5c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010b60:	f7ff fef8 	bl	8010954 <GUI_DrawRect>
 8010b64:	4668      	mov	r0, sp
 8010b66:	f7fe f9f7 	bl	800ef58 <GUI_RestoreContext>
 8010b6a:	b01c      	add	sp, #112	; 0x70
 8010b6c:	bd10      	pop	{r4, pc}
 8010b6e:	bf00      	nop
 8010b70:	200196c0 	.word	0x200196c0

08010b74 <_DrawDown>:
 8010b74:	b507      	push	{r0, r1, r2, lr}
 8010b76:	4668      	mov	r0, sp
 8010b78:	f7f9 f8de 	bl	8009d38 <WM_GetClientRect>
 8010b7c:	4668      	mov	r0, sp
 8010b7e:	f7ff ffc1 	bl	8010b04 <_DrawDownRect>
 8010b82:	b003      	add	sp, #12
 8010b84:	f85d fb04 	ldr.w	pc, [sp], #4

08010b88 <_DrawUp>:
 8010b88:	b507      	push	{r0, r1, r2, lr}
 8010b8a:	4668      	mov	r0, sp
 8010b8c:	f7f9 f8d4 	bl	8009d38 <WM_GetClientRect>
 8010b90:	4668      	mov	r0, sp
 8010b92:	f7ff ffd3 	bl	8010b3c <_DrawUpRect>
 8010b96:	b003      	add	sp, #12
 8010b98:	f85d fb04 	ldr.w	pc, [sp], #4

08010b9c <SLIDER_DrawSkinFlex>:
 8010b9c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8010ba0:	6a03      	ldr	r3, [r0, #32]
 8010ba2:	4604      	mov	r4, r0
 8010ba4:	2b00      	cmp	r3, #0
 8010ba6:	f000 81d7 	beq.w	8010f58 <SLIDER_DrawSkinFlex+0x3bc>
 8010baa:	68da      	ldr	r2, [r3, #12]
 8010bac:	4984      	ldr	r1, [pc, #528]	; (8010dc0 <SLIDER_DrawSkinFlex+0x224>)
 8010bae:	4d85      	ldr	r5, [pc, #532]	; (8010dc4 <SLIDER_DrawSkinFlex+0x228>)
 8010bb0:	2a00      	cmp	r2, #0
 8010bb2:	bf18      	it	ne
 8010bb4:	460d      	movne	r5, r1
 8010bb6:	6842      	ldr	r2, [r0, #4]
 8010bb8:	3a0a      	subs	r2, #10
 8010bba:	2a0a      	cmp	r2, #10
 8010bbc:	f200 81cc 	bhi.w	8010f58 <SLIDER_DrawSkinFlex+0x3bc>
 8010bc0:	e8df f012 	tbh	[pc, r2, lsl #1]
 8010bc4:	01ca01b2 	.word	0x01ca01b2
 8010bc8:	01ca01ca 	.word	0x01ca01ca
 8010bcc:	000b01ca 	.word	0x000b01ca
 8010bd0:	01ca01ca 	.word	0x01ca01ca
 8010bd4:	008001ca 	.word	0x008001ca
 8010bd8:	017a      	.short	0x017a
 8010bda:	6919      	ldr	r1, [r3, #16]
 8010bdc:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 8010bde:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8010be0:	2900      	cmp	r1, #0
 8010be2:	d035      	beq.n	8010c50 <SLIDER_DrawSkinFlex+0xb4>
 8010be4:	6901      	ldr	r1, [r0, #16]
 8010be6:	6980      	ldr	r0, [r0, #24]
 8010be8:	1a46      	subs	r6, r0, r1
 8010bea:	1af6      	subs	r6, r6, r3
 8010bec:	1ab6      	subs	r6, r6, r2
 8010bee:	2702      	movs	r7, #2
 8010bf0:	fb96 f6f7 	sdiv	r6, r6, r7
 8010bf4:	440e      	add	r6, r1
 8010bf6:	eb06 0802 	add.w	r8, r6, r2
 8010bfa:	f108 37ff 	add.w	r7, r8, #4294967295
 8010bfe:	6928      	ldr	r0, [r5, #16]
 8010c00:	f7fe f956 	bl	800eeb0 <GUI_SetColor>
 8010c04:	4631      	mov	r1, r6
 8010c06:	6960      	ldr	r0, [r4, #20]
 8010c08:	463a      	mov	r2, r7
 8010c0a:	f7fe fdb5 	bl	800f778 <GUI_DrawHLine>
 8010c0e:	6961      	ldr	r1, [r4, #20]
 8010c10:	69e2      	ldr	r2, [r4, #28]
 8010c12:	4630      	mov	r0, r6
 8010c14:	3101      	adds	r1, #1
 8010c16:	f7fe fb21 	bl	800f25c <GUI_DrawVLine>
 8010c1a:	3601      	adds	r6, #1
 8010c1c:	6968      	ldr	r0, [r5, #20]
 8010c1e:	f1a8 0802 	sub.w	r8, r8, #2
 8010c22:	f7fe f945 	bl	800eeb0 <GUI_SetColor>
 8010c26:	69e0      	ldr	r0, [r4, #28]
 8010c28:	4631      	mov	r1, r6
 8010c2a:	4642      	mov	r2, r8
 8010c2c:	f7fe fda4 	bl	800f778 <GUI_DrawHLine>
 8010c30:	6961      	ldr	r1, [r4, #20]
 8010c32:	69e2      	ldr	r2, [r4, #28]
 8010c34:	3101      	adds	r1, #1
 8010c36:	4638      	mov	r0, r7
 8010c38:	f7fe fb10 	bl	800f25c <GUI_DrawVLine>
 8010c3c:	69a8      	ldr	r0, [r5, #24]
 8010c3e:	f7fe f937 	bl	800eeb0 <GUI_SetColor>
 8010c42:	6961      	ldr	r1, [r4, #20]
 8010c44:	69e3      	ldr	r3, [r4, #28]
 8010c46:	4630      	mov	r0, r6
 8010c48:	3101      	adds	r1, #1
 8010c4a:	4642      	mov	r2, r8
 8010c4c:	3b01      	subs	r3, #1
 8010c4e:	e036      	b.n	8010cbe <SLIDER_DrawSkinFlex+0x122>
 8010c50:	6941      	ldr	r1, [r0, #20]
 8010c52:	69c0      	ldr	r0, [r0, #28]
 8010c54:	18ce      	adds	r6, r1, r3
 8010c56:	1a41      	subs	r1, r0, r1
 8010c58:	1acb      	subs	r3, r1, r3
 8010c5a:	1a9b      	subs	r3, r3, r2
 8010c5c:	2702      	movs	r7, #2
 8010c5e:	fb93 f3f7 	sdiv	r3, r3, r7
 8010c62:	3601      	adds	r6, #1
 8010c64:	441e      	add	r6, r3
 8010c66:	eb06 0802 	add.w	r8, r6, r2
 8010c6a:	f108 37ff 	add.w	r7, r8, #4294967295
 8010c6e:	6928      	ldr	r0, [r5, #16]
 8010c70:	f7fe f91e 	bl	800eeb0 <GUI_SetColor>
 8010c74:	4631      	mov	r1, r6
 8010c76:	6920      	ldr	r0, [r4, #16]
 8010c78:	463a      	mov	r2, r7
 8010c7a:	f7fe faef 	bl	800f25c <GUI_DrawVLine>
 8010c7e:	6921      	ldr	r1, [r4, #16]
 8010c80:	69a2      	ldr	r2, [r4, #24]
 8010c82:	4630      	mov	r0, r6
 8010c84:	3101      	adds	r1, #1
 8010c86:	f7fe fd77 	bl	800f778 <GUI_DrawHLine>
 8010c8a:	3601      	adds	r6, #1
 8010c8c:	6968      	ldr	r0, [r5, #20]
 8010c8e:	f1a8 0802 	sub.w	r8, r8, #2
 8010c92:	f7fe f90d 	bl	800eeb0 <GUI_SetColor>
 8010c96:	69a0      	ldr	r0, [r4, #24]
 8010c98:	4631      	mov	r1, r6
 8010c9a:	4642      	mov	r2, r8
 8010c9c:	f7fe fade 	bl	800f25c <GUI_DrawVLine>
 8010ca0:	6921      	ldr	r1, [r4, #16]
 8010ca2:	69a2      	ldr	r2, [r4, #24]
 8010ca4:	3101      	adds	r1, #1
 8010ca6:	4638      	mov	r0, r7
 8010ca8:	f7fe fd66 	bl	800f778 <GUI_DrawHLine>
 8010cac:	69a8      	ldr	r0, [r5, #24]
 8010cae:	f7fe f8ff 	bl	800eeb0 <GUI_SetColor>
 8010cb2:	6920      	ldr	r0, [r4, #16]
 8010cb4:	69a2      	ldr	r2, [r4, #24]
 8010cb6:	3001      	adds	r0, #1
 8010cb8:	4631      	mov	r1, r6
 8010cba:	3a01      	subs	r2, #1
 8010cbc:	4643      	mov	r3, r8
 8010cbe:	f7fe fa87 	bl	800f1d0 <GUI_FillRect>
 8010cc2:	e149      	b.n	8010f58 <SLIDER_DrawSkinFlex+0x3bc>
 8010cc4:	681e      	ldr	r6, [r3, #0]
 8010cc6:	6919      	ldr	r1, [r3, #16]
 8010cc8:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8010cca:	3601      	adds	r6, #1
 8010ccc:	1076      	asrs	r6, r6, #1
 8010cce:	2900      	cmp	r1, #0
 8010cd0:	d07a      	beq.n	8010dc8 <SLIDER_DrawSkinFlex+0x22c>
 8010cd2:	6983      	ldr	r3, [r0, #24]
 8010cd4:	6828      	ldr	r0, [r5, #0]
 8010cd6:	ebc2 0a03 	rsb	sl, r2, r3
 8010cda:	f10a 39ff 	add.w	r9, sl, #4294967295
 8010cde:	f7fe f8e7 	bl	800eeb0 <GUI_SetColor>
 8010ce2:	6961      	ldr	r1, [r4, #20]
 8010ce4:	ebc6 0809 	rsb	r8, r6, r9
 8010ce8:	f108 0701 	add.w	r7, r8, #1
 8010cec:	198b      	adds	r3, r1, r6
 8010cee:	4638      	mov	r0, r7
 8010cf0:	464a      	mov	r2, r9
 8010cf2:	3b01      	subs	r3, #1
 8010cf4:	f7fe fd0c 	bl	800f710 <GUI_DrawLine>
 8010cf8:	69e1      	ldr	r1, [r4, #28]
 8010cfa:	1b8b      	subs	r3, r1, r6
 8010cfc:	3301      	adds	r3, #1
 8010cfe:	4638      	mov	r0, r7
 8010d00:	464a      	mov	r2, r9
 8010d02:	f7fe fd05 	bl	800f710 <GUI_DrawLine>
 8010d06:	6960      	ldr	r0, [r4, #20]
 8010d08:	6921      	ldr	r1, [r4, #16]
 8010d0a:	4642      	mov	r2, r8
 8010d0c:	f7fe fd34 	bl	800f778 <GUI_DrawHLine>
 8010d10:	69e0      	ldr	r0, [r4, #28]
 8010d12:	6921      	ldr	r1, [r4, #16]
 8010d14:	4642      	mov	r2, r8
 8010d16:	f7fe fd2f 	bl	800f778 <GUI_DrawHLine>
 8010d1a:	6961      	ldr	r1, [r4, #20]
 8010d1c:	69e2      	ldr	r2, [r4, #28]
 8010d1e:	6920      	ldr	r0, [r4, #16]
 8010d20:	f7fe fa9c 	bl	800f25c <GUI_DrawVLine>
 8010d24:	6868      	ldr	r0, [r5, #4]
 8010d26:	f7fe f8c3 	bl	800eeb0 <GUI_SetColor>
 8010d2a:	6961      	ldr	r1, [r4, #20]
 8010d2c:	f1aa 0a02 	sub.w	sl, sl, #2
 8010d30:	198b      	adds	r3, r1, r6
 8010d32:	4638      	mov	r0, r7
 8010d34:	3101      	adds	r1, #1
 8010d36:	4652      	mov	r2, sl
 8010d38:	3b01      	subs	r3, #1
 8010d3a:	f7fe fce9 	bl	800f710 <GUI_DrawLine>
 8010d3e:	69e1      	ldr	r1, [r4, #28]
 8010d40:	1b8b      	subs	r3, r1, r6
 8010d42:	3301      	adds	r3, #1
 8010d44:	4638      	mov	r0, r7
 8010d46:	3901      	subs	r1, #1
 8010d48:	4652      	mov	r2, sl
 8010d4a:	f7fe fce1 	bl	800f710 <GUI_DrawLine>
 8010d4e:	6960      	ldr	r0, [r4, #20]
 8010d50:	6921      	ldr	r1, [r4, #16]
 8010d52:	3001      	adds	r0, #1
 8010d54:	3101      	adds	r1, #1
 8010d56:	4642      	mov	r2, r8
 8010d58:	f7fe fd0e 	bl	800f778 <GUI_DrawHLine>
 8010d5c:	69e0      	ldr	r0, [r4, #28]
 8010d5e:	6921      	ldr	r1, [r4, #16]
 8010d60:	3801      	subs	r0, #1
 8010d62:	3101      	adds	r1, #1
 8010d64:	4642      	mov	r2, r8
 8010d66:	f7fe fd07 	bl	800f778 <GUI_DrawHLine>
 8010d6a:	6920      	ldr	r0, [r4, #16]
 8010d6c:	6961      	ldr	r1, [r4, #20]
 8010d6e:	69e2      	ldr	r2, [r4, #28]
 8010d70:	3001      	adds	r0, #1
 8010d72:	3101      	adds	r1, #1
 8010d74:	3a01      	subs	r2, #1
 8010d76:	f7fe fa71 	bl	800f25c <GUI_DrawVLine>
 8010d7a:	68aa      	ldr	r2, [r5, #8]
 8010d7c:	6920      	ldr	r0, [r4, #16]
 8010d7e:	6961      	ldr	r1, [r4, #20]
 8010d80:	69e3      	ldr	r3, [r4, #28]
 8010d82:	9200      	str	r2, [sp, #0]
 8010d84:	68ea      	ldr	r2, [r5, #12]
 8010d86:	9201      	str	r2, [sp, #4]
 8010d88:	3002      	adds	r0, #2
 8010d8a:	3102      	adds	r1, #2
 8010d8c:	463a      	mov	r2, r7
 8010d8e:	3b02      	subs	r3, #2
 8010d90:	f003 ff56 	bl	8014c40 <GUI_DrawGradientH>
 8010d94:	68e8      	ldr	r0, [r5, #12]
 8010d96:	f7fe f88b 	bl	800eeb0 <GUI_SetColor>
 8010d9a:	2502      	movs	r5, #2
 8010d9c:	1e73      	subs	r3, r6, #1
 8010d9e:	429d      	cmp	r5, r3
 8010da0:	f280 80da 	bge.w	8010f58 <SLIDER_DrawSkinFlex+0x3bc>
 8010da4:	6963      	ldr	r3, [r4, #20]
 8010da6:	4433      	add	r3, r6
 8010da8:	1b59      	subs	r1, r3, r5
 8010daa:	69e3      	ldr	r3, [r4, #28]
 8010dac:	1b9b      	subs	r3, r3, r6
 8010dae:	195a      	adds	r2, r3, r5
 8010db0:	ebc5 0009 	rsb	r0, r5, r9
 8010db4:	3101      	adds	r1, #1
 8010db6:	3a01      	subs	r2, #1
 8010db8:	f7fe fa50 	bl	800f25c <GUI_DrawVLine>
 8010dbc:	3501      	adds	r5, #1
 8010dbe:	e7ed      	b.n	8010d9c <SLIDER_DrawSkinFlex+0x200>
 8010dc0:	20000260 	.word	0x20000260
 8010dc4:	2000028c 	.word	0x2000028c
 8010dc8:	6943      	ldr	r3, [r0, #20]
 8010dca:	6828      	ldr	r0, [r5, #0]
 8010dcc:	eb03 0a02 	add.w	sl, r3, r2
 8010dd0:	f10a 0901 	add.w	r9, sl, #1
 8010dd4:	f7fe f86c 	bl	800eeb0 <GUI_SetColor>
 8010dd8:	6922      	ldr	r2, [r4, #16]
 8010dda:	eb09 0806 	add.w	r8, r9, r6
 8010dde:	f108 37ff 	add.w	r7, r8, #4294967295
 8010de2:	1990      	adds	r0, r2, r6
 8010de4:	3801      	subs	r0, #1
 8010de6:	4649      	mov	r1, r9
 8010de8:	463b      	mov	r3, r7
 8010dea:	f7fe fc91 	bl	800f710 <GUI_DrawLine>
 8010dee:	69a2      	ldr	r2, [r4, #24]
 8010df0:	1b90      	subs	r0, r2, r6
 8010df2:	463b      	mov	r3, r7
 8010df4:	3001      	adds	r0, #1
 8010df6:	4649      	mov	r1, r9
 8010df8:	f7fe fc8a 	bl	800f710 <GUI_DrawLine>
 8010dfc:	6920      	ldr	r0, [r4, #16]
 8010dfe:	69e2      	ldr	r2, [r4, #28]
 8010e00:	4641      	mov	r1, r8
 8010e02:	f7fe fa2b 	bl	800f25c <GUI_DrawVLine>
 8010e06:	69a0      	ldr	r0, [r4, #24]
 8010e08:	69e2      	ldr	r2, [r4, #28]
 8010e0a:	4641      	mov	r1, r8
 8010e0c:	f7fe fa26 	bl	800f25c <GUI_DrawVLine>
 8010e10:	6921      	ldr	r1, [r4, #16]
 8010e12:	69a2      	ldr	r2, [r4, #24]
 8010e14:	69e0      	ldr	r0, [r4, #28]
 8010e16:	3101      	adds	r1, #1
 8010e18:	3a01      	subs	r2, #1
 8010e1a:	f7fe fcad 	bl	800f778 <GUI_DrawHLine>
 8010e1e:	6868      	ldr	r0, [r5, #4]
 8010e20:	f7fe f846 	bl	800eeb0 <GUI_SetColor>
 8010e24:	6922      	ldr	r2, [r4, #16]
 8010e26:	f10a 0a02 	add.w	sl, sl, #2
 8010e2a:	1990      	adds	r0, r2, r6
 8010e2c:	3801      	subs	r0, #1
 8010e2e:	4651      	mov	r1, sl
 8010e30:	3201      	adds	r2, #1
 8010e32:	463b      	mov	r3, r7
 8010e34:	f7fe fc6c 	bl	800f710 <GUI_DrawLine>
 8010e38:	69a2      	ldr	r2, [r4, #24]
 8010e3a:	1b90      	subs	r0, r2, r6
 8010e3c:	463b      	mov	r3, r7
 8010e3e:	3001      	adds	r0, #1
 8010e40:	4651      	mov	r1, sl
 8010e42:	3a01      	subs	r2, #1
 8010e44:	f7fe fc64 	bl	800f710 <GUI_DrawLine>
 8010e48:	6920      	ldr	r0, [r4, #16]
 8010e4a:	69e2      	ldr	r2, [r4, #28]
 8010e4c:	3001      	adds	r0, #1
 8010e4e:	4641      	mov	r1, r8
 8010e50:	3a01      	subs	r2, #1
 8010e52:	f7fe fa03 	bl	800f25c <GUI_DrawVLine>
 8010e56:	69a0      	ldr	r0, [r4, #24]
 8010e58:	69e2      	ldr	r2, [r4, #28]
 8010e5a:	3801      	subs	r0, #1
 8010e5c:	4641      	mov	r1, r8
 8010e5e:	3a01      	subs	r2, #1
 8010e60:	f7fe f9fc 	bl	800f25c <GUI_DrawVLine>
 8010e64:	69e0      	ldr	r0, [r4, #28]
 8010e66:	6921      	ldr	r1, [r4, #16]
 8010e68:	69a2      	ldr	r2, [r4, #24]
 8010e6a:	3801      	subs	r0, #1
 8010e6c:	3102      	adds	r1, #2
 8010e6e:	3a02      	subs	r2, #2
 8010e70:	f7fe fc82 	bl	800f778 <GUI_DrawHLine>
 8010e74:	68a9      	ldr	r1, [r5, #8]
 8010e76:	6920      	ldr	r0, [r4, #16]
 8010e78:	69a2      	ldr	r2, [r4, #24]
 8010e7a:	69e3      	ldr	r3, [r4, #28]
 8010e7c:	9100      	str	r1, [sp, #0]
 8010e7e:	68e9      	ldr	r1, [r5, #12]
 8010e80:	9101      	str	r1, [sp, #4]
 8010e82:	3002      	adds	r0, #2
 8010e84:	4639      	mov	r1, r7
 8010e86:	3a02      	subs	r2, #2
 8010e88:	3b02      	subs	r3, #2
 8010e8a:	f003 fea7 	bl	8014bdc <GUI_DrawGradientV>
 8010e8e:	68a8      	ldr	r0, [r5, #8]
 8010e90:	f7fe f80e 	bl	800eeb0 <GUI_SetColor>
 8010e94:	2502      	movs	r5, #2
 8010e96:	1e73      	subs	r3, r6, #1
 8010e98:	429d      	cmp	r5, r3
 8010e9a:	da5d      	bge.n	8010f58 <SLIDER_DrawSkinFlex+0x3bc>
 8010e9c:	6923      	ldr	r3, [r4, #16]
 8010e9e:	4433      	add	r3, r6
 8010ea0:	1b59      	subs	r1, r3, r5
 8010ea2:	69a3      	ldr	r3, [r4, #24]
 8010ea4:	1b9b      	subs	r3, r3, r6
 8010ea6:	195a      	adds	r2, r3, r5
 8010ea8:	eb09 0005 	add.w	r0, r9, r5
 8010eac:	3101      	adds	r1, #1
 8010eae:	3a01      	subs	r2, #1
 8010eb0:	f7fe fc62 	bl	800f778 <GUI_DrawHLine>
 8010eb4:	3501      	adds	r5, #1
 8010eb6:	e7ee      	b.n	8010e96 <SLIDER_DrawSkinFlex+0x2fa>
 8010eb8:	691e      	ldr	r6, [r3, #16]
 8010eba:	69e8      	ldr	r0, [r5, #28]
 8010ebc:	b1d6      	cbz	r6, 8010ef4 <SLIDER_DrawSkinFlex+0x358>
 8010ebe:	f7fd fff7 	bl	800eeb0 <GUI_SetColor>
 8010ec2:	6a27      	ldr	r7, [r4, #32]
 8010ec4:	2600      	movs	r6, #0
 8010ec6:	687b      	ldr	r3, [r7, #4]
 8010ec8:	429e      	cmp	r6, r3
 8010eca:	da45      	bge.n	8010f58 <SLIDER_DrawSkinFlex+0x3bc>
 8010ecc:	6839      	ldr	r1, [r7, #0]
 8010ece:	69a2      	ldr	r2, [r4, #24]
 8010ed0:	2002      	movs	r0, #2
 8010ed2:	fb91 f0f0 	sdiv	r0, r1, r0
 8010ed6:	6961      	ldr	r1, [r4, #20]
 8010ed8:	4408      	add	r0, r1
 8010eda:	68b9      	ldr	r1, [r7, #8]
 8010edc:	3b01      	subs	r3, #1
 8010ede:	4371      	muls	r1, r6
 8010ee0:	fb91 f3f3 	sdiv	r3, r1, r3
 8010ee4:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8010ee6:	1a51      	subs	r1, r2, r1
 8010ee8:	4418      	add	r0, r3
 8010eea:	3101      	adds	r1, #1
 8010eec:	f7fe fc44 	bl	800f778 <GUI_DrawHLine>
 8010ef0:	3601      	adds	r6, #1
 8010ef2:	e7e8      	b.n	8010ec6 <SLIDER_DrawSkinFlex+0x32a>
 8010ef4:	f7fd ffdc 	bl	800eeb0 <GUI_SetColor>
 8010ef8:	6a27      	ldr	r7, [r4, #32]
 8010efa:	687b      	ldr	r3, [r7, #4]
 8010efc:	429e      	cmp	r6, r3
 8010efe:	da2b      	bge.n	8010f58 <SLIDER_DrawSkinFlex+0x3bc>
 8010f00:	683a      	ldr	r2, [r7, #0]
 8010f02:	6961      	ldr	r1, [r4, #20]
 8010f04:	2002      	movs	r0, #2
 8010f06:	fb92 f0f0 	sdiv	r0, r2, r0
 8010f0a:	6922      	ldr	r2, [r4, #16]
 8010f0c:	4410      	add	r0, r2
 8010f0e:	68ba      	ldr	r2, [r7, #8]
 8010f10:	3b01      	subs	r3, #1
 8010f12:	4372      	muls	r2, r6
 8010f14:	fb92 f3f3 	sdiv	r3, r2, r3
 8010f18:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8010f1a:	440a      	add	r2, r1
 8010f1c:	4418      	add	r0, r3
 8010f1e:	3a01      	subs	r2, #1
 8010f20:	f7fe f99c 	bl	800f25c <GUI_DrawVLine>
 8010f24:	3601      	adds	r6, #1
 8010f26:	e7e8      	b.n	8010efa <SLIDER_DrawSkinFlex+0x35e>
 8010f28:	6800      	ldr	r0, [r0, #0]
 8010f2a:	2101      	movs	r1, #1
 8010f2c:	f7f7 fa88 	bl	8008440 <SLIDER_GetFlag>
 8010f30:	b190      	cbz	r0, 8010f58 <SLIDER_DrawSkinFlex+0x3bc>
 8010f32:	6a28      	ldr	r0, [r5, #32]
 8010f34:	f7fd ffbc 	bl	800eeb0 <GUI_SetColor>
 8010f38:	6923      	ldr	r3, [r4, #16]
 8010f3a:	f8ad 3008 	strh.w	r3, [sp, #8]
 8010f3e:	6963      	ldr	r3, [r4, #20]
 8010f40:	f8ad 300a 	strh.w	r3, [sp, #10]
 8010f44:	69a3      	ldr	r3, [r4, #24]
 8010f46:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010f4a:	a802      	add	r0, sp, #8
 8010f4c:	69e3      	ldr	r3, [r4, #28]
 8010f4e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010f52:	2100      	movs	r1, #0
 8010f54:	f7fe fc34 	bl	800f7c0 <GUI_DrawFocusRect>
 8010f58:	2000      	movs	r0, #0
 8010f5a:	b004      	add	sp, #16
 8010f5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08010f60 <_Create>:
 8010f60:	b530      	push	{r4, r5, lr}
 8010f62:	b08b      	sub	sp, #44	; 0x2c
 8010f64:	4605      	mov	r5, r0
 8010f66:	f7ff fa6b 	bl	8010440 <GUI_ALLOC_LockH>
 8010f6a:	ab0a      	add	r3, sp, #40	; 0x28
 8010f6c:	6c84      	ldr	r4, [r0, #72]	; 0x48
 8010f6e:	f843 0d28 	str.w	r0, [r3, #-40]!
 8010f72:	4668      	mov	r0, sp
 8010f74:	f7ff fa72 	bl	801045c <GUI_ALLOC_UnlockH>
 8010f78:	2300      	movs	r3, #0
 8010f7a:	9302      	str	r3, [sp, #8]
 8010f7c:	9501      	str	r5, [sp, #4]
 8010f7e:	9309      	str	r3, [sp, #36]	; 0x24
 8010f80:	a801      	add	r0, sp, #4
 8010f82:	47a0      	blx	r4
 8010f84:	b00b      	add	sp, #44	; 0x2c
 8010f86:	bd30      	pop	{r4, r5, pc}

08010f88 <_Paint>:
 8010f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f8c:	b097      	sub	sp, #92	; 0x5c
 8010f8e:	4607      	mov	r7, r0
 8010f90:	f7ff fa56 	bl	8010440 <GUI_ALLOC_LockH>
 8010f94:	f100 0350 	add.w	r3, r0, #80	; 0x50
 8010f98:	e893 0168 	ldmia.w	r3, {r3, r5, r6, r8}
 8010f9c:	9309      	str	r3, [sp, #36]	; 0x24
 8010f9e:	f9b0 3060 	ldrsh.w	r3, [r0, #96]	; 0x60
 8010fa2:	9308      	str	r3, [sp, #32]
 8010fa4:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8010fa6:	9003      	str	r0, [sp, #12]
 8010fa8:	f3c3 2200 	ubfx	r2, r3, #8, #1
 8010fac:	6c84      	ldr	r4, [r0, #72]	; 0x48
 8010fae:	920b      	str	r2, [sp, #44]	; 0x2c
 8010fb0:	a803      	add	r0, sp, #12
 8010fb2:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 8010fb6:	f003 0301 	and.w	r3, r3, #1
 8010fba:	920c      	str	r2, [sp, #48]	; 0x30
 8010fbc:	9301      	str	r3, [sp, #4]
 8010fbe:	f7ff fa4d 	bl	801045c <GUI_ALLOC_UnlockH>
 8010fc2:	a904      	add	r1, sp, #16
 8010fc4:	4638      	mov	r0, r7
 8010fc6:	f7f8 feb4 	bl	8009d32 <WM_GetClientRectEx>
 8010fca:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8010fce:	f9bd c016 	ldrsh.w	ip, [sp, #22]
 8010fd2:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8010fd6:	9b08      	ldr	r3, [sp, #32]
 8010fd8:	f9bd e014 	ldrsh.w	lr, [sp, #20]
 8010fdc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8010fe0:	42b5      	cmp	r5, r6
 8010fe2:	bf14      	ite	ne
 8010fe4:	ebc6 0505 	rsbne	r5, r6, r5
 8010fe8:	2501      	moveq	r5, #1
 8010fea:	f1ba 0f00 	cmp.w	sl, #0
 8010fee:	d002      	beq.n	8010ff6 <_Paint+0x6e>
 8010ff0:	ebc1 090c 	rsb	r9, r1, ip
 8010ff4:	e001      	b.n	8010ffa <_Paint+0x72>
 8010ff6:	ebc2 090e 	rsb	r9, r2, lr
 8010ffa:	43d8      	mvns	r0, r3
 8010ffc:	4481      	add	r9, r0
 8010ffe:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011000:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8011004:	2800      	cmp	r0, #0
 8011006:	da08      	bge.n	801101a <_Paint+0x92>
 8011008:	f04f 0b05 	mov.w	fp, #5
 801100c:	1c68      	adds	r0, r5, #1
 801100e:	fb99 f9fb 	sdiv	r9, r9, fp
 8011012:	4548      	cmp	r0, r9
 8011014:	bfc8      	it	gt
 8011016:	200b      	movgt	r0, #11
 8011018:	9009      	str	r0, [sp, #36]	; 0x24
 801101a:	ebc6 0608 	rsb	r6, r6, r8
 801101e:	f1ba 0f00 	cmp.w	sl, #0
 8011022:	d003      	beq.n	801102c <_Paint+0xa4>
 8011024:	1c48      	adds	r0, r1, #1
 8011026:	ebc1 080c 	rsb	r8, r1, ip
 801102a:	e002      	b.n	8011032 <_Paint+0xaa>
 801102c:	1c50      	adds	r0, r2, #1
 801102e:	ebc2 080e 	rsb	r8, r2, lr
 8011032:	f108 38ff 	add.w	r8, r8, #4294967295
 8011036:	ebc3 0808 	rsb	r8, r3, r8
 801103a:	fb06 f608 	mul.w	r6, r6, r8
 801103e:	fb96 f6f5 	sdiv	r6, r6, r5
 8011042:	4605      	mov	r5, r0
 8011044:	4435      	add	r5, r6
 8011046:	442b      	add	r3, r5
 8011048:	1e5e      	subs	r6, r3, #1
 801104a:	ab08      	add	r3, sp, #32
 801104c:	f10e 30ff 	add.w	r0, lr, #4294967295
 8011050:	9315      	str	r3, [sp, #84]	; 0x54
 8011052:	230f      	movs	r3, #15
 8011054:	3101      	adds	r1, #1
 8011056:	3201      	adds	r2, #1
 8011058:	930e      	str	r3, [sp, #56]	; 0x38
 801105a:	9013      	str	r0, [sp, #76]	; 0x4c
 801105c:	f10c 33ff 	add.w	r3, ip, #4294967295
 8011060:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011064:	a806      	add	r0, sp, #24
 8011066:	9314      	str	r3, [sp, #80]	; 0x50
 8011068:	f8ad 301e 	strh.w	r3, [sp, #30]
 801106c:	9112      	str	r1, [sp, #72]	; 0x48
 801106e:	9211      	str	r2, [sp, #68]	; 0x44
 8011070:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011074:	f8ad 101a 	strh.w	r1, [sp, #26]
 8011078:	970d      	str	r7, [sp, #52]	; 0x34
 801107a:	f7f8 fa43 	bl	8009504 <WM_SetUserClipRect>
 801107e:	a80d      	add	r0, sp, #52	; 0x34
 8011080:	47a0      	blx	r4
 8011082:	2000      	movs	r0, #0
 8011084:	f7f8 fa3e 	bl	8009504 <WM_SetUserClipRect>
 8011088:	2313      	movs	r3, #19
 801108a:	930e      	str	r3, [sp, #56]	; 0x38
 801108c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801108e:	b113      	cbz	r3, 8011096 <_Paint+0x10e>
 8011090:	9512      	str	r5, [sp, #72]	; 0x48
 8011092:	9614      	str	r6, [sp, #80]	; 0x50
 8011094:	e001      	b.n	801109a <_Paint+0x112>
 8011096:	9511      	str	r5, [sp, #68]	; 0x44
 8011098:	9613      	str	r6, [sp, #76]	; 0x4c
 801109a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801109c:	f8ad 3018 	strh.w	r3, [sp, #24]
 80110a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80110a2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80110a6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80110a8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80110ac:	a806      	add	r0, sp, #24
 80110ae:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80110b0:	f8ad 301e 	strh.w	r3, [sp, #30]
 80110b4:	f7f8 fa26 	bl	8009504 <WM_SetUserClipRect>
 80110b8:	a80d      	add	r0, sp, #52	; 0x34
 80110ba:	47a0      	blx	r4
 80110bc:	2000      	movs	r0, #0
 80110be:	f7f8 fa21 	bl	8009504 <WM_SetUserClipRect>
 80110c2:	2314      	movs	r3, #20
 80110c4:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 80110c8:	930e      	str	r3, [sp, #56]	; 0x38
 80110ca:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80110ce:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80110d2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80110d6:	3001      	adds	r0, #1
 80110d8:	3b01      	subs	r3, #1
 80110da:	3101      	adds	r1, #1
 80110dc:	3a01      	subs	r2, #1
 80110de:	9011      	str	r0, [sp, #68]	; 0x44
 80110e0:	f8ad 0018 	strh.w	r0, [sp, #24]
 80110e4:	a806      	add	r0, sp, #24
 80110e6:	9314      	str	r3, [sp, #80]	; 0x50
 80110e8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80110ec:	9112      	str	r1, [sp, #72]	; 0x48
 80110ee:	9213      	str	r2, [sp, #76]	; 0x4c
 80110f0:	f8ad 101a 	strh.w	r1, [sp, #26]
 80110f4:	f8ad 201c 	strh.w	r2, [sp, #28]
 80110f8:	f7f8 fa04 	bl	8009504 <WM_SetUserClipRect>
 80110fc:	a80d      	add	r0, sp, #52	; 0x34
 80110fe:	47a0      	blx	r4
 8011100:	2000      	movs	r0, #0
 8011102:	f7f8 f9ff 	bl	8009504 <WM_SetUserClipRect>
 8011106:	9b01      	ldr	r3, [sp, #4]
 8011108:	b30b      	cbz	r3, 801114e <_Paint+0x1c6>
 801110a:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 801110e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8011112:	f8ad 0018 	strh.w	r0, [sp, #24]
 8011116:	230a      	movs	r3, #10
 8011118:	930e      	str	r3, [sp, #56]	; 0x38
 801111a:	b20b      	sxth	r3, r1
 801111c:	9312      	str	r3, [sp, #72]	; 0x48
 801111e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8011122:	f8ad 101a 	strh.w	r1, [sp, #26]
 8011126:	b21a      	sxth	r2, r3
 8011128:	9214      	str	r2, [sp, #80]	; 0x50
 801112a:	b202      	sxth	r2, r0
 801112c:	9211      	str	r2, [sp, #68]	; 0x44
 801112e:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011132:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011136:	b215      	sxth	r5, r2
 8011138:	a806      	add	r0, sp, #24
 801113a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801113e:	9513      	str	r5, [sp, #76]	; 0x4c
 8011140:	f7f8 f9e0 	bl	8009504 <WM_SetUserClipRect>
 8011144:	a80d      	add	r0, sp, #52	; 0x34
 8011146:	47a0      	blx	r4
 8011148:	2000      	movs	r0, #0
 801114a:	f7f8 f9db 	bl	8009504 <WM_SetUserClipRect>
 801114e:	b017      	add	sp, #92	; 0x5c
 8011150:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011154 <SCROLLBAR_GetValue>:
 8011154:	b513      	push	{r0, r1, r4, lr}
 8011156:	4604      	mov	r4, r0
 8011158:	b140      	cbz	r0, 801116c <SCROLLBAR_GetValue+0x18>
 801115a:	f7ff f971 	bl	8010440 <GUI_ALLOC_LockH>
 801115e:	ab02      	add	r3, sp, #8
 8011160:	6d04      	ldr	r4, [r0, #80]	; 0x50
 8011162:	f843 0d04 	str.w	r0, [r3, #-4]!
 8011166:	4618      	mov	r0, r3
 8011168:	f7ff f978 	bl	801045c <GUI_ALLOC_UnlockH>
 801116c:	4620      	mov	r0, r4
 801116e:	b002      	add	sp, #8
 8011170:	bd10      	pop	{r4, pc}

08011172 <SCROLLBAR_CreateAttached>:
 8011172:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011174:	f001 0308 	and.w	r3, r1, #8
 8011178:	2b00      	cmp	r3, #0
 801117a:	f240 348a 	movw	r4, #906	; 0x38a
 801117e:	f240 528a 	movw	r2, #1418	; 0x58a
 8011182:	bf08      	it	eq
 8011184:	4622      	moveq	r2, r4
 8011186:	bf0c      	ite	eq
 8011188:	23ff      	moveq	r3, #255	; 0xff
 801118a:	23fe      	movne	r3, #254	; 0xfe
 801118c:	e88d 0005 	stmia.w	sp, {r0, r2}
 8011190:	2000      	movs	r0, #0
 8011192:	9102      	str	r1, [sp, #8]
 8011194:	9303      	str	r3, [sp, #12]
 8011196:	4602      	mov	r2, r0
 8011198:	4603      	mov	r3, r0
 801119a:	4601      	mov	r1, r0
 801119c:	f000 f8ae 	bl	80112fc <SCROLLBAR_CreateEx>
 80111a0:	2106      	movs	r1, #6
 80111a2:	4604      	mov	r4, r0
 80111a4:	f7f8 fb9d 	bl	80098e2 <WM_NotifyParent>
 80111a8:	4620      	mov	r0, r4
 80111aa:	b004      	add	sp, #16
 80111ac:	bd10      	pop	{r4, pc}

080111ae <_DeleteTimer>:
 80111ae:	b507      	push	{r0, r1, r2, lr}
 80111b0:	f7ff f946 	bl	8010440 <GUI_ALLOC_LockH>
 80111b4:	9001      	str	r0, [sp, #4]
 80111b6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80111b8:	f000 ffb6 	bl	8012128 <WM_DeleteTimer>
 80111bc:	a802      	add	r0, sp, #8
 80111be:	2200      	movs	r2, #0
 80111c0:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80111c4:	665a      	str	r2, [r3, #100]	; 0x64
 80111c6:	65da      	str	r2, [r3, #92]	; 0x5c
 80111c8:	f7ff f948 	bl	801045c <GUI_ALLOC_UnlockH>
 80111cc:	b003      	add	sp, #12
 80111ce:	f85d fb04 	ldr.w	pc, [sp], #4

080111d2 <SCROLLBAR__Rect2VRect>:
 80111d2:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80111d4:	071b      	lsls	r3, r3, #28
 80111d6:	b510      	push	{r4, lr}
 80111d8:	d512      	bpl.n	8011200 <SCROLLBAR__Rect2VRect+0x2e>
 80111da:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80111de:	f9b0 3000 	ldrsh.w	r3, [r0]
 80111e2:	8808      	ldrh	r0, [r1, #0]
 80111e4:	884c      	ldrh	r4, [r1, #2]
 80111e6:	800c      	strh	r4, [r1, #0]
 80111e8:	1ad3      	subs	r3, r2, r3
 80111ea:	888a      	ldrh	r2, [r1, #4]
 80111ec:	88cc      	ldrh	r4, [r1, #6]
 80111ee:	808c      	strh	r4, [r1, #4]
 80111f0:	3301      	adds	r3, #1
 80111f2:	b29b      	uxth	r3, r3
 80111f4:	43c0      	mvns	r0, r0
 80111f6:	43d2      	mvns	r2, r2
 80111f8:	4418      	add	r0, r3
 80111fa:	4413      	add	r3, r2
 80111fc:	80c8      	strh	r0, [r1, #6]
 80111fe:	804b      	strh	r3, [r1, #2]
 8011200:	bd10      	pop	{r4, pc}

08011202 <SCROLLBAR__InvalidatePartner>:
 8011202:	b510      	push	{r4, lr}
 8011204:	4604      	mov	r4, r0
 8011206:	f001 f8ca 	bl	801239e <WM_GetScrollPartner>
 801120a:	f7f9 fa8c 	bl	800a726 <WM_InvalidateWindow>
 801120e:	4620      	mov	r0, r4
 8011210:	f7f8 fc92 	bl	8009b38 <WM_GetParent>
 8011214:	2125      	movs	r1, #37	; 0x25
 8011216:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801121a:	f7f8 bae5 	b.w	80097e8 <WM_SendMessageNoPara>
	...

08011220 <SCROLLBAR_CreateUser>:
 8011220:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011222:	b089      	sub	sp, #36	; 0x24
 8011224:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8011226:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8011228:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801122a:	b9fa      	cbnz	r2, 801126c <SCROLLBAR_CreateUser+0x4c>
 801122c:	b9f3      	cbnz	r3, 801126c <SCROLLBAR_CreateUser+0x4c>
 801122e:	4630      	mov	r0, r6
 8011230:	a906      	add	r1, sp, #24
 8011232:	f7f8 fcfd 	bl	8009c30 <WM_GetInsideRectEx>
 8011236:	f014 0f08 	tst.w	r4, #8
 801123a:	4b2c      	ldr	r3, [pc, #176]	; (80112ec <SCROLLBAR_CreateUser+0xcc>)
 801123c:	f9bd 701c 	ldrsh.w	r7, [sp, #28]
 8011240:	f9bd e01e 	ldrsh.w	lr, [sp, #30]
 8011244:	d009      	beq.n	801125a <SCROLLBAR_CreateUser+0x3a>
 8011246:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 801124a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801124e:	1c78      	adds	r0, r7, #1
 8011250:	ebc1 030e 	rsb	r3, r1, lr
 8011254:	1a80      	subs	r0, r0, r2
 8011256:	3301      	adds	r3, #1
 8011258:	e008      	b.n	801126c <SCROLLBAR_CreateUser+0x4c>
 801125a:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 801125e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011262:	f10e 0101 	add.w	r1, lr, #1
 8011266:	1a3a      	subs	r2, r7, r0
 8011268:	1ac9      	subs	r1, r1, r3
 801126a:	3201      	adds	r2, #1
 801126c:	9600      	str	r6, [sp, #0]
 801126e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8011270:	9601      	str	r6, [sp, #4]
 8011272:	4e1f      	ldr	r6, [pc, #124]	; (80112f0 <SCROLLBAR_CreateUser+0xd0>)
 8011274:	9602      	str	r6, [sp, #8]
 8011276:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8011278:	363c      	adds	r6, #60	; 0x3c
 801127a:	9603      	str	r6, [sp, #12]
 801127c:	f7f9 fa94 	bl	800a7a8 <WM_CreateWindowAsChild>
 8011280:	4606      	mov	r6, r0
 8011282:	2800      	cmp	r0, #0
 8011284:	d02f      	beq.n	80112e6 <SCROLLBAR_CreateUser+0xc6>
 8011286:	f7ff f8db 	bl	8010440 <GUI_ALLOC_LockH>
 801128a:	f004 0208 	and.w	r2, r4, #8
 801128e:	06e3      	lsls	r3, r4, #27
 8011290:	bf48      	it	mi
 8011292:	f042 0210 	orrmi.w	r2, r2, #16
 8011296:	f1a5 03fe 	sub.w	r3, r5, #254	; 0xfe
 801129a:	bf48      	it	mi
 801129c:	b292      	uxthmi	r2, r2
 801129e:	2b01      	cmp	r3, #1
 80112a0:	bf88      	it	hi
 80112a2:	f042 0210 	orrhi.w	r2, r2, #16
 80112a6:	4629      	mov	r1, r5
 80112a8:	9005      	str	r0, [sp, #20]
 80112aa:	f7f6 fe7b 	bl	8007fa4 <WIDGET__Init>
 80112ae:	4b11      	ldr	r3, [pc, #68]	; (80112f4 <SCROLLBAR_CreateUser+0xd4>)
 80112b0:	af08      	add	r7, sp, #32
 80112b2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80112b4:	f857 4d0c 	ldr.w	r4, [r7, #-12]!
 80112b8:	f104 0534 	add.w	r5, r4, #52	; 0x34
 80112bc:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80112c0:	2364      	movs	r3, #100	; 0x64
 80112c2:	64e3      	str	r3, [r4, #76]	; 0x4c
 80112c4:	4d0c      	ldr	r5, [pc, #48]	; (80112f8 <SCROLLBAR_CreateUser+0xd8>)
 80112c6:	230a      	movs	r3, #10
 80112c8:	6563      	str	r3, [r4, #84]	; 0x54
 80112ca:	2300      	movs	r3, #0
 80112cc:	6523      	str	r3, [r4, #80]	; 0x50
 80112ce:	682b      	ldr	r3, [r5, #0]
 80112d0:	6463      	str	r3, [r4, #68]	; 0x44
 80112d2:	4638      	mov	r0, r7
 80112d4:	f7ff f8c2 	bl	801045c <GUI_ALLOC_UnlockH>
 80112d8:	682b      	ldr	r3, [r5, #0]
 80112da:	4630      	mov	r0, r6
 80112dc:	685b      	ldr	r3, [r3, #4]
 80112de:	4798      	blx	r3
 80112e0:	4630      	mov	r0, r6
 80112e2:	f7ff ff8e 	bl	8011202 <SCROLLBAR__InvalidatePartner>
 80112e6:	4630      	mov	r0, r6
 80112e8:	b009      	add	sp, #36	; 0x24
 80112ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80112ec:	200002d8 	.word	0x200002d8
 80112f0:	0801139f 	.word	0x0801139f
 80112f4:	200002c4 	.word	0x200002c4
 80112f8:	200002d4 	.word	0x200002d4

080112fc <SCROLLBAR_CreateEx>:
 80112fc:	b510      	push	{r4, lr}
 80112fe:	b086      	sub	sp, #24
 8011300:	9c08      	ldr	r4, [sp, #32]
 8011302:	9400      	str	r4, [sp, #0]
 8011304:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8011306:	9401      	str	r4, [sp, #4]
 8011308:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801130a:	9402      	str	r4, [sp, #8]
 801130c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801130e:	9403      	str	r4, [sp, #12]
 8011310:	2400      	movs	r4, #0
 8011312:	9404      	str	r4, [sp, #16]
 8011314:	f7ff ff84 	bl	8011220 <SCROLLBAR_CreateUser>
 8011318:	b006      	add	sp, #24
 801131a:	bd10      	pop	{r4, pc}

0801131c <SCROLLBAR_SetValue>:
 801131c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801131e:	460c      	mov	r4, r1
 8011320:	4605      	mov	r5, r0
 8011322:	b300      	cbz	r0, 8011366 <SCROLLBAR_SetValue+0x4a>
 8011324:	f7ff f88c 	bl	8010440 <GUI_ALLOC_LockH>
 8011328:	2c00      	cmp	r4, #0
 801132a:	9001      	str	r0, [sp, #4]
 801132c:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 801132e:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8011330:	db05      	blt.n	801133e <SCROLLBAR_SetValue+0x22>
 8011332:	1a8a      	subs	r2, r1, r2
 8011334:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8011338:	4294      	cmp	r4, r2
 801133a:	dc02      	bgt.n	8011342 <SCROLLBAR_SetValue+0x26>
 801133c:	e000      	b.n	8011340 <SCROLLBAR_SetValue+0x24>
 801133e:	2400      	movs	r4, #0
 8011340:	4622      	mov	r2, r4
 8011342:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8011344:	4291      	cmp	r1, r2
 8011346:	d00b      	beq.n	8011360 <SCROLLBAR_SetValue+0x44>
 8011348:	6502      	str	r2, [r0, #80]	; 0x50
 801134a:	4628      	mov	r0, r5
 801134c:	f7f9 f9eb 	bl	800a726 <WM_InvalidateWindow>
 8011350:	a801      	add	r0, sp, #4
 8011352:	f7ff f883 	bl	801045c <GUI_ALLOC_UnlockH>
 8011356:	4628      	mov	r0, r5
 8011358:	2105      	movs	r1, #5
 801135a:	f7f8 fac2 	bl	80098e2 <WM_NotifyParent>
 801135e:	e002      	b.n	8011366 <SCROLLBAR_SetValue+0x4a>
 8011360:	a801      	add	r0, sp, #4
 8011362:	f7ff f87b 	bl	801045c <GUI_ALLOC_UnlockH>
 8011366:	b003      	add	sp, #12
 8011368:	bd30      	pop	{r4, r5, pc}

0801136a <SCROLLBAR_AddValue>:
 801136a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801136c:	460d      	mov	r5, r1
 801136e:	4606      	mov	r6, r0
 8011370:	b160      	cbz	r0, 801138c <SCROLLBAR_AddValue+0x22>
 8011372:	f7ff f865 	bl	8010440 <GUI_ALLOC_LockH>
 8011376:	4602      	mov	r2, r0
 8011378:	a802      	add	r0, sp, #8
 801137a:	6d14      	ldr	r4, [r2, #80]	; 0x50
 801137c:	f840 2d04 	str.w	r2, [r0, #-4]!
 8011380:	f7ff f86c 	bl	801045c <GUI_ALLOC_UnlockH>
 8011384:	4630      	mov	r0, r6
 8011386:	1961      	adds	r1, r4, r5
 8011388:	f7ff ffc8 	bl	801131c <SCROLLBAR_SetValue>
 801138c:	b002      	add	sp, #8
 801138e:	bd70      	pop	{r4, r5, r6, pc}

08011390 <SCROLLBAR_Dec>:
 8011390:	f04f 31ff 	mov.w	r1, #4294967295
 8011394:	f7ff bfe9 	b.w	801136a <SCROLLBAR_AddValue>

08011398 <SCROLLBAR_Inc>:
 8011398:	2101      	movs	r1, #1
 801139a:	f7ff bfe6 	b.w	801136a <SCROLLBAR_AddValue>

0801139e <SCROLLBAR_Callback>:
 801139e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113a2:	6844      	ldr	r4, [r0, #4]
 80113a4:	4680      	mov	r8, r0
 80113a6:	b08f      	sub	sp, #60	; 0x3c
 80113a8:	4620      	mov	r0, r4
 80113aa:	4641      	mov	r1, r8
 80113ac:	f7f6 fe02 	bl	8007fb4 <WIDGET_HandleActive>
 80113b0:	2800      	cmp	r0, #0
 80113b2:	f000 81c0 	beq.w	8011736 <SCROLLBAR_Callback+0x398>
 80113b6:	f8d8 3000 	ldr.w	r3, [r8]
 80113ba:	2b23      	cmp	r3, #35	; 0x23
 80113bc:	f000 8182 	beq.w	80116c4 <SCROLLBAR_Callback+0x326>
 80113c0:	dc0b      	bgt.n	80113da <SCROLLBAR_Callback+0x3c>
 80113c2:	2b0e      	cmp	r3, #14
 80113c4:	f000 812a 	beq.w	801161c <SCROLLBAR_Callback+0x27e>
 80113c8:	2b0f      	cmp	r3, #15
 80113ca:	d012      	beq.n	80113f2 <SCROLLBAR_Callback+0x54>
 80113cc:	2b0b      	cmp	r3, #11
 80113ce:	f040 81af 	bne.w	8011730 <SCROLLBAR_Callback+0x392>
 80113d2:	4620      	mov	r0, r4
 80113d4:	f7ff ff15 	bl	8011202 <SCROLLBAR__InvalidatePartner>
 80113d8:	e1aa      	b.n	8011730 <SCROLLBAR_Callback+0x392>
 80113da:	f240 1213 	movw	r2, #275	; 0x113
 80113de:	4293      	cmp	r3, r2
 80113e0:	f000 817f 	beq.w	80116e2 <SCROLLBAR_Callback+0x344>
 80113e4:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 80113e8:	d012      	beq.n	8011410 <SCROLLBAR_Callback+0x72>
 80113ea:	2b24      	cmp	r3, #36	; 0x24
 80113ec:	f040 81a0 	bne.w	8011730 <SCROLLBAR_Callback+0x392>
 80113f0:	e143      	b.n	801167a <SCROLLBAR_Callback+0x2dc>
 80113f2:	4620      	mov	r0, r4
 80113f4:	f7ff f824 	bl	8010440 <GUI_ALLOC_LockH>
 80113f8:	9005      	str	r0, [sp, #20]
 80113fa:	2800      	cmp	r0, #0
 80113fc:	f000 819b 	beq.w	8011736 <SCROLLBAR_Callback+0x398>
 8011400:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8011402:	a805      	add	r0, sp, #20
 8011404:	681d      	ldr	r5, [r3, #0]
 8011406:	f7ff f829 	bl	801045c <GUI_ALLOC_UnlockH>
 801140a:	4620      	mov	r0, r4
 801140c:	47a8      	blx	r5
 801140e:	e192      	b.n	8011736 <SCROLLBAR_Callback+0x398>
 8011410:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8011414:	2f00      	cmp	r7, #0
 8011416:	f000 818b 	beq.w	8011730 <SCROLLBAR_Callback+0x392>
 801141a:	7a3b      	ldrb	r3, [r7, #8]
 801141c:	4620      	mov	r0, r4
 801141e:	2b00      	cmp	r3, #0
 8011420:	f000 80d6 	beq.w	80115d0 <SCROLLBAR_Callback+0x232>
 8011424:	f7ff f80c 	bl	8010440 <GUI_ALLOC_LockH>
 8011428:	a905      	add	r1, sp, #20
 801142a:	6c83      	ldr	r3, [r0, #72]	; 0x48
 801142c:	9003      	str	r0, [sp, #12]
 801142e:	6d06      	ldr	r6, [r0, #80]	; 0x50
 8011430:	4620      	mov	r0, r4
 8011432:	4798      	blx	r3
 8011434:	9b03      	ldr	r3, [sp, #12]
 8011436:	f8b3 a032 	ldrh.w	sl, [r3, #50]	; 0x32
 801143a:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 801143c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801143e:	f01a 0f08 	tst.w	sl, #8
 8011442:	ebc5 0902 	rsb	r9, r5, r2
 8011446:	d003      	beq.n	8011450 <SCROLLBAR_Callback+0xb2>
 8011448:	e897 0006 	ldmia.w	r7, {r1, r2}
 801144c:	603a      	str	r2, [r7, #0]
 801144e:	6079      	str	r1, [r7, #4]
 8011450:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8011452:	683f      	ldr	r7, [r7, #0]
 8011454:	2a03      	cmp	r2, #3
 8011456:	d114      	bne.n	8011482 <SCROLLBAR_Callback+0xe4>
 8011458:	4620      	mov	r0, r4
 801145a:	f7ff fea8 	bl	80111ae <_DeleteTimer>
 801145e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011460:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011462:	2002      	movs	r0, #2
 8011464:	fb93 f3f0 	sdiv	r3, r3, r0
 8011468:	1aff      	subs	r7, r7, r3
 801146a:	9b06      	ldr	r3, [sp, #24]
 801146c:	1afb      	subs	r3, r7, r3
 801146e:	1e58      	subs	r0, r3, #1
 8011470:	fb00 f009 	mul.w	r0, r0, r9
 8011474:	f002 ff78 	bl	8014368 <GUI__DivideRound32>
 8011478:	9b03      	ldr	r3, [sp, #12]
 801147a:	4606      	mov	r6, r0
 801147c:	6618      	str	r0, [r3, #96]	; 0x60
 801147e:	a803      	add	r0, sp, #12
 8011480:	e07e      	b.n	8011580 <SCROLLBAR_Callback+0x1e2>
 8011482:	9806      	ldr	r0, [sp, #24]
 8011484:	4287      	cmp	r7, r0
 8011486:	dc0b      	bgt.n	80114a0 <SCROLLBAR_Callback+0x102>
 8011488:	2a02      	cmp	r2, #2
 801148a:	d039      	beq.n	8011500 <SCROLLBAR_Callback+0x162>
 801148c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801148e:	b113      	cbz	r3, 8011496 <SCROLLBAR_Callback+0xf8>
 8011490:	4620      	mov	r0, r4
 8011492:	f7ff fe8c 	bl	80111ae <_DeleteTimer>
 8011496:	9b03      	ldr	r3, [sp, #12]
 8011498:	2202      	movs	r2, #2
 801149a:	3e01      	subs	r6, #1
 801149c:	659a      	str	r2, [r3, #88]	; 0x58
 801149e:	e02f      	b.n	8011500 <SCROLLBAR_Callback+0x162>
 80114a0:	9907      	ldr	r1, [sp, #28]
 80114a2:	428f      	cmp	r7, r1
 80114a4:	da02      	bge.n	80114ac <SCROLLBAR_Callback+0x10e>
 80114a6:	1b76      	subs	r6, r6, r5
 80114a8:	426d      	negs	r5, r5
 80114aa:	e02f      	b.n	801150c <SCROLLBAR_Callback+0x16e>
 80114ac:	9908      	ldr	r1, [sp, #32]
 80114ae:	428f      	cmp	r7, r1
 80114b0:	dc12      	bgt.n	80114d8 <SCROLLBAR_Callback+0x13a>
 80114b2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80114b4:	2900      	cmp	r1, #0
 80114b6:	dd0b      	ble.n	80114d0 <SCROLLBAR_Callback+0x132>
 80114b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80114ba:	2202      	movs	r2, #2
 80114bc:	fb93 f3f2 	sdiv	r3, r3, r2
 80114c0:	1aff      	subs	r7, r7, r3
 80114c2:	1a3f      	subs	r7, r7, r0
 80114c4:	3f01      	subs	r7, #1
 80114c6:	fb07 f009 	mul.w	r0, r7, r9
 80114ca:	f002 ff4d 	bl	8014368 <GUI__DivideRound32>
 80114ce:	4606      	mov	r6, r0
 80114d0:	9b03      	ldr	r3, [sp, #12]
 80114d2:	2203      	movs	r2, #3
 80114d4:	659a      	str	r2, [r3, #88]	; 0x58
 80114d6:	e016      	b.n	8011506 <SCROLLBAR_Callback+0x168>
 80114d8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80114da:	428f      	cmp	r7, r1
 80114dc:	da01      	bge.n	80114e2 <SCROLLBAR_Callback+0x144>
 80114de:	442e      	add	r6, r5
 80114e0:	e014      	b.n	801150c <SCROLLBAR_Callback+0x16e>
 80114e2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80114e4:	428f      	cmp	r7, r1
 80114e6:	dc0e      	bgt.n	8011506 <SCROLLBAR_Callback+0x168>
 80114e8:	2a01      	cmp	r2, #1
 80114ea:	d00e      	beq.n	801150a <SCROLLBAR_Callback+0x16c>
 80114ec:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80114ee:	b113      	cbz	r3, 80114f6 <SCROLLBAR_Callback+0x158>
 80114f0:	4620      	mov	r0, r4
 80114f2:	f7ff fe5c 	bl	80111ae <_DeleteTimer>
 80114f6:	9b03      	ldr	r3, [sp, #12]
 80114f8:	2501      	movs	r5, #1
 80114fa:	3601      	adds	r6, #1
 80114fc:	659d      	str	r5, [r3, #88]	; 0x58
 80114fe:	e005      	b.n	801150c <SCROLLBAR_Callback+0x16e>
 8011500:	f04f 35ff 	mov.w	r5, #4294967295
 8011504:	e002      	b.n	801150c <SCROLLBAR_Callback+0x16e>
 8011506:	2500      	movs	r5, #0
 8011508:	e000      	b.n	801150c <SCROLLBAR_Callback+0x16e>
 801150a:	4615      	mov	r5, r2
 801150c:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8011510:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011512:	f8db 305c 	ldr.w	r3, [fp, #92]	; 0x5c
 8011516:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 801151a:	9a06      	ldr	r2, [sp, #24]
 801151c:	b171      	cbz	r1, 801153c <SCROLLBAR_Callback+0x19e>
 801151e:	2002      	movs	r0, #2
 8011520:	fb9e f0f0 	sdiv	r0, lr, r0
 8011524:	1a38      	subs	r0, r7, r0
 8011526:	1a80      	subs	r0, r0, r2
 8011528:	3801      	subs	r0, #1
 801152a:	fb00 f009 	mul.w	r0, r0, r9
 801152e:	9301      	str	r3, [sp, #4]
 8011530:	f002 ff1a 	bl	8014368 <GUI__DivideRound32>
 8011534:	9b01      	ldr	r3, [sp, #4]
 8011536:	f8cb 0060 	str.w	r0, [fp, #96]	; 0x60
 801153a:	e009      	b.n	8011550 <SCROLLBAR_Callback+0x1b2>
 801153c:	f8db 2058 	ldr.w	r2, [fp, #88]	; 0x58
 8011540:	2a01      	cmp	r2, #1
 8011542:	bf04      	itt	eq
 8011544:	f8db 104c 	ldreq.w	r1, [fp, #76]	; 0x4c
 8011548:	f101 31ff 	addeq.w	r1, r1, #4294967295
 801154c:	f8cb 1060 	str.w	r1, [fp, #96]	; 0x60
 8011550:	a803      	add	r0, sp, #12
 8011552:	9301      	str	r3, [sp, #4]
 8011554:	f7fe ff82 	bl	801045c <GUI_ALLOC_UnlockH>
 8011558:	9b01      	ldr	r3, [sp, #4]
 801155a:	b1a5      	cbz	r5, 8011586 <SCROLLBAR_Callback+0x1e8>
 801155c:	b9bb      	cbnz	r3, 801158e <SCROLLBAR_Callback+0x1f0>
 801155e:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8011562:	f240 41d2 	movw	r1, #1234	; 0x4d2
 8011566:	4620      	mov	r0, r4
 8011568:	f000 fe16 	bl	8012198 <WM_CreateTimer>
 801156c:	4607      	mov	r7, r0
 801156e:	4620      	mov	r0, r4
 8011570:	f7fe ff66 	bl	8010440 <GUI_ALLOC_LockH>
 8011574:	4602      	mov	r2, r0
 8011576:	a80e      	add	r0, sp, #56	; 0x38
 8011578:	f840 2d28 	str.w	r2, [r0, #-40]!
 801157c:	6657      	str	r7, [r2, #100]	; 0x64
 801157e:	65d5      	str	r5, [r2, #92]	; 0x5c
 8011580:	f7fe ff6c 	bl	801045c <GUI_ALLOC_UnlockH>
 8011584:	e003      	b.n	801158e <SCROLLBAR_Callback+0x1f0>
 8011586:	b113      	cbz	r3, 801158e <SCROLLBAR_Callback+0x1f0>
 8011588:	4620      	mov	r0, r4
 801158a:	f7ff fe10 	bl	80111ae <_DeleteTimer>
 801158e:	4620      	mov	r0, r4
 8011590:	2101      	movs	r1, #1
 8011592:	f7f8 f90d 	bl	80097b0 <WM_SetCapture>
 8011596:	4620      	mov	r0, r4
 8011598:	4631      	mov	r1, r6
 801159a:	f7ff febf 	bl	801131c <SCROLLBAR_SetValue>
 801159e:	f41a 7f80 	tst.w	sl, #256	; 0x100
 80115a2:	f040 80c5 	bne.w	8011730 <SCROLLBAR_Callback+0x392>
 80115a6:	4620      	mov	r0, r4
 80115a8:	f7fe ff4a 	bl	8010440 <GUI_ALLOC_LockH>
 80115ac:	ab0e      	add	r3, sp, #56	; 0x38
 80115ae:	6a85      	ldr	r5, [r0, #40]	; 0x28
 80115b0:	f843 0d28 	str.w	r0, [r3, #-40]!
 80115b4:	4618      	mov	r0, r3
 80115b6:	f7fe ff51 	bl	801045c <GUI_ALLOC_UnlockH>
 80115ba:	f44f 7180 	mov.w	r1, #256	; 0x100
 80115be:	4620      	mov	r0, r4
 80115c0:	f7f6 fcc5 	bl	8007f4e <WIDGET_OrState>
 80115c4:	07a9      	lsls	r1, r5, #30
 80115c6:	f140 80b3 	bpl.w	8011730 <SCROLLBAR_Callback+0x392>
 80115ca:	4620      	mov	r0, r4
 80115cc:	2101      	movs	r1, #1
 80115ce:	e074      	b.n	80116ba <SCROLLBAR_Callback+0x31c>
 80115d0:	f7fe ff36 	bl	8010440 <GUI_ALLOC_LockH>
 80115d4:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 80115d6:	9003      	str	r0, [sp, #12]
 80115d8:	a803      	add	r0, sp, #12
 80115da:	f7fe ff3f 	bl	801045c <GUI_ALLOC_UnlockH>
 80115de:	05ea      	lsls	r2, r5, #23
 80115e0:	f140 80a6 	bpl.w	8011730 <SCROLLBAR_Callback+0x392>
 80115e4:	4620      	mov	r0, r4
 80115e6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80115ea:	f7f6 fcc6 	bl	8007f7a <WIDGET_AndState>
 80115ee:	4620      	mov	r0, r4
 80115f0:	f7fe ff26 	bl	8010440 <GUI_ALLOC_LockH>
 80115f4:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 80115f6:	9005      	str	r0, [sp, #20]
 80115f8:	b113      	cbz	r3, 8011600 <SCROLLBAR_Callback+0x262>
 80115fa:	4620      	mov	r0, r4
 80115fc:	f7ff fdd7 	bl	80111ae <_DeleteTimer>
 8011600:	a80e      	add	r0, sp, #56	; 0x38
 8011602:	2200      	movs	r2, #0
 8011604:	f850 3d24 	ldr.w	r3, [r0, #-36]!
 8011608:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 801160a:	659a      	str	r2, [r3, #88]	; 0x58
 801160c:	f7fe ff26 	bl	801045c <GUI_ALLOC_UnlockH>
 8011610:	07ab      	lsls	r3, r5, #30
 8011612:	f140 808d 	bpl.w	8011730 <SCROLLBAR_Callback+0x392>
 8011616:	4620      	mov	r0, r4
 8011618:	2102      	movs	r1, #2
 801161a:	e04e      	b.n	80116ba <SCROLLBAR_Callback+0x31c>
 801161c:	4620      	mov	r0, r4
 801161e:	f7fe ff0f 	bl	8010440 <GUI_ALLOC_LockH>
 8011622:	ab0e      	add	r3, sp, #56	; 0x38
 8011624:	6d45      	ldr	r5, [r0, #84]	; 0x54
 8011626:	f843 0d24 	str.w	r0, [r3, #-36]!
 801162a:	4618      	mov	r0, r3
 801162c:	f7fe ff16 	bl	801045c <GUI_ALLOC_UnlockH>
 8011630:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8011634:	6813      	ldr	r3, [r2, #0]
 8011636:	6852      	ldr	r2, [r2, #4]
 8011638:	2a00      	cmp	r2, #0
 801163a:	dd79      	ble.n	8011730 <SCROLLBAR_Callback+0x392>
 801163c:	3b10      	subs	r3, #16
 801163e:	2b12      	cmp	r3, #18
 8011640:	d876      	bhi.n	8011730 <SCROLLBAR_Callback+0x392>
 8011642:	e8df f003 	tbb	[pc, r3]
 8011646:	1616      	.short	0x1616
 8011648:	75751212 	.word	0x75751212
 801164c:	75757575 	.word	0x75757575
 8011650:	75757575 	.word	0x75757575
 8011654:	0a757575 	.word	0x0a757575
 8011658:	0d          	.byte	0x0d
 8011659:	00          	.byte	0x00
 801165a:	4620      	mov	r0, r4
 801165c:	4629      	mov	r1, r5
 801165e:	e001      	b.n	8011664 <SCROLLBAR_Callback+0x2c6>
 8011660:	4620      	mov	r0, r4
 8011662:	4269      	negs	r1, r5
 8011664:	f7ff fe81 	bl	801136a <SCROLLBAR_AddValue>
 8011668:	e062      	b.n	8011730 <SCROLLBAR_Callback+0x392>
 801166a:	4620      	mov	r0, r4
 801166c:	f7ff fe94 	bl	8011398 <SCROLLBAR_Inc>
 8011670:	e05e      	b.n	8011730 <SCROLLBAR_Callback+0x392>
 8011672:	4620      	mov	r0, r4
 8011674:	f7ff fe8c 	bl	8011390 <SCROLLBAR_Dec>
 8011678:	e05a      	b.n	8011730 <SCROLLBAR_Callback+0x392>
 801167a:	4620      	mov	r0, r4
 801167c:	f8d8 600c 	ldr.w	r6, [r8, #12]
 8011680:	f7fe fede 	bl	8010440 <GUI_ALLOC_LockH>
 8011684:	ad0e      	add	r5, sp, #56	; 0x38
 8011686:	4603      	mov	r3, r0
 8011688:	f845 0d24 	str.w	r0, [r5, #-36]!
 801168c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801168e:	6830      	ldr	r0, [r6, #0]
 8011690:	68b1      	ldr	r1, [r6, #8]
 8011692:	4290      	cmp	r0, r2
 8011694:	6872      	ldr	r2, [r6, #4]
 8011696:	d105      	bne.n	80116a4 <SCROLLBAR_Callback+0x306>
 8011698:	6d5e      	ldr	r6, [r3, #84]	; 0x54
 801169a:	428e      	cmp	r6, r1
 801169c:	d102      	bne.n	80116a4 <SCROLLBAR_Callback+0x306>
 801169e:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 80116a0:	4296      	cmp	r6, r2
 80116a2:	d00d      	beq.n	80116c0 <SCROLLBAR_Callback+0x322>
 80116a4:	64d8      	str	r0, [r3, #76]	; 0x4c
 80116a6:	6559      	str	r1, [r3, #84]	; 0x54
 80116a8:	651a      	str	r2, [r3, #80]	; 0x50
 80116aa:	4620      	mov	r0, r4
 80116ac:	f7f9 f83b 	bl	800a726 <WM_InvalidateWindow>
 80116b0:	4628      	mov	r0, r5
 80116b2:	f7fe fed3 	bl	801045c <GUI_ALLOC_UnlockH>
 80116b6:	4620      	mov	r0, r4
 80116b8:	2105      	movs	r1, #5
 80116ba:	f7f8 f912 	bl	80098e2 <WM_NotifyParent>
 80116be:	e037      	b.n	8011730 <SCROLLBAR_Callback+0x392>
 80116c0:	4628      	mov	r0, r5
 80116c2:	e033      	b.n	801172c <SCROLLBAR_Callback+0x38e>
 80116c4:	4620      	mov	r0, r4
 80116c6:	f7fe febb 	bl	8010440 <GUI_ALLOC_LockH>
 80116ca:	9005      	str	r0, [sp, #20]
 80116cc:	2800      	cmp	r0, #0
 80116ce:	d02f      	beq.n	8011730 <SCROLLBAR_Callback+0x392>
 80116d0:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80116d4:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 80116d6:	601a      	str	r2, [r3, #0]
 80116d8:	6d42      	ldr	r2, [r0, #84]	; 0x54
 80116da:	609a      	str	r2, [r3, #8]
 80116dc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 80116de:	605a      	str	r2, [r3, #4]
 80116e0:	e023      	b.n	801172a <SCROLLBAR_Callback+0x38c>
 80116e2:	4620      	mov	r0, r4
 80116e4:	f7fe feac 	bl	8010440 <GUI_ALLOC_LockH>
 80116e8:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 80116ea:	9005      	str	r0, [sp, #20]
 80116ec:	b111      	cbz	r1, 80116f4 <SCROLLBAR_Callback+0x356>
 80116ee:	4620      	mov	r0, r4
 80116f0:	f7ff fe3b 	bl	801136a <SCROLLBAR_AddValue>
 80116f4:	9b05      	ldr	r3, [sp, #20]
 80116f6:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 80116f8:	6d19      	ldr	r1, [r3, #80]	; 0x50
 80116fa:	2a00      	cmp	r2, #0
 80116fc:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80116fe:	dd05      	ble.n	801170c <SCROLLBAR_Callback+0x36e>
 8011700:	4291      	cmp	r1, r2
 8011702:	bfb4      	ite	lt
 8011704:	2100      	movlt	r1, #0
 8011706:	2101      	movge	r1, #1
 8011708:	dd06      	ble.n	8011718 <SCROLLBAR_Callback+0x37a>
 801170a:	e004      	b.n	8011716 <SCROLLBAR_Callback+0x378>
 801170c:	4291      	cmp	r1, r2
 801170e:	bfcc      	ite	gt
 8011710:	2100      	movgt	r1, #0
 8011712:	2101      	movle	r1, #1
 8011714:	da00      	bge.n	8011718 <SCROLLBAR_Callback+0x37a>
 8011716:	651a      	str	r2, [r3, #80]	; 0x50
 8011718:	b119      	cbz	r1, 8011722 <SCROLLBAR_Callback+0x384>
 801171a:	4620      	mov	r0, r4
 801171c:	f7ff fd47 	bl	80111ae <_DeleteTimer>
 8011720:	e003      	b.n	801172a <SCROLLBAR_Callback+0x38c>
 8011722:	6e58      	ldr	r0, [r3, #100]	; 0x64
 8011724:	2132      	movs	r1, #50	; 0x32
 8011726:	f000 fd67 	bl	80121f8 <WM_RestartTimer>
 801172a:	a805      	add	r0, sp, #20
 801172c:	f7fe fe96 	bl	801045c <GUI_ALLOC_UnlockH>
 8011730:	4640      	mov	r0, r8
 8011732:	f7f9 fc29 	bl	800af88 <WM_DefaultProc>
 8011736:	b00f      	add	sp, #60	; 0x3c
 8011738:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801173c <GUI_ARRAY__GethItem>:
 801173c:	8803      	ldrh	r3, [r0, #0]
 801173e:	4299      	cmp	r1, r3
 8011740:	b513      	push	{r0, r1, r4, lr}
 8011742:	460c      	mov	r4, r1
 8011744:	d20e      	bcs.n	8011764 <GUI_ARRAY__GethItem+0x28>
 8011746:	6840      	ldr	r0, [r0, #4]
 8011748:	b150      	cbz	r0, 8011760 <GUI_ARRAY__GethItem+0x24>
 801174a:	f7fe fe79 	bl	8010440 <GUI_ALLOC_LockH>
 801174e:	ab02      	add	r3, sp, #8
 8011750:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 8011754:	f843 0d04 	str.w	r0, [r3, #-4]!
 8011758:	4618      	mov	r0, r3
 801175a:	f7fe fe7f 	bl	801045c <GUI_ALLOC_UnlockH>
 801175e:	e002      	b.n	8011766 <GUI_ARRAY__GethItem+0x2a>
 8011760:	4604      	mov	r4, r0
 8011762:	e000      	b.n	8011766 <GUI_ARRAY__GethItem+0x2a>
 8011764:	2400      	movs	r4, #0
 8011766:	4620      	mov	r0, r4
 8011768:	b002      	add	sp, #8
 801176a:	bd10      	pop	{r4, pc}

0801176c <GUI_ARRAY_GetNumItems>:
 801176c:	b513      	push	{r0, r1, r4, lr}
 801176e:	4604      	mov	r4, r0
 8011770:	b140      	cbz	r0, 8011784 <GUI_ARRAY_GetNumItems+0x18>
 8011772:	f7fe fe65 	bl	8010440 <GUI_ALLOC_LockH>
 8011776:	ab02      	add	r3, sp, #8
 8011778:	8804      	ldrh	r4, [r0, #0]
 801177a:	f843 0d04 	str.w	r0, [r3, #-4]!
 801177e:	4618      	mov	r0, r3
 8011780:	f7fe fe6c 	bl	801045c <GUI_ALLOC_UnlockH>
 8011784:	4620      	mov	r0, r4
 8011786:	b002      	add	sp, #8
 8011788:	bd10      	pop	{r4, pc}

0801178a <GUI_ARRAY_AddItem>:
 801178a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801178e:	4605      	mov	r5, r0
 8011790:	2800      	cmp	r0, #0
 8011792:	d03d      	beq.n	8011810 <GUI_ARRAY_AddItem+0x86>
 8011794:	b14a      	cbz	r2, 80117aa <GUI_ARRAY_AddItem+0x20>
 8011796:	4608      	mov	r0, r1
 8011798:	4611      	mov	r1, r2
 801179a:	f003 fbe7 	bl	8014f6c <GUI_ALLOC_AllocInit>
 801179e:	f1d0 0401 	rsbs	r4, r0, #1
 80117a2:	4607      	mov	r7, r0
 80117a4:	bf38      	it	cc
 80117a6:	2400      	movcc	r4, #0
 80117a8:	e001      	b.n	80117ae <GUI_ARRAY_AddItem+0x24>
 80117aa:	4614      	mov	r4, r2
 80117ac:	4617      	mov	r7, r2
 80117ae:	4628      	mov	r0, r5
 80117b0:	f7fe fe46 	bl	8010440 <GUI_ALLOC_LockH>
 80117b4:	ae02      	add	r6, sp, #8
 80117b6:	f8b0 8000 	ldrh.w	r8, [r0]
 80117ba:	f846 0d08 	str.w	r0, [r6, #-8]!
 80117be:	f8d0 9004 	ldr.w	r9, [r0, #4]
 80117c2:	4668      	mov	r0, sp
 80117c4:	f7fe fe4a 	bl	801045c <GUI_ALLOC_UnlockH>
 80117c8:	bb24      	cbnz	r4, 8011814 <GUI_ARRAY_AddItem+0x8a>
 80117ca:	f108 0101 	add.w	r1, r8, #1
 80117ce:	4648      	mov	r0, r9
 80117d0:	0089      	lsls	r1, r1, #2
 80117d2:	f002 ffc1 	bl	8014758 <GUI_ALLOC_Realloc>
 80117d6:	4681      	mov	r9, r0
 80117d8:	b918      	cbnz	r0, 80117e2 <GUI_ARRAY_AddItem+0x58>
 80117da:	4638      	mov	r0, r7
 80117dc:	f7fe fe6a 	bl	80104b4 <GUI_ALLOC_Free>
 80117e0:	e018      	b.n	8011814 <GUI_ARRAY_AddItem+0x8a>
 80117e2:	f7fe fe2d 	bl	8010440 <GUI_ALLOC_LockH>
 80117e6:	ab02      	add	r3, sp, #8
 80117e8:	f843 0d04 	str.w	r0, [r3, #-4]!
 80117ec:	f840 7028 	str.w	r7, [r0, r8, lsl #2]
 80117f0:	4618      	mov	r0, r3
 80117f2:	f7fe fe33 	bl	801045c <GUI_ALLOC_UnlockH>
 80117f6:	4628      	mov	r0, r5
 80117f8:	f7fe fe22 	bl	8010440 <GUI_ALLOC_LockH>
 80117fc:	8803      	ldrh	r3, [r0, #0]
 80117fe:	9000      	str	r0, [sp, #0]
 8011800:	3301      	adds	r3, #1
 8011802:	f8c0 9004 	str.w	r9, [r0, #4]
 8011806:	8003      	strh	r3, [r0, #0]
 8011808:	4668      	mov	r0, sp
 801180a:	f7fe fe27 	bl	801045c <GUI_ALLOC_UnlockH>
 801180e:	e002      	b.n	8011816 <GUI_ARRAY_AddItem+0x8c>
 8011810:	4604      	mov	r4, r0
 8011812:	e000      	b.n	8011816 <GUI_ARRAY_AddItem+0x8c>
 8011814:	2401      	movs	r4, #1
 8011816:	4620      	mov	r0, r4
 8011818:	b003      	add	sp, #12
 801181a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0801181e <GUI_ARRAY_Delete>:
 801181e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011820:	4605      	mov	r5, r0
 8011822:	b318      	cbz	r0, 801186c <GUI_ARRAY_Delete+0x4e>
 8011824:	f7fe fe0c 	bl	8010440 <GUI_ALLOC_LockH>
 8011828:	9000      	str	r0, [sp, #0]
 801182a:	6840      	ldr	r0, [r0, #4]
 801182c:	b1c0      	cbz	r0, 8011860 <GUI_ARRAY_Delete+0x42>
 801182e:	f7fe fe07 	bl	8010440 <GUI_ALLOC_LockH>
 8011832:	2400      	movs	r4, #0
 8011834:	9001      	str	r0, [sp, #4]
 8011836:	9b00      	ldr	r3, [sp, #0]
 8011838:	881b      	ldrh	r3, [r3, #0]
 801183a:	429c      	cmp	r4, r3
 801183c:	da06      	bge.n	801184c <GUI_ARRAY_Delete+0x2e>
 801183e:	9801      	ldr	r0, [sp, #4]
 8011840:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 8011844:	f7ff f854 	bl	80108f0 <GUI_ALLOC_FreePtr>
 8011848:	3401      	adds	r4, #1
 801184a:	e7f4      	b.n	8011836 <GUI_ARRAY_Delete+0x18>
 801184c:	a801      	add	r0, sp, #4
 801184e:	f7fe fe05 	bl	801045c <GUI_ALLOC_UnlockH>
 8011852:	9800      	ldr	r0, [sp, #0]
 8011854:	3004      	adds	r0, #4
 8011856:	f7ff f84b 	bl	80108f0 <GUI_ALLOC_FreePtr>
 801185a:	9b00      	ldr	r3, [sp, #0]
 801185c:	2200      	movs	r2, #0
 801185e:	801a      	strh	r2, [r3, #0]
 8011860:	4668      	mov	r0, sp
 8011862:	f7fe fdfb 	bl	801045c <GUI_ALLOC_UnlockH>
 8011866:	4628      	mov	r0, r5
 8011868:	f7fe fe24 	bl	80104b4 <GUI_ALLOC_Free>
 801186c:	b003      	add	sp, #12
 801186e:	bd30      	pop	{r4, r5, pc}

08011870 <GUI_ARRAY_GethItem>:
 8011870:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011872:	460e      	mov	r6, r1
 8011874:	4605      	mov	r5, r0
 8011876:	b158      	cbz	r0, 8011890 <GUI_ARRAY_GethItem+0x20>
 8011878:	f7fe fde2 	bl	8010440 <GUI_ALLOC_LockH>
 801187c:	ac02      	add	r4, sp, #8
 801187e:	4631      	mov	r1, r6
 8011880:	f844 0d04 	str.w	r0, [r4, #-4]!
 8011884:	f7ff ff5a 	bl	801173c <GUI_ARRAY__GethItem>
 8011888:	4605      	mov	r5, r0
 801188a:	4620      	mov	r0, r4
 801188c:	f7fe fde6 	bl	801045c <GUI_ALLOC_UnlockH>
 8011890:	4628      	mov	r0, r5
 8011892:	b002      	add	sp, #8
 8011894:	bd70      	pop	{r4, r5, r6, pc}

08011896 <GUI_ARRAY_Create>:
 8011896:	2008      	movs	r0, #8
 8011898:	f7ff b83f 	b.w	801091a <GUI_ALLOC_AllocZero>

0801189c <BUTTON_DrawSkinFlex>:
 801189c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80118a0:	6883      	ldr	r3, [r0, #8]
 80118a2:	4a8a      	ldr	r2, [pc, #552]	; (8011acc <BUTTON_DrawSkinFlex+0x230>)
 80118a4:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 80118a8:	6843      	ldr	r3, [r0, #4]
 80118aa:	2b05      	cmp	r3, #5
 80118ac:	b088      	sub	sp, #32
 80118ae:	4604      	mov	r4, r0
 80118b0:	d00e      	beq.n	80118d0 <BUTTON_DrawSkinFlex+0x34>
 80118b2:	dc06      	bgt.n	80118c2 <BUTTON_DrawSkinFlex+0x26>
 80118b4:	2b00      	cmp	r3, #0
 80118b6:	f040 8104 	bne.w	8011ac2 <BUTTON_DrawSkinFlex+0x226>
 80118ba:	6800      	ldr	r0, [r0, #0]
 80118bc:	f7f7 fe2e 	bl	800951c <WM_SetHasTrans>
 80118c0:	e0ff      	b.n	8011ac2 <BUTTON_DrawSkinFlex+0x226>
 80118c2:	2b06      	cmp	r3, #6
 80118c4:	f000 8088 	beq.w	80119d8 <BUTTON_DrawSkinFlex+0x13c>
 80118c8:	2b12      	cmp	r3, #18
 80118ca:	f000 80a9 	beq.w	8011a20 <BUTTON_DrawSkinFlex+0x184>
 80118ce:	e0f8      	b.n	8011ac2 <BUTTON_DrawSkinFlex+0x226>
 80118d0:	69ee      	ldr	r6, [r5, #28]
 80118d2:	2e00      	cmp	r6, #0
 80118d4:	d051      	beq.n	801197a <BUTTON_DrawSkinFlex+0xde>
 80118d6:	9600      	str	r6, [sp, #0]
 80118d8:	682b      	ldr	r3, [r5, #0]
 80118da:	9301      	str	r3, [sp, #4]
 80118dc:	686b      	ldr	r3, [r5, #4]
 80118de:	9302      	str	r3, [sp, #8]
 80118e0:	68ab      	ldr	r3, [r5, #8]
 80118e2:	9303      	str	r3, [sp, #12]
 80118e4:	3010      	adds	r0, #16
 80118e6:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 80118e8:	f002 fc4c 	bl	8014184 <GUI__DrawTwinArc4>
 80118ec:	2600      	movs	r6, #0
 80118ee:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
 80118f2:	f7fd fadd 	bl	800eeb0 <GUI_SetColor>
 80118f6:	69eb      	ldr	r3, [r5, #28]
 80118f8:	6960      	ldr	r0, [r4, #20]
 80118fa:	6921      	ldr	r1, [r4, #16]
 80118fc:	69a2      	ldr	r2, [r4, #24]
 80118fe:	4430      	add	r0, r6
 8011900:	4419      	add	r1, r3
 8011902:	1ad2      	subs	r2, r2, r3
 8011904:	f7fd ff38 	bl	800f778 <GUI_DrawHLine>
 8011908:	69eb      	ldr	r3, [r5, #28]
 801190a:	69e0      	ldr	r0, [r4, #28]
 801190c:	6921      	ldr	r1, [r4, #16]
 801190e:	69a2      	ldr	r2, [r4, #24]
 8011910:	1b80      	subs	r0, r0, r6
 8011912:	4419      	add	r1, r3
 8011914:	1ad2      	subs	r2, r2, r3
 8011916:	f7fd ff2f 	bl	800f778 <GUI_DrawHLine>
 801191a:	69eb      	ldr	r3, [r5, #28]
 801191c:	6920      	ldr	r0, [r4, #16]
 801191e:	6961      	ldr	r1, [r4, #20]
 8011920:	69e2      	ldr	r2, [r4, #28]
 8011922:	4430      	add	r0, r6
 8011924:	4419      	add	r1, r3
 8011926:	1ad2      	subs	r2, r2, r3
 8011928:	f7fd fc98 	bl	800f25c <GUI_DrawVLine>
 801192c:	69eb      	ldr	r3, [r5, #28]
 801192e:	69a0      	ldr	r0, [r4, #24]
 8011930:	6961      	ldr	r1, [r4, #20]
 8011932:	69e2      	ldr	r2, [r4, #28]
 8011934:	1b80      	subs	r0, r0, r6
 8011936:	4419      	add	r1, r3
 8011938:	1ad2      	subs	r2, r2, r3
 801193a:	3601      	adds	r6, #1
 801193c:	f7fd fc8e 	bl	800f25c <GUI_DrawVLine>
 8011940:	2e02      	cmp	r6, #2
 8011942:	d1d4      	bne.n	80118ee <BUTTON_DrawSkinFlex+0x52>
 8011944:	68a8      	ldr	r0, [r5, #8]
 8011946:	f7fd fab3 	bl	800eeb0 <GUI_SetColor>
 801194a:	69eb      	ldr	r3, [r5, #28]
 801194c:	6920      	ldr	r0, [r4, #16]
 801194e:	69e6      	ldr	r6, [r4, #28]
 8011950:	6961      	ldr	r1, [r4, #20]
 8011952:	18c2      	adds	r2, r0, r3
 8011954:	4419      	add	r1, r3
 8011956:	3002      	adds	r0, #2
 8011958:	1af3      	subs	r3, r6, r3
 801195a:	3a01      	subs	r2, #1
 801195c:	f7fd fc38 	bl	800f1d0 <GUI_FillRect>
 8011960:	69eb      	ldr	r3, [r5, #28]
 8011962:	69a2      	ldr	r2, [r4, #24]
 8011964:	69e6      	ldr	r6, [r4, #28]
 8011966:	6961      	ldr	r1, [r4, #20]
 8011968:	1ad0      	subs	r0, r2, r3
 801196a:	4419      	add	r1, r3
 801196c:	3001      	adds	r0, #1
 801196e:	1af3      	subs	r3, r6, r3
 8011970:	3a02      	subs	r2, #2
 8011972:	f7fd fc2d 	bl	800f1d0 <GUI_FillRect>
 8011976:	69ee      	ldr	r6, [r5, #28]
 8011978:	e00f      	b.n	801199a <BUTTON_DrawSkinFlex+0xfe>
 801197a:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
 801197e:	f7fd fa97 	bl	800eeb0 <GUI_SetColor>
 8011982:	f104 0010 	add.w	r0, r4, #16
 8011986:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 8011988:	4430      	add	r0, r6
 801198a:	4431      	add	r1, r6
 801198c:	1b92      	subs	r2, r2, r6
 801198e:	1b9b      	subs	r3, r3, r6
 8011990:	3601      	adds	r6, #1
 8011992:	f7fe ffdf 	bl	8010954 <GUI_DrawRect>
 8011996:	2e02      	cmp	r6, #2
 8011998:	d1ef      	bne.n	801197a <BUTTON_DrawSkinFlex+0xde>
 801199a:	f104 0010 	add.w	r0, r4, #16
 801199e:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 80119a0:	68ef      	ldr	r7, [r5, #12]
 80119a2:	9700      	str	r7, [sp, #0]
 80119a4:	692f      	ldr	r7, [r5, #16]
 80119a6:	9701      	str	r7, [sp, #4]
 80119a8:	440b      	add	r3, r1
 80119aa:	4430      	add	r0, r6
 80119ac:	1b92      	subs	r2, r2, r6
 80119ae:	3102      	adds	r1, #2
 80119b0:	105b      	asrs	r3, r3, #1
 80119b2:	f003 f913 	bl	8014bdc <GUI_DrawGradientV>
 80119b6:	69e3      	ldr	r3, [r4, #28]
 80119b8:	6962      	ldr	r2, [r4, #20]
 80119ba:	6920      	ldr	r0, [r4, #16]
 80119bc:	441a      	add	r2, r3
 80119be:	1051      	asrs	r1, r2, #1
 80119c0:	69a2      	ldr	r2, [r4, #24]
 80119c2:	696c      	ldr	r4, [r5, #20]
 80119c4:	9400      	str	r4, [sp, #0]
 80119c6:	69ac      	ldr	r4, [r5, #24]
 80119c8:	9401      	str	r4, [sp, #4]
 80119ca:	4430      	add	r0, r6
 80119cc:	3101      	adds	r1, #1
 80119ce:	1b92      	subs	r2, r2, r6
 80119d0:	3b02      	subs	r3, #2
 80119d2:	f003 f903 	bl	8014bdc <GUI_DrawGradientV>
 80119d6:	e074      	b.n	8011ac2 <BUTTON_DrawSkinFlex+0x226>
 80119d8:	6800      	ldr	r0, [r0, #0]
 80119da:	f7fe fd31 	bl	8010440 <GUI_ALLOC_LockH>
 80119de:	9004      	str	r0, [sp, #16]
 80119e0:	6820      	ldr	r0, [r4, #0]
 80119e2:	f000 f903 	bl	8011bec <WM__IsEnabled>
 80119e6:	9b04      	ldr	r3, [sp, #16]
 80119e8:	b130      	cbz	r0, 80119f8 <BUTTON_DrawSkinFlex+0x15c>
 80119ea:	68a2      	ldr	r2, [r4, #8]
 80119ec:	b952      	cbnz	r2, 8011a04 <BUTTON_DrawSkinFlex+0x168>
 80119ee:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80119f0:	3200      	adds	r2, #0
 80119f2:	bf18      	it	ne
 80119f4:	2201      	movne	r2, #1
 80119f6:	e006      	b.n	8011a06 <BUTTON_DrawSkinFlex+0x16a>
 80119f8:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80119fa:	2a00      	cmp	r2, #0
 80119fc:	bf0c      	ite	eq
 80119fe:	2200      	moveq	r2, #0
 8011a00:	2202      	movne	r2, #2
 8011a02:	e000      	b.n	8011a06 <BUTTON_DrawSkinFlex+0x16a>
 8011a04:	2200      	movs	r2, #0
 8011a06:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8011a0a:	a804      	add	r0, sp, #16
 8011a0c:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8011a0e:	f7fe fd25 	bl	801045c <GUI_ALLOC_UnlockH>
 8011a12:	2200      	movs	r2, #0
 8011a14:	4628      	mov	r0, r5
 8011a16:	6821      	ldr	r1, [r4, #0]
 8011a18:	4613      	mov	r3, r2
 8011a1a:	f003 fe64 	bl	80156e6 <GUI_DRAW__Draw>
 8011a1e:	e050      	b.n	8011ac2 <BUTTON_DrawSkinFlex+0x226>
 8011a20:	6800      	ldr	r0, [r0, #0]
 8011a22:	f7fe fd0d 	bl	8010440 <GUI_ALLOC_LockH>
 8011a26:	ae08      	add	r6, sp, #32
 8011a28:	6e87      	ldr	r7, [r0, #104]	; 0x68
 8011a2a:	f846 0d10 	str.w	r0, [r6, #-16]!
 8011a2e:	2f00      	cmp	r7, #0
 8011a30:	d044      	beq.n	8011abc <BUTTON_DrawSkinFlex+0x220>
 8011a32:	68a2      	ldr	r2, [r4, #8]
 8011a34:	f9b0 805c 	ldrsh.w	r8, [r0, #92]	; 0x5c
 8011a38:	b122      	cbz	r2, 8011a44 <BUTTON_DrawSkinFlex+0x1a8>
 8011a3a:	2a03      	cmp	r2, #3
 8011a3c:	bf14      	ite	ne
 8011a3e:	2100      	movne	r1, #0
 8011a40:	2102      	moveq	r1, #2
 8011a42:	e000      	b.n	8011a46 <BUTTON_DrawSkinFlex+0x1aa>
 8011a44:	2101      	movs	r1, #1
 8011a46:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8011a4a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8011a4c:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 8011a4e:	f7fd fa01 	bl	800ee54 <GUI_SetFont>
 8011a52:	4620      	mov	r0, r4
 8011a54:	f7fd fa2c 	bl	800eeb0 <GUI_SetColor>
 8011a58:	a806      	add	r0, sp, #24
 8011a5a:	f002 feb6 	bl	80147ca <GUI_GetClientRect>
 8011a5e:	8bab      	ldrh	r3, [r5, #28]
 8011a60:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 8011a64:	441a      	add	r2, r3
 8011a66:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011a6a:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8011a6e:	1ad3      	subs	r3, r2, r3
 8011a70:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011a74:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8011a78:	3302      	adds	r3, #2
 8011a7a:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011a7e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 8011a82:	3b02      	subs	r3, #2
 8011a84:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011a88:	9b04      	ldr	r3, [sp, #16]
 8011a8a:	a806      	add	r0, sp, #24
 8011a8c:	f9b3 105e 	ldrsh.w	r1, [r3, #94]	; 0x5e
 8011a90:	f9b3 2060 	ldrsh.w	r2, [r3, #96]	; 0x60
 8011a94:	f7fd fb44 	bl	800f120 <GUI_MoveRect>
 8011a98:	4630      	mov	r0, r6
 8011a9a:	f7fe fcdf 	bl	801045c <GUI_ALLOC_UnlockH>
 8011a9e:	2002      	movs	r0, #2
 8011aa0:	f7fd f9c6 	bl	800ee30 <GUI_SetTextMode>
 8011aa4:	4638      	mov	r0, r7
 8011aa6:	f7fe fccb 	bl	8010440 <GUI_ALLOC_LockH>
 8011aaa:	ac08      	add	r4, sp, #32
 8011aac:	a906      	add	r1, sp, #24
 8011aae:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8011ab2:	4642      	mov	r2, r8
 8011ab4:	f003 f9bf 	bl	8014e36 <GUI_DispStringInRect>
 8011ab8:	4620      	mov	r0, r4
 8011aba:	e000      	b.n	8011abe <BUTTON_DrawSkinFlex+0x222>
 8011abc:	4630      	mov	r0, r6
 8011abe:	f7fe fccd 	bl	801045c <GUI_ALLOC_UnlockH>
 8011ac2:	2000      	movs	r0, #0
 8011ac4:	b008      	add	sp, #32
 8011ac6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011aca:	bf00      	nop
 8011acc:	08017800 	.word	0x08017800

08011ad0 <_Create>:
 8011ad0:	b530      	push	{r4, r5, lr}
 8011ad2:	b08b      	sub	sp, #44	; 0x2c
 8011ad4:	2100      	movs	r1, #0
 8011ad6:	4604      	mov	r4, r0
 8011ad8:	2224      	movs	r2, #36	; 0x24
 8011ada:	a801      	add	r0, sp, #4
 8011adc:	f004 fb71 	bl	80161c2 <memset>
 8011ae0:	4620      	mov	r0, r4
 8011ae2:	f7fe fcad 	bl	8010440 <GUI_ALLOC_LockH>
 8011ae6:	ab0a      	add	r3, sp, #40	; 0x28
 8011ae8:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8011aea:	f843 0d28 	str.w	r0, [r3, #-40]!
 8011aee:	6895      	ldr	r5, [r2, #8]
 8011af0:	4668      	mov	r0, sp
 8011af2:	f7fe fcb3 	bl	801045c <GUI_ALLOC_UnlockH>
 8011af6:	2300      	movs	r3, #0
 8011af8:	9302      	str	r3, [sp, #8]
 8011afa:	9401      	str	r4, [sp, #4]
 8011afc:	682b      	ldr	r3, [r5, #0]
 8011afe:	a801      	add	r0, sp, #4
 8011b00:	4798      	blx	r3
 8011b02:	b00b      	add	sp, #44	; 0x2c
 8011b04:	bd30      	pop	{r4, r5, pc}

08011b06 <_Paint>:
 8011b06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b0a:	b08a      	sub	sp, #40	; 0x28
 8011b0c:	4605      	mov	r5, r0
 8011b0e:	f7fe fc97 	bl	8010440 <GUI_ALLOC_LockH>
 8011b12:	4603      	mov	r3, r0
 8011b14:	a80a      	add	r0, sp, #40	; 0x28
 8011b16:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 8011b18:	f840 3d28 	str.w	r3, [r0, #-40]!
 8011b1c:	4668      	mov	r0, sp
 8011b1e:	6d9c      	ldr	r4, [r3, #88]	; 0x58
 8011b20:	8e5f      	ldrh	r7, [r3, #50]	; 0x32
 8011b22:	f7fe fc9b 	bl	801045c <GUI_ALLOC_UnlockH>
 8011b26:	4628      	mov	r0, r5
 8011b28:	f7f7 ffb0 	bl	8009a8c <WM_GetWindowSizeX>
 8011b2c:	4680      	mov	r8, r0
 8011b2e:	4628      	mov	r0, r5
 8011b30:	f7f7 ffc1 	bl	8009ab6 <WM_GetWindowSizeY>
 8011b34:	2300      	movs	r3, #0
 8011b36:	9306      	str	r3, [sp, #24]
 8011b38:	9305      	str	r3, [sp, #20]
 8011b3a:	3801      	subs	r0, #1
 8011b3c:	f108 33ff 	add.w	r3, r8, #4294967295
 8011b40:	f016 0610 	ands.w	r6, r6, #16
 8011b44:	9501      	str	r5, [sp, #4]
 8011b46:	9307      	str	r3, [sp, #28]
 8011b48:	9008      	str	r0, [sp, #32]
 8011b4a:	d001      	beq.n	8011b50 <_Paint+0x4a>
 8011b4c:	2303      	movs	r3, #3
 8011b4e:	e007      	b.n	8011b60 <_Paint+0x5a>
 8011b50:	05fa      	lsls	r2, r7, #23
 8011b52:	d501      	bpl.n	8011b58 <_Paint+0x52>
 8011b54:	9603      	str	r6, [sp, #12]
 8011b56:	e004      	b.n	8011b62 <_Paint+0x5c>
 8011b58:	07fb      	lsls	r3, r7, #31
 8011b5a:	bf4c      	ite	mi
 8011b5c:	2301      	movmi	r3, #1
 8011b5e:	2302      	movpl	r3, #2
 8011b60:	9303      	str	r3, [sp, #12]
 8011b62:	2305      	movs	r3, #5
 8011b64:	9302      	str	r3, [sp, #8]
 8011b66:	a801      	add	r0, sp, #4
 8011b68:	47a0      	blx	r4
 8011b6a:	2306      	movs	r3, #6
 8011b6c:	9302      	str	r3, [sp, #8]
 8011b6e:	a801      	add	r0, sp, #4
 8011b70:	47a0      	blx	r4
 8011b72:	2312      	movs	r3, #18
 8011b74:	9302      	str	r3, [sp, #8]
 8011b76:	a801      	add	r0, sp, #4
 8011b78:	47a0      	blx	r4
 8011b7a:	230a      	movs	r3, #10
 8011b7c:	9302      	str	r3, [sp, #8]
 8011b7e:	a801      	add	r0, sp, #4
 8011b80:	47a0      	blx	r4
 8011b82:	b00a      	add	sp, #40	; 0x28
 8011b84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011b88 <WM__SendMessageNoPara>:
 8011b88:	b530      	push	{r4, r5, lr}
 8011b8a:	b085      	sub	sp, #20
 8011b8c:	4604      	mov	r4, r0
 8011b8e:	2210      	movs	r2, #16
 8011b90:	460d      	mov	r5, r1
 8011b92:	4668      	mov	r0, sp
 8011b94:	2100      	movs	r1, #0
 8011b96:	f004 fb14 	bl	80161c2 <memset>
 8011b9a:	4620      	mov	r0, r4
 8011b9c:	f7fe fc46 	bl	801042c <GUI_ALLOC_h2p>
 8011ba0:	6903      	ldr	r3, [r0, #16]
 8011ba2:	b11b      	cbz	r3, 8011bac <WM__SendMessageNoPara+0x24>
 8011ba4:	9401      	str	r4, [sp, #4]
 8011ba6:	9500      	str	r5, [sp, #0]
 8011ba8:	4668      	mov	r0, sp
 8011baa:	4798      	blx	r3
 8011bac:	b005      	add	sp, #20
 8011bae:	bd30      	pop	{r4, r5, pc}

08011bb0 <WM__SendMessage>:
 8011bb0:	b570      	push	{r4, r5, r6, lr}
 8011bb2:	4c0d      	ldr	r4, [pc, #52]	; (8011be8 <WM__SendMessage+0x38>)
 8011bb4:	6823      	ldr	r3, [r4, #0]
 8011bb6:	2b13      	cmp	r3, #19
 8011bb8:	4606      	mov	r6, r0
 8011bba:	460d      	mov	r5, r1
 8011bbc:	dc12      	bgt.n	8011be4 <WM__SendMessage+0x34>
 8011bbe:	f7fe fc35 	bl	801042c <GUI_ALLOC_h2p>
 8011bc2:	6903      	ldr	r3, [r0, #16]
 8011bc4:	606e      	str	r6, [r5, #4]
 8011bc6:	b143      	cbz	r3, 8011bda <WM__SendMessage+0x2a>
 8011bc8:	6822      	ldr	r2, [r4, #0]
 8011bca:	4628      	mov	r0, r5
 8011bcc:	3201      	adds	r2, #1
 8011bce:	6022      	str	r2, [r4, #0]
 8011bd0:	4798      	blx	r3
 8011bd2:	6823      	ldr	r3, [r4, #0]
 8011bd4:	3b01      	subs	r3, #1
 8011bd6:	6023      	str	r3, [r4, #0]
 8011bd8:	bd70      	pop	{r4, r5, r6, pc}
 8011bda:	4628      	mov	r0, r5
 8011bdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011be0:	f7f9 b9d2 	b.w	800af88 <WM_DefaultProc>
 8011be4:	bd70      	pop	{r4, r5, r6, pc}
 8011be6:	bf00      	nop
 8011be8:	200196c4 	.word	0x200196c4

08011bec <WM__IsEnabled>:
 8011bec:	b508      	push	{r3, lr}
 8011bee:	f7fe fc1d 	bl	801042c <GUI_ALLOC_h2p>
 8011bf2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011bf4:	f080 0010 	eor.w	r0, r0, #16
 8011bf8:	f3c0 1000 	ubfx	r0, r0, #4, #1
 8011bfc:	bd08      	pop	{r3, pc}

08011bfe <WM__GetPrevSibling>:
 8011bfe:	b538      	push	{r3, r4, r5, lr}
 8011c00:	4605      	mov	r5, r0
 8011c02:	f000 f82d 	bl	8011c60 <WM__GetFirstSibling>
 8011c06:	4604      	mov	r4, r0
 8011c08:	b154      	cbz	r4, 8011c20 <WM__GetPrevSibling+0x22>
 8011c0a:	42ac      	cmp	r4, r5
 8011c0c:	d007      	beq.n	8011c1e <WM__GetPrevSibling+0x20>
 8011c0e:	4620      	mov	r0, r4
 8011c10:	f7fe fc0c 	bl	801042c <GUI_ALLOC_h2p>
 8011c14:	6a03      	ldr	r3, [r0, #32]
 8011c16:	42ab      	cmp	r3, r5
 8011c18:	d002      	beq.n	8011c20 <WM__GetPrevSibling+0x22>
 8011c1a:	461c      	mov	r4, r3
 8011c1c:	e7f4      	b.n	8011c08 <WM__GetPrevSibling+0xa>
 8011c1e:	2400      	movs	r4, #0
 8011c20:	4620      	mov	r0, r4
 8011c22:	bd38      	pop	{r3, r4, r5, pc}

08011c24 <WM__GetLastSibling>:
 8011c24:	b510      	push	{r4, lr}
 8011c26:	4604      	mov	r4, r0
 8011c28:	b130      	cbz	r0, 8011c38 <WM__GetLastSibling+0x14>
 8011c2a:	4620      	mov	r0, r4
 8011c2c:	f7fe fbfe 	bl	801042c <GUI_ALLOC_h2p>
 8011c30:	6a03      	ldr	r3, [r0, #32]
 8011c32:	b10b      	cbz	r3, 8011c38 <WM__GetLastSibling+0x14>
 8011c34:	461c      	mov	r4, r3
 8011c36:	e7f8      	b.n	8011c2a <WM__GetLastSibling+0x6>
 8011c38:	4620      	mov	r0, r4
 8011c3a:	bd10      	pop	{r4, pc}

08011c3c <WM__GetFocussedChild>:
 8011c3c:	b538      	push	{r3, r4, r5, lr}
 8011c3e:	4d06      	ldr	r5, [pc, #24]	; (8011c58 <WM__GetFocussedChild+0x1c>)
 8011c40:	4c06      	ldr	r4, [pc, #24]	; (8011c5c <WM__GetFocussedChild+0x20>)
 8011c42:	682b      	ldr	r3, [r5, #0]
 8011c44:	4601      	mov	r1, r0
 8011c46:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8011c4a:	f003 fd72 	bl	8015732 <WM__IsChild>
 8011c4e:	b110      	cbz	r0, 8011c56 <WM__GetFocussedChild+0x1a>
 8011c50:	682b      	ldr	r3, [r5, #0]
 8011c52:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8011c56:	bd38      	pop	{r3, r4, r5, pc}
 8011c58:	2001b340 	.word	0x2001b340
 8011c5c:	2001b330 	.word	0x2001b330

08011c60 <WM__GetFirstSibling>:
 8011c60:	b508      	push	{r3, lr}
 8011c62:	f7f7 ff69 	bl	8009b38 <WM_GetParent>
 8011c66:	b118      	cbz	r0, 8011c70 <WM__GetFirstSibling+0x10>
 8011c68:	f7fe fbe0 	bl	801042c <GUI_ALLOC_h2p>
 8011c6c:	69c0      	ldr	r0, [r0, #28]
 8011c6e:	bd08      	pop	{r3, pc}
 8011c70:	bd08      	pop	{r3, pc}
	...

08011c74 <WM_ValidateWindow>:
 8011c74:	b507      	push	{r0, r1, r2, lr}
 8011c76:	b178      	cbz	r0, 8011c98 <WM_ValidateWindow+0x24>
 8011c78:	f7fe fbe2 	bl	8010440 <GUI_ALLOC_LockH>
 8011c7c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011c7e:	9001      	str	r0, [sp, #4]
 8011c80:	069a      	lsls	r2, r3, #26
 8011c82:	d506      	bpl.n	8011c92 <WM_ValidateWindow+0x1e>
 8011c84:	f023 0320 	bic.w	r3, r3, #32
 8011c88:	6283      	str	r3, [r0, #40]	; 0x28
 8011c8a:	4b05      	ldr	r3, [pc, #20]	; (8011ca0 <WM_ValidateWindow+0x2c>)
 8011c8c:	881a      	ldrh	r2, [r3, #0]
 8011c8e:	3a01      	subs	r2, #1
 8011c90:	801a      	strh	r2, [r3, #0]
 8011c92:	a801      	add	r0, sp, #4
 8011c94:	f7fe fbe2 	bl	801045c <GUI_ALLOC_UnlockH>
 8011c98:	b003      	add	sp, #12
 8011c9a:	f85d fb04 	ldr.w	pc, [sp], #4
 8011c9e:	bf00      	nop
 8011ca0:	2001b338 	.word	0x2001b338

08011ca4 <WM__IsInModalArea>:
 8011ca4:	4b12      	ldr	r3, [pc, #72]	; (8011cf0 <WM__IsInModalArea+0x4c>)
 8011ca6:	681b      	ldr	r3, [r3, #0]
 8011ca8:	2b00      	cmp	r3, #0
 8011caa:	b570      	push	{r4, r5, r6, lr}
 8011cac:	4604      	mov	r4, r0
 8011cae:	da0f      	bge.n	8011cd0 <WM__IsInModalArea+0x2c>
 8011cb0:	4e10      	ldr	r6, [pc, #64]	; (8011cf4 <WM__IsInModalArea+0x50>)
 8011cb2:	4d11      	ldr	r5, [pc, #68]	; (8011cf8 <WM__IsInModalArea+0x54>)
 8011cb4:	6833      	ldr	r3, [r6, #0]
 8011cb6:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
 8011cba:	4620      	mov	r0, r4
 8011cbc:	6859      	ldr	r1, [r3, #4]
 8011cbe:	f7f7 fbe3 	bl	8009488 <WM__IsAncestor>
 8011cc2:	6833      	ldr	r3, [r6, #0]
 8011cc4:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8011cc8:	686a      	ldr	r2, [r5, #4]
 8011cca:	686b      	ldr	r3, [r5, #4]
 8011ccc:	b942      	cbnz	r2, 8011ce0 <WM__IsInModalArea+0x3c>
 8011cce:	e00c      	b.n	8011cea <WM__IsInModalArea+0x46>
 8011cd0:	4a0a      	ldr	r2, [pc, #40]	; (8011cfc <WM__IsInModalArea+0x58>)
 8011cd2:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8011cd6:	f7f7 fbd7 	bl	8009488 <WM__IsAncestor>
 8011cda:	2800      	cmp	r0, #0
 8011cdc:	d1e8      	bne.n	8011cb0 <WM__IsInModalArea+0xc>
 8011cde:	bd70      	pop	{r4, r5, r6, pc}
 8011ce0:	b918      	cbnz	r0, 8011cea <WM__IsInModalArea+0x46>
 8011ce2:	1ae3      	subs	r3, r4, r3
 8011ce4:	4258      	negs	r0, r3
 8011ce6:	4158      	adcs	r0, r3
 8011ce8:	bd70      	pop	{r4, r5, r6, pc}
 8011cea:	2001      	movs	r0, #1
 8011cec:	bd70      	pop	{r4, r5, r6, pc}
 8011cee:	bf00      	nop
 8011cf0:	20000368 	.word	0x20000368
 8011cf4:	2001b340 	.word	0x2001b340
 8011cf8:	2001b48c 	.word	0x2001b48c
 8011cfc:	2001b320 	.word	0x2001b320

08011d00 <WM__SendPIDMessage>:
 8011d00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d02:	4606      	mov	r6, r0
 8011d04:	460c      	mov	r4, r1
 8011d06:	c90f      	ldmia	r1, {r0, r1, r2, r3}
 8011d08:	b085      	sub	sp, #20
 8011d0a:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 8011d0e:	230d      	movs	r3, #13
 8011d10:	9602      	str	r6, [sp, #8]
 8011d12:	9300      	str	r3, [sp, #0]
 8011d14:	4637      	mov	r7, r6
 8011d16:	4638      	mov	r0, r7
 8011d18:	f7f7 fe79 	bl	8009a0e <WM_IsWindow>
 8011d1c:	b150      	cbz	r0, 8011d34 <WM__SendPIDMessage+0x34>
 8011d1e:	4638      	mov	r0, r7
 8011d20:	f7f7 ff0a 	bl	8009b38 <WM_GetParent>
 8011d24:	4607      	mov	r7, r0
 8011d26:	2800      	cmp	r0, #0
 8011d28:	d0f5      	beq.n	8011d16 <WM__SendPIDMessage+0x16>
 8011d2a:	4669      	mov	r1, sp
 8011d2c:	9403      	str	r4, [sp, #12]
 8011d2e:	f003 fcf3 	bl	8015718 <WM__SendMessageIfEnabled>
 8011d32:	e7f0      	b.n	8011d16 <WM__SendPIDMessage+0x16>
 8011d34:	4630      	mov	r0, r6
 8011d36:	4621      	mov	r1, r4
 8011d38:	f003 fcee 	bl	8015718 <WM__SendMessageIfEnabled>
 8011d3c:	b005      	add	sp, #20
 8011d3e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011d40 <WM__SendTouchMessage>:
 8011d40:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011d42:	68cc      	ldr	r4, [r1, #12]
 8011d44:	4606      	mov	r6, r0
 8011d46:	460d      	mov	r5, r1
 8011d48:	b194      	cbz	r4, 8011d70 <WM__SendTouchMessage+0x30>
 8011d4a:	f7fe fb79 	bl	8010440 <GUI_ALLOC_LockH>
 8011d4e:	ab02      	add	r3, sp, #8
 8011d50:	4602      	mov	r2, r0
 8011d52:	f843 0d04 	str.w	r0, [r3, #-4]!
 8011d56:	6821      	ldr	r1, [r4, #0]
 8011d58:	f9b0 0000 	ldrsh.w	r0, [r0]
 8011d5c:	1a09      	subs	r1, r1, r0
 8011d5e:	6021      	str	r1, [r4, #0]
 8011d60:	f9b2 1002 	ldrsh.w	r1, [r2, #2]
 8011d64:	6862      	ldr	r2, [r4, #4]
 8011d66:	1a52      	subs	r2, r2, r1
 8011d68:	6062      	str	r2, [r4, #4]
 8011d6a:	4618      	mov	r0, r3
 8011d6c:	f7fe fb76 	bl	801045c <GUI_ALLOC_UnlockH>
 8011d70:	4630      	mov	r0, r6
 8011d72:	4629      	mov	r1, r5
 8011d74:	f7ff ffc4 	bl	8011d00 <WM__SendPIDMessage>
 8011d78:	b002      	add	sp, #8
 8011d7a:	bd70      	pop	{r4, r5, r6, pc}

08011d7c <WM_HandlePID>:
 8011d7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d80:	b097      	sub	sp, #92	; 0x5c
 8011d82:	ae06      	add	r6, sp, #24
 8011d84:	f04f 080c 	mov.w	r8, #12
 8011d88:	2100      	movs	r1, #0
 8011d8a:	4642      	mov	r2, r8
 8011d8c:	4630      	mov	r0, r6
 8011d8e:	f004 fa18 	bl	80161c2 <memset>
 8011d92:	f7fd f98d 	bl	800f0b0 <GUI_PID_IsEmpty>
 8011d96:	b108      	cbz	r0, 8011d9c <WM_HandlePID+0x20>
 8011d98:	2000      	movs	r0, #0
 8011d9a:	e1aa      	b.n	80120f2 <WM_HandlePID+0x376>
 8011d9c:	ac09      	add	r4, sp, #36	; 0x24
 8011d9e:	4620      	mov	r0, r4
 8011da0:	f7fd f90a 	bl	800efb8 <GUI_PID_GetState>
 8011da4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011da6:	4dad      	ldr	r5, [pc, #692]	; (801205c <WM_HandlePID+0x2e0>)
 8011da8:	4fad      	ldr	r7, [pc, #692]	; (8012060 <WM_HandlePID+0x2e4>)
 8011daa:	1c5a      	adds	r2, r3, #1
 8011dac:	d112      	bne.n	8011dd4 <WM_HandlePID+0x58>
 8011dae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011db0:	3301      	adds	r3, #1
 8011db2:	d11e      	bne.n	8011df2 <WM_HandlePID+0x76>
 8011db4:	682b      	ldr	r3, [r5, #0]
 8011db6:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 8011dba:	fb08 f803 	mul.w	r8, r8, r3
 8011dbe:	eb07 0308 	add.w	r3, r7, r8
 8011dc2:	7a19      	ldrb	r1, [r3, #8]
 8011dc4:	4291      	cmp	r1, r2
 8011dc6:	d0e7      	beq.n	8011d98 <WM_HandlePID+0x1c>
 8011dc8:	f857 2008 	ldr.w	r2, [r7, r8]
 8011dcc:	685b      	ldr	r3, [r3, #4]
 8011dce:	9209      	str	r2, [sp, #36]	; 0x24
 8011dd0:	930a      	str	r3, [sp, #40]	; 0x28
 8011dd2:	e00e      	b.n	8011df2 <WM_HandlePID+0x76>
 8011dd4:	2b00      	cmp	r3, #0
 8011dd6:	db0c      	blt.n	8011df2 <WM_HandlePID+0x76>
 8011dd8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8011dda:	2a00      	cmp	r2, #0
 8011ddc:	db09      	blt.n	8011df2 <WM_HandlePID+0x76>
 8011dde:	49a1      	ldr	r1, [pc, #644]	; (8012064 <WM_HandlePID+0x2e8>)
 8011de0:	f9b1 1000 	ldrsh.w	r1, [r1]
 8011de4:	440b      	add	r3, r1
 8011de6:	9309      	str	r3, [sp, #36]	; 0x24
 8011de8:	4b9f      	ldr	r3, [pc, #636]	; (8012068 <WM_HandlePID+0x2ec>)
 8011dea:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011dee:	441a      	add	r2, r3
 8011df0:	920a      	str	r2, [sp, #40]	; 0x28
 8011df2:	a804      	add	r0, sp, #16
 8011df4:	f000 faf4 	bl	80123e0 <WM__AddCriticalHandle>
 8011df8:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8011dfc:	2b01      	cmp	r3, #1
 8011dfe:	bf98      	it	ls
 8011e00:	602b      	strls	r3, [r5, #0]
 8011e02:	6828      	ldr	r0, [r5, #0]
 8011e04:	a901      	add	r1, sp, #4
 8011e06:	aa02      	add	r2, sp, #8
 8011e08:	f7fd f870 	bl	800eeec <GUI_GetLayerPosEx>
 8011e0c:	9b01      	ldr	r3, [sp, #4]
 8011e0e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011e10:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011e12:	1ac0      	subs	r0, r0, r3
 8011e14:	9b02      	ldr	r3, [sp, #8]
 8011e16:	9009      	str	r0, [sp, #36]	; 0x24
 8011e18:	1ac9      	subs	r1, r1, r3
 8011e1a:	682b      	ldr	r3, [r5, #0]
 8011e1c:	910a      	str	r1, [sp, #40]	; 0x28
 8011e1e:	220c      	movs	r2, #12
 8011e20:	435a      	muls	r2, r3
 8011e22:	18bb      	adds	r3, r7, r2
 8011e24:	58ba      	ldr	r2, [r7, r2]
 8011e26:	4282      	cmp	r2, r0
 8011e28:	d108      	bne.n	8011e3c <WM_HandlePID+0xc0>
 8011e2a:	685a      	ldr	r2, [r3, #4]
 8011e2c:	428a      	cmp	r2, r1
 8011e2e:	d105      	bne.n	8011e3c <WM_HandlePID+0xc0>
 8011e30:	7a1a      	ldrb	r2, [r3, #8]
 8011e32:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8011e36:	429a      	cmp	r2, r3
 8011e38:	f000 8156 	beq.w	80120e8 <WM_HandlePID+0x36c>
 8011e3c:	f89d 202d 	ldrb.w	r2, [sp, #45]	; 0x2d
 8011e40:	f002 fffe 	bl	8014e40 <GUI_CURSOR_SetPositionEx>
 8011e44:	4b89      	ldr	r3, [pc, #548]	; (801206c <WM_HandlePID+0x2f0>)
 8011e46:	681b      	ldr	r3, [r3, #0]
 8011e48:	b113      	cbz	r3, 8011e50 <WM_HandlePID+0xd4>
 8011e4a:	4620      	mov	r0, r4
 8011e4c:	2100      	movs	r1, #0
 8011e4e:	4798      	blx	r3
 8011e50:	682b      	ldr	r3, [r5, #0]
 8011e52:	4a87      	ldr	r2, [pc, #540]	; (8012070 <WM_HandlePID+0x2f4>)
 8011e54:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8011e58:	b918      	cbnz	r0, 8011e62 <WM_HandlePID+0xe6>
 8011e5a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011e5c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011e5e:	f000 fa5f 	bl	8012320 <WM_Screen2hWin>
 8011e62:	4b84      	ldr	r3, [pc, #528]	; (8012074 <WM_HandlePID+0x2f8>)
 8011e64:	9005      	str	r0, [sp, #20]
 8011e66:	681b      	ldr	r3, [r3, #0]
 8011e68:	b113      	cbz	r3, 8011e70 <WM_HandlePID+0xf4>
 8011e6a:	9905      	ldr	r1, [sp, #20]
 8011e6c:	4620      	mov	r0, r4
 8011e6e:	4798      	blx	r3
 8011e70:	4981      	ldr	r1, [pc, #516]	; (8012078 <WM_HandlePID+0x2fc>)
 8011e72:	682b      	ldr	r3, [r5, #0]
 8011e74:	f8df 91e4 	ldr.w	r9, [pc, #484]	; 801205c <WM_HandlePID+0x2e0>
 8011e78:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8011e7c:	4688      	mov	r8, r1
 8011e7e:	685a      	ldr	r2, [r3, #4]
 8011e80:	9805      	ldr	r0, [sp, #20]
 8011e82:	b312      	cbz	r2, 8011eca <WM_HandlePID+0x14e>
 8011e84:	4282      	cmp	r2, r0
 8011e86:	d020      	beq.n	8011eca <WM_HandlePID+0x14e>
 8011e88:	6858      	ldr	r0, [r3, #4]
 8011e8a:	f7ff ff0b 	bl	8011ca4 <WM__IsInModalArea>
 8011e8e:	b1e0      	cbz	r0, 8011eca <WM_HandlePID+0x14e>
 8011e90:	f8d9 3000 	ldr.w	r3, [r9]
 8011e94:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8011e98:	6858      	ldr	r0, [r3, #4]
 8011e9a:	f7ff fea7 	bl	8011bec <WM__IsEnabled>
 8011e9e:	b1a0      	cbz	r0, 8011eca <WM_HandlePID+0x14e>
 8011ea0:	2312      	movs	r3, #18
 8011ea2:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8011ea6:	9312      	str	r3, [sp, #72]	; 0x48
 8011ea8:	f8d9 3000 	ldr.w	r3, [r9]
 8011eac:	9615      	str	r6, [sp, #84]	; 0x54
 8011eae:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8011eb2:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8011eb6:	6858      	ldr	r0, [r3, #4]
 8011eb8:	a912      	add	r1, sp, #72	; 0x48
 8011eba:	f7ff ff41 	bl	8011d40 <WM__SendTouchMessage>
 8011ebe:	f8d9 3000 	ldr.w	r3, [r9]
 8011ec2:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8011ec6:	2200      	movs	r2, #0
 8011ec8:	605a      	str	r2, [r3, #4]
 8011eca:	9805      	ldr	r0, [sp, #20]
 8011ecc:	f7ff feea 	bl	8011ca4 <WM__IsInModalArea>
 8011ed0:	b908      	cbnz	r0, 8011ed6 <WM_HandlePID+0x15a>
 8011ed2:	2600      	movs	r6, #0
 8011ed4:	e0fb      	b.n	80120ce <WM_HandlePID+0x352>
 8011ed6:	682b      	ldr	r3, [r5, #0]
 8011ed8:	9905      	ldr	r1, [sp, #20]
 8011eda:	f8df a180 	ldr.w	sl, [pc, #384]	; 801205c <WM_HandlePID+0x2e0>
 8011ede:	f8df 9180 	ldr.w	r9, [pc, #384]	; 8012060 <WM_HandlePID+0x2e4>
 8011ee2:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8011ee6:	f04f 080c 	mov.w	r8, #12
 8011eea:	fb08 7303 	mla	r3, r8, r3, r7
 8011eee:	6051      	str	r1, [r2, #4]
 8011ef0:	7a1a      	ldrb	r2, [r3, #8]
 8011ef2:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8011ef6:	429a      	cmp	r2, r3
 8011ef8:	d062      	beq.n	8011fc0 <WM_HandlePID+0x244>
 8011efa:	9b05      	ldr	r3, [sp, #20]
 8011efc:	2b00      	cmp	r3, #0
 8011efe:	d05f      	beq.n	8011fc0 <WM_HandlePID+0x244>
 8011f00:	9805      	ldr	r0, [sp, #20]
 8011f02:	f7fe fa9d 	bl	8010440 <GUI_ALLOC_LockH>
 8011f06:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8011f0a:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
 8011f0e:	f8da 3000 	ldr.w	r3, [sl]
 8011f12:	9003      	str	r0, [sp, #12]
 8011f14:	fb08 9303 	mla	r3, r8, r3, r9
 8011f18:	7a1b      	ldrb	r3, [r3, #8]
 8011f1a:	f88d 3045 	strb.w	r3, [sp, #69]	; 0x45
 8011f1e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011f22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011f24:	1a9b      	subs	r3, r3, r2
 8011f26:	930f      	str	r3, [sp, #60]	; 0x3c
 8011f28:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011f2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011f2e:	eb0d 0008 	add.w	r0, sp, r8
 8011f32:	1a9b      	subs	r3, r3, r2
 8011f34:	9310      	str	r3, [sp, #64]	; 0x40
 8011f36:	f7fe fa91 	bl	801045c <GUI_ALLOC_UnlockH>
 8011f3a:	f8da e000 	ldr.w	lr, [sl]
 8011f3e:	f8df a13c 	ldr.w	sl, [pc, #316]	; 801207c <WM_HandlePID+0x300>
 8011f42:	ab0f      	add	r3, sp, #60	; 0x3c
 8011f44:	9315      	str	r3, [sp, #84]	; 0x54
 8011f46:	2311      	movs	r3, #17
 8011f48:	9312      	str	r3, [sp, #72]	; 0x48
 8011f4a:	fb08 930e 	mla	r3, r8, lr, r9
 8011f4e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8011f52:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 8011f56:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8011f5a:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 8011f5e:	721a      	strb	r2, [r3, #8]
 8011f60:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8011f64:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011f68:	b133      	cbz	r3, 8011f78 <WM_HandlePID+0x1fc>
 8011f6a:	eb0a 030e 	add.w	r3, sl, lr
 8011f6e:	f8d3 9004 	ldr.w	r9, [r3, #4]
 8011f72:	9a05      	ldr	r2, [sp, #20]
 8011f74:	605a      	str	r2, [r3, #4]
 8011f76:	e000      	b.n	8011f7a <WM_HandlePID+0x1fe>
 8011f78:	4699      	mov	r9, r3
 8011f7a:	eb0a 030e 	add.w	r3, sl, lr
 8011f7e:	a912      	add	r1, sp, #72	; 0x48
 8011f80:	f8d3 b004 	ldr.w	fp, [r3, #4]
 8011f84:	9805      	ldr	r0, [sp, #20]
 8011f86:	f003 fbc7 	bl	8015718 <WM__SendMessageIfEnabled>
 8011f8a:	682b      	ldr	r3, [r5, #0]
 8011f8c:	eb0a 02c3 	add.w	r2, sl, r3, lsl #3
 8011f90:	6851      	ldr	r1, [r2, #4]
 8011f92:	458b      	cmp	fp, r1
 8011f94:	bf1c      	itt	ne
 8011f96:	6852      	ldrne	r2, [r2, #4]
 8011f98:	9205      	strne	r2, [sp, #20]
 8011f9a:	220c      	movs	r2, #12
 8011f9c:	fb02 7303 	mla	r3, r2, r3, r7
 8011fa0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8011fa4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8011fa8:	f1b9 0f00 	cmp.w	r9, #0
 8011fac:	d008      	beq.n	8011fc0 <WM_HandlePID+0x244>
 8011fae:	4648      	mov	r0, r9
 8011fb0:	f7f7 fd2d 	bl	8009a0e <WM_IsWindow>
 8011fb4:	b120      	cbz	r0, 8011fc0 <WM_HandlePID+0x244>
 8011fb6:	682b      	ldr	r3, [r5, #0]
 8011fb8:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 8011fbc:	f8c3 9004 	str.w	r9, [r3, #4]
 8011fc0:	682a      	ldr	r2, [r5, #0]
 8011fc2:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8011fc6:	210c      	movs	r1, #12
 8011fc8:	4351      	muls	r1, r2
 8011fca:	1878      	adds	r0, r7, r1
 8011fcc:	f890 8008 	ldrb.w	r8, [r0, #8]
 8011fd0:	ea53 0808 	orrs.w	r8, r3, r8
 8011fd4:	d064      	beq.n	80120a0 <WM_HandlePID+0x324>
 8011fd6:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 801207c <WM_HandlePID+0x300>
 8011fda:	f44f 7e10 	mov.w	lr, #576	; 0x240
 8011fde:	00d2      	lsls	r2, r2, #3
 8011fe0:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
 8011fe4:	eb08 0e02 	add.w	lr, r8, r2
 8011fe8:	f8de 9004 	ldr.w	r9, [lr, #4]
 8011fec:	f8dd c014 	ldr.w	ip, [sp, #20]
 8011ff0:	45e1      	cmp	r9, ip
 8011ff2:	d01c      	beq.n	801202e <WM_HandlePID+0x2b2>
 8011ff4:	f8de e004 	ldr.w	lr, [lr, #4]
 8011ff8:	f1be 0f00 	cmp.w	lr, #0
 8011ffc:	d017      	beq.n	801202e <WM_HandlePID+0x2b2>
 8011ffe:	b113      	cbz	r3, 8012006 <WM_HandlePID+0x28a>
 8012000:	2300      	movs	r3, #0
 8012002:	9315      	str	r3, [sp, #84]	; 0x54
 8012004:	e009      	b.n	801201a <WM_HandlePID+0x29e>
 8012006:	f8df e058 	ldr.w	lr, [pc, #88]	; 8012060 <WM_HandlePID+0x2e4>
 801200a:	f88d 3020 	strb.w	r3, [sp, #32]
 801200e:	f85e 1001 	ldr.w	r1, [lr, r1]
 8012012:	9106      	str	r1, [sp, #24]
 8012014:	6841      	ldr	r1, [r0, #4]
 8012016:	9107      	str	r1, [sp, #28]
 8012018:	9615      	str	r6, [sp, #84]	; 0x54
 801201a:	4442      	add	r2, r8
 801201c:	a912      	add	r1, sp, #72	; 0x48
 801201e:	6850      	ldr	r0, [r2, #4]
 8012020:	f7ff fe8e 	bl	8011d40 <WM__SendTouchMessage>
 8012024:	682b      	ldr	r3, [r5, #0]
 8012026:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 801202a:	2200      	movs	r2, #0
 801202c:	605a      	str	r2, [r3, #4]
 801202e:	682b      	ldr	r3, [r5, #0]
 8012030:	f89d e02c 	ldrb.w	lr, [sp, #44]	; 0x2c
 8012034:	220c      	movs	r2, #12
 8012036:	fb02 7203 	mla	r2, r2, r3, r7
 801203a:	f882 e008 	strb.w	lr, [r2, #8]
 801203e:	9a05      	ldr	r2, [sp, #20]
 8012040:	2a00      	cmp	r2, #0
 8012042:	d043      	beq.n	80120cc <WM_HandlePID+0x350>
 8012044:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8012048:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 801204c:	f1be 0f00 	cmp.w	lr, #0
 8012050:	d016      	beq.n	8012080 <WM_HandlePID+0x304>
 8012052:	9a05      	ldr	r2, [sp, #20]
 8012054:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8012058:	e01b      	b.n	8012092 <WM_HandlePID+0x316>
 801205a:	bf00      	nop
 801205c:	2001b340 	.word	0x2001b340
 8012060:	200196d0 	.word	0x200196d0
 8012064:	2001b384 	.word	0x2001b384
 8012068:	2001b378 	.word	0x2001b378
 801206c:	200196c8 	.word	0x200196c8
 8012070:	2001b35c 	.word	0x2001b35c
 8012074:	200196cc 	.word	0x200196cc
 8012078:	2001b46c 	.word	0x2001b46c
 801207c:	2001b47c 	.word	0x2001b47c
 8012080:	4b1d      	ldr	r3, [pc, #116]	; (80120f8 <WM_HandlePID+0x37c>)
 8012082:	781b      	ldrb	r3, [r3, #0]
 8012084:	b10b      	cbz	r3, 801208a <WM_HandlePID+0x30e>
 8012086:	f7f7 fbad 	bl	80097e4 <WM_ReleaseCapture>
 801208a:	682b      	ldr	r3, [r5, #0]
 801208c:	2200      	movs	r2, #0
 801208e:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8012092:	605a      	str	r2, [r3, #4]
 8012094:	9805      	ldr	r0, [sp, #20]
 8012096:	9615      	str	r6, [sp, #84]	; 0x54
 8012098:	a912      	add	r1, sp, #72	; 0x48
 801209a:	f7ff fe51 	bl	8011d40 <WM__SendTouchMessage>
 801209e:	e015      	b.n	80120cc <WM_HandlePID+0x350>
 80120a0:	9b05      	ldr	r3, [sp, #20]
 80120a2:	2b00      	cmp	r3, #0
 80120a4:	f43f af15 	beq.w	8011ed2 <WM_HandlePID+0x156>
 80120a8:	9805      	ldr	r0, [sp, #20]
 80120aa:	f7ff fd9f 	bl	8011bec <WM__IsEnabled>
 80120ae:	2800      	cmp	r0, #0
 80120b0:	f43f af0f 	beq.w	8011ed2 <WM_HandlePID+0x156>
 80120b4:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80120b8:	2310      	movs	r3, #16
 80120ba:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 80120be:	9805      	ldr	r0, [sp, #20]
 80120c0:	9312      	str	r3, [sp, #72]	; 0x48
 80120c2:	a912      	add	r1, sp, #72	; 0x48
 80120c4:	9615      	str	r6, [sp, #84]	; 0x54
 80120c6:	f7ff fe3b 	bl	8011d40 <WM__SendTouchMessage>
 80120ca:	e702      	b.n	8011ed2 <WM_HandlePID+0x156>
 80120cc:	2601      	movs	r6, #1
 80120ce:	682b      	ldr	r3, [r5, #0]
 80120d0:	220c      	movs	r2, #12
 80120d2:	fb02 7703 	mla	r7, r2, r3, r7
 80120d6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80120da:	e887 0007 	stmia.w	r7, {r0, r1, r2}
 80120de:	4620      	mov	r0, r4
 80120e0:	4619      	mov	r1, r3
 80120e2:	f000 f92d 	bl	8012340 <WM_PID__SetPrevState>
 80120e6:	e000      	b.n	80120ea <WM_HandlePID+0x36e>
 80120e8:	2600      	movs	r6, #0
 80120ea:	a804      	add	r0, sp, #16
 80120ec:	f000 f980 	bl	80123f0 <WM__RemoveCriticalHandle>
 80120f0:	4630      	mov	r0, r6
 80120f2:	b017      	add	sp, #92	; 0x5c
 80120f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80120f8:	2001b344 	.word	0x2001b344

080120fc <_cbTimer>:
 80120fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80120fe:	4604      	mov	r4, r0
 8012100:	2100      	movs	r1, #0
 8012102:	4668      	mov	r0, sp
 8012104:	2210      	movs	r2, #16
 8012106:	f004 f85c 	bl	80161c2 <memset>
 801210a:	6860      	ldr	r0, [r4, #4]
 801210c:	b150      	cbz	r0, 8012124 <_cbTimer+0x28>
 801210e:	f7fe f98d 	bl	801042c <GUI_ALLOC_h2p>
 8012112:	f240 1313 	movw	r3, #275	; 0x113
 8012116:	6840      	ldr	r0, [r0, #4]
 8012118:	9300      	str	r3, [sp, #0]
 801211a:	4669      	mov	r1, sp
 801211c:	6863      	ldr	r3, [r4, #4]
 801211e:	9303      	str	r3, [sp, #12]
 8012120:	f7f8 faaa 	bl	800a678 <WM_SendMessage>
 8012124:	b004      	add	sp, #16
 8012126:	bd10      	pop	{r4, pc}

08012128 <WM_DeleteTimer>:
 8012128:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801212a:	4605      	mov	r5, r0
 801212c:	b168      	cbz	r0, 801214a <WM_DeleteTimer+0x22>
 801212e:	f7fe f987 	bl	8010440 <GUI_ALLOC_LockH>
 8012132:	ac02      	add	r4, sp, #8
 8012134:	f844 0d04 	str.w	r0, [r4, #-4]!
 8012138:	6800      	ldr	r0, [r0, #0]
 801213a:	f7fc fa3b 	bl	800e5b4 <GUI_TIMER_Delete>
 801213e:	4620      	mov	r0, r4
 8012140:	f7fe f98c 	bl	801045c <GUI_ALLOC_UnlockH>
 8012144:	4628      	mov	r0, r5
 8012146:	f7fe f9b5 	bl	80104b4 <GUI_ALLOC_Free>
 801214a:	b003      	add	sp, #12
 801214c:	bd30      	pop	{r4, r5, pc}

0801214e <WM__DeleteAssocTimer>:
 801214e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012150:	4605      	mov	r5, r0
 8012152:	a801      	add	r0, sp, #4
 8012154:	f7fc f9ac 	bl	800e4b0 <GUI_TIMER__GetFirstTimer>
 8012158:	4604      	mov	r4, r0
 801215a:	b1dc      	cbz	r4, 8012194 <WM__DeleteAssocTimer+0x46>
 801215c:	4620      	mov	r0, r4
 801215e:	2101      	movs	r1, #1
 8012160:	f7fc fa83 	bl	800e66a <GUI_TIMER_GetFlag>
 8012164:	9b01      	ldr	r3, [sp, #4]
 8012166:	b183      	cbz	r3, 801218a <WM__DeleteAssocTimer+0x3c>
 8012168:	b178      	cbz	r0, 801218a <WM__DeleteAssocTimer+0x3c>
 801216a:	4618      	mov	r0, r3
 801216c:	f7fe f95e 	bl	801042c <GUI_ALLOC_h2p>
 8012170:	6843      	ldr	r3, [r0, #4]
 8012172:	42ab      	cmp	r3, r5
 8012174:	d109      	bne.n	801218a <WM__DeleteAssocTimer+0x3c>
 8012176:	4620      	mov	r0, r4
 8012178:	a901      	add	r1, sp, #4
 801217a:	9e01      	ldr	r6, [sp, #4]
 801217c:	f7fc f9b0 	bl	800e4e0 <GUI_TIMER__GetNextTimerLin>
 8012180:	4604      	mov	r4, r0
 8012182:	4630      	mov	r0, r6
 8012184:	f7ff ffd0 	bl	8012128 <WM_DeleteTimer>
 8012188:	e7e7      	b.n	801215a <WM__DeleteAssocTimer+0xc>
 801218a:	4620      	mov	r0, r4
 801218c:	a901      	add	r1, sp, #4
 801218e:	f7fc f9a7 	bl	800e4e0 <GUI_TIMER__GetNextTimerLin>
 8012192:	e7e1      	b.n	8012158 <WM__DeleteAssocTimer+0xa>
 8012194:	b002      	add	sp, #8
 8012196:	bd70      	pop	{r4, r5, r6, pc}

08012198 <WM_CreateTimer>:
 8012198:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801219c:	4680      	mov	r8, r0
 801219e:	200c      	movs	r0, #12
 80121a0:	460f      	mov	r7, r1
 80121a2:	4616      	mov	r6, r2
 80121a4:	f7fe fbb9 	bl	801091a <GUI_ALLOC_AllocZero>
 80121a8:	4604      	mov	r4, r0
 80121aa:	b1f0      	cbz	r0, 80121ea <WM_CreateTimer+0x52>
 80121ac:	f7fc fa72 	bl	800e694 <GUI_GetTime>
 80121b0:	4622      	mov	r2, r4
 80121b2:	1981      	adds	r1, r0, r6
 80121b4:	2301      	movs	r3, #1
 80121b6:	480f      	ldr	r0, [pc, #60]	; (80121f4 <WM_CreateTimer+0x5c>)
 80121b8:	f7fc f9ae 	bl	800e518 <GUI_TIMER_Create>
 80121bc:	4605      	mov	r5, r0
 80121be:	4620      	mov	r0, r4
 80121c0:	b185      	cbz	r5, 80121e4 <WM_CreateTimer+0x4c>
 80121c2:	f7fe f93d 	bl	8010440 <GUI_ALLOC_LockH>
 80121c6:	4603      	mov	r3, r0
 80121c8:	a802      	add	r0, sp, #8
 80121ca:	f8c3 8004 	str.w	r8, [r3, #4]
 80121ce:	f840 3d04 	str.w	r3, [r0, #-4]!
 80121d2:	609f      	str	r7, [r3, #8]
 80121d4:	601d      	str	r5, [r3, #0]
 80121d6:	f7fe f941 	bl	801045c <GUI_ALLOC_UnlockH>
 80121da:	4628      	mov	r0, r5
 80121dc:	4631      	mov	r1, r6
 80121de:	f7fc fa1d 	bl	800e61c <GUI_TIMER_SetPeriod>
 80121e2:	e002      	b.n	80121ea <WM_CreateTimer+0x52>
 80121e4:	f7fe f966 	bl	80104b4 <GUI_ALLOC_Free>
 80121e8:	462c      	mov	r4, r5
 80121ea:	4620      	mov	r0, r4
 80121ec:	b002      	add	sp, #8
 80121ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80121f2:	bf00      	nop
 80121f4:	080120fd 	.word	0x080120fd

080121f8 <WM_RestartTimer>:
 80121f8:	b513      	push	{r0, r1, r4, lr}
 80121fa:	460c      	mov	r4, r1
 80121fc:	b180      	cbz	r0, 8012220 <WM_RestartTimer+0x28>
 80121fe:	f7fe f91f 	bl	8010440 <GUI_ALLOC_LockH>
 8012202:	9001      	str	r0, [sp, #4]
 8012204:	b11c      	cbz	r4, 801220e <WM_RestartTimer+0x16>
 8012206:	6800      	ldr	r0, [r0, #0]
 8012208:	4621      	mov	r1, r4
 801220a:	f7fc fa07 	bl	800e61c <GUI_TIMER_SetPeriod>
 801220e:	ac02      	add	r4, sp, #8
 8012210:	f854 3d04 	ldr.w	r3, [r4, #-4]!
 8012214:	6818      	ldr	r0, [r3, #0]
 8012216:	f7fc fa0f 	bl	800e638 <GUI_TIMER_Restart>
 801221a:	4620      	mov	r0, r4
 801221c:	f7fe f91e 	bl	801045c <GUI_ALLOC_UnlockH>
 8012220:	b002      	add	sp, #8
 8012222:	bd10      	pop	{r4, pc}

08012224 <WM_SetSize>:
 8012224:	e92d 41e7 	stmdb	sp!, {r0, r1, r2, r5, r6, r7, r8, lr}
 8012228:	460e      	mov	r6, r1
 801222a:	4690      	mov	r8, r2
 801222c:	4607      	mov	r7, r0
 801222e:	b1d0      	cbz	r0, 8012266 <WM_SetSize+0x42>
 8012230:	f7fe f906 	bl	8010440 <GUI_ALLOC_LockH>
 8012234:	4603      	mov	r3, r0
 8012236:	a802      	add	r0, sp, #8
 8012238:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801223c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012240:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 8012244:	f840 3d04 	str.w	r3, [r0, #-4]!
 8012248:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801224c:	1a8a      	subs	r2, r1, r2
 801224e:	1aed      	subs	r5, r5, r3
 8012250:	43d2      	mvns	r2, r2
 8012252:	43ed      	mvns	r5, r5
 8012254:	4416      	add	r6, r2
 8012256:	4445      	add	r5, r8
 8012258:	f7fe f900 	bl	801045c <GUI_ALLOC_UnlockH>
 801225c:	4638      	mov	r0, r7
 801225e:	4631      	mov	r1, r6
 8012260:	462a      	mov	r2, r5
 8012262:	f7f7 fac3 	bl	80097ec <WM_ResizeWindow>
 8012266:	b003      	add	sp, #12
 8012268:	e8bd 81e0 	ldmia.w	sp!, {r5, r6, r7, r8, pc}

0801226c <WM_SendToParent>:
 801226c:	b538      	push	{r3, r4, r5, lr}
 801226e:	4605      	mov	r5, r0
 8012270:	460c      	mov	r4, r1
 8012272:	b141      	cbz	r1, 8012286 <WM_SendToParent+0x1a>
 8012274:	f7f7 fc60 	bl	8009b38 <WM_GetParent>
 8012278:	b128      	cbz	r0, 8012286 <WM_SendToParent+0x1a>
 801227a:	60a5      	str	r5, [r4, #8]
 801227c:	4621      	mov	r1, r4
 801227e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012282:	f7ff bc95 	b.w	8011bb0 <WM__SendMessage>
 8012286:	bd38      	pop	{r3, r4, r5, pc}

08012288 <WM__IsInWindow>:
 8012288:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801228a:	f013 0302 	ands.w	r3, r3, #2
 801228e:	d012      	beq.n	80122b6 <WM__IsInWindow+0x2e>
 8012290:	f9b0 3000 	ldrsh.w	r3, [r0]
 8012294:	4299      	cmp	r1, r3
 8012296:	db10      	blt.n	80122ba <WM__IsInWindow+0x32>
 8012298:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801229c:	4299      	cmp	r1, r3
 801229e:	dc0c      	bgt.n	80122ba <WM__IsInWindow+0x32>
 80122a0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80122a4:	429a      	cmp	r2, r3
 80122a6:	db08      	blt.n	80122ba <WM__IsInWindow+0x32>
 80122a8:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80122ac:	4282      	cmp	r2, r0
 80122ae:	bfcc      	ite	gt
 80122b0:	2000      	movgt	r0, #0
 80122b2:	2001      	movle	r0, #1
 80122b4:	4770      	bx	lr
 80122b6:	4618      	mov	r0, r3
 80122b8:	4770      	bx	lr
 80122ba:	2000      	movs	r0, #0
 80122bc:	4770      	bx	lr

080122be <_Screen2hWin>:
 80122be:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80122c2:	460e      	mov	r6, r1
 80122c4:	4617      	mov	r7, r2
 80122c6:	4698      	mov	r8, r3
 80122c8:	4605      	mov	r5, r0
 80122ca:	b320      	cbz	r0, 8012316 <_Screen2hWin+0x58>
 80122cc:	f7fe f8b8 	bl	8010440 <GUI_ALLOC_LockH>
 80122d0:	4639      	mov	r1, r7
 80122d2:	4642      	mov	r2, r8
 80122d4:	4604      	mov	r4, r0
 80122d6:	9001      	str	r0, [sp, #4]
 80122d8:	f7ff ffd6 	bl	8012288 <WM__IsInWindow>
 80122dc:	4681      	mov	r9, r0
 80122de:	b920      	cbnz	r0, 80122ea <_Screen2hWin+0x2c>
 80122e0:	a801      	add	r0, sp, #4
 80122e2:	f7fe f8bb 	bl	801045c <GUI_ALLOC_UnlockH>
 80122e6:	4648      	mov	r0, r9
 80122e8:	e016      	b.n	8012318 <_Screen2hWin+0x5a>
 80122ea:	69e4      	ldr	r4, [r4, #28]
 80122ec:	b91c      	cbnz	r4, 80122f6 <_Screen2hWin+0x38>
 80122ee:	a801      	add	r0, sp, #4
 80122f0:	f7fe f8b4 	bl	801045c <GUI_ALLOC_UnlockH>
 80122f4:	e00f      	b.n	8012316 <_Screen2hWin+0x58>
 80122f6:	42b4      	cmp	r4, r6
 80122f8:	d0f9      	beq.n	80122ee <_Screen2hWin+0x30>
 80122fa:	4620      	mov	r0, r4
 80122fc:	4631      	mov	r1, r6
 80122fe:	463a      	mov	r2, r7
 8012300:	4643      	mov	r3, r8
 8012302:	f7ff ffdc 	bl	80122be <_Screen2hWin>
 8012306:	2800      	cmp	r0, #0
 8012308:	bf18      	it	ne
 801230a:	4605      	movne	r5, r0
 801230c:	4620      	mov	r0, r4
 801230e:	f7fe f88d 	bl	801042c <GUI_ALLOC_h2p>
 8012312:	6a04      	ldr	r4, [r0, #32]
 8012314:	e7ea      	b.n	80122ec <_Screen2hWin+0x2e>
 8012316:	4628      	mov	r0, r5
 8012318:	b003      	add	sp, #12
 801231a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08012320 <WM_Screen2hWin>:
 8012320:	b570      	push	{r4, r5, r6, lr}
 8012322:	4b06      	ldr	r3, [pc, #24]	; (801233c <WM_Screen2hWin+0x1c>)
 8012324:	460c      	mov	r4, r1
 8012326:	4605      	mov	r5, r0
 8012328:	6818      	ldr	r0, [r3, #0]
 801232a:	f000 f84d 	bl	80123c8 <WM_GetDesktopWindowEx>
 801232e:	462a      	mov	r2, r5
 8012330:	4623      	mov	r3, r4
 8012332:	2100      	movs	r1, #0
 8012334:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012338:	f7ff bfc1 	b.w	80122be <_Screen2hWin>
 801233c:	2001b340 	.word	0x2001b340

08012340 <WM_PID__SetPrevState>:
 8012340:	4b03      	ldr	r3, [pc, #12]	; (8012350 <WM_PID__SetPrevState+0x10>)
 8012342:	220c      	movs	r2, #12
 8012344:	fb02 3301 	mla	r3, r2, r1, r3
 8012348:	c807      	ldmia	r0, {r0, r1, r2}
 801234a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 801234e:	4770      	bx	lr
 8012350:	200196e8 	.word	0x200196e8

08012354 <WM_OnKey>:
 8012354:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012356:	4a0a      	ldr	r2, [pc, #40]	; (8012380 <WM_OnKey+0x2c>)
 8012358:	4603      	mov	r3, r0
 801235a:	6810      	ldr	r0, [r2, #0]
 801235c:	4a09      	ldr	r2, [pc, #36]	; (8012384 <WM_OnKey+0x30>)
 801235e:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8012362:	b148      	cbz	r0, 8012378 <WM_OnKey+0x24>
 8012364:	9300      	str	r3, [sp, #0]
 8012366:	230e      	movs	r3, #14
 8012368:	9101      	str	r1, [sp, #4]
 801236a:	9302      	str	r3, [sp, #8]
 801236c:	a902      	add	r1, sp, #8
 801236e:	ab00      	add	r3, sp, #0
 8012370:	9305      	str	r3, [sp, #20]
 8012372:	f7ff fc1d 	bl	8011bb0 <WM__SendMessage>
 8012376:	2001      	movs	r0, #1
 8012378:	b007      	add	sp, #28
 801237a:	f85d fb04 	ldr.w	pc, [sp], #4
 801237e:	bf00      	nop
 8012380:	2001b340 	.word	0x2001b340
 8012384:	2001b330 	.word	0x2001b330

08012388 <WM_GetWindowRectEx>:
 8012388:	b510      	push	{r4, lr}
 801238a:	460c      	mov	r4, r1
 801238c:	b130      	cbz	r0, 801239c <WM_GetWindowRectEx+0x14>
 801238e:	b129      	cbz	r1, 801239c <WM_GetWindowRectEx+0x14>
 8012390:	f7fe f84c 	bl	801042c <GUI_ALLOC_h2p>
 8012394:	4603      	mov	r3, r0
 8012396:	cb03      	ldmia	r3!, {r0, r1}
 8012398:	6020      	str	r0, [r4, #0]
 801239a:	6061      	str	r1, [r4, #4]
 801239c:	bd10      	pop	{r4, pc}

0801239e <WM_GetScrollPartner>:
 801239e:	b538      	push	{r3, r4, r5, lr}
 80123a0:	4605      	mov	r5, r0
 80123a2:	f7f7 fc51 	bl	8009c48 <WM_GetId>
 80123a6:	28ff      	cmp	r0, #255	; 0xff
 80123a8:	4604      	mov	r4, r0
 80123aa:	d003      	beq.n	80123b4 <WM_GetScrollPartner+0x16>
 80123ac:	28fe      	cmp	r0, #254	; 0xfe
 80123ae:	bf08      	it	eq
 80123b0:	24ff      	moveq	r4, #255	; 0xff
 80123b2:	e000      	b.n	80123b6 <WM_GetScrollPartner+0x18>
 80123b4:	24fe      	movs	r4, #254	; 0xfe
 80123b6:	4628      	mov	r0, r5
 80123b8:	f7f7 fbbe 	bl	8009b38 <WM_GetParent>
 80123bc:	4621      	mov	r1, r4
 80123be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80123c2:	f7f7 bc87 	b.w	8009cd4 <WM_GetDialogItem>
	...

080123c8 <WM_GetDesktopWindowEx>:
 80123c8:	2801      	cmp	r0, #1
 80123ca:	bf9a      	itte	ls
 80123cc:	4b02      	ldrls	r3, [pc, #8]	; (80123d8 <WM_GetDesktopWindowEx+0x10>)
 80123ce:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 80123d2:	2000      	movhi	r0, #0
 80123d4:	4770      	bx	lr
 80123d6:	bf00      	nop
 80123d8:	2001b320 	.word	0x2001b320

080123dc <WM_ForEachDesc>:
 80123dc:	f003 b9bd 	b.w	801575a <WM__ForEachDesc>

080123e0 <WM__AddCriticalHandle>:
 80123e0:	4b02      	ldr	r3, [pc, #8]	; (80123ec <WM__AddCriticalHandle+0xc>)
 80123e2:	681a      	ldr	r2, [r3, #0]
 80123e4:	6002      	str	r2, [r0, #0]
 80123e6:	6018      	str	r0, [r3, #0]
 80123e8:	4770      	bx	lr
 80123ea:	bf00      	nop
 80123ec:	2001b354 	.word	0x2001b354

080123f0 <WM__RemoveCriticalHandle>:
 80123f0:	4a09      	ldr	r2, [pc, #36]	; (8012418 <WM__RemoveCriticalHandle+0x28>)
 80123f2:	6813      	ldr	r3, [r2, #0]
 80123f4:	b510      	push	{r4, lr}
 80123f6:	4614      	mov	r4, r2
 80123f8:	b16b      	cbz	r3, 8012416 <WM__RemoveCriticalHandle+0x26>
 80123fa:	2200      	movs	r2, #0
 80123fc:	4283      	cmp	r3, r0
 80123fe:	d105      	bne.n	801240c <WM__RemoveCriticalHandle+0x1c>
 8012400:	681b      	ldr	r3, [r3, #0]
 8012402:	b10a      	cbz	r2, 8012408 <WM__RemoveCriticalHandle+0x18>
 8012404:	6013      	str	r3, [r2, #0]
 8012406:	bd10      	pop	{r4, pc}
 8012408:	6023      	str	r3, [r4, #0]
 801240a:	bd10      	pop	{r4, pc}
 801240c:	6819      	ldr	r1, [r3, #0]
 801240e:	b111      	cbz	r1, 8012416 <WM__RemoveCriticalHandle+0x26>
 8012410:	461a      	mov	r2, r3
 8012412:	460b      	mov	r3, r1
 8012414:	e7f2      	b.n	80123fc <WM__RemoveCriticalHandle+0xc>
 8012416:	bd10      	pop	{r4, pc}
 8012418:	2001b354 	.word	0x2001b354

0801241c <WM_BringToBottom>:
 801241c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012420:	4604      	mov	r4, r0
 8012422:	b087      	sub	sp, #28
 8012424:	2800      	cmp	r0, #0
 8012426:	d039      	beq.n	801249c <WM_BringToBottom+0x80>
 8012428:	f7fe f80a 	bl	8010440 <GUI_ALLOC_LockH>
 801242c:	4603      	mov	r3, r0
 801242e:	9001      	str	r0, [sp, #4]
 8012430:	c803      	ldmia	r0, {r0, r1}
 8012432:	ad04      	add	r5, sp, #16
 8012434:	e885 0003 	stmia.w	r5, {r0, r1}
 8012438:	a801      	add	r0, sp, #4
 801243a:	6a1e      	ldr	r6, [r3, #32]
 801243c:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 8012440:	f7fe f80c 	bl	801045c <GUI_ALLOC_UnlockH>
 8012444:	4620      	mov	r0, r4
 8012446:	f7ff fbda 	bl	8011bfe <WM__GetPrevSibling>
 801244a:	4607      	mov	r7, r0
 801244c:	b330      	cbz	r0, 801249c <WM_BringToBottom+0x80>
 801244e:	4620      	mov	r0, r4
 8012450:	f7f7 fb72 	bl	8009b38 <WM_GetParent>
 8012454:	f019 0f02 	tst.w	r9, #2
 8012458:	4680      	mov	r8, r0
 801245a:	d004      	beq.n	8012466 <WM_BringToBottom+0x4a>
 801245c:	4628      	mov	r0, r5
 801245e:	4641      	mov	r1, r8
 8012460:	4632      	mov	r2, r6
 8012462:	f7f8 f8f1 	bl	800a648 <WM__InvalidateRectEx>
 8012466:	4620      	mov	r0, r4
 8012468:	f7fd ffea 	bl	8010440 <GUI_ALLOC_LockH>
 801246c:	9001      	str	r0, [sp, #4]
 801246e:	4640      	mov	r0, r8
 8012470:	f7fd ffe6 	bl	8010440 <GUI_ALLOC_LockH>
 8012474:	9003      	str	r0, [sp, #12]
 8012476:	4638      	mov	r0, r7
 8012478:	f7fd ffe2 	bl	8010440 <GUI_ALLOC_LockH>
 801247c:	9b03      	ldr	r3, [sp, #12]
 801247e:	9a01      	ldr	r2, [sp, #4]
 8012480:	69d9      	ldr	r1, [r3, #28]
 8012482:	6206      	str	r6, [r0, #32]
 8012484:	9002      	str	r0, [sp, #8]
 8012486:	6211      	str	r1, [r2, #32]
 8012488:	a801      	add	r0, sp, #4
 801248a:	61dc      	str	r4, [r3, #28]
 801248c:	f7fd ffe6 	bl	801045c <GUI_ALLOC_UnlockH>
 8012490:	a803      	add	r0, sp, #12
 8012492:	f7fd ffe3 	bl	801045c <GUI_ALLOC_UnlockH>
 8012496:	a802      	add	r0, sp, #8
 8012498:	f7fd ffe0 	bl	801045c <GUI_ALLOC_UnlockH>
 801249c:	b007      	add	sp, #28
 801249e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080124a2 <_Convert16>:
 80124a2:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124a6:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 80124aa:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 80124ae:	4605      	mov	r5, r0
 80124b0:	460e      	mov	r6, r1
 80124b2:	4690      	mov	r8, r2
 80124b4:	461f      	mov	r7, r3
 80124b6:	4614      	mov	r4, r2
 80124b8:	4689      	mov	r9, r1
 80124ba:	f835 0b02 	ldrh.w	r0, [r5], #2
 80124be:	47d8      	blx	fp
 80124c0:	47d0      	blx	sl
 80124c2:	3c01      	subs	r4, #1
 80124c4:	f849 0b04 	str.w	r0, [r9], #4
 80124c8:	d1f7      	bne.n	80124ba <_Convert16+0x18>
 80124ca:	2f1f      	cmp	r7, #31
 80124cc:	d806      	bhi.n	80124dc <_Convert16+0x3a>
 80124ce:	4630      	mov	r0, r6
 80124d0:	4641      	mov	r1, r8
 80124d2:	463a      	mov	r2, r7
 80124d4:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124d8:	f001 bf53 	b.w	8014382 <GUI__CompactPixelIndices>
 80124dc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

080124e0 <_Convert8>:
 80124e0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124e4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 80124e8:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 80124ec:	4605      	mov	r5, r0
 80124ee:	460e      	mov	r6, r1
 80124f0:	4690      	mov	r8, r2
 80124f2:	461f      	mov	r7, r3
 80124f4:	4689      	mov	r9, r1
 80124f6:	4604      	mov	r4, r0
 80124f8:	f814 0b01 	ldrb.w	r0, [r4], #1
 80124fc:	47d8      	blx	fp
 80124fe:	47d0      	blx	sl
 8012500:	1b2b      	subs	r3, r5, r4
 8012502:	4443      	add	r3, r8
 8012504:	f849 0b04 	str.w	r0, [r9], #4
 8012508:	2b00      	cmp	r3, #0
 801250a:	d1f5      	bne.n	80124f8 <_Convert8+0x18>
 801250c:	2f1f      	cmp	r7, #31
 801250e:	d806      	bhi.n	801251e <_Convert8+0x3e>
 8012510:	4630      	mov	r0, r6
 8012512:	4641      	mov	r1, r8
 8012514:	463a      	mov	r2, r7
 8012516:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801251a:	f001 bf32 	b.w	8014382 <GUI__CompactPixelIndices>
 801251e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08012524 <GUI_MEMDEV__WriteToActiveOpaque>:
 8012524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012528:	b09d      	sub	sp, #116	; 0x74
 801252a:	4606      	mov	r6, r0
 801252c:	910f      	str	r1, [sp, #60]	; 0x3c
 801252e:	920d      	str	r2, [sp, #52]	; 0x34
 8012530:	2800      	cmp	r0, #0
 8012532:	f000 8386 	beq.w	8012c42 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8012536:	f7fd ff83 	bl	8010440 <GUI_ALLOC_LockH>
 801253a:	ab1c      	add	r3, sp, #112	; 0x70
 801253c:	6944      	ldr	r4, [r0, #20]
 801253e:	f843 0d1c 	str.w	r0, [r3, #-28]!
 8012542:	4618      	mov	r0, r3
 8012544:	f7fd ff8a 	bl	801045c <GUI_ALLOC_UnlockH>
 8012548:	4630      	mov	r0, r6
 801254a:	f7f9 fd59 	bl	800c000 <GUI_MEMDEV_GetBitsPerPixel>
 801254e:	2808      	cmp	r0, #8
 8012550:	4601      	mov	r1, r0
 8012552:	dd02      	ble.n	801255a <GUI_MEMDEV__WriteToActiveOpaque+0x36>
 8012554:	2c00      	cmp	r4, #0
 8012556:	f000 81c3 	beq.w	80128e0 <GUI_MEMDEV__WriteToActiveOpaque+0x3bc>
 801255a:	2201      	movs	r2, #1
 801255c:	f04f 0800 	mov.w	r8, #0
 8012560:	4630      	mov	r0, r6
 8012562:	921b      	str	r2, [sp, #108]	; 0x6c
 8012564:	920b      	str	r2, [sp, #44]	; 0x2c
 8012566:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 801256a:	f7fd ff69 	bl	8010440 <GUI_ALLOC_LockH>
 801256e:	6803      	ldr	r3, [r0, #0]
 8012570:	f8df a60c 	ldr.w	sl, [pc, #1548]	; 8012b80 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>
 8012574:	691b      	ldr	r3, [r3, #16]
 8012576:	f9b0 100a 	ldrsh.w	r1, [r0, #10]
 801257a:	685b      	ldr	r3, [r3, #4]
 801257c:	930e      	str	r3, [sp, #56]	; 0x38
 801257e:	f10d 0b70 	add.w	fp, sp, #112	; 0x70
 8012582:	f8da 3000 	ldr.w	r3, [sl]
 8012586:	f84b 0d14 	str.w	r0, [fp, #-20]!
 801258a:	6904      	ldr	r4, [r0, #16]
 801258c:	6945      	ldr	r5, [r0, #20]
 801258e:	f8d0 900c 	ldr.w	r9, [r0, #12]
 8012592:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 8012596:	7c58      	ldrb	r0, [r3, #17]
 8012598:	9112      	str	r1, [sp, #72]	; 0x48
 801259a:	f7fa ffa1 	bl	800d4e0 <GUI_GetBitsPerPixelEx>
 801259e:	f8da 3000 	ldr.w	r3, [sl]
 80125a2:	9010      	str	r0, [sp, #64]	; 0x40
 80125a4:	7c58      	ldrb	r0, [r3, #17]
 80125a6:	f7fa ffb9 	bl	800d51c <GUI_GetpfIndex2ColorEx>
 80125aa:	4603      	mov	r3, r0
 80125ac:	4658      	mov	r0, fp
 80125ae:	9309      	str	r3, [sp, #36]	; 0x24
 80125b0:	f7fd ff54 	bl	801045c <GUI_ALLOC_UnlockH>
 80125b4:	2c08      	cmp	r4, #8
 80125b6:	4651      	mov	r1, sl
 80125b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80125ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80125bc:	d904      	bls.n	80125c8 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 80125be:	2c10      	cmp	r4, #16
 80125c0:	bf8c      	ite	hi
 80125c2:	2204      	movhi	r2, #4
 80125c4:	2202      	movls	r2, #2
 80125c6:	e005      	b.n	80125d4 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 80125c8:	2c01      	cmp	r4, #1
 80125ca:	d103      	bne.n	80125d4 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 80125cc:	9411      	str	r4, [sp, #68]	; 0x44
 80125ce:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 80125d2:	e000      	b.n	80125d6 <GUI_MEMDEV__WriteToActiveOpaque+0xb2>
 80125d4:	9211      	str	r2, [sp, #68]	; 0x44
 80125d6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80125d8:	4298      	cmp	r0, r3
 80125da:	f000 80e2 	beq.w	80127a2 <GUI_MEMDEV__WriteToActiveOpaque+0x27e>
 80125de:	680b      	ldr	r3, [r1, #0]
 80125e0:	7c58      	ldrb	r0, [r3, #17]
 80125e2:	f7fa ffa3 	bl	800d52c <GUI_GetpfColor2IndexEx>
 80125e6:	9013      	str	r0, [sp, #76]	; 0x4c
 80125e8:	00b8      	lsls	r0, r7, #2
 80125ea:	f7fe f97d 	bl	80108e8 <GUI_ALLOC_AllocNoInit>
 80125ee:	900c      	str	r0, [sp, #48]	; 0x30
 80125f0:	2800      	cmp	r0, #0
 80125f2:	f000 8326 	beq.w	8012c42 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 80125f6:	4630      	mov	r0, r6
 80125f8:	f7f8 fe9e 	bl	800b338 <GUI_MEMDEV_GetDataPtr>
 80125fc:	4606      	mov	r6, r0
 80125fe:	2d00      	cmp	r5, #0
 8012600:	f000 80be 	beq.w	8012780 <GUI_MEMDEV__WriteToActiveOpaque+0x25c>
 8012604:	4628      	mov	r0, r5
 8012606:	f7fd ff1b 	bl	8010440 <GUI_ALLOC_LockH>
 801260a:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 801260e:	9018      	str	r0, [sp, #96]	; 0x60
 8012610:	f04f 0a00 	mov.w	sl, #0
 8012614:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012616:	4592      	cmp	sl, r2
 8012618:	f280 80ae 	bge.w	8012778 <GUI_MEMDEV__WriteToActiveOpaque+0x254>
 801261c:	9818      	ldr	r0, [sp, #96]	; 0x60
 801261e:	2300      	movs	r3, #0
 8012620:	9319      	str	r3, [sp, #100]	; 0x64
 8012622:	6883      	ldr	r3, [r0, #8]
 8012624:	a919      	add	r1, sp, #100	; 0x64
 8012626:	695b      	ldr	r3, [r3, #20]
 8012628:	4652      	mov	r2, sl
 801262a:	4798      	blx	r3
 801262c:	42b8      	cmp	r0, r7
 801262e:	4605      	mov	r5, r0
 8012630:	d12f      	bne.n	8012692 <GUI_MEMDEV__WriteToActiveOpaque+0x16e>
 8012632:	980c      	ldr	r0, [sp, #48]	; 0x30
 8012634:	f7fd ff04 	bl	8010440 <GUI_ALLOC_LockH>
 8012638:	2c08      	cmp	r4, #8
 801263a:	4601      	mov	r1, r0
 801263c:	9016      	str	r0, [sp, #88]	; 0x58
 801263e:	d909      	bls.n	8012654 <GUI_MEMDEV__WriteToActiveOpaque+0x130>
 8012640:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8012642:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8012644:	9200      	str	r2, [sp, #0]
 8012646:	9301      	str	r3, [sp, #4]
 8012648:	4630      	mov	r0, r6
 801264a:	463a      	mov	r2, r7
 801264c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801264e:	f7ff ff28 	bl	80124a2 <_Convert16>
 8012652:	e008      	b.n	8012666 <GUI_MEMDEV__WriteToActiveOpaque+0x142>
 8012654:	980e      	ldr	r0, [sp, #56]	; 0x38
 8012656:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012658:	9000      	str	r0, [sp, #0]
 801265a:	9201      	str	r2, [sp, #4]
 801265c:	4630      	mov	r0, r6
 801265e:	463a      	mov	r2, r7
 8012660:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012662:	f7ff ff3d 	bl	80124e0 <_Convert8>
 8012666:	2301      	movs	r3, #1
 8012668:	9810      	ldr	r0, [sp, #64]	; 0x40
 801266a:	9002      	str	r0, [sp, #8]
 801266c:	ad1c      	add	r5, sp, #112	; 0x70
 801266e:	2200      	movs	r2, #0
 8012670:	9300      	str	r3, [sp, #0]
 8012672:	9301      	str	r3, [sp, #4]
 8012674:	9203      	str	r2, [sp, #12]
 8012676:	f855 2d18 	ldr.w	r2, [r5, #-24]!
 801267a:	9204      	str	r2, [sp, #16]
 801267c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801267e:	f8cd 8014 	str.w	r8, [sp, #20]
 8012682:	4659      	mov	r1, fp
 8012684:	463a      	mov	r2, r7
 8012686:	f7fb f96d 	bl	800d964 <LCD_DrawBitmap>
 801268a:	4628      	mov	r0, r5
 801268c:	f7fd fee6 	bl	801045c <GUI_ALLOC_UnlockH>
 8012690:	e060      	b.n	8012754 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 8012692:	2c01      	cmp	r4, #1
 8012694:	d15c      	bne.n	8012750 <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
 8012696:	2d00      	cmp	r5, #0
 8012698:	d05c      	beq.n	8012754 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 801269a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801269c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801269e:	f8cd 900c 	str.w	r9, [sp, #12]
 80126a2:	2208      	movs	r2, #8
 80126a4:	fb90 f2f2 	sdiv	r2, r0, r2
 80126a8:	4432      	add	r2, r6
 80126aa:	2301      	movs	r3, #1
 80126ac:	9204      	str	r2, [sp, #16]
 80126ae:	f000 0207 	and.w	r2, r0, #7
 80126b2:	9300      	str	r3, [sp, #0]
 80126b4:	4408      	add	r0, r1
 80126b6:	9301      	str	r3, [sp, #4]
 80126b8:	9302      	str	r3, [sp, #8]
 80126ba:	9206      	str	r2, [sp, #24]
 80126bc:	4659      	mov	r1, fp
 80126be:	462a      	mov	r2, r5
 80126c0:	f8cd 8014 	str.w	r8, [sp, #20]
 80126c4:	f7fb f872 	bl	800d7ac <LCD__DrawBitmap_1bpp>
 80126c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80126ca:	9818      	ldr	r0, [sp, #96]	; 0x60
 80126cc:	441d      	add	r5, r3
 80126ce:	6883      	ldr	r3, [r0, #8]
 80126d0:	9519      	str	r5, [sp, #100]	; 0x64
 80126d2:	695b      	ldr	r3, [r3, #20]
 80126d4:	a919      	add	r1, sp, #100	; 0x64
 80126d6:	4652      	mov	r2, sl
 80126d8:	4798      	blx	r3
 80126da:	4605      	mov	r5, r0
 80126dc:	e7db      	b.n	8012696 <GUI_MEMDEV__WriteToActiveOpaque+0x172>
 80126de:	980c      	ldr	r0, [sp, #48]	; 0x30
 80126e0:	f7fd feae 	bl	8010440 <GUI_ALLOC_LockH>
 80126e4:	2c08      	cmp	r4, #8
 80126e6:	4601      	mov	r1, r0
 80126e8:	9016      	str	r0, [sp, #88]	; 0x58
 80126ea:	9819      	ldr	r0, [sp, #100]	; 0x64
 80126ec:	d938      	bls.n	8012760 <GUI_MEMDEV__WriteToActiveOpaque+0x23c>
 80126ee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80126f0:	9200      	str	r2, [sp, #0]
 80126f2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80126f4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80126f6:	9301      	str	r3, [sp, #4]
 80126f8:	fb00 6002 	mla	r0, r0, r2, r6
 80126fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80126fe:	462a      	mov	r2, r5
 8012700:	f7ff fecf 	bl	80124a2 <_Convert16>
 8012704:	2301      	movs	r3, #1
 8012706:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 801270a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801270c:	9300      	str	r3, [sp, #0]
 801270e:	2200      	movs	r2, #0
 8012710:	9301      	str	r3, [sp, #4]
 8012712:	9002      	str	r0, [sp, #8]
 8012714:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8012716:	9203      	str	r2, [sp, #12]
 8012718:	9819      	ldr	r0, [sp, #100]	; 0x64
 801271a:	f85c 2d18 	ldr.w	r2, [ip, #-24]!
 801271e:	9204      	str	r2, [sp, #16]
 8012720:	4408      	add	r0, r1
 8012722:	462a      	mov	r2, r5
 8012724:	4659      	mov	r1, fp
 8012726:	f8cd 8014 	str.w	r8, [sp, #20]
 801272a:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 801272e:	f7fb f919 	bl	800d964 <LCD_DrawBitmap>
 8012732:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 8012736:	4660      	mov	r0, ip
 8012738:	f7fd fe90 	bl	801045c <GUI_ALLOC_UnlockH>
 801273c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801273e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8012740:	441d      	add	r5, r3
 8012742:	6883      	ldr	r3, [r0, #8]
 8012744:	9519      	str	r5, [sp, #100]	; 0x64
 8012746:	695b      	ldr	r3, [r3, #20]
 8012748:	a919      	add	r1, sp, #100	; 0x64
 801274a:	4652      	mov	r2, sl
 801274c:	4798      	blx	r3
 801274e:	4605      	mov	r5, r0
 8012750:	2d00      	cmp	r5, #0
 8012752:	d1c4      	bne.n	80126de <GUI_MEMDEV__WriteToActiveOpaque+0x1ba>
 8012754:	444e      	add	r6, r9
 8012756:	f10a 0a01 	add.w	sl, sl, #1
 801275a:	f10b 0b01 	add.w	fp, fp, #1
 801275e:	e759      	b.n	8012614 <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
 8012760:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012762:	9300      	str	r3, [sp, #0]
 8012764:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012766:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012768:	9201      	str	r2, [sp, #4]
 801276a:	fb00 6003 	mla	r0, r0, r3, r6
 801276e:	462a      	mov	r2, r5
 8012770:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012772:	f7ff feb5 	bl	80124e0 <_Convert8>
 8012776:	e7c5      	b.n	8012704 <GUI_MEMDEV__WriteToActiveOpaque+0x1e0>
 8012778:	a818      	add	r0, sp, #96	; 0x60
 801277a:	f7fd fe6f 	bl	801045c <GUI_ALLOC_UnlockH>
 801277e:	e00e      	b.n	801279e <GUI_MEMDEV__WriteToActiveOpaque+0x27a>
 8012780:	2301      	movs	r3, #1
 8012782:	9300      	str	r3, [sp, #0]
 8012784:	9301      	str	r3, [sp, #4]
 8012786:	9004      	str	r0, [sp, #16]
 8012788:	9402      	str	r4, [sp, #8]
 801278a:	f8cd 900c 	str.w	r9, [sp, #12]
 801278e:	f8cd 8014 	str.w	r8, [sp, #20]
 8012792:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8012794:	990d      	ldr	r1, [sp, #52]	; 0x34
 8012796:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012798:	463a      	mov	r2, r7
 801279a:	f7fb f8e3 	bl	800d964 <LCD_DrawBitmap>
 801279e:	980c      	ldr	r0, [sp, #48]	; 0x30
 80127a0:	e24d      	b.n	8012c3e <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 80127a2:	4630      	mov	r0, r6
 80127a4:	f7f8 fdc8 	bl	800b338 <GUI_MEMDEV_GetDataPtr>
 80127a8:	4606      	mov	r6, r0
 80127aa:	2d00      	cmp	r5, #0
 80127ac:	f000 808a 	beq.w	80128c4 <GUI_MEMDEV__WriteToActiveOpaque+0x3a0>
 80127b0:	4628      	mov	r0, r5
 80127b2:	f7fd fe45 	bl	8010440 <GUI_ALLOC_LockH>
 80127b6:	2500      	movs	r5, #0
 80127b8:	9018      	str	r0, [sp, #96]	; 0x60
 80127ba:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80127bc:	429d      	cmp	r5, r3
 80127be:	da7d      	bge.n	80128bc <GUI_MEMDEV__WriteToActiveOpaque+0x398>
 80127c0:	9818      	ldr	r0, [sp, #96]	; 0x60
 80127c2:	2300      	movs	r3, #0
 80127c4:	9319      	str	r3, [sp, #100]	; 0x64
 80127c6:	6883      	ldr	r3, [r0, #8]
 80127c8:	a919      	add	r1, sp, #100	; 0x64
 80127ca:	695b      	ldr	r3, [r3, #20]
 80127cc:	462a      	mov	r2, r5
 80127ce:	4798      	blx	r3
 80127d0:	42b8      	cmp	r0, r7
 80127d2:	4682      	mov	sl, r0
 80127d4:	d124      	bne.n	8012820 <GUI_MEMDEV__WriteToActiveOpaque+0x2fc>
 80127d6:	46aa      	mov	sl, r5
 80127d8:	9818      	ldr	r0, [sp, #96]	; 0x60
 80127da:	6883      	ldr	r3, [r0, #8]
 80127dc:	f10a 0b01 	add.w	fp, sl, #1
 80127e0:	695b      	ldr	r3, [r3, #20]
 80127e2:	a919      	add	r1, sp, #100	; 0x64
 80127e4:	465a      	mov	r2, fp
 80127e6:	4798      	blx	r3
 80127e8:	42b8      	cmp	r0, r7
 80127ea:	d101      	bne.n	80127f0 <GUI_MEMDEV__WriteToActiveOpaque+0x2cc>
 80127ec:	46da      	mov	sl, fp
 80127ee:	e7f3      	b.n	80127d8 <GUI_MEMDEV__WriteToActiveOpaque+0x2b4>
 80127f0:	ebc5 0b0a 	rsb	fp, r5, sl
 80127f4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80127f6:	9604      	str	r6, [sp, #16]
 80127f8:	2301      	movs	r3, #1
 80127fa:	f10b 0b01 	add.w	fp, fp, #1
 80127fe:	9300      	str	r3, [sp, #0]
 8012800:	9301      	str	r3, [sp, #4]
 8012802:	4429      	add	r1, r5
 8012804:	9402      	str	r4, [sp, #8]
 8012806:	f8cd 900c 	str.w	r9, [sp, #12]
 801280a:	f8cd 8014 	str.w	r8, [sp, #20]
 801280e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8012810:	463a      	mov	r2, r7
 8012812:	465b      	mov	r3, fp
 8012814:	f7fb f8a6 	bl	800d964 <LCD_DrawBitmap>
 8012818:	fb09 660b 	mla	r6, r9, fp, r6
 801281c:	4655      	mov	r5, sl
 801281e:	e04b      	b.n	80128b8 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 8012820:	2c01      	cmp	r4, #1
 8012822:	d127      	bne.n	8012874 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 8012824:	f1ba 0f00 	cmp.w	sl, #0
 8012828:	d022      	beq.n	8012870 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 801282a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801282c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801282e:	f8cd 900c 	str.w	r9, [sp, #12]
 8012832:	2208      	movs	r2, #8
 8012834:	fb90 f2f2 	sdiv	r2, r0, r2
 8012838:	4432      	add	r2, r6
 801283a:	9204      	str	r2, [sp, #16]
 801283c:	f000 0207 	and.w	r2, r0, #7
 8012840:	4408      	add	r0, r1
 8012842:	990d      	ldr	r1, [sp, #52]	; 0x34
 8012844:	9206      	str	r2, [sp, #24]
 8012846:	2301      	movs	r3, #1
 8012848:	4652      	mov	r2, sl
 801284a:	9300      	str	r3, [sp, #0]
 801284c:	9301      	str	r3, [sp, #4]
 801284e:	9302      	str	r3, [sp, #8]
 8012850:	4429      	add	r1, r5
 8012852:	f8cd 8014 	str.w	r8, [sp, #20]
 8012856:	f7fa ffa9 	bl	800d7ac <LCD__DrawBitmap_1bpp>
 801285a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801285c:	9818      	ldr	r0, [sp, #96]	; 0x60
 801285e:	4453      	add	r3, sl
 8012860:	9319      	str	r3, [sp, #100]	; 0x64
 8012862:	6883      	ldr	r3, [r0, #8]
 8012864:	a919      	add	r1, sp, #100	; 0x64
 8012866:	695b      	ldr	r3, [r3, #20]
 8012868:	462a      	mov	r2, r5
 801286a:	4798      	blx	r3
 801286c:	4682      	mov	sl, r0
 801286e:	e7d9      	b.n	8012824 <GUI_MEMDEV__WriteToActiveOpaque+0x300>
 8012870:	444e      	add	r6, r9
 8012872:	e021      	b.n	80128b8 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 8012874:	f1ba 0f00 	cmp.w	sl, #0
 8012878:	d0fa      	beq.n	8012870 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 801287a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801287c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801287e:	9402      	str	r4, [sp, #8]
 8012880:	fb00 6201 	mla	r2, r0, r1, r6
 8012884:	9204      	str	r2, [sp, #16]
 8012886:	990d      	ldr	r1, [sp, #52]	; 0x34
 8012888:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801288a:	f8cd 900c 	str.w	r9, [sp, #12]
 801288e:	2301      	movs	r3, #1
 8012890:	4410      	add	r0, r2
 8012892:	9300      	str	r3, [sp, #0]
 8012894:	4652      	mov	r2, sl
 8012896:	9301      	str	r3, [sp, #4]
 8012898:	4429      	add	r1, r5
 801289a:	f8cd 8014 	str.w	r8, [sp, #20]
 801289e:	f7fb f861 	bl	800d964 <LCD_DrawBitmap>
 80128a2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80128a4:	9818      	ldr	r0, [sp, #96]	; 0x60
 80128a6:	4453      	add	r3, sl
 80128a8:	9319      	str	r3, [sp, #100]	; 0x64
 80128aa:	6883      	ldr	r3, [r0, #8]
 80128ac:	a919      	add	r1, sp, #100	; 0x64
 80128ae:	695b      	ldr	r3, [r3, #20]
 80128b0:	462a      	mov	r2, r5
 80128b2:	4798      	blx	r3
 80128b4:	4682      	mov	sl, r0
 80128b6:	e7dd      	b.n	8012874 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 80128b8:	3501      	adds	r5, #1
 80128ba:	e77e      	b.n	80127ba <GUI_MEMDEV__WriteToActiveOpaque+0x296>
 80128bc:	a818      	add	r0, sp, #96	; 0x60
 80128be:	f7fd fdcd 	bl	801045c <GUI_ALLOC_UnlockH>
 80128c2:	e1be      	b.n	8012c42 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 80128c4:	2301      	movs	r3, #1
 80128c6:	9300      	str	r3, [sp, #0]
 80128c8:	9301      	str	r3, [sp, #4]
 80128ca:	9004      	str	r0, [sp, #16]
 80128cc:	9402      	str	r4, [sp, #8]
 80128ce:	f8cd 900c 	str.w	r9, [sp, #12]
 80128d2:	f8cd 8014 	str.w	r8, [sp, #20]
 80128d6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80128d8:	990d      	ldr	r1, [sp, #52]	; 0x34
 80128da:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80128dc:	463a      	mov	r2, r7
 80128de:	e041      	b.n	8012964 <GUI_MEMDEV__WriteToActiveOpaque+0x440>
 80128e0:	4630      	mov	r0, r6
 80128e2:	910a      	str	r1, [sp, #40]	; 0x28
 80128e4:	f7fd fdac 	bl	8010440 <GUI_ALLOC_LockH>
 80128e8:	4682      	mov	sl, r0
 80128ea:	a81c      	add	r0, sp, #112	; 0x70
 80128ec:	f8ba 200a 	ldrh.w	r2, [sl, #10]
 80128f0:	f840 ad10 	str.w	sl, [r0, #-16]!
 80128f4:	f8da 4000 	ldr.w	r4, [sl]
 80128f8:	9210      	str	r2, [sp, #64]	; 0x40
 80128fa:	f8d4 9010 	ldr.w	r9, [r4, #16]
 80128fe:	f8ba 7008 	ldrh.w	r7, [sl, #8]
 8012902:	4c9e      	ldr	r4, [pc, #632]	; (8012b7c <GUI_MEMDEV__WriteToActiveOpaque+0x658>)
 8012904:	b213      	sxth	r3, r2
 8012906:	f8da 200c 	ldr.w	r2, [sl, #12]
 801290a:	920b      	str	r2, [sp, #44]	; 0x2c
 801290c:	9309      	str	r3, [sp, #36]	; 0x24
 801290e:	f7fd fda5 	bl	801045c <GUI_ALLOC_UnlockH>
 8012912:	f8d9 0004 	ldr.w	r0, [r9, #4]
 8012916:	900e      	str	r0, [sp, #56]	; 0x38
 8012918:	4899      	ldr	r0, [pc, #612]	; (8012b80 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>)
 801291a:	6800      	ldr	r0, [r0, #0]
 801291c:	7c40      	ldrb	r0, [r0, #17]
 801291e:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
 8012922:	6925      	ldr	r5, [r4, #16]
 8012924:	f8d5 8000 	ldr.w	r8, [r5]
 8012928:	f7fa fdda 	bl	800d4e0 <GUI_GetBitsPerPixelEx>
 801292c:	2808      	cmp	r0, #8
 801292e:	fa0f fb87 	sxth.w	fp, r7
 8012932:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012934:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012936:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012938:	d904      	bls.n	8012944 <GUI_MEMDEV__WriteToActiveOpaque+0x420>
 801293a:	2810      	cmp	r0, #16
 801293c:	bf8c      	ite	hi
 801293e:	2404      	movhi	r4, #4
 8012940:	2402      	movls	r4, #2
 8012942:	e000      	b.n	8012946 <GUI_MEMDEV__WriteToActiveOpaque+0x422>
 8012944:	2401      	movs	r4, #1
 8012946:	45a9      	cmp	r9, r5
 8012948:	d10f      	bne.n	801296a <GUI_MEMDEV__WriteToActiveOpaque+0x446>
 801294a:	2001      	movs	r0, #1
 801294c:	9203      	str	r2, [sp, #12]
 801294e:	f10a 0218 	add.w	r2, sl, #24
 8012952:	9000      	str	r0, [sp, #0]
 8012954:	9001      	str	r0, [sp, #4]
 8012956:	9102      	str	r1, [sp, #8]
 8012958:	9204      	str	r2, [sp, #16]
 801295a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801295c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801295e:	2200      	movs	r2, #0
 8012960:	9205      	str	r2, [sp, #20]
 8012962:	465a      	mov	r2, fp
 8012964:	f7fa fffe 	bl	800d964 <LCD_DrawBitmap>
 8012968:	e16b      	b.n	8012c42 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 801296a:	2920      	cmp	r1, #32
 801296c:	f040 808e 	bne.w	8012a8c <GUI_MEMDEV__WriteToActiveOpaque+0x568>
 8012970:	fb0b f004 	mul.w	r0, fp, r4
 8012974:	f7fd ffb8 	bl	80108e8 <GUI_ALLOC_AllocNoInit>
 8012978:	900e      	str	r0, [sp, #56]	; 0x38
 801297a:	2800      	cmp	r0, #0
 801297c:	f000 8161 	beq.w	8012c42 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8012980:	f7fd fd5e 	bl	8010440 <GUI_ALLOC_LockH>
 8012984:	901a      	str	r0, [sp, #104]	; 0x68
 8012986:	4630      	mov	r0, r6
 8012988:	f7fd fd5a 	bl	8010440 <GUI_ALLOC_LockH>
 801298c:	9018      	str	r0, [sp, #96]	; 0x60
 801298e:	692b      	ldr	r3, [r5, #16]
 8012990:	f100 0a18 	add.w	sl, r0, #24
 8012994:	ea4f 068b 	mov.w	r6, fp, lsl #2
 8012998:	ea4f 09c4 	mov.w	r9, r4, lsl #3
 801299c:	2b00      	cmp	r3, #0
 801299e:	d02f      	beq.n	8012a00 <GUI_MEMDEV__WriteToActiveOpaque+0x4dc>
 80129a0:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 80129a4:	2c02      	cmp	r4, #2
 80129a6:	d003      	beq.n	80129b0 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 80129a8:	2c04      	cmp	r4, #4
 80129aa:	d001      	beq.n	80129b0 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 80129ac:	2c01      	cmp	r4, #1
 80129ae:	d106      	bne.n	80129be <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 80129b0:	4650      	mov	r0, sl
 80129b2:	692f      	ldr	r7, [r5, #16]
 80129b4:	991a      	ldr	r1, [sp, #104]	; 0x68
 80129b6:	465a      	mov	r2, fp
 80129b8:	4623      	mov	r3, r4
 80129ba:	47b8      	blx	r7
 80129bc:	44b2      	add	sl, r6
 80129be:	2301      	movs	r3, #1
 80129c0:	2200      	movs	r2, #0
 80129c2:	991a      	ldr	r1, [sp, #104]	; 0x68
 80129c4:	9300      	str	r3, [sp, #0]
 80129c6:	9301      	str	r3, [sp, #4]
 80129c8:	9203      	str	r2, [sp, #12]
 80129ca:	9104      	str	r1, [sp, #16]
 80129cc:	9205      	str	r2, [sp, #20]
 80129ce:	4641      	mov	r1, r8
 80129d0:	465a      	mov	r2, fp
 80129d2:	f8cd 9008 	str.w	r9, [sp, #8]
 80129d6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80129d8:	f7fa ffc4 	bl	800d964 <LCD_DrawBitmap>
 80129dc:	9910      	ldr	r1, [sp, #64]	; 0x40
 80129de:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80129e0:	f108 0701 	add.w	r7, r8, #1
 80129e4:	fa02 f381 	sxtah	r3, r2, r1
 80129e8:	42bb      	cmp	r3, r7
 80129ea:	d107      	bne.n	80129fc <GUI_MEMDEV__WriteToActiveOpaque+0x4d8>
 80129ec:	a818      	add	r0, sp, #96	; 0x60
 80129ee:	f7fd fd35 	bl	801045c <GUI_ALLOC_UnlockH>
 80129f2:	a81a      	add	r0, sp, #104	; 0x68
 80129f4:	f7fd fd32 	bl	801045c <GUI_ALLOC_UnlockH>
 80129f8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80129fa:	e120      	b.n	8012c3e <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 80129fc:	46b8      	mov	r8, r7
 80129fe:	e7d1      	b.n	80129a4 <GUI_MEMDEV__WriteToActiveOpaque+0x480>
 8012a00:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8012a02:	2c02      	cmp	r4, #2
 8012a04:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8012a06:	d00e      	beq.n	8012a26 <GUI_MEMDEV__WriteToActiveOpaque+0x502>
 8012a08:	2c04      	cmp	r4, #4
 8012a0a:	d018      	beq.n	8012a3e <GUI_MEMDEV__WriteToActiveOpaque+0x51a>
 8012a0c:	2c01      	cmp	r4, #1
 8012a0e:	d125      	bne.n	8012a5c <GUI_MEMDEV__WriteToActiveOpaque+0x538>
 8012a10:	2300      	movs	r3, #0
 8012a12:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 8012a16:	9309      	str	r3, [sp, #36]	; 0x24
 8012a18:	47c0      	blx	r8
 8012a1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012a1c:	54f8      	strb	r0, [r7, r3]
 8012a1e:	3301      	adds	r3, #1
 8012a20:	459b      	cmp	fp, r3
 8012a22:	d1f6      	bne.n	8012a12 <GUI_MEMDEV__WriteToActiveOpaque+0x4ee>
 8012a24:	e019      	b.n	8012a5a <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 8012a26:	2300      	movs	r3, #0
 8012a28:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 8012a2c:	9309      	str	r3, [sp, #36]	; 0x24
 8012a2e:	47c0      	blx	r8
 8012a30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012a32:	f827 0013 	strh.w	r0, [r7, r3, lsl #1]
 8012a36:	3301      	adds	r3, #1
 8012a38:	459b      	cmp	fp, r3
 8012a3a:	d1f5      	bne.n	8012a28 <GUI_MEMDEV__WriteToActiveOpaque+0x504>
 8012a3c:	e00d      	b.n	8012a5a <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 8012a3e:	465a      	mov	r2, fp
 8012a40:	2300      	movs	r3, #0
 8012a42:	f85a 0003 	ldr.w	r0, [sl, r3]
 8012a46:	920b      	str	r2, [sp, #44]	; 0x2c
 8012a48:	9309      	str	r3, [sp, #36]	; 0x24
 8012a4a:	47c0      	blx	r8
 8012a4c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012a4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012a50:	3a01      	subs	r2, #1
 8012a52:	50f8      	str	r0, [r7, r3]
 8012a54:	f103 0304 	add.w	r3, r3, #4
 8012a58:	d1f3      	bne.n	8012a42 <GUI_MEMDEV__WriteToActiveOpaque+0x51e>
 8012a5a:	44b2      	add	sl, r6
 8012a5c:	2301      	movs	r3, #1
 8012a5e:	2200      	movs	r2, #0
 8012a60:	991a      	ldr	r1, [sp, #104]	; 0x68
 8012a62:	9300      	str	r3, [sp, #0]
 8012a64:	9301      	str	r3, [sp, #4]
 8012a66:	9203      	str	r2, [sp, #12]
 8012a68:	9104      	str	r1, [sp, #16]
 8012a6a:	9205      	str	r2, [sp, #20]
 8012a6c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8012a6e:	f8cd 9008 	str.w	r9, [sp, #8]
 8012a72:	4629      	mov	r1, r5
 8012a74:	465a      	mov	r2, fp
 8012a76:	f7fa ff75 	bl	800d964 <LCD_DrawBitmap>
 8012a7a:	9810      	ldr	r0, [sp, #64]	; 0x40
 8012a7c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8012a7e:	1c6f      	adds	r7, r5, #1
 8012a80:	fa01 f380 	sxtah	r3, r1, r0
 8012a84:	42bb      	cmp	r3, r7
 8012a86:	d0b1      	beq.n	80129ec <GUI_MEMDEV__WriteToActiveOpaque+0x4c8>
 8012a88:	463d      	mov	r5, r7
 8012a8a:	e7ba      	b.n	8012a02 <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
 8012a8c:	2910      	cmp	r1, #16
 8012a8e:	f040 80d8 	bne.w	8012c42 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8012a92:	fa0f fa87 	sxth.w	sl, r7
 8012a96:	fb0a f004 	mul.w	r0, sl, r4
 8012a9a:	f7fd ff25 	bl	80108e8 <GUI_ALLOC_AllocNoInit>
 8012a9e:	9012      	str	r0, [sp, #72]	; 0x48
 8012aa0:	2800      	cmp	r0, #0
 8012aa2:	f000 80ce 	beq.w	8012c42 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 8012aa6:	f7fd fccb 	bl	8010440 <GUI_ALLOC_LockH>
 8012aaa:	901a      	str	r0, [sp, #104]	; 0x68
 8012aac:	4630      	mov	r0, r6
 8012aae:	f7fd fcc7 	bl	8010440 <GUI_ALLOC_LockH>
 8012ab2:	9018      	str	r0, [sp, #96]	; 0x60
 8012ab4:	692b      	ldr	r3, [r5, #16]
 8012ab6:	f100 0618 	add.w	r6, r0, #24
 8012aba:	b113      	cbz	r3, 8012ac2 <GUI_MEMDEV__WriteToActiveOpaque+0x59e>
 8012abc:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8012ac0:	b92b      	cbnz	r3, 8012ace <GUI_MEMDEV__WriteToActiveOpaque+0x5aa>
 8012ac2:	00e2      	lsls	r2, r4, #3
 8012ac4:	b23f      	sxth	r7, r7
 8012ac6:	9211      	str	r2, [sp, #68]	; 0x44
 8012ac8:	007f      	lsls	r7, r7, #1
 8012aca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8012acc:	e088      	b.n	8012be0 <GUI_MEMDEV__WriteToActiveOpaque+0x6bc>
 8012ace:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8012ad2:	0080      	lsls	r0, r0, #2
 8012ad4:	f7fd ff08 	bl	80108e8 <GUI_ALLOC_AllocNoInit>
 8012ad8:	9011      	str	r0, [sp, #68]	; 0x44
 8012ada:	b118      	cbz	r0, 8012ae4 <GUI_MEMDEV__WriteToActiveOpaque+0x5c0>
 8012adc:	f7fd fcb0 	bl	8010440 <GUI_ALLOC_LockH>
 8012ae0:	9019      	str	r0, [sp, #100]	; 0x64
 8012ae2:	e001      	b.n	8012ae8 <GUI_MEMDEV__WriteToActiveOpaque+0x5c4>
 8012ae4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012ae6:	9319      	str	r3, [sp, #100]	; 0x64
 8012ae8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8012aea:	2b00      	cmp	r3, #0
 8012aec:	f000 80a0 	beq.w	8012c30 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 8012af0:	b23f      	sxth	r7, r7
 8012af2:	007f      	lsls	r7, r7, #1
 8012af4:	970e      	str	r7, [sp, #56]	; 0x38
 8012af6:	00e7      	lsls	r7, r4, #3
 8012af8:	9713      	str	r7, [sp, #76]	; 0x4c
 8012afa:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8012afc:	970c      	str	r7, [sp, #48]	; 0x30
 8012afe:	2c02      	cmp	r4, #2
 8012b00:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8012b04:	d004      	beq.n	8012b10 <GUI_MEMDEV__WriteToActiveOpaque+0x5ec>
 8012b06:	2c04      	cmp	r4, #4
 8012b08:	d007      	beq.n	8012b1a <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 8012b0a:	2c01      	cmp	r4, #1
 8012b0c:	d114      	bne.n	8012b38 <GUI_MEMDEV__WriteToActiveOpaque+0x614>
 8012b0e:	e004      	b.n	8012b1a <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 8012b10:	4630      	mov	r0, r6
 8012b12:	9919      	ldr	r1, [sp, #100]	; 0x64
 8012b14:	4652      	mov	r2, sl
 8012b16:	4623      	mov	r3, r4
 8012b18:	e003      	b.n	8012b22 <GUI_MEMDEV__WriteToActiveOpaque+0x5fe>
 8012b1a:	9919      	ldr	r1, [sp, #100]	; 0x64
 8012b1c:	4630      	mov	r0, r6
 8012b1e:	4652      	mov	r2, sl
 8012b20:	2302      	movs	r3, #2
 8012b22:	f8d9 7014 	ldr.w	r7, [r9, #20]
 8012b26:	47b8      	blx	r7
 8012b28:	692f      	ldr	r7, [r5, #16]
 8012b2a:	9819      	ldr	r0, [sp, #100]	; 0x64
 8012b2c:	4641      	mov	r1, r8
 8012b2e:	4652      	mov	r2, sl
 8012b30:	4623      	mov	r3, r4
 8012b32:	47b8      	blx	r7
 8012b34:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8012b36:	443e      	add	r6, r7
 8012b38:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8012b3a:	991a      	ldr	r1, [sp, #104]	; 0x68
 8012b3c:	9104      	str	r1, [sp, #16]
 8012b3e:	2301      	movs	r3, #1
 8012b40:	2200      	movs	r2, #0
 8012b42:	f107 0801 	add.w	r8, r7, #1
 8012b46:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 8012b48:	9300      	str	r3, [sp, #0]
 8012b4a:	9301      	str	r3, [sp, #4]
 8012b4c:	9702      	str	r7, [sp, #8]
 8012b4e:	9203      	str	r2, [sp, #12]
 8012b50:	9205      	str	r2, [sp, #20]
 8012b52:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8012b54:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012b56:	465a      	mov	r2, fp
 8012b58:	f7fa ff04 	bl	800d964 <LCD_DrawBitmap>
 8012b5c:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8012b5e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8012b60:	fa00 f387 	sxtah	r3, r0, r7
 8012b64:	4543      	cmp	r3, r8
 8012b66:	d002      	beq.n	8012b6e <GUI_MEMDEV__WriteToActiveOpaque+0x64a>
 8012b68:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 8012b6c:	e7c7      	b.n	8012afe <GUI_MEMDEV__WriteToActiveOpaque+0x5da>
 8012b6e:	a819      	add	r0, sp, #100	; 0x64
 8012b70:	f7fd fc74 	bl	801045c <GUI_ALLOC_UnlockH>
 8012b74:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012b76:	f7fd fc9d 	bl	80104b4 <GUI_ALLOC_Free>
 8012b7a:	e059      	b.n	8012c30 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 8012b7c:	2001b39c 	.word	0x2001b39c
 8012b80:	20000254 	.word	0x20000254
 8012b84:	2c04      	cmp	r4, #4
 8012b86:	d041      	beq.n	8012c0c <GUI_MEMDEV__WriteToActiveOpaque+0x6e8>
 8012b88:	2c01      	cmp	r4, #1
 8012b8a:	d111      	bne.n	8012bb0 <GUI_MEMDEV__WriteToActiveOpaque+0x68c>
 8012b8c:	464a      	mov	r2, r9
 8012b8e:	4631      	mov	r1, r6
 8012b90:	f831 0b02 	ldrh.w	r0, [r1], #2
 8012b94:	910a      	str	r1, [sp, #40]	; 0x28
 8012b96:	920b      	str	r2, [sp, #44]	; 0x2c
 8012b98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012b9a:	4798      	blx	r3
 8012b9c:	47c0      	blx	r8
 8012b9e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012ba0:	f802 0b01 	strb.w	r0, [r2], #1
 8012ba4:	eb09 000a 	add.w	r0, r9, sl
 8012ba8:	4282      	cmp	r2, r0
 8012baa:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012bac:	d1f0      	bne.n	8012b90 <GUI_MEMDEV__WriteToActiveOpaque+0x66c>
 8012bae:	443e      	add	r6, r7
 8012bb0:	2301      	movs	r3, #1
 8012bb2:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012bb4:	991a      	ldr	r1, [sp, #104]	; 0x68
 8012bb6:	9300      	str	r3, [sp, #0]
 8012bb8:	2200      	movs	r2, #0
 8012bba:	9301      	str	r3, [sp, #4]
 8012bbc:	9002      	str	r0, [sp, #8]
 8012bbe:	9203      	str	r2, [sp, #12]
 8012bc0:	9104      	str	r1, [sp, #16]
 8012bc2:	9205      	str	r2, [sp, #20]
 8012bc4:	4629      	mov	r1, r5
 8012bc6:	465a      	mov	r2, fp
 8012bc8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8012bca:	f7fa fecb 	bl	800d964 <LCD_DrawBitmap>
 8012bce:	9910      	ldr	r1, [sp, #64]	; 0x40
 8012bd0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012bd2:	f105 0901 	add.w	r9, r5, #1
 8012bd6:	fa02 f381 	sxtah	r3, r2, r1
 8012bda:	454b      	cmp	r3, r9
 8012bdc:	d028      	beq.n	8012c30 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 8012bde:	464d      	mov	r5, r9
 8012be0:	2c02      	cmp	r4, #2
 8012be2:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
 8012be6:	d1cd      	bne.n	8012b84 <GUI_MEMDEV__WriteToActiveOpaque+0x660>
 8012be8:	464b      	mov	r3, r9
 8012bea:	4631      	mov	r1, r6
 8012bec:	46d9      	mov	r9, fp
 8012bee:	f831 0b02 	ldrh.w	r0, [r1], #2
 8012bf2:	910a      	str	r1, [sp, #40]	; 0x28
 8012bf4:	9309      	str	r3, [sp, #36]	; 0x24
 8012bf6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8012bf8:	4790      	blx	r2
 8012bfa:	47c0      	blx	r8
 8012bfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012bfe:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012c00:	f823 0b02 	strh.w	r0, [r3], #2
 8012c04:	f1b9 0901 	subs.w	r9, r9, #1
 8012c08:	d1f1      	bne.n	8012bee <GUI_MEMDEV__WriteToActiveOpaque+0x6ca>
 8012c0a:	e7d0      	b.n	8012bae <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 8012c0c:	464b      	mov	r3, r9
 8012c0e:	4631      	mov	r1, r6
 8012c10:	46d9      	mov	r9, fp
 8012c12:	f831 0b02 	ldrh.w	r0, [r1], #2
 8012c16:	910a      	str	r1, [sp, #40]	; 0x28
 8012c18:	9309      	str	r3, [sp, #36]	; 0x24
 8012c1a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8012c1c:	4790      	blx	r2
 8012c1e:	47c0      	blx	r8
 8012c20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012c22:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012c24:	f843 0b04 	str.w	r0, [r3], #4
 8012c28:	f1b9 0901 	subs.w	r9, r9, #1
 8012c2c:	d1f1      	bne.n	8012c12 <GUI_MEMDEV__WriteToActiveOpaque+0x6ee>
 8012c2e:	e7be      	b.n	8012bae <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 8012c30:	a818      	add	r0, sp, #96	; 0x60
 8012c32:	f7fd fc13 	bl	801045c <GUI_ALLOC_UnlockH>
 8012c36:	a81a      	add	r0, sp, #104	; 0x68
 8012c38:	f7fd fc10 	bl	801045c <GUI_ALLOC_UnlockH>
 8012c3c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012c3e:	f7fd fc39 	bl	80104b4 <GUI_ALLOC_Free>
 8012c42:	b01d      	add	sp, #116	; 0x74
 8012c44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012c48 <GUI_MEMDEV__WriteToActiveAlpha>:
 8012c48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c4c:	b091      	sub	sp, #68	; 0x44
 8012c4e:	460e      	mov	r6, r1
 8012c50:	4614      	mov	r4, r2
 8012c52:	900d      	str	r0, [sp, #52]	; 0x34
 8012c54:	f7fd fbf4 	bl	8010440 <GUI_ALLOC_LockH>
 8012c58:	4602      	mov	r2, r0
 8012c5a:	a810      	add	r0, sp, #64	; 0x40
 8012c5c:	6813      	ldr	r3, [r2, #0]
 8012c5e:	4d5b      	ldr	r5, [pc, #364]	; (8012dcc <GUI_MEMDEV__WriteToActiveAlpha+0x184>)
 8012c60:	691b      	ldr	r3, [r3, #16]
 8012c62:	f840 2d08 	str.w	r2, [r0, #-8]!
 8012c66:	685b      	ldr	r3, [r3, #4]
 8012c68:	f8b2 b008 	ldrh.w	fp, [r2, #8]
 8012c6c:	f8b2 900a 	ldrh.w	r9, [r2, #10]
 8012c70:	9309      	str	r3, [sp, #36]	; 0x24
 8012c72:	f7fd fbf3 	bl	801045c <GUI_ALLOC_UnlockH>
 8012c76:	682b      	ldr	r3, [r5, #0]
 8012c78:	4f55      	ldr	r7, [pc, #340]	; (8012dd0 <GUI_MEMDEV__WriteToActiveAlpha+0x188>)
 8012c7a:	7c5b      	ldrb	r3, [r3, #17]
 8012c7c:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 8012c80:	68c3      	ldr	r3, [r0, #12]
 8012c82:	2108      	movs	r1, #8
 8012c84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012c86:	4798      	blx	r3
 8012c88:	682b      	ldr	r3, [r5, #0]
 8012c8a:	7c5b      	ldrb	r3, [r3, #17]
 8012c8c:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 8012c90:	f8d3 8010 	ldr.w	r8, [r3, #16]
 8012c94:	2817      	cmp	r0, #23
 8012c96:	bf88      	it	hi
 8012c98:	2020      	movhi	r0, #32
 8012c9a:	9008      	str	r0, [sp, #32]
 8012c9c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8012ca0:	f8d8 2000 	ldr.w	r2, [r8]
 8012ca4:	910a      	str	r1, [sp, #40]	; 0x28
 8012ca6:	2000      	movs	r0, #0
 8012ca8:	920b      	str	r2, [sp, #44]	; 0x2c
 8012caa:	f7fb fb31 	bl	800e310 <GUI__AllocAlphaBuffer>
 8012cae:	2800      	cmp	r0, #0
 8012cb0:	f040 8089 	bne.w	8012dc6 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8012cb4:	682a      	ldr	r2, [r5, #0]
 8012cb6:	fa0f f78b 	sxth.w	r7, fp
 8012cba:	19f5      	adds	r5, r6, r7
 8012cbc:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 8012cc0:	3d01      	subs	r5, #1
 8012cc2:	1aed      	subs	r5, r5, r3
 8012cc4:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 8012cc8:	2d00      	cmp	r5, #0
 8012cca:	bfcc      	ite	gt
 8012ccc:	ebc5 0507 	rsbgt	r5, r5, r7
 8012cd0:	463d      	movle	r5, r7
 8012cd2:	42b3      	cmp	r3, r6
 8012cd4:	bfc3      	ittte	gt
 8012cd6:	ebc6 0103 	rsbgt	r1, r6, r3
 8012cda:	ebc1 0505 	rsbgt	r5, r1, r5
 8012cde:	461e      	movgt	r6, r3
 8012ce0:	2100      	movle	r1, #0
 8012ce2:	2d00      	cmp	r5, #0
 8012ce4:	dd6f      	ble.n	8012dc6 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8012ce6:	fa0f f389 	sxth.w	r3, r9
 8012cea:	18e0      	adds	r0, r4, r3
 8012cec:	f9b2 c00e 	ldrsh.w	ip, [r2, #14]
 8012cf0:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 8012cf4:	3801      	subs	r0, #1
 8012cf6:	ebcc 0000 	rsb	r0, ip, r0
 8012cfa:	2800      	cmp	r0, #0
 8012cfc:	bfc8      	it	gt
 8012cfe:	ebc0 0303 	rsbgt	r3, r0, r3
 8012d02:	4294      	cmp	r4, r2
 8012d04:	bfbd      	ittte	lt
 8012d06:	ebc4 0a02 	rsblt	sl, r4, r2
 8012d0a:	ebca 0303 	rsblt	r3, sl, r3
 8012d0e:	4614      	movlt	r4, r2
 8012d10:	f04f 0a00 	movge.w	sl, #0
 8012d14:	2b00      	cmp	r3, #0
 8012d16:	dd56      	ble.n	8012dc6 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8012d18:	fb07 1a0a 	mla	sl, r7, sl, r1
 8012d1c:	18e3      	adds	r3, r4, r3
 8012d1e:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 8012d22:	930c      	str	r3, [sp, #48]	; 0x30
 8012d24:	980d      	ldr	r0, [sp, #52]	; 0x34
 8012d26:	f7f8 fb07 	bl	800b338 <GUI_MEMDEV_GetDataPtr>
 8012d2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012d2c:	9300      	str	r3, [sp, #0]
 8012d2e:	ab0f      	add	r3, sp, #60	; 0x3c
 8012d30:	eb00 020a 	add.w	r2, r0, sl
 8012d34:	9301      	str	r3, [sp, #4]
 8012d36:	4630      	mov	r0, r6
 8012d38:	4621      	mov	r1, r4
 8012d3a:	462b      	mov	r3, r5
 8012d3c:	f7fb fa02 	bl	800e144 <GUI__DoAlphaBlending>
 8012d40:	4681      	mov	r9, r0
 8012d42:	2800      	cmp	r0, #0
 8012d44:	d03f      	beq.n	8012dc6 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8012d46:	4b23      	ldr	r3, [pc, #140]	; (8012dd4 <GUI_MEMDEV__WriteToActiveAlpha+0x18c>)
 8012d48:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012d4a:	4299      	cmp	r1, r3
 8012d4c:	d01e      	beq.n	8012d8c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 8012d4e:	4629      	mov	r1, r5
 8012d50:	9a08      	ldr	r2, [sp, #32]
 8012d52:	4643      	mov	r3, r8
 8012d54:	f001 fc9f 	bl	8014696 <GUI__CompactPixelIndicesEx>
 8012d58:	b9c0      	cbnz	r0, 8012d8c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 8012d5a:	f8d8 c010 	ldr.w	ip, [r8, #16]
 8012d5e:	f1bc 0f00 	cmp.w	ip, #0
 8012d62:	d006      	beq.n	8012d72 <GUI_MEMDEV__WriteToActiveAlpha+0x12a>
 8012d64:	4648      	mov	r0, r9
 8012d66:	4649      	mov	r1, r9
 8012d68:	fa0f f28b 	sxth.w	r2, fp
 8012d6c:	2304      	movs	r3, #4
 8012d6e:	47e0      	blx	ip
 8012d70:	e00c      	b.n	8012d8c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 8012d72:	464a      	mov	r2, r9
 8012d74:	463b      	mov	r3, r7
 8012d76:	6810      	ldr	r0, [r2, #0]
 8012d78:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012d7a:	9206      	str	r2, [sp, #24]
 8012d7c:	9307      	str	r3, [sp, #28]
 8012d7e:	4788      	blx	r1
 8012d80:	9b07      	ldr	r3, [sp, #28]
 8012d82:	9a06      	ldr	r2, [sp, #24]
 8012d84:	3b01      	subs	r3, #1
 8012d86:	f842 0b04 	str.w	r0, [r2], #4
 8012d8a:	d1f4      	bne.n	8012d76 <GUI_MEMDEV__WriteToActiveAlpha+0x12e>
 8012d8c:	9a08      	ldr	r2, [sp, #32]
 8012d8e:	9202      	str	r2, [sp, #8]
 8012d90:	2301      	movs	r3, #1
 8012d92:	2200      	movs	r2, #0
 8012d94:	f104 0c01 	add.w	ip, r4, #1
 8012d98:	9300      	str	r3, [sp, #0]
 8012d9a:	9301      	str	r3, [sp, #4]
 8012d9c:	9203      	str	r2, [sp, #12]
 8012d9e:	9205      	str	r2, [sp, #20]
 8012da0:	f8cd 9010 	str.w	r9, [sp, #16]
 8012da4:	4630      	mov	r0, r6
 8012da6:	4621      	mov	r1, r4
 8012da8:	462a      	mov	r2, r5
 8012daa:	f8cd c01c 	str.w	ip, [sp, #28]
 8012dae:	f7fa fdd9 	bl	800d964 <LCD_DrawBitmap>
 8012db2:	2304      	movs	r3, #4
 8012db4:	fb1b aa03 	smlabb	sl, fp, r3, sl
 8012db8:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8012dbc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012dbe:	459c      	cmp	ip, r3
 8012dc0:	d001      	beq.n	8012dc6 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 8012dc2:	4664      	mov	r4, ip
 8012dc4:	e7ae      	b.n	8012d24 <GUI_MEMDEV__WriteToActiveAlpha+0xdc>
 8012dc6:	b011      	add	sp, #68	; 0x44
 8012dc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012dcc:	20000254 	.word	0x20000254
 8012dd0:	2001b39c 	.word	0x2001b39c
 8012dd4:	08010adb 	.word	0x08010adb

08012dd8 <GUI_MEMDEV_WriteAt>:
 8012dd8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012dda:	460c      	mov	r4, r1
 8012ddc:	4615      	mov	r5, r2
 8012dde:	4606      	mov	r6, r0
 8012de0:	b330      	cbz	r0, 8012e30 <GUI_MEMDEV_WriteAt+0x58>
 8012de2:	f7fd fb2d 	bl	8010440 <GUI_ALLOC_LockH>
 8012de6:	4a13      	ldr	r2, [pc, #76]	; (8012e34 <GUI_MEMDEV_WriteAt+0x5c>)
 8012de8:	8943      	ldrh	r3, [r0, #10]
 8012dea:	9001      	str	r0, [sp, #4]
 8012dec:	4294      	cmp	r4, r2
 8012dee:	8902      	ldrh	r2, [r0, #8]
 8012df0:	bf04      	itt	eq
 8012df2:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 8012df6:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 8012dfa:	f8ad 4008 	strh.w	r4, [sp, #8]
 8012dfe:	3a01      	subs	r2, #1
 8012e00:	3b01      	subs	r3, #1
 8012e02:	4422      	add	r2, r4
 8012e04:	442b      	add	r3, r5
 8012e06:	a801      	add	r0, sp, #4
 8012e08:	f8ad 200c 	strh.w	r2, [sp, #12]
 8012e0c:	f8ad 500a 	strh.w	r5, [sp, #10]
 8012e10:	f8ad 300e 	strh.w	r3, [sp, #14]
 8012e14:	f7fd fb22 	bl	801045c <GUI_ALLOC_UnlockH>
 8012e18:	a802      	add	r0, sp, #8
 8012e1a:	f7f7 fec1 	bl	800aba0 <WM__InitIVRSearch>
 8012e1e:	b138      	cbz	r0, 8012e30 <GUI_MEMDEV_WriteAt+0x58>
 8012e20:	4630      	mov	r0, r6
 8012e22:	4621      	mov	r1, r4
 8012e24:	462a      	mov	r2, r5
 8012e26:	f7f9 f84d 	bl	800bec4 <GUI_MEMDEV__WriteToActiveAt>
 8012e2a:	f7f7 fdf7 	bl	800aa1c <WM__GetNextIVR>
 8012e2e:	e7f6      	b.n	8012e1e <GUI_MEMDEV_WriteAt+0x46>
 8012e30:	b004      	add	sp, #16
 8012e32:	bd70      	pop	{r4, r5, r6, pc}
 8012e34:	fffff001 	.word	0xfffff001

08012e38 <GUI_MEMDEV_Write>:
 8012e38:	4901      	ldr	r1, [pc, #4]	; (8012e40 <GUI_MEMDEV_Write+0x8>)
 8012e3a:	460a      	mov	r2, r1
 8012e3c:	f7ff bfcc 	b.w	8012dd8 <GUI_MEMDEV_WriteAt>
 8012e40:	fffff001 	.word	0xfffff001

08012e44 <GUI_USAGE_BM_AddPixel>:
 8012e44:	4603      	mov	r3, r0
 8012e46:	b510      	push	{r4, lr}
 8012e48:	f933 4b14 	ldrsh.w	r4, [r3], #20
 8012e4c:	1b09      	subs	r1, r1, r4
 8012e4e:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8012e52:	6900      	ldr	r0, [r0, #16]
 8012e54:	1b12      	subs	r2, r2, r4
 8012e56:	fb00 3302 	mla	r3, r0, r2, r3
 8012e5a:	10c8      	asrs	r0, r1, #3
 8012e5c:	2280      	movs	r2, #128	; 0x80
 8012e5e:	f001 0107 	and.w	r1, r1, #7
 8012e62:	fa42 f101 	asr.w	r1, r2, r1
 8012e66:	5c1a      	ldrb	r2, [r3, r0]
 8012e68:	4311      	orrs	r1, r2
 8012e6a:	5419      	strb	r1, [r3, r0]
 8012e6c:	bd10      	pop	{r4, pc}

08012e6e <GUI_USAGE_BM_GetNextDirty>:
 8012e6e:	b570      	push	{r4, r5, r6, lr}
 8012e70:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8012e74:	680b      	ldr	r3, [r1, #0]
 8012e76:	8886      	ldrh	r6, [r0, #4]
 8012e78:	42a2      	cmp	r2, r4
 8012e7a:	da41      	bge.n	8012f00 <GUI_USAGE_BM_GetNextDirty+0x92>
 8012e7c:	b236      	sxth	r6, r6
 8012e7e:	42b3      	cmp	r3, r6
 8012e80:	6904      	ldr	r4, [r0, #16]
 8012e82:	da3d      	bge.n	8012f00 <GUI_USAGE_BM_GetNextDirty+0x92>
 8012e84:	3014      	adds	r0, #20
 8012e86:	fb04 0202 	mla	r2, r4, r2, r0
 8012e8a:	10dd      	asrs	r5, r3, #3
 8012e8c:	1e70      	subs	r0, r6, #1
 8012e8e:	1954      	adds	r4, r2, r5
 8012e90:	ebc5 00e0 	rsb	r0, r5, r0, asr #3
 8012e94:	5d55      	ldrb	r5, [r2, r5]
 8012e96:	f003 0207 	and.w	r2, r3, #7
 8012e9a:	fa05 f202 	lsl.w	r2, r5, r2
 8012e9e:	3401      	adds	r4, #1
 8012ea0:	b2d2      	uxtb	r2, r2
 8012ea2:	b93a      	cbnz	r2, 8012eb4 <GUI_USAGE_BM_GetNextDirty+0x46>
 8012ea4:	b368      	cbz	r0, 8012f02 <GUI_USAGE_BM_GetNextDirty+0x94>
 8012ea6:	3308      	adds	r3, #8
 8012ea8:	f814 2b01 	ldrb.w	r2, [r4], #1
 8012eac:	3801      	subs	r0, #1
 8012eae:	f023 0307 	bic.w	r3, r3, #7
 8012eb2:	e7f6      	b.n	8012ea2 <GUI_USAGE_BM_GetNextDirty+0x34>
 8012eb4:	0615      	lsls	r5, r2, #24
 8012eb6:	d403      	bmi.n	8012ec0 <GUI_USAGE_BM_GetNextDirty+0x52>
 8012eb8:	0052      	lsls	r2, r2, #1
 8012eba:	b2d2      	uxtb	r2, r2
 8012ebc:	3301      	adds	r3, #1
 8012ebe:	e7f9      	b.n	8012eb4 <GUI_USAGE_BM_GetNextDirty+0x46>
 8012ec0:	2aff      	cmp	r2, #255	; 0xff
 8012ec2:	461d      	mov	r5, r3
 8012ec4:	d005      	beq.n	8012ed2 <GUI_USAGE_BM_GetNextDirty+0x64>
 8012ec6:	0656      	lsls	r6, r2, #25
 8012ec8:	d504      	bpl.n	8012ed4 <GUI_USAGE_BM_GetNextDirty+0x66>
 8012eca:	0052      	lsls	r2, r2, #1
 8012ecc:	b2d2      	uxtb	r2, r2
 8012ece:	3301      	adds	r3, #1
 8012ed0:	e7f9      	b.n	8012ec6 <GUI_USAGE_BM_GetNextDirty+0x58>
 8012ed2:	3307      	adds	r3, #7
 8012ed4:	f003 0207 	and.w	r2, r3, #7
 8012ed8:	2a07      	cmp	r2, #7
 8012eda:	d10d      	bne.n	8012ef8 <GUI_USAGE_BM_GetNextDirty+0x8a>
 8012edc:	3801      	subs	r0, #1
 8012ede:	d40b      	bmi.n	8012ef8 <GUI_USAGE_BM_GetNextDirty+0x8a>
 8012ee0:	f814 2b01 	ldrb.w	r2, [r4], #1
 8012ee4:	2aff      	cmp	r2, #255	; 0xff
 8012ee6:	d101      	bne.n	8012eec <GUI_USAGE_BM_GetNextDirty+0x7e>
 8012ee8:	3308      	adds	r3, #8
 8012eea:	e7f7      	b.n	8012edc <GUI_USAGE_BM_GetNextDirty+0x6e>
 8012eec:	0610      	lsls	r0, r2, #24
 8012eee:	d503      	bpl.n	8012ef8 <GUI_USAGE_BM_GetNextDirty+0x8a>
 8012ef0:	0052      	lsls	r2, r2, #1
 8012ef2:	b2d2      	uxtb	r2, r2
 8012ef4:	3301      	adds	r3, #1
 8012ef6:	e7f9      	b.n	8012eec <GUI_USAGE_BM_GetNextDirty+0x7e>
 8012ef8:	1b58      	subs	r0, r3, r5
 8012efa:	600d      	str	r5, [r1, #0]
 8012efc:	3001      	adds	r0, #1
 8012efe:	bd70      	pop	{r4, r5, r6, pc}
 8012f00:	2000      	movs	r0, #0
 8012f02:	bd70      	pop	{r4, r5, r6, pc}

08012f04 <_GUI_USAGE_BM_Delete>:
 8012f04:	f7fd bad6 	b.w	80104b4 <GUI_ALLOC_Free>

08012f08 <GUI_USAGE_BM_Clear>:
 8012f08:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8012f0c:	6902      	ldr	r2, [r0, #16]
 8012f0e:	2100      	movs	r1, #0
 8012f10:	3014      	adds	r0, #20
 8012f12:	435a      	muls	r2, r3
 8012f14:	f003 b955 	b.w	80161c2 <memset>

08012f18 <GUI_USAGE_BM_AddHLine>:
 8012f18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012f1a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8012f1e:	1b09      	subs	r1, r1, r4
 8012f20:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8012f24:	42a1      	cmp	r1, r4
 8012f26:	da2f      	bge.n	8012f88 <GUI_USAGE_BM_AddHLine+0x70>
 8012f28:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 8012f2c:	440b      	add	r3, r1
 8012f2e:	f100 0414 	add.w	r4, r0, #20
 8012f32:	3b01      	subs	r3, #1
 8012f34:	6900      	ldr	r0, [r0, #16]
 8012f36:	1b52      	subs	r2, r2, r5
 8012f38:	43de      	mvns	r6, r3
 8012f3a:	fb00 4202 	mla	r2, r0, r2, r4
 8012f3e:	f001 0707 	and.w	r7, r1, #7
 8012f42:	10cc      	asrs	r4, r1, #3
 8012f44:	f006 0607 	and.w	r6, r6, #7
 8012f48:	21ff      	movs	r1, #255	; 0xff
 8012f4a:	fa41 f707 	asr.w	r7, r1, r7
 8012f4e:	fa01 f606 	lsl.w	r6, r1, r6
 8012f52:	ebd4 03e3 	rsbs	r3, r4, r3, asr #3
 8012f56:	eb02 0504 	add.w	r5, r2, r4
 8012f5a:	b2ff      	uxtb	r7, r7
 8012f5c:	b2f6      	uxtb	r6, r6
 8012f5e:	5d10      	ldrb	r0, [r2, r4]
 8012f60:	d103      	bne.n	8012f6a <GUI_USAGE_BM_AddHLine+0x52>
 8012f62:	403e      	ands	r6, r7
 8012f64:	4330      	orrs	r0, r6
 8012f66:	5510      	strb	r0, [r2, r4]
 8012f68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012f6a:	4338      	orrs	r0, r7
 8012f6c:	5510      	strb	r0, [r2, r4]
 8012f6e:	1e5c      	subs	r4, r3, #1
 8012f70:	2c00      	cmp	r4, #0
 8012f72:	f105 0501 	add.w	r5, r5, #1
 8012f76:	dd04      	ble.n	8012f82 <GUI_USAGE_BM_AddHLine+0x6a>
 8012f78:	4628      	mov	r0, r5
 8012f7a:	4622      	mov	r2, r4
 8012f7c:	f003 f921 	bl	80161c2 <memset>
 8012f80:	4425      	add	r5, r4
 8012f82:	782b      	ldrb	r3, [r5, #0]
 8012f84:	431e      	orrs	r6, r3
 8012f86:	702e      	strb	r6, [r5, #0]
 8012f88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08012f8c <GUI_USAGE_BM_Create>:
 8012f8c:	e92d 4fd3 	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, sl, fp, lr}
 8012f90:	f102 060f 	add.w	r6, r2, #15
 8012f94:	1136      	asrs	r6, r6, #4
 8012f96:	0076      	lsls	r6, r6, #1
 8012f98:	4682      	mov	sl, r0
 8012f9a:	fb06 f003 	mul.w	r0, r6, r3
 8012f9e:	3014      	adds	r0, #20
 8012fa0:	4689      	mov	r9, r1
 8012fa2:	4690      	mov	r8, r2
 8012fa4:	461f      	mov	r7, r3
 8012fa6:	f7fd fcb8 	bl	801091a <GUI_ALLOC_AllocZero>
 8012faa:	4683      	mov	fp, r0
 8012fac:	b198      	cbz	r0, 8012fd6 <GUI_USAGE_BM_Create+0x4a>
 8012fae:	f7fd fa47 	bl	8010440 <GUI_ALLOC_LockH>
 8012fb2:	4604      	mov	r4, r0
 8012fb4:	4b0a      	ldr	r3, [pc, #40]	; (8012fe0 <GUI_USAGE_BM_Create+0x54>)
 8012fb6:	60a3      	str	r3, [r4, #8]
 8012fb8:	a802      	add	r0, sp, #8
 8012fba:	2301      	movs	r3, #1
 8012fbc:	f840 4d04 	str.w	r4, [r0, #-4]!
 8012fc0:	f8a4 8004 	strh.w	r8, [r4, #4]
 8012fc4:	f8a4 a000 	strh.w	sl, [r4]
 8012fc8:	f8a4 9002 	strh.w	r9, [r4, #2]
 8012fcc:	80e7      	strh	r7, [r4, #6]
 8012fce:	81a3      	strh	r3, [r4, #12]
 8012fd0:	6126      	str	r6, [r4, #16]
 8012fd2:	f7fd fa43 	bl	801045c <GUI_ALLOC_UnlockH>
 8012fd6:	4658      	mov	r0, fp
 8012fd8:	b002      	add	sp, #8
 8012fda:	e8bd 8fd0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
 8012fde:	bf00      	nop
 8012fe0:	08017810 	.word	0x08017810

08012fe4 <GUI_USAGE_DecUseCnt>:
 8012fe4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012fe6:	4605      	mov	r5, r0
 8012fe8:	f7fd fa2a 	bl	8010440 <GUI_ALLOC_LockH>
 8012fec:	4602      	mov	r2, r0
 8012fee:	a802      	add	r0, sp, #8
 8012ff0:	8994      	ldrh	r4, [r2, #12]
 8012ff2:	f840 2d04 	str.w	r2, [r0, #-4]!
 8012ff6:	3c01      	subs	r4, #1
 8012ff8:	b2a4      	uxth	r4, r4
 8012ffa:	8194      	strh	r4, [r2, #12]
 8012ffc:	f7fd fa2e 	bl	801045c <GUI_ALLOC_UnlockH>
 8013000:	b914      	cbnz	r4, 8013008 <GUI_USAGE_DecUseCnt+0x24>
 8013002:	4628      	mov	r0, r5
 8013004:	f7fd fa56 	bl	80104b4 <GUI_ALLOC_Free>
 8013008:	b003      	add	sp, #12
 801300a:	bd30      	pop	{r4, r5, pc}

0801300c <GUI_USAGE_AddRect>:
 801300c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013010:	4605      	mov	r5, r0
 8013012:	4688      	mov	r8, r1
 8013014:	4617      	mov	r7, r2
 8013016:	4699      	mov	r9, r3
 8013018:	68a8      	ldr	r0, [r5, #8]
 801301a:	464b      	mov	r3, r9
 801301c:	6846      	ldr	r6, [r0, #4]
 801301e:	4641      	mov	r1, r8
 8013020:	4628      	mov	r0, r5
 8013022:	1c54      	adds	r4, r2, #1
 8013024:	47b0      	blx	r6
 8013026:	9b08      	ldr	r3, [sp, #32]
 8013028:	443b      	add	r3, r7
 801302a:	42a3      	cmp	r3, r4
 801302c:	d001      	beq.n	8013032 <GUI_USAGE_AddRect+0x26>
 801302e:	4622      	mov	r2, r4
 8013030:	e7f2      	b.n	8013018 <GUI_USAGE_AddRect+0xc>
 8013032:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

08013038 <GUI_MEMDEV_ReduceYSize>:
 8013038:	b513      	push	{r0, r1, r4, lr}
 801303a:	460c      	mov	r4, r1
 801303c:	b918      	cbnz	r0, 8013046 <GUI_MEMDEV_ReduceYSize+0xe>
 801303e:	4b08      	ldr	r3, [pc, #32]	; (8013060 <GUI_MEMDEV_ReduceYSize+0x28>)
 8013040:	681b      	ldr	r3, [r3, #0]
 8013042:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8013044:	b150      	cbz	r0, 801305c <GUI_MEMDEV_ReduceYSize+0x24>
 8013046:	f7fd f9fb 	bl	8010440 <GUI_ALLOC_LockH>
 801304a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801304e:	9001      	str	r0, [sp, #4]
 8013050:	429c      	cmp	r4, r3
 8013052:	bfb8      	it	lt
 8013054:	8144      	strhlt	r4, [r0, #10]
 8013056:	a801      	add	r0, sp, #4
 8013058:	f7fd fa00 	bl	801045c <GUI_ALLOC_UnlockH>
 801305c:	b002      	add	sp, #8
 801305e:	bd10      	pop	{r4, pc}
 8013060:	20000254 	.word	0x20000254

08013064 <GUI_MEMDEV_Clear>:
 8013064:	b513      	push	{r0, r1, r4, lr}
 8013066:	b918      	cbnz	r0, 8013070 <GUI_MEMDEV_Clear+0xc>
 8013068:	4b0d      	ldr	r3, [pc, #52]	; (80130a0 <GUI_MEMDEV_Clear+0x3c>)
 801306a:	681b      	ldr	r3, [r3, #0]
 801306c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 801306e:	b1a8      	cbz	r0, 801309c <GUI_MEMDEV_Clear+0x38>
 8013070:	f7fd f9e6 	bl	8010440 <GUI_ALLOC_LockH>
 8013074:	ab02      	add	r3, sp, #8
 8013076:	6944      	ldr	r4, [r0, #20]
 8013078:	f843 0d08 	str.w	r0, [r3, #-8]!
 801307c:	4668      	mov	r0, sp
 801307e:	f7fd f9ed 	bl	801045c <GUI_ALLOC_UnlockH>
 8013082:	b15c      	cbz	r4, 801309c <GUI_MEMDEV_Clear+0x38>
 8013084:	4620      	mov	r0, r4
 8013086:	f7fd f9db 	bl	8010440 <GUI_ALLOC_LockH>
 801308a:	ac02      	add	r4, sp, #8
 801308c:	6883      	ldr	r3, [r0, #8]
 801308e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8013092:	689b      	ldr	r3, [r3, #8]
 8013094:	4798      	blx	r3
 8013096:	4620      	mov	r0, r4
 8013098:	f7fd f9e0 	bl	801045c <GUI_ALLOC_UnlockH>
 801309c:	b002      	add	sp, #8
 801309e:	bd10      	pop	{r4, pc}
 80130a0:	20000254 	.word	0x20000254

080130a4 <_GetDevData>:
 80130a4:	4802      	ldr	r0, [pc, #8]	; (80130b0 <_GetDevData+0xc>)
 80130a6:	2901      	cmp	r1, #1
 80130a8:	bf18      	it	ne
 80130aa:	2000      	movne	r0, #0
 80130ac:	4770      	bx	lr
 80130ae:	bf00      	nop
 80130b0:	08017868 	.word	0x08017868

080130b4 <_GetDevFunc>:
 80130b4:	4802      	ldr	r0, [pc, #8]	; (80130c0 <_GetDevFunc+0xc>)
 80130b6:	2916      	cmp	r1, #22
 80130b8:	bf18      	it	ne
 80130ba:	2000      	movne	r0, #0
 80130bc:	4770      	bx	lr
 80130be:	bf00      	nop
 80130c0:	08012525 	.word	0x08012525

080130c4 <_SetOrg>:
 80130c4:	6800      	ldr	r0, [r0, #0]
 80130c6:	b508      	push	{r3, lr}
 80130c8:	b110      	cbz	r0, 80130d0 <_SetOrg+0xc>
 80130ca:	68c3      	ldr	r3, [r0, #12]
 80130cc:	6a1b      	ldr	r3, [r3, #32]
 80130ce:	4798      	blx	r3
 80130d0:	bd08      	pop	{r3, pc}

080130d2 <_GetDevProp>:
 80130d2:	6800      	ldr	r0, [r0, #0]
 80130d4:	b508      	push	{r3, lr}
 80130d6:	b118      	cbz	r0, 80130e0 <_GetDevProp+0xe>
 80130d8:	68c3      	ldr	r3, [r0, #12]
 80130da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80130dc:	4798      	blx	r3
 80130de:	bd08      	pop	{r3, pc}
 80130e0:	f04f 30ff 	mov.w	r0, #4294967295
 80130e4:	bd08      	pop	{r3, pc}

080130e6 <_GetRect>:
 80130e6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80130e8:	6880      	ldr	r0, [r0, #8]
 80130ea:	460c      	mov	r4, r1
 80130ec:	f7fd f9a8 	bl	8010440 <GUI_ALLOC_LockH>
 80130f0:	4603      	mov	r3, r0
 80130f2:	a802      	add	r0, sp, #8
 80130f4:	8899      	ldrh	r1, [r3, #4]
 80130f6:	88da      	ldrh	r2, [r3, #6]
 80130f8:	891d      	ldrh	r5, [r3, #8]
 80130fa:	f840 3d04 	str.w	r3, [r0, #-4]!
 80130fe:	895b      	ldrh	r3, [r3, #10]
 8013100:	8021      	strh	r1, [r4, #0]
 8013102:	8062      	strh	r2, [r4, #2]
 8013104:	4429      	add	r1, r5
 8013106:	441a      	add	r2, r3
 8013108:	3901      	subs	r1, #1
 801310a:	3a01      	subs	r2, #1
 801310c:	80a1      	strh	r1, [r4, #4]
 801310e:	80e2      	strh	r2, [r4, #6]
 8013110:	f7fd f9a4 	bl	801045c <GUI_ALLOC_UnlockH>
 8013114:	b003      	add	sp, #12
 8013116:	bd30      	pop	{r4, r5, pc}

08013118 <_XY2PTR>:
 8013118:	4b0e      	ldr	r3, [pc, #56]	; (8013154 <_XY2PTR+0x3c>)
 801311a:	681b      	ldr	r3, [r3, #0]
 801311c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801311e:	4605      	mov	r5, r0
 8013120:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8013122:	460e      	mov	r6, r1
 8013124:	f7fd f98c 	bl	8010440 <GUI_ALLOC_LockH>
 8013128:	4603      	mov	r3, r0
 801312a:	a802      	add	r0, sp, #8
 801312c:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 8013130:	f840 3d04 	str.w	r3, [r0, #-4]!
 8013134:	f103 0118 	add.w	r1, r3, #24
 8013138:	1b36      	subs	r6, r6, r4
 801313a:	68dc      	ldr	r4, [r3, #12]
 801313c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8013140:	fb04 1406 	mla	r4, r4, r6, r1
 8013144:	1aed      	subs	r5, r5, r3
 8013146:	f7fd f989 	bl	801045c <GUI_ALLOC_UnlockH>
 801314a:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 801314e:	4620      	mov	r0, r4
 8013150:	b002      	add	sp, #8
 8013152:	bd70      	pop	{r4, r5, r6, pc}
 8013154:	20000254 	.word	0x20000254

08013158 <_GetPixelIndex>:
 8013158:	b508      	push	{r3, lr}
 801315a:	4608      	mov	r0, r1
 801315c:	4611      	mov	r1, r2
 801315e:	f7ff ffdb 	bl	8013118 <_XY2PTR>
 8013162:	8800      	ldrh	r0, [r0, #0]
 8013164:	bd08      	pop	{r3, pc}
	...

08013168 <_XorPixel>:
 8013168:	4b14      	ldr	r3, [pc, #80]	; (80131bc <_XorPixel+0x54>)
 801316a:	681b      	ldr	r3, [r3, #0]
 801316c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801316e:	4607      	mov	r7, r0
 8013170:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8013172:	4615      	mov	r5, r2
 8013174:	460e      	mov	r6, r1
 8013176:	f7fd f963 	bl	8010440 <GUI_ALLOC_LockH>
 801317a:	4629      	mov	r1, r5
 801317c:	9000      	str	r0, [sp, #0]
 801317e:	4630      	mov	r0, r6
 8013180:	f7ff ffca 	bl	8013118 <_XY2PTR>
 8013184:	693b      	ldr	r3, [r7, #16]
 8013186:	4604      	mov	r4, r0
 8013188:	689b      	ldr	r3, [r3, #8]
 801318a:	4798      	blx	r3
 801318c:	8823      	ldrh	r3, [r4, #0]
 801318e:	4058      	eors	r0, r3
 8013190:	9b00      	ldr	r3, [sp, #0]
 8013192:	8020      	strh	r0, [r4, #0]
 8013194:	6958      	ldr	r0, [r3, #20]
 8013196:	b160      	cbz	r0, 80131b2 <_XorPixel+0x4a>
 8013198:	f7fd f952 	bl	8010440 <GUI_ALLOC_LockH>
 801319c:	ac02      	add	r4, sp, #8
 801319e:	6883      	ldr	r3, [r0, #8]
 80131a0:	f844 0d04 	str.w	r0, [r4, #-4]!
 80131a4:	681b      	ldr	r3, [r3, #0]
 80131a6:	4631      	mov	r1, r6
 80131a8:	462a      	mov	r2, r5
 80131aa:	4798      	blx	r3
 80131ac:	4620      	mov	r0, r4
 80131ae:	f7fd f955 	bl	801045c <GUI_ALLOC_UnlockH>
 80131b2:	4668      	mov	r0, sp
 80131b4:	f7fd f952 	bl	801045c <GUI_ALLOC_UnlockH>
 80131b8:	b003      	add	sp, #12
 80131ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80131bc:	20000254 	.word	0x20000254

080131c0 <_SetPixelIndex>:
 80131c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80131c2:	461c      	mov	r4, r3
 80131c4:	4b10      	ldr	r3, [pc, #64]	; (8013208 <_SetPixelIndex+0x48>)
 80131c6:	681b      	ldr	r3, [r3, #0]
 80131c8:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80131ca:	460e      	mov	r6, r1
 80131cc:	4615      	mov	r5, r2
 80131ce:	f7fd f937 	bl	8010440 <GUI_ALLOC_LockH>
 80131d2:	4629      	mov	r1, r5
 80131d4:	9000      	str	r0, [sp, #0]
 80131d6:	4630      	mov	r0, r6
 80131d8:	f7ff ff9e 	bl	8013118 <_XY2PTR>
 80131dc:	9b00      	ldr	r3, [sp, #0]
 80131de:	8004      	strh	r4, [r0, #0]
 80131e0:	6958      	ldr	r0, [r3, #20]
 80131e2:	b160      	cbz	r0, 80131fe <_SetPixelIndex+0x3e>
 80131e4:	f7fd f92c 	bl	8010440 <GUI_ALLOC_LockH>
 80131e8:	ac02      	add	r4, sp, #8
 80131ea:	6883      	ldr	r3, [r0, #8]
 80131ec:	f844 0d04 	str.w	r0, [r4, #-4]!
 80131f0:	681b      	ldr	r3, [r3, #0]
 80131f2:	4631      	mov	r1, r6
 80131f4:	462a      	mov	r2, r5
 80131f6:	4798      	blx	r3
 80131f8:	4620      	mov	r0, r4
 80131fa:	f7fd f92f 	bl	801045c <GUI_ALLOC_UnlockH>
 80131fe:	4668      	mov	r0, sp
 8013200:	f7fd f92c 	bl	801045c <GUI_ALLOC_UnlockH>
 8013204:	b002      	add	sp, #8
 8013206:	bd70      	pop	{r4, r5, r6, pc}
 8013208:	20000254 	.word	0x20000254

0801320c <_DrawVLine>:
 801320c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8013210:	4d2c      	ldr	r5, [pc, #176]	; (80132c4 <_DrawVLine+0xb8>)
 8013212:	461e      	mov	r6, r3
 8013214:	682b      	ldr	r3, [r5, #0]
 8013216:	4681      	mov	r9, r0
 8013218:	6e18      	ldr	r0, [r3, #96]	; 0x60
 801321a:	460f      	mov	r7, r1
 801321c:	4614      	mov	r4, r2
 801321e:	f7fd f90f 	bl	8010440 <GUI_ALLOC_LockH>
 8013222:	9000      	str	r0, [sp, #0]
 8013224:	6940      	ldr	r0, [r0, #20]
 8013226:	46aa      	mov	sl, r5
 8013228:	b108      	cbz	r0, 801322e <_DrawVLine+0x22>
 801322a:	f7fd f909 	bl	8010440 <GUI_ALLOC_LockH>
 801322e:	9001      	str	r0, [sp, #4]
 8013230:	4621      	mov	r1, r4
 8013232:	4638      	mov	r0, r7
 8013234:	f7ff ff70 	bl	8013118 <_XY2PTR>
 8013238:	9b00      	ldr	r3, [sp, #0]
 801323a:	f8d3 800c 	ldr.w	r8, [r3, #12]
 801323e:	f8da 3000 	ldr.w	r3, [sl]
 8013242:	7c1a      	ldrb	r2, [r3, #16]
 8013244:	07d2      	lsls	r2, r2, #31
 8013246:	4605      	mov	r5, r0
 8013248:	d51f      	bpl.n	801328a <_DrawVLine+0x7e>
 801324a:	f8d9 3010 	ldr.w	r3, [r9, #16]
 801324e:	689b      	ldr	r3, [r3, #8]
 8013250:	4798      	blx	r3
 8013252:	fa1f f880 	uxth.w	r8, r0
 8013256:	9801      	ldr	r0, [sp, #4]
 8013258:	b120      	cbz	r0, 8013264 <_DrawVLine+0x58>
 801325a:	6883      	ldr	r3, [r0, #8]
 801325c:	4639      	mov	r1, r7
 801325e:	681b      	ldr	r3, [r3, #0]
 8013260:	4622      	mov	r2, r4
 8013262:	4798      	blx	r3
 8013264:	882b      	ldrh	r3, [r5, #0]
 8013266:	ea88 0303 	eor.w	r3, r8, r3
 801326a:	802b      	strh	r3, [r5, #0]
 801326c:	9b00      	ldr	r3, [sp, #0]
 801326e:	3401      	adds	r4, #1
 8013270:	68db      	ldr	r3, [r3, #12]
 8013272:	42b4      	cmp	r4, r6
 8013274:	441d      	add	r5, r3
 8013276:	ddee      	ble.n	8013256 <_DrawVLine+0x4a>
 8013278:	4668      	mov	r0, sp
 801327a:	f7fd f8ef 	bl	801045c <GUI_ALLOC_UnlockH>
 801327e:	9b01      	ldr	r3, [sp, #4]
 8013280:	b1eb      	cbz	r3, 80132be <_DrawVLine+0xb2>
 8013282:	a801      	add	r0, sp, #4
 8013284:	f7fd f8ea 	bl	801045c <GUI_ALLOC_UnlockH>
 8013288:	e019      	b.n	80132be <_DrawVLine+0xb2>
 801328a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801328c:	f8d3 9000 	ldr.w	r9, [r3]
 8013290:	9b01      	ldr	r3, [sp, #4]
 8013292:	b163      	cbz	r3, 80132ae <_DrawVLine+0xa2>
 8013294:	9801      	ldr	r0, [sp, #4]
 8013296:	6883      	ldr	r3, [r0, #8]
 8013298:	4622      	mov	r2, r4
 801329a:	681b      	ldr	r3, [r3, #0]
 801329c:	4639      	mov	r1, r7
 801329e:	3401      	adds	r4, #1
 80132a0:	4798      	blx	r3
 80132a2:	42b4      	cmp	r4, r6
 80132a4:	f8a5 9000 	strh.w	r9, [r5]
 80132a8:	4445      	add	r5, r8
 80132aa:	ddf3      	ble.n	8013294 <_DrawVLine+0x88>
 80132ac:	e7e4      	b.n	8013278 <_DrawVLine+0x6c>
 80132ae:	1b34      	subs	r4, r6, r4
 80132b0:	3401      	adds	r4, #1
 80132b2:	3c01      	subs	r4, #1
 80132b4:	f8a5 9000 	strh.w	r9, [r5]
 80132b8:	4445      	add	r5, r8
 80132ba:	d1fa      	bne.n	80132b2 <_DrawVLine+0xa6>
 80132bc:	e7dc      	b.n	8013278 <_DrawVLine+0x6c>
 80132be:	b002      	add	sp, #8
 80132c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80132c4:	20000254 	.word	0x20000254

080132c8 <_FillRect>:
 80132c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132cc:	4f2a      	ldr	r7, [pc, #168]	; (8013378 <_FillRect+0xb0>)
 80132ce:	4614      	mov	r4, r2
 80132d0:	683a      	ldr	r2, [r7, #0]
 80132d2:	4698      	mov	r8, r3
 80132d4:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 80132d6:	b087      	sub	sp, #28
 80132d8:	681b      	ldr	r3, [r3, #0]
 80132da:	9302      	str	r3, [sp, #8]
 80132dc:	4682      	mov	sl, r0
 80132de:	6e10      	ldr	r0, [r2, #96]	; 0x60
 80132e0:	460e      	mov	r6, r1
 80132e2:	f7fd f8ad 	bl	8010440 <GUI_ALLOC_LockH>
 80132e6:	4621      	mov	r1, r4
 80132e8:	9004      	str	r0, [sp, #16]
 80132ea:	4630      	mov	r0, r6
 80132ec:	f7ff ff14 	bl	8013118 <_XY2PTR>
 80132f0:	9a04      	ldr	r2, [sp, #16]
 80132f2:	4605      	mov	r5, r0
 80132f4:	6950      	ldr	r0, [r2, #20]
 80132f6:	68d3      	ldr	r3, [r2, #12]
 80132f8:	9303      	str	r3, [sp, #12]
 80132fa:	ebc6 0908 	rsb	r9, r6, r8
 80132fe:	f109 0801 	add.w	r8, r9, #1
 8013302:	46bb      	mov	fp, r7
 8013304:	b180      	cbz	r0, 8013328 <_FillRect+0x60>
 8013306:	f7fd f89b 	bl	8010440 <GUI_ALLOC_LockH>
 801330a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801330c:	af06      	add	r7, sp, #24
 801330e:	1b13      	subs	r3, r2, r4
 8013310:	f847 0d04 	str.w	r0, [r7, #-4]!
 8013314:	3301      	adds	r3, #1
 8013316:	9300      	str	r3, [sp, #0]
 8013318:	4631      	mov	r1, r6
 801331a:	4622      	mov	r2, r4
 801331c:	4643      	mov	r3, r8
 801331e:	f7ff fe75 	bl	801300c <GUI_USAGE_AddRect>
 8013322:	4638      	mov	r0, r7
 8013324:	f7fd f89a 	bl	801045c <GUI_ALLOC_UnlockH>
 8013328:	ea4f 0649 	mov.w	r6, r9, lsl #1
 801332c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801332e:	429c      	cmp	r4, r3
 8013330:	dc1c      	bgt.n	801336c <_FillRect+0xa4>
 8013332:	f8db 3000 	ldr.w	r3, [fp]
 8013336:	7c1b      	ldrb	r3, [r3, #16]
 8013338:	07db      	lsls	r3, r3, #31
 801333a:	d50d      	bpl.n	8013358 <_FillRect+0x90>
 801333c:	f8da 3010 	ldr.w	r3, [sl, #16]
 8013340:	689b      	ldr	r3, [r3, #8]
 8013342:	4798      	blx	r3
 8013344:	19aa      	adds	r2, r5, r6
 8013346:	b280      	uxth	r0, r0
 8013348:	1eab      	subs	r3, r5, #2
 801334a:	8859      	ldrh	r1, [r3, #2]
 801334c:	4041      	eors	r1, r0
 801334e:	f823 1f02 	strh.w	r1, [r3, #2]!
 8013352:	4293      	cmp	r3, r2
 8013354:	d1f9      	bne.n	801334a <_FillRect+0x82>
 8013356:	e005      	b.n	8013364 <_FillRect+0x9c>
 8013358:	9b02      	ldr	r3, [sp, #8]
 801335a:	4628      	mov	r0, r5
 801335c:	b299      	uxth	r1, r3
 801335e:	4642      	mov	r2, r8
 8013360:	f7fa fcce 	bl	800dd00 <GUI__memset16>
 8013364:	9a03      	ldr	r2, [sp, #12]
 8013366:	3401      	adds	r4, #1
 8013368:	4415      	add	r5, r2
 801336a:	e7df      	b.n	801332c <_FillRect+0x64>
 801336c:	a804      	add	r0, sp, #16
 801336e:	f7fd f875 	bl	801045c <GUI_ALLOC_UnlockH>
 8013372:	b007      	add	sp, #28
 8013374:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013378:	20000254 	.word	0x20000254

0801337c <_DrawHLine>:
 801337c:	b507      	push	{r0, r1, r2, lr}
 801337e:	9200      	str	r2, [sp, #0]
 8013380:	f7ff ffa2 	bl	80132c8 <_FillRect>
 8013384:	b003      	add	sp, #12
 8013386:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801338c <_DrawBitmap>:
 801338c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013390:	4c8a      	ldr	r4, [pc, #552]	; (80135bc <_DrawBitmap+0x230>)
 8013392:	b093      	sub	sp, #76	; 0x4c
 8013394:	469b      	mov	fp, r3
 8013396:	6823      	ldr	r3, [r4, #0]
 8013398:	900d      	str	r0, [sp, #52]	; 0x34
 801339a:	6e18      	ldr	r0, [r3, #96]	; 0x60
 801339c:	9207      	str	r2, [sp, #28]
 801339e:	460d      	mov	r5, r1
 80133a0:	f8dd a07c 	ldr.w	sl, [sp, #124]	; 0x7c
 80133a4:	f7fd f84c 	bl	8010440 <GUI_ALLOC_LockH>
 80133a8:	9010      	str	r0, [sp, #64]	; 0x40
 80133aa:	6940      	ldr	r0, [r0, #20]
 80133ac:	b108      	cbz	r0, 80133b2 <_DrawBitmap+0x26>
 80133ae:	f7fd f847 	bl	8010440 <GUI_ALLOC_LockH>
 80133b2:	9011      	str	r0, [sp, #68]	; 0x44
 80133b4:	a812      	add	r0, sp, #72	; 0x48
 80133b6:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 80133ba:	68db      	ldr	r3, [r3, #12]
 80133bc:	9308      	str	r3, [sp, #32]
 80133be:	f7fd f84d 	bl	801045c <GUI_ALLOC_UnlockH>
 80133c2:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80133c4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80133c6:	442e      	add	r6, r5
 80133c8:	9604      	str	r6, [sp, #16]
 80133ca:	b150      	cbz	r0, 80133e2 <_DrawBitmap+0x56>
 80133cc:	6823      	ldr	r3, [r4, #0]
 80133ce:	7c1b      	ldrb	r3, [r3, #16]
 80133d0:	0799      	lsls	r1, r3, #30
 80133d2:	d106      	bne.n	80133e2 <_DrawBitmap+0x56>
 80133d4:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80133d6:	9700      	str	r7, [sp, #0]
 80133d8:	4631      	mov	r1, r6
 80133da:	9a07      	ldr	r2, [sp, #28]
 80133dc:	465b      	mov	r3, fp
 80133de:	f7ff fe15 	bl	801300c <GUI_USAGE_AddRect>
 80133e2:	9804      	ldr	r0, [sp, #16]
 80133e4:	9907      	ldr	r1, [sp, #28]
 80133e6:	f7ff fe97 	bl	8013118 <_XY2PTR>
 80133ea:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80133ec:	2e10      	cmp	r6, #16
 80133ee:	4604      	mov	r4, r0
 80133f0:	d139      	bne.n	8013466 <_DrawBitmap+0xda>
 80133f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80133f4:	b11b      	cbz	r3, 80133fe <_DrawBitmap+0x72>
 80133f6:	ea4f 064b 	mov.w	r6, fp, lsl #1
 80133fa:	2500      	movs	r5, #0
 80133fc:	e014      	b.n	8013428 <_DrawBitmap+0x9c>
 80133fe:	4b70      	ldr	r3, [pc, #448]	; (80135c0 <_DrawBitmap+0x234>)
 8013400:	681d      	ldr	r5, [r3, #0]
 8013402:	2d00      	cmp	r5, #0
 8013404:	d0f7      	beq.n	80133f6 <_DrawBitmap+0x6a>
 8013406:	9e08      	ldr	r6, [sp, #32]
 8013408:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 801340a:	9600      	str	r6, [sp, #0]
 801340c:	9701      	str	r7, [sp, #4]
 801340e:	4651      	mov	r1, sl
 8013410:	465a      	mov	r2, fp
 8013412:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8013414:	47a8      	blx	r5
 8013416:	e345      	b.n	8013aa4 <_DrawBitmap+0x718>
 8013418:	f1ba 0f00 	cmp.w	sl, #0
 801341c:	d10a      	bne.n	8013434 <_DrawBitmap+0xa8>
 801341e:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8013420:	44ba      	add	sl, r7
 8013422:	9f08      	ldr	r7, [sp, #32]
 8013424:	3501      	adds	r5, #1
 8013426:	443c      	add	r4, r7
 8013428:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 801342a:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 801342e:	42bd      	cmp	r5, r7
 8013430:	dbf2      	blt.n	8013418 <_DrawBitmap+0x8c>
 8013432:	e013      	b.n	801345c <_DrawBitmap+0xd0>
 8013434:	2c00      	cmp	r4, #0
 8013436:	d0f2      	beq.n	801341e <_DrawBitmap+0x92>
 8013438:	4620      	mov	r0, r4
 801343a:	4651      	mov	r1, sl
 801343c:	4632      	mov	r2, r6
 801343e:	f002 fe9c 	bl	801617a <memcpy>
 8013442:	f1b8 0f00 	cmp.w	r8, #0
 8013446:	d0ea      	beq.n	801341e <_DrawBitmap+0x92>
 8013448:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801344c:	9a07      	ldr	r2, [sp, #28]
 801344e:	685f      	ldr	r7, [r3, #4]
 8013450:	9904      	ldr	r1, [sp, #16]
 8013452:	4640      	mov	r0, r8
 8013454:	442a      	add	r2, r5
 8013456:	465b      	mov	r3, fp
 8013458:	47b8      	blx	r7
 801345a:	e7e0      	b.n	801341e <_DrawBitmap+0x92>
 801345c:	f1b8 0f00 	cmp.w	r8, #0
 8013460:	f040 831d 	bne.w	8013a9e <_DrawBitmap+0x712>
 8013464:	e31e      	b.n	8013aa4 <_DrawBitmap+0x718>
 8013466:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8013468:	2e17      	cmp	r6, #23
 801346a:	dd38      	ble.n	80134de <_DrawBitmap+0x152>
 801346c:	2600      	movs	r6, #0
 801346e:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8013470:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8013472:	42be      	cmp	r6, r7
 8013474:	f280 809d 	bge.w	80135b2 <_DrawBitmap+0x226>
 8013478:	9f07      	ldr	r7, [sp, #28]
 801347a:	4437      	add	r7, r6
 801347c:	f1ba 0f00 	cmp.w	sl, #0
 8013480:	d027      	beq.n	80134d2 <_DrawBitmap+0x146>
 8013482:	b334      	cbz	r4, 80134d2 <_DrawBitmap+0x146>
 8013484:	b13d      	cbz	r5, 8013496 <_DrawBitmap+0x10a>
 8013486:	68ab      	ldr	r3, [r5, #8]
 8013488:	9904      	ldr	r1, [sp, #16]
 801348a:	f8d3 c004 	ldr.w	ip, [r3, #4]
 801348e:	4628      	mov	r0, r5
 8013490:	463a      	mov	r2, r7
 8013492:	465b      	mov	r3, fp
 8013494:	47e0      	blx	ip
 8013496:	1ea3      	subs	r3, r4, #2
 8013498:	f1aa 0904 	sub.w	r9, sl, #4
 801349c:	9303      	str	r3, [sp, #12]
 801349e:	46d8      	mov	r8, fp
 80134a0:	9b04      	ldr	r3, [sp, #16]
 80134a2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80134a4:	445b      	add	r3, fp
 80134a6:	ebc8 0103 	rsb	r1, r8, r3
 80134aa:	6903      	ldr	r3, [r0, #16]
 80134ac:	f859 0f04 	ldr.w	r0, [r9, #4]!
 80134b0:	681b      	ldr	r3, [r3, #0]
 80134b2:	9102      	str	r1, [sp, #8]
 80134b4:	4798      	blx	r3
 80134b6:	9b03      	ldr	r3, [sp, #12]
 80134b8:	9902      	ldr	r1, [sp, #8]
 80134ba:	f823 0f02 	strh.w	r0, [r3, #2]!
 80134be:	9303      	str	r3, [sp, #12]
 80134c0:	b125      	cbz	r5, 80134cc <_DrawBitmap+0x140>
 80134c2:	68ab      	ldr	r3, [r5, #8]
 80134c4:	4628      	mov	r0, r5
 80134c6:	681b      	ldr	r3, [r3, #0]
 80134c8:	463a      	mov	r2, r7
 80134ca:	4798      	blx	r3
 80134cc:	f1b8 0801 	subs.w	r8, r8, #1
 80134d0:	d1e6      	bne.n	80134a0 <_DrawBitmap+0x114>
 80134d2:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80134d4:	44ba      	add	sl, r7
 80134d6:	9f08      	ldr	r7, [sp, #32]
 80134d8:	3601      	adds	r6, #1
 80134da:	443c      	add	r4, r7
 80134dc:	e7c7      	b.n	801346e <_DrawBitmap+0xe2>
 80134de:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80134e0:	2e08      	cmp	r6, #8
 80134e2:	f100 0402 	add.w	r4, r0, #2
 80134e6:	d16d      	bne.n	80135c4 <_DrawBitmap+0x238>
 80134e8:	9e07      	ldr	r6, [sp, #28]
 80134ea:	9f07      	ldr	r7, [sp, #28]
 80134ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80134ee:	1bf3      	subs	r3, r6, r7
 80134f0:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80134f2:	42bb      	cmp	r3, r7
 80134f4:	f1a4 0002 	sub.w	r0, r4, #2
 80134f8:	da5b      	bge.n	80135b2 <_DrawBitmap+0x226>
 80134fa:	4b30      	ldr	r3, [pc, #192]	; (80135bc <_DrawBitmap+0x230>)
 80134fc:	9f21      	ldr	r7, [sp, #132]	; 0x84
 80134fe:	681b      	ldr	r3, [r3, #0]
 8013500:	7c1b      	ldrb	r3, [r3, #16]
 8013502:	b367      	cbz	r7, 801355e <_DrawBitmap+0x1d2>
 8013504:	f013 0303 	ands.w	r3, r3, #3
 8013508:	d004      	beq.n	8013514 <_DrawBitmap+0x188>
 801350a:	2b02      	cmp	r3, #2
 801350c:	d14b      	bne.n	80135a6 <_DrawBitmap+0x21a>
 801350e:	46a0      	mov	r8, r4
 8013510:	9f04      	ldr	r7, [sp, #16]
 8013512:	e01d      	b.n	8013550 <_DrawBitmap+0x1c4>
 8013514:	f81a 2003 	ldrb.w	r2, [sl, r3]
 8013518:	9f21      	ldr	r7, [sp, #132]	; 0x84
 801351a:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 801351e:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 8013522:	3301      	adds	r3, #1
 8013524:	455b      	cmp	r3, fp
 8013526:	d1f5      	bne.n	8013514 <_DrawBitmap+0x188>
 8013528:	e03d      	b.n	80135a6 <_DrawBitmap+0x21a>
 801352a:	9921      	ldr	r1, [sp, #132]	; 0x84
 801352c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8013530:	f828 3c02 	strh.w	r3, [r8, #-2]
 8013534:	b12d      	cbz	r5, 8013542 <_DrawBitmap+0x1b6>
 8013536:	68ab      	ldr	r3, [r5, #8]
 8013538:	4628      	mov	r0, r5
 801353a:	681b      	ldr	r3, [r3, #0]
 801353c:	4639      	mov	r1, r7
 801353e:	4632      	mov	r2, r6
 8013540:	4798      	blx	r3
 8013542:	9b04      	ldr	r3, [sp, #16]
 8013544:	3701      	adds	r7, #1
 8013546:	445b      	add	r3, fp
 8013548:	42bb      	cmp	r3, r7
 801354a:	f108 0802 	add.w	r8, r8, #2
 801354e:	d02a      	beq.n	80135a6 <_DrawBitmap+0x21a>
 8013550:	9804      	ldr	r0, [sp, #16]
 8013552:	ebc0 030a 	rsb	r3, r0, sl
 8013556:	5ddb      	ldrb	r3, [r3, r7]
 8013558:	2b00      	cmp	r3, #0
 801355a:	d0f2      	beq.n	8013542 <_DrawBitmap+0x1b6>
 801355c:	e7e5      	b.n	801352a <_DrawBitmap+0x19e>
 801355e:	f013 0303 	ands.w	r3, r3, #3
 8013562:	d004      	beq.n	801356e <_DrawBitmap+0x1e2>
 8013564:	2b02      	cmp	r3, #2
 8013566:	d11e      	bne.n	80135a6 <_DrawBitmap+0x21a>
 8013568:	46a0      	mov	r8, r4
 801356a:	9f04      	ldr	r7, [sp, #16]
 801356c:	e014      	b.n	8013598 <_DrawBitmap+0x20c>
 801356e:	4651      	mov	r1, sl
 8013570:	465a      	mov	r2, fp
 8013572:	f002 fe02 	bl	801617a <memcpy>
 8013576:	e016      	b.n	80135a6 <_DrawBitmap+0x21a>
 8013578:	f828 3c02 	strh.w	r3, [r8, #-2]
 801357c:	b12d      	cbz	r5, 801358a <_DrawBitmap+0x1fe>
 801357e:	68ab      	ldr	r3, [r5, #8]
 8013580:	4628      	mov	r0, r5
 8013582:	681b      	ldr	r3, [r3, #0]
 8013584:	4639      	mov	r1, r7
 8013586:	4632      	mov	r2, r6
 8013588:	4798      	blx	r3
 801358a:	9b04      	ldr	r3, [sp, #16]
 801358c:	3701      	adds	r7, #1
 801358e:	445b      	add	r3, fp
 8013590:	42bb      	cmp	r3, r7
 8013592:	f108 0802 	add.w	r8, r8, #2
 8013596:	d006      	beq.n	80135a6 <_DrawBitmap+0x21a>
 8013598:	9a04      	ldr	r2, [sp, #16]
 801359a:	ebc2 030a 	rsb	r3, r2, sl
 801359e:	5ddb      	ldrb	r3, [r3, r7]
 80135a0:	2b00      	cmp	r3, #0
 80135a2:	d0f2      	beq.n	801358a <_DrawBitmap+0x1fe>
 80135a4:	e7e8      	b.n	8013578 <_DrawBitmap+0x1ec>
 80135a6:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80135a8:	44ba      	add	sl, r7
 80135aa:	9f08      	ldr	r7, [sp, #32]
 80135ac:	3601      	adds	r6, #1
 80135ae:	443c      	add	r4, r7
 80135b0:	e79b      	b.n	80134ea <_DrawBitmap+0x15e>
 80135b2:	2d00      	cmp	r5, #0
 80135b4:	f040 8273 	bne.w	8013a9e <_DrawBitmap+0x712>
 80135b8:	e274      	b.n	8013aa4 <_DrawBitmap+0x718>
 80135ba:	bf00      	nop
 80135bc:	20000254 	.word	0x20000254
 80135c0:	20019700 	.word	0x20019700
 80135c4:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80135c6:	4bab      	ldr	r3, [pc, #684]	; (8013874 <_DrawBitmap+0x4e8>)
 80135c8:	9f20      	ldr	r7, [sp, #128]	; 0x80
 80135ca:	9409      	str	r4, [sp, #36]	; 0x24
 80135cc:	2e00      	cmp	r6, #0
 80135ce:	bf08      	it	eq
 80135d0:	461e      	moveq	r6, r3
 80135d2:	9621      	str	r6, [sp, #132]	; 0x84
 80135d4:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80135d6:	0076      	lsls	r6, r6, #1
 80135d8:	960e      	str	r6, [sp, #56]	; 0x38
 80135da:	00bf      	lsls	r7, r7, #2
 80135dc:	9e07      	ldr	r6, [sp, #28]
 80135de:	970f      	str	r7, [sp, #60]	; 0x3c
 80135e0:	9605      	str	r6, [sp, #20]
 80135e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80135e4:	9e05      	ldr	r6, [sp, #20]
 80135e6:	9f07      	ldr	r7, [sp, #28]
 80135e8:	1e9c      	subs	r4, r3, #2
 80135ea:	1bf3      	subs	r3, r6, r7
 80135ec:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 80135ee:	42b3      	cmp	r3, r6
 80135f0:	f280 8253 	bge.w	8013a9a <_DrawBitmap+0x70e>
 80135f4:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 80135f6:	2f02      	cmp	r7, #2
 80135f8:	f000 80d9 	beq.w	80137ae <_DrawBitmap+0x422>
 80135fc:	2f04      	cmp	r7, #4
 80135fe:	f000 8178 	beq.w	80138f2 <_DrawBitmap+0x566>
 8013602:	2f01      	cmp	r7, #1
 8013604:	f040 823f 	bne.w	8013a86 <_DrawBitmap+0x6fa>
 8013608:	f8df 9270 	ldr.w	r9, [pc, #624]	; 801387c <_DrawBitmap+0x4f0>
 801360c:	f8d9 3000 	ldr.w	r3, [r9]
 8013610:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8013612:	f7fc ff15 	bl	8010440 <GUI_ALLOC_LockH>
 8013616:	f89a 3000 	ldrb.w	r3, [sl]
 801361a:	4a97      	ldr	r2, [pc, #604]	; (8013878 <_DrawBitmap+0x4ec>)
 801361c:	9010      	str	r0, [sp, #64]	; 0x40
 801361e:	5cd5      	ldrb	r5, [r2, r3]
 8013620:	f8d9 3000 	ldr.w	r3, [r9]
 8013624:	9820      	ldr	r0, [sp, #128]	; 0x80
 8013626:	7c1b      	ldrb	r3, [r3, #16]
 8013628:	9f11      	ldr	r7, [sp, #68]	; 0x44
 801362a:	f003 0303 	and.w	r3, r3, #3
 801362e:	2b02      	cmp	r3, #2
 8013630:	465e      	mov	r6, fp
 8013632:	f1c0 0808 	rsb	r8, r0, #8
 8013636:	fa45 f500 	asr.w	r5, r5, r0
 801363a:	d022      	beq.n	8013682 <_DrawBitmap+0x2f6>
 801363c:	2b03      	cmp	r3, #3
 801363e:	d062      	beq.n	8013706 <_DrawBitmap+0x37a>
 8013640:	2b01      	cmp	r3, #1
 8013642:	d060      	beq.n	8013706 <_DrawBitmap+0x37a>
 8013644:	4652      	mov	r2, sl
 8013646:	4546      	cmp	r6, r8
 8013648:	bf38      	it	cc
 801364a:	46b0      	movcc	r8, r6
 801364c:	ebc8 0606 	rsb	r6, r8, r6
 8013650:	4643      	mov	r3, r8
 8013652:	4621      	mov	r1, r4
 8013654:	f005 0001 	and.w	r0, r5, #1
 8013658:	9f21      	ldr	r7, [sp, #132]	; 0x84
 801365a:	3b01      	subs	r3, #1
 801365c:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8013660:	f821 0b02 	strh.w	r0, [r1], #2
 8013664:	ea4f 0555 	mov.w	r5, r5, lsr #1
 8013668:	d1f4      	bne.n	8013654 <_DrawBitmap+0x2c8>
 801366a:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 801366e:	2e00      	cmp	r6, #0
 8013670:	f000 8099 	beq.w	80137a6 <_DrawBitmap+0x41a>
 8013674:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8013678:	497f      	ldr	r1, [pc, #508]	; (8013878 <_DrawBitmap+0x4ec>)
 801367a:	f04f 0808 	mov.w	r8, #8
 801367e:	5ccd      	ldrb	r5, [r1, r3]
 8013680:	e7e1      	b.n	8013646 <_DrawBitmap+0x2ba>
 8013682:	9821      	ldr	r0, [sp, #132]	; 0x84
 8013684:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8013688:	f8b0 c004 	ldrh.w	ip, [r0, #4]
 801368c:	f8cd a018 	str.w	sl, [sp, #24]
 8013690:	4546      	cmp	r6, r8
 8013692:	bf38      	it	cc
 8013694:	46b0      	movcc	r8, r6
 8013696:	ebc8 0606 	rsb	r6, r8, r6
 801369a:	b32f      	cbz	r7, 80136e8 <_DrawBitmap+0x35c>
 801369c:	b91d      	cbnz	r5, 80136a6 <_DrawBitmap+0x31a>
 801369e:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 80136a2:	44c1      	add	r9, r8
 80136a4:	e024      	b.n	80136f0 <_DrawBitmap+0x364>
 80136a6:	07ea      	lsls	r2, r5, #31
 80136a8:	d50b      	bpl.n	80136c2 <_DrawBitmap+0x336>
 80136aa:	68bb      	ldr	r3, [r7, #8]
 80136ac:	9a05      	ldr	r2, [sp, #20]
 80136ae:	681b      	ldr	r3, [r3, #0]
 80136b0:	f8cd c008 	str.w	ip, [sp, #8]
 80136b4:	4638      	mov	r0, r7
 80136b6:	4649      	mov	r1, r9
 80136b8:	4798      	blx	r3
 80136ba:	f8dd c008 	ldr.w	ip, [sp, #8]
 80136be:	f8a4 c000 	strh.w	ip, [r4]
 80136c2:	f1b8 0801 	subs.w	r8, r8, #1
 80136c6:	f109 0901 	add.w	r9, r9, #1
 80136ca:	f104 0402 	add.w	r4, r4, #2
 80136ce:	d00f      	beq.n	80136f0 <_DrawBitmap+0x364>
 80136d0:	086d      	lsrs	r5, r5, #1
 80136d2:	e7e3      	b.n	801369c <_DrawBitmap+0x310>
 80136d4:	07eb      	lsls	r3, r5, #31
 80136d6:	bf48      	it	mi
 80136d8:	f8a4 c000 	strhmi.w	ip, [r4]
 80136dc:	f1b8 0801 	subs.w	r8, r8, #1
 80136e0:	f104 0402 	add.w	r4, r4, #2
 80136e4:	d004      	beq.n	80136f0 <_DrawBitmap+0x364>
 80136e6:	086d      	lsrs	r5, r5, #1
 80136e8:	2d00      	cmp	r5, #0
 80136ea:	d1f3      	bne.n	80136d4 <_DrawBitmap+0x348>
 80136ec:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 80136f0:	2e00      	cmp	r6, #0
 80136f2:	d058      	beq.n	80137a6 <_DrawBitmap+0x41a>
 80136f4:	9906      	ldr	r1, [sp, #24]
 80136f6:	4a60      	ldr	r2, [pc, #384]	; (8013878 <_DrawBitmap+0x4ec>)
 80136f8:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80136fc:	9106      	str	r1, [sp, #24]
 80136fe:	5cd5      	ldrb	r5, [r2, r3]
 8013700:	f04f 0808 	mov.w	r8, #8
 8013704:	e7c4      	b.n	8013690 <_DrawBitmap+0x304>
 8013706:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013708:	6913      	ldr	r3, [r2, #16]
 801370a:	689b      	ldr	r3, [r3, #8]
 801370c:	4798      	blx	r3
 801370e:	9b04      	ldr	r3, [sp, #16]
 8013710:	930b      	str	r3, [sp, #44]	; 0x2c
 8013712:	b280      	uxth	r0, r0
 8013714:	900a      	str	r0, [sp, #40]	; 0x28
 8013716:	f10a 0901 	add.w	r9, sl, #1
 801371a:	4546      	cmp	r6, r8
 801371c:	bf38      	it	cc
 801371e:	46b0      	movcc	r8, r6
 8013720:	ebc8 0606 	rsb	r6, r8, r6
 8013724:	1ca3      	adds	r3, r4, #2
 8013726:	b31f      	cbz	r7, 8013770 <_DrawBitmap+0x3e4>
 8013728:	f8cd 8018 	str.w	r8, [sp, #24]
 801372c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801372e:	9a06      	ldr	r2, [sp, #24]
 8013730:	4440      	add	r0, r8
 8013732:	900c      	str	r0, [sp, #48]	; 0x30
 8013734:	1a81      	subs	r1, r0, r2
 8013736:	07e8      	lsls	r0, r5, #31
 8013738:	d50d      	bpl.n	8013756 <_DrawBitmap+0x3ca>
 801373a:	68ba      	ldr	r2, [r7, #8]
 801373c:	4638      	mov	r0, r7
 801373e:	f8d2 c000 	ldr.w	ip, [r2]
 8013742:	9a05      	ldr	r2, [sp, #20]
 8013744:	9302      	str	r3, [sp, #8]
 8013746:	47e0      	blx	ip
 8013748:	9b02      	ldr	r3, [sp, #8]
 801374a:	980a      	ldr	r0, [sp, #40]	; 0x28
 801374c:	f833 2c02 	ldrh.w	r2, [r3, #-2]
 8013750:	4042      	eors	r2, r0
 8013752:	f823 2c02 	strh.w	r2, [r3, #-2]
 8013756:	9906      	ldr	r1, [sp, #24]
 8013758:	3901      	subs	r1, #1
 801375a:	ea4f 0555 	mov.w	r5, r5, lsr #1
 801375e:	f103 0302 	add.w	r3, r3, #2
 8013762:	9106      	str	r1, [sp, #24]
 8013764:	d1e2      	bne.n	801372c <_DrawBitmap+0x3a0>
 8013766:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013768:	930b      	str	r3, [sp, #44]	; 0x2c
 801376a:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 801376e:	e010      	b.n	8013792 <_DrawBitmap+0x406>
 8013770:	4642      	mov	r2, r8
 8013772:	07e9      	lsls	r1, r5, #31
 8013774:	d505      	bpl.n	8013782 <_DrawBitmap+0x3f6>
 8013776:	f833 1c02 	ldrh.w	r1, [r3, #-2]
 801377a:	980a      	ldr	r0, [sp, #40]	; 0x28
 801377c:	4041      	eors	r1, r0
 801377e:	f823 1c02 	strh.w	r1, [r3, #-2]
 8013782:	3a01      	subs	r2, #1
 8013784:	ea4f 0555 	mov.w	r5, r5, lsr #1
 8013788:	f103 0302 	add.w	r3, r3, #2
 801378c:	d1f1      	bne.n	8013772 <_DrawBitmap+0x3e6>
 801378e:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8013792:	b146      	cbz	r6, 80137a6 <_DrawBitmap+0x41a>
 8013794:	f899 3000 	ldrb.w	r3, [r9]
 8013798:	4a37      	ldr	r2, [pc, #220]	; (8013878 <_DrawBitmap+0x4ec>)
 801379a:	f109 0901 	add.w	r9, r9, #1
 801379e:	5cd5      	ldrb	r5, [r2, r3]
 80137a0:	f04f 0808 	mov.w	r8, #8
 80137a4:	e7b9      	b.n	801371a <_DrawBitmap+0x38e>
 80137a6:	a810      	add	r0, sp, #64	; 0x40
 80137a8:	f7fc fe58 	bl	801045c <GUI_ALLOC_UnlockH>
 80137ac:	e16b      	b.n	8013a86 <_DrawBitmap+0x6fa>
 80137ae:	4b33      	ldr	r3, [pc, #204]	; (801387c <_DrawBitmap+0x4f0>)
 80137b0:	9e20      	ldr	r6, [sp, #128]	; 0x80
 80137b2:	681b      	ldr	r3, [r3, #0]
 80137b4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80137b6:	7c1b      	ldrb	r3, [r3, #16]
 80137b8:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 80137bc:	f1c6 0504 	rsb	r5, r6, #4
 80137c0:	f89a 6000 	ldrb.w	r6, [sl]
 80137c4:	f003 0303 	and.w	r3, r3, #3
 80137c8:	40be      	lsls	r6, r7
 80137ca:	2b01      	cmp	r3, #1
 80137cc:	b2ed      	uxtb	r5, r5
 80137ce:	b2f6      	uxtb	r6, r6
 80137d0:	d06a      	beq.n	80138a8 <_DrawBitmap+0x51c>
 80137d2:	d308      	bcc.n	80137e6 <_DrawBitmap+0x45a>
 80137d4:	2b02      	cmp	r3, #2
 80137d6:	f040 8156 	bne.w	8013a86 <_DrawBitmap+0x6fa>
 80137da:	f8cd a018 	str.w	sl, [sp, #24]
 80137de:	465f      	mov	r7, fp
 80137e0:	f8dd c010 	ldr.w	ip, [sp, #16]
 80137e4:	e03e      	b.n	8013864 <_DrawBitmap+0x4d8>
 80137e6:	4652      	mov	r2, sl
 80137e8:	465b      	mov	r3, fp
 80137ea:	429d      	cmp	r5, r3
 80137ec:	bfc8      	it	gt
 80137ee:	b2dd      	uxtbgt	r5, r3
 80137f0:	1b5b      	subs	r3, r3, r5
 80137f2:	4629      	mov	r1, r5
 80137f4:	4620      	mov	r0, r4
 80137f6:	ea4f 1c96 	mov.w	ip, r6, lsr #6
 80137fa:	9f21      	ldr	r7, [sp, #132]	; 0x84
 80137fc:	3901      	subs	r1, #1
 80137fe:	f857 c02c 	ldr.w	ip, [r7, ip, lsl #2]
 8013802:	f820 cb02 	strh.w	ip, [r0], #2
 8013806:	00b6      	lsls	r6, r6, #2
 8013808:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 801380c:	b2f6      	uxtb	r6, r6
 801380e:	d1f2      	bne.n	80137f6 <_DrawBitmap+0x46a>
 8013810:	3d01      	subs	r5, #1
 8013812:	b2ed      	uxtb	r5, r5
 8013814:	3501      	adds	r5, #1
 8013816:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 801381a:	2b00      	cmp	r3, #0
 801381c:	f000 8133 	beq.w	8013a86 <_DrawBitmap+0x6fa>
 8013820:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8013824:	2504      	movs	r5, #4
 8013826:	e7e0      	b.n	80137ea <_DrawBitmap+0x45e>
 8013828:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 801382c:	eb08 010c 	add.w	r1, r8, ip
 8013830:	d126      	bne.n	8013880 <_DrawBitmap+0x4f4>
 8013832:	f108 0801 	add.w	r8, r8, #1
 8013836:	fa5f f388 	uxtb.w	r3, r8
 801383a:	00b6      	lsls	r6, r6, #2
 801383c:	429d      	cmp	r5, r3
 801383e:	b2f6      	uxtb	r6, r6
 8013840:	d1f2      	bne.n	8013828 <_DrawBitmap+0x49c>
 8013842:	3d01      	subs	r5, #1
 8013844:	b2ed      	uxtb	r5, r5
 8013846:	1c6b      	adds	r3, r5, #1
 8013848:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801384c:	f10c 0301 	add.w	r3, ip, #1
 8013850:	eb03 0c05 	add.w	ip, r3, r5
 8013854:	2f00      	cmp	r7, #0
 8013856:	f000 8116 	beq.w	8013a86 <_DrawBitmap+0x6fa>
 801385a:	9b06      	ldr	r3, [sp, #24]
 801385c:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 8013860:	9306      	str	r3, [sp, #24]
 8013862:	2504      	movs	r5, #4
 8013864:	42bd      	cmp	r5, r7
 8013866:	bfc8      	it	gt
 8013868:	b2fd      	uxtbgt	r5, r7
 801386a:	1b7f      	subs	r7, r7, r5
 801386c:	f04f 0800 	mov.w	r8, #0
 8013870:	e7da      	b.n	8013828 <_DrawBitmap+0x49c>
 8013872:	bf00      	nop
 8013874:	08017828 	.word	0x08017828
 8013878:	0801765c 	.word	0x0801765c
 801387c:	20000254 	.word	0x20000254
 8013880:	09b3      	lsrs	r3, r6, #6
 8013882:	9821      	ldr	r0, [sp, #132]	; 0x84
 8013884:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8013888:	f824 3018 	strh.w	r3, [r4, r8, lsl #1]
 801388c:	f1b9 0f00 	cmp.w	r9, #0
 8013890:	d0cf      	beq.n	8013832 <_DrawBitmap+0x4a6>
 8013892:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8013896:	9a05      	ldr	r2, [sp, #20]
 8013898:	681b      	ldr	r3, [r3, #0]
 801389a:	f8cd c008 	str.w	ip, [sp, #8]
 801389e:	4648      	mov	r0, r9
 80138a0:	4798      	blx	r3
 80138a2:	f8dd c008 	ldr.w	ip, [sp, #8]
 80138a6:	e7c4      	b.n	8013832 <_DrawBitmap+0x4a6>
 80138a8:	4651      	mov	r1, sl
 80138aa:	465b      	mov	r3, fp
 80138ac:	429d      	cmp	r5, r3
 80138ae:	bfc8      	it	gt
 80138b0:	b2dd      	uxtbgt	r5, r3
 80138b2:	1b5b      	subs	r3, r3, r5
 80138b4:	1ca2      	adds	r2, r4, #2
 80138b6:	4628      	mov	r0, r5
 80138b8:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 80138bc:	d005      	beq.n	80138ca <_DrawBitmap+0x53e>
 80138be:	f832 7c02 	ldrh.w	r7, [r2, #-2]
 80138c2:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 80138c6:	f822 7c02 	strh.w	r7, [r2, #-2]
 80138ca:	3801      	subs	r0, #1
 80138cc:	00b6      	lsls	r6, r6, #2
 80138ce:	f010 00ff 	ands.w	r0, r0, #255	; 0xff
 80138d2:	b2f6      	uxtb	r6, r6
 80138d4:	f102 0202 	add.w	r2, r2, #2
 80138d8:	d1ee      	bne.n	80138b8 <_DrawBitmap+0x52c>
 80138da:	3d01      	subs	r5, #1
 80138dc:	b2ed      	uxtb	r5, r5
 80138de:	3501      	adds	r5, #1
 80138e0:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 80138e4:	2b00      	cmp	r3, #0
 80138e6:	f000 80ce 	beq.w	8013a86 <_DrawBitmap+0x6fa>
 80138ea:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 80138ee:	2504      	movs	r5, #4
 80138f0:	e7dc      	b.n	80138ac <_DrawBitmap+0x520>
 80138f2:	4a6e      	ldr	r2, [pc, #440]	; (8013aac <_DrawBitmap+0x720>)
 80138f4:	f89a 3000 	ldrb.w	r3, [sl]
 80138f8:	6812      	ldr	r2, [r2, #0]
 80138fa:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80138fc:	7c12      	ldrb	r2, [r2, #16]
 80138fe:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013900:	f002 0203 	and.w	r2, r2, #3
 8013904:	40bb      	lsls	r3, r7
 8013906:	2a01      	cmp	r2, #1
 8013908:	b2dd      	uxtb	r5, r3
 801390a:	f000 8095 	beq.w	8013a38 <_DrawBitmap+0x6ac>
 801390e:	d302      	bcc.n	8013916 <_DrawBitmap+0x58a>
 8013910:	2a02      	cmp	r2, #2
 8013912:	d036      	beq.n	8013982 <_DrawBitmap+0x5f6>
 8013914:	e0b7      	b.n	8013a86 <_DrawBitmap+0x6fa>
 8013916:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8013918:	b166      	cbz	r6, 8013934 <_DrawBitmap+0x5a8>
 801391a:	092d      	lsrs	r5, r5, #4
 801391c:	9f21      	ldr	r7, [sp, #132]	; 0x84
 801391e:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 8013922:	8023      	strh	r3, [r4, #0]
 8013924:	f10a 0201 	add.w	r2, sl, #1
 8013928:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801392a:	f89a 5001 	ldrb.w	r5, [sl, #1]
 801392e:	f10b 33ff 	add.w	r3, fp, #4294967295
 8013932:	e001      	b.n	8013938 <_DrawBitmap+0x5ac>
 8013934:	465b      	mov	r3, fp
 8013936:	4652      	mov	r2, sl
 8013938:	2b01      	cmp	r3, #1
 801393a:	dd19      	ble.n	8013970 <_DrawBitmap+0x5e4>
 801393c:	1058      	asrs	r0, r3, #1
 801393e:	1d21      	adds	r1, r4, #4
 8013940:	f003 0301 	and.w	r3, r3, #1
 8013944:	eb02 0c00 	add.w	ip, r2, r0
 8013948:	092f      	lsrs	r7, r5, #4
 801394a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801394c:	f005 050f 	and.w	r5, r5, #15
 8013950:	f856 7027 	ldr.w	r7, [r6, r7, lsl #2]
 8013954:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 8013958:	f821 7c04 	strh.w	r7, [r1, #-4]
 801395c:	f821 5c02 	strh.w	r5, [r1, #-2]
 8013960:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8013964:	4562      	cmp	r2, ip
 8013966:	f101 0104 	add.w	r1, r1, #4
 801396a:	d1ed      	bne.n	8013948 <_DrawBitmap+0x5bc>
 801396c:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 8013970:	2b00      	cmp	r3, #0
 8013972:	f000 8088 	beq.w	8013a86 <_DrawBitmap+0x6fa>
 8013976:	092d      	lsrs	r5, r5, #4
 8013978:	9f21      	ldr	r7, [sp, #132]	; 0x84
 801397a:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 801397e:	8023      	strh	r3, [r4, #0]
 8013980:	e081      	b.n	8013a86 <_DrawBitmap+0x6fa>
 8013982:	9f20      	ldr	r7, [sp, #128]	; 0x80
 8013984:	b1c7      	cbz	r7, 80139b8 <_DrawBitmap+0x62c>
 8013986:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 801398a:	d00b      	beq.n	80139a4 <_DrawBitmap+0x618>
 801398c:	092d      	lsrs	r5, r5, #4
 801398e:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8013990:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 8013994:	8023      	strh	r3, [r4, #0]
 8013996:	b12e      	cbz	r6, 80139a4 <_DrawBitmap+0x618>
 8013998:	68b3      	ldr	r3, [r6, #8]
 801399a:	9904      	ldr	r1, [sp, #16]
 801399c:	681b      	ldr	r3, [r3, #0]
 801399e:	9a05      	ldr	r2, [sp, #20]
 80139a0:	4630      	mov	r0, r6
 80139a2:	4798      	blx	r3
 80139a4:	9804      	ldr	r0, [sp, #16]
 80139a6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80139a8:	f89a 5001 	ldrb.w	r5, [sl, #1]
 80139ac:	1c47      	adds	r7, r0, #1
 80139ae:	f10b 39ff 	add.w	r9, fp, #4294967295
 80139b2:	f10a 0801 	add.w	r8, sl, #1
 80139b6:	e00f      	b.n	80139d8 <_DrawBitmap+0x64c>
 80139b8:	46d9      	mov	r9, fp
 80139ba:	46d0      	mov	r8, sl
 80139bc:	9f04      	ldr	r7, [sp, #16]
 80139be:	e00b      	b.n	80139d8 <_DrawBitmap+0x64c>
 80139c0:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 80139c4:	d10c      	bne.n	80139e0 <_DrawBitmap+0x654>
 80139c6:	f015 050f 	ands.w	r5, r5, #15
 80139ca:	d117      	bne.n	80139fc <_DrawBitmap+0x670>
 80139cc:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 80139d0:	3404      	adds	r4, #4
 80139d2:	3702      	adds	r7, #2
 80139d4:	f1a9 0902 	sub.w	r9, r9, #2
 80139d8:	f1b9 0f01 	cmp.w	r9, #1
 80139dc:	dcf0      	bgt.n	80139c0 <_DrawBitmap+0x634>
 80139de:	e01a      	b.n	8013a16 <_DrawBitmap+0x68a>
 80139e0:	092b      	lsrs	r3, r5, #4
 80139e2:	9921      	ldr	r1, [sp, #132]	; 0x84
 80139e4:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80139e8:	8023      	strh	r3, [r4, #0]
 80139ea:	2e00      	cmp	r6, #0
 80139ec:	d0eb      	beq.n	80139c6 <_DrawBitmap+0x63a>
 80139ee:	68b3      	ldr	r3, [r6, #8]
 80139f0:	9a05      	ldr	r2, [sp, #20]
 80139f2:	681b      	ldr	r3, [r3, #0]
 80139f4:	4630      	mov	r0, r6
 80139f6:	4639      	mov	r1, r7
 80139f8:	4798      	blx	r3
 80139fa:	e7e4      	b.n	80139c6 <_DrawBitmap+0x63a>
 80139fc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80139fe:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 8013a02:	8063      	strh	r3, [r4, #2]
 8013a04:	2e00      	cmp	r6, #0
 8013a06:	d0e1      	beq.n	80139cc <_DrawBitmap+0x640>
 8013a08:	68b3      	ldr	r3, [r6, #8]
 8013a0a:	9a05      	ldr	r2, [sp, #20]
 8013a0c:	681b      	ldr	r3, [r3, #0]
 8013a0e:	4630      	mov	r0, r6
 8013a10:	1c79      	adds	r1, r7, #1
 8013a12:	4798      	blx	r3
 8013a14:	e7da      	b.n	80139cc <_DrawBitmap+0x640>
 8013a16:	f1b9 0f00 	cmp.w	r9, #0
 8013a1a:	d034      	beq.n	8013a86 <_DrawBitmap+0x6fa>
 8013a1c:	092d      	lsrs	r5, r5, #4
 8013a1e:	d032      	beq.n	8013a86 <_DrawBitmap+0x6fa>
 8013a20:	9821      	ldr	r0, [sp, #132]	; 0x84
 8013a22:	f850 3025 	ldr.w	r3, [r0, r5, lsl #2]
 8013a26:	8023      	strh	r3, [r4, #0]
 8013a28:	b36e      	cbz	r6, 8013a86 <_DrawBitmap+0x6fa>
 8013a2a:	68b3      	ldr	r3, [r6, #8]
 8013a2c:	9a05      	ldr	r2, [sp, #20]
 8013a2e:	681b      	ldr	r3, [r3, #0]
 8013a30:	4630      	mov	r0, r6
 8013a32:	4639      	mov	r1, r7
 8013a34:	4798      	blx	r3
 8013a36:	e026      	b.n	8013a86 <_DrawBitmap+0x6fa>
 8013a38:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8013a3a:	f1c6 0302 	rsb	r3, r6, #2
 8013a3e:	b2db      	uxtb	r3, r3
 8013a40:	4650      	mov	r0, sl
 8013a42:	465a      	mov	r2, fp
 8013a44:	4293      	cmp	r3, r2
 8013a46:	bfc8      	it	gt
 8013a48:	b2d3      	uxtbgt	r3, r2
 8013a4a:	1ad2      	subs	r2, r2, r3
 8013a4c:	1ca1      	adds	r1, r4, #2
 8013a4e:	461e      	mov	r6, r3
 8013a50:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 8013a54:	d005      	beq.n	8013a62 <_DrawBitmap+0x6d6>
 8013a56:	f831 7c02 	ldrh.w	r7, [r1, #-2]
 8013a5a:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 8013a5e:	f821 7c02 	strh.w	r7, [r1, #-2]
 8013a62:	3e01      	subs	r6, #1
 8013a64:	012d      	lsls	r5, r5, #4
 8013a66:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
 8013a6a:	b2ed      	uxtb	r5, r5
 8013a6c:	f101 0102 	add.w	r1, r1, #2
 8013a70:	d1ee      	bne.n	8013a50 <_DrawBitmap+0x6c4>
 8013a72:	3b01      	subs	r3, #1
 8013a74:	b2db      	uxtb	r3, r3
 8013a76:	3301      	adds	r3, #1
 8013a78:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013a7c:	b11a      	cbz	r2, 8013a86 <_DrawBitmap+0x6fa>
 8013a7e:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8013a82:	2302      	movs	r3, #2
 8013a84:	e7de      	b.n	8013a44 <_DrawBitmap+0x6b8>
 8013a86:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8013a88:	9b05      	ldr	r3, [sp, #20]
 8013a8a:	9e08      	ldr	r6, [sp, #32]
 8013a8c:	44ba      	add	sl, r7
 8013a8e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013a90:	3301      	adds	r3, #1
 8013a92:	4437      	add	r7, r6
 8013a94:	9305      	str	r3, [sp, #20]
 8013a96:	9709      	str	r7, [sp, #36]	; 0x24
 8013a98:	e5a3      	b.n	80135e2 <_DrawBitmap+0x256>
 8013a9a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013a9c:	b113      	cbz	r3, 8013aa4 <_DrawBitmap+0x718>
 8013a9e:	a811      	add	r0, sp, #68	; 0x44
 8013aa0:	f7fc fcdc 	bl	801045c <GUI_ALLOC_UnlockH>
 8013aa4:	b013      	add	sp, #76	; 0x4c
 8013aa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013aaa:	bf00      	nop
 8013aac:	20000254 	.word	0x20000254

08013ab0 <LCD_SelectLCD>:
 8013ab0:	b510      	push	{r4, lr}
 8013ab2:	4b0d      	ldr	r3, [pc, #52]	; (8013ae8 <LCD_SelectLCD+0x38>)
 8013ab4:	681a      	ldr	r2, [r3, #0]
 8013ab6:	7c51      	ldrb	r1, [r2, #17]
 8013ab8:	4a0c      	ldr	r2, [pc, #48]	; (8013aec <LCD_SelectLCD+0x3c>)
 8013aba:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 8013abe:	461c      	mov	r4, r3
 8013ac0:	b140      	cbz	r0, 8013ad4 <LCD_SelectLCD+0x24>
 8013ac2:	68c3      	ldr	r3, [r0, #12]
 8013ac4:	b113      	cbz	r3, 8013acc <LCD_SelectLCD+0x1c>
 8013ac6:	681b      	ldr	r3, [r3, #0]
 8013ac8:	2b04      	cmp	r3, #4
 8013aca:	d001      	beq.n	8013ad0 <LCD_SelectLCD+0x20>
 8013acc:	6800      	ldr	r0, [r0, #0]
 8013ace:	e7f7      	b.n	8013ac0 <LCD_SelectLCD+0x10>
 8013ad0:	f7fb ffac 	bl	800fa2c <GUI_DEVICE_Unlink>
 8013ad4:	6823      	ldr	r3, [r4, #0]
 8013ad6:	2200      	movs	r2, #0
 8013ad8:	661a      	str	r2, [r3, #96]	; 0x60
 8013ada:	f103 0208 	add.w	r2, r3, #8
 8013ade:	615a      	str	r2, [r3, #20]
 8013ae0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013ae4:	f7fa b84a 	b.w	800db7c <LCD_SetClipRectMax>
 8013ae8:	20000254 	.word	0x20000254
 8013aec:	2001b39c 	.word	0x2001b39c

08013af0 <LCD_ReadRectEx>:
 8013af0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013af4:	b087      	sub	sp, #28
 8013af6:	4617      	mov	r7, r2
 8013af8:	9304      	str	r3, [sp, #16]
 8013afa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013afc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8013afe:	68da      	ldr	r2, [r3, #12]
 8013b00:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8013b02:	f8d2 8014 	ldr.w	r8, [r2, #20]
 8013b06:	4606      	mov	r6, r0
 8013b08:	460d      	mov	r5, r1
 8013b0a:	b973      	cbnz	r3, 8013b2a <LCD_ReadRectEx+0x3a>
 8013b0c:	4b71      	ldr	r3, [pc, #452]	; (8013cd4 <LCD_ReadRectEx+0x1e4>)
 8013b0e:	681b      	ldr	r3, [r3, #0]
 8013b10:	7c58      	ldrb	r0, [r3, #17]
 8013b12:	f7f9 fce5 	bl	800d4e0 <GUI_GetBitsPerPixelEx>
 8013b16:	2808      	cmp	r0, #8
 8013b18:	4682      	mov	sl, r0
 8013b1a:	dd15      	ble.n	8013b48 <LCD_ReadRectEx+0x58>
 8013b1c:	2810      	cmp	r0, #16
 8013b1e:	bfcc      	ite	gt
 8013b20:	f04f 0904 	movgt.w	r9, #4
 8013b24:	f04f 0902 	movle.w	r9, #2
 8013b28:	e010      	b.n	8013b4c <LCD_ReadRectEx+0x5c>
 8013b2a:	a811      	add	r0, sp, #68	; 0x44
 8013b2c:	2101      	movs	r1, #1
 8013b2e:	4798      	blx	r3
 8013b30:	4684      	mov	ip, r0
 8013b32:	2800      	cmp	r0, #0
 8013b34:	d0ea      	beq.n	8013b0c <LCD_ReadRectEx+0x1c>
 8013b36:	9b04      	ldr	r3, [sp, #16]
 8013b38:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013b3a:	e88d 0018 	stmia.w	sp, {r3, r4}
 8013b3e:	4631      	mov	r1, r6
 8013b40:	462a      	mov	r2, r5
 8013b42:	463b      	mov	r3, r7
 8013b44:	47e0      	blx	ip
 8013b46:	e0c1      	b.n	8013ccc <LCD_ReadRectEx+0x1dc>
 8013b48:	f04f 0901 	mov.w	r9, #1
 8013b4c:	f04f 0b00 	mov.w	fp, #0
 8013b50:	9b04      	ldr	r3, [sp, #16]
 8013b52:	429d      	cmp	r5, r3
 8013b54:	f300 80ba 	bgt.w	8013ccc <LCD_ReadRectEx+0x1dc>
 8013b58:	f1b9 0f02 	cmp.w	r9, #2
 8013b5c:	d009      	beq.n	8013b72 <LCD_ReadRectEx+0x82>
 8013b5e:	f1b9 0f04 	cmp.w	r9, #4
 8013b62:	d004      	beq.n	8013b6e <LCD_ReadRectEx+0x7e>
 8013b64:	f1b9 0f01 	cmp.w	r9, #1
 8013b68:	f040 80ae 	bne.w	8013cc8 <LCD_ReadRectEx+0x1d8>
 8013b6c:	e003      	b.n	8013b76 <LCD_ReadRectEx+0x86>
 8013b6e:	46b4      	mov	ip, r6
 8013b70:	e09b      	b.n	8013caa <LCD_ReadRectEx+0x1ba>
 8013b72:	46b4      	mov	ip, r6
 8013b74:	e08a      	b.n	8013c8c <LCD_ReadRectEx+0x19c>
 8013b76:	f10a 32ff 	add.w	r2, sl, #4294967295
 8013b7a:	2a07      	cmp	r2, #7
 8013b7c:	f200 80a4 	bhi.w	8013cc8 <LCD_ReadRectEx+0x1d8>
 8013b80:	e8df f002 	tbb	[pc, r2]
 8013b84:	0606080a 	.word	0x0606080a
 8013b88:	04040404 	.word	0x04040404
 8013b8c:	46b4      	mov	ip, r6
 8013b8e:	e066      	b.n	8013c5e <LCD_ReadRectEx+0x16e>
 8013b90:	46b4      	mov	ip, r6
 8013b92:	e047      	b.n	8013c24 <LCD_ReadRectEx+0x134>
 8013b94:	46b4      	mov	ip, r6
 8013b96:	e022      	b.n	8013bde <LCD_ReadRectEx+0xee>
 8013b98:	46b4      	mov	ip, r6
 8013b9a:	45bc      	cmp	ip, r7
 8013b9c:	f300 8094 	bgt.w	8013cc8 <LCD_ReadRectEx+0x1d8>
 8013ba0:	4661      	mov	r1, ip
 8013ba2:	462a      	mov	r2, r5
 8013ba4:	f8cd c00c 	str.w	ip, [sp, #12]
 8013ba8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013baa:	47c0      	blx	r8
 8013bac:	f1cb 0207 	rsb	r2, fp, #7
 8013bb0:	fa00 f202 	lsl.w	r2, r0, r2
 8013bb4:	f64f 717f 	movw	r1, #65407	; 0xff7f
 8013bb8:	7820      	ldrb	r0, [r4, #0]
 8013bba:	fa41 f10b 	asr.w	r1, r1, fp
 8013bbe:	4001      	ands	r1, r0
 8013bc0:	430a      	orrs	r2, r1
 8013bc2:	7022      	strb	r2, [r4, #0]
 8013bc4:	f10b 0301 	add.w	r3, fp, #1
 8013bc8:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8013bcc:	f023 0207 	bic.w	r2, r3, #7
 8013bd0:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 8013bd4:	fa43 fb02 	asr.w	fp, r3, r2
 8013bd8:	f10c 0c01 	add.w	ip, ip, #1
 8013bdc:	e7dd      	b.n	8013b9a <LCD_ReadRectEx+0xaa>
 8013bde:	45bc      	cmp	ip, r7
 8013be0:	dc72      	bgt.n	8013cc8 <LCD_ReadRectEx+0x1d8>
 8013be2:	4661      	mov	r1, ip
 8013be4:	462a      	mov	r2, r5
 8013be6:	f8cd c00c 	str.w	ip, [sp, #12]
 8013bea:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013bec:	47c0      	blx	r8
 8013bee:	ea4f 024b 	mov.w	r2, fp, lsl #1
 8013bf2:	f1c2 0106 	rsb	r1, r2, #6
 8013bf6:	fa00 f101 	lsl.w	r1, r0, r1
 8013bfa:	f64f 703f 	movw	r0, #65343	; 0xff3f
 8013bfe:	fa40 f202 	asr.w	r2, r0, r2
 8013c02:	7820      	ldrb	r0, [r4, #0]
 8013c04:	4002      	ands	r2, r0
 8013c06:	4311      	orrs	r1, r2
 8013c08:	7021      	strb	r1, [r4, #0]
 8013c0a:	f10b 0301 	add.w	r3, fp, #1
 8013c0e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8013c12:	f023 0203 	bic.w	r2, r3, #3
 8013c16:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 8013c1a:	fa43 fb02 	asr.w	fp, r3, r2
 8013c1e:	f10c 0c01 	add.w	ip, ip, #1
 8013c22:	e7dc      	b.n	8013bde <LCD_ReadRectEx+0xee>
 8013c24:	45bc      	cmp	ip, r7
 8013c26:	dc4f      	bgt.n	8013cc8 <LCD_ReadRectEx+0x1d8>
 8013c28:	4661      	mov	r1, ip
 8013c2a:	462a      	mov	r2, r5
 8013c2c:	f8cd c00c 	str.w	ip, [sp, #12]
 8013c30:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013c32:	47c0      	blx	r8
 8013c34:	ea4f 028b 	mov.w	r2, fp, lsl #2
 8013c38:	f1c2 0104 	rsb	r1, r2, #4
 8013c3c:	fa00 f101 	lsl.w	r1, r0, r1
 8013c40:	200f      	movs	r0, #15
 8013c42:	fa00 f202 	lsl.w	r2, r0, r2
 8013c46:	7820      	ldrb	r0, [r4, #0]
 8013c48:	4002      	ands	r2, r0
 8013c4a:	4311      	orrs	r1, r2
 8013c4c:	7021      	strb	r1, [r4, #0]
 8013c4e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8013c52:	445c      	add	r4, fp
 8013c54:	f10c 0c01 	add.w	ip, ip, #1
 8013c58:	f08b 0b01 	eor.w	fp, fp, #1
 8013c5c:	e7e2      	b.n	8013c24 <LCD_ReadRectEx+0x134>
 8013c5e:	4273      	negs	r3, r6
 8013c60:	1ba2      	subs	r2, r4, r6
 8013c62:	45bc      	cmp	ip, r7
 8013c64:	9305      	str	r3, [sp, #20]
 8013c66:	4462      	add	r2, ip
 8013c68:	dc0e      	bgt.n	8013c88 <LCD_ReadRectEx+0x198>
 8013c6a:	4661      	mov	r1, ip
 8013c6c:	462a      	mov	r2, r5
 8013c6e:	f8cd c00c 	str.w	ip, [sp, #12]
 8013c72:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013c74:	47c0      	blx	r8
 8013c76:	9a05      	ldr	r2, [sp, #20]
 8013c78:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8013c7c:	4422      	add	r2, r4
 8013c7e:	f802 000c 	strb.w	r0, [r2, ip]
 8013c82:	f10c 0c01 	add.w	ip, ip, #1
 8013c86:	e7ea      	b.n	8013c5e <LCD_ReadRectEx+0x16e>
 8013c88:	4614      	mov	r4, r2
 8013c8a:	e01d      	b.n	8013cc8 <LCD_ReadRectEx+0x1d8>
 8013c8c:	45bc      	cmp	ip, r7
 8013c8e:	dc1b      	bgt.n	8013cc8 <LCD_ReadRectEx+0x1d8>
 8013c90:	4661      	mov	r1, ip
 8013c92:	f8cd c00c 	str.w	ip, [sp, #12]
 8013c96:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013c98:	462a      	mov	r2, r5
 8013c9a:	47c0      	blx	r8
 8013c9c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8013ca0:	f824 0b02 	strh.w	r0, [r4], #2
 8013ca4:	f10c 0c01 	add.w	ip, ip, #1
 8013ca8:	e7f0      	b.n	8013c8c <LCD_ReadRectEx+0x19c>
 8013caa:	45bc      	cmp	ip, r7
 8013cac:	dc0c      	bgt.n	8013cc8 <LCD_ReadRectEx+0x1d8>
 8013cae:	4661      	mov	r1, ip
 8013cb0:	f8cd c00c 	str.w	ip, [sp, #12]
 8013cb4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013cb6:	462a      	mov	r2, r5
 8013cb8:	47c0      	blx	r8
 8013cba:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8013cbe:	f844 0b04 	str.w	r0, [r4], #4
 8013cc2:	f10c 0c01 	add.w	ip, ip, #1
 8013cc6:	e7f0      	b.n	8013caa <LCD_ReadRectEx+0x1ba>
 8013cc8:	3501      	adds	r5, #1
 8013cca:	e741      	b.n	8013b50 <LCD_ReadRectEx+0x60>
 8013ccc:	b007      	add	sp, #28
 8013cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013cd2:	bf00      	nop
 8013cd4:	20000254 	.word	0x20000254

08013cd8 <GUI_ReadRectEx>:
 8013cd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013cda:	4d16      	ldr	r5, [pc, #88]	; (8013d34 <GUI_ReadRectEx+0x5c>)
 8013cdc:	9e05      	ldr	r6, [sp, #20]
 8013cde:	682d      	ldr	r5, [r5, #0]
 8013ce0:	9c06      	ldr	r4, [sp, #24]
 8013ce2:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 8013ce6:	42b8      	cmp	r0, r7
 8013ce8:	bfb8      	it	lt
 8013cea:	4638      	movlt	r0, r7
 8013cec:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 8013cf0:	42ba      	cmp	r2, r7
 8013cf2:	bfa8      	it	ge
 8013cf4:	463a      	movge	r2, r7
 8013cf6:	4282      	cmp	r2, r0
 8013cf8:	db1b      	blt.n	8013d32 <GUI_ReadRectEx+0x5a>
 8013cfa:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 8013cfe:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 8013d02:	42b9      	cmp	r1, r7
 8013d04:	bfb8      	it	lt
 8013d06:	4639      	movlt	r1, r7
 8013d08:	42ab      	cmp	r3, r5
 8013d0a:	bfa8      	it	ge
 8013d0c:	462b      	movge	r3, r5
 8013d0e:	428b      	cmp	r3, r1
 8013d10:	db0f      	blt.n	8013d32 <GUI_ReadRectEx+0x5a>
 8013d12:	68e5      	ldr	r5, [r4, #12]
 8013d14:	682d      	ldr	r5, [r5, #0]
 8013d16:	f035 0704 	bics.w	r7, r5, #4
 8013d1a:	d105      	bne.n	8013d28 <GUI_ReadRectEx+0x50>
 8013d1c:	9605      	str	r6, [sp, #20]
 8013d1e:	9406      	str	r4, [sp, #24]
 8013d20:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8013d24:	f7ff bee4 	b.w	8013af0 <LCD_ReadRectEx>
 8013d28:	6825      	ldr	r5, [r4, #0]
 8013d2a:	2d00      	cmp	r5, #0
 8013d2c:	d0f6      	beq.n	8013d1c <GUI_ReadRectEx+0x44>
 8013d2e:	462c      	mov	r4, r5
 8013d30:	e7ef      	b.n	8013d12 <GUI_ReadRectEx+0x3a>
 8013d32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013d34:	20000254 	.word	0x20000254

08013d38 <_OnExit>:
 8013d38:	b510      	push	{r4, lr}
 8013d3a:	4c03      	ldr	r4, [pc, #12]	; (8013d48 <_OnExit+0x10>)
 8013d3c:	6820      	ldr	r0, [r4, #0]
 8013d3e:	f7fc fb6b 	bl	8010418 <GUI_ALLOC_FreeFixedBlock>
 8013d42:	2300      	movs	r3, #0
 8013d44:	6023      	str	r3, [r4, #0]
 8013d46:	bd10      	pop	{r4, pc}
 8013d48:	2001b49c 	.word	0x2001b49c

08013d4c <LCD_InitColors>:
 8013d4c:	b538      	push	{r3, r4, r5, lr}
 8013d4e:	4d09      	ldr	r5, [pc, #36]	; (8013d74 <LCD_InitColors+0x28>)
 8013d50:	682c      	ldr	r4, [r5, #0]
 8013d52:	b95c      	cbnz	r4, 8013d6c <LCD_InitColors+0x20>
 8013d54:	4b08      	ldr	r3, [pc, #32]	; (8013d78 <LCD_InitColors+0x2c>)
 8013d56:	6818      	ldr	r0, [r3, #0]
 8013d58:	0080      	lsls	r0, r0, #2
 8013d5a:	f7fc fcc9 	bl	80106f0 <GUI_ALLOC_GetFixedBlock>
 8013d5e:	6028      	str	r0, [r5, #0]
 8013d60:	b130      	cbz	r0, 8013d70 <LCD_InitColors+0x24>
 8013d62:	4806      	ldr	r0, [pc, #24]	; (8013d7c <LCD_InitColors+0x30>)
 8013d64:	4b06      	ldr	r3, [pc, #24]	; (8013d80 <LCD_InitColors+0x34>)
 8013d66:	6003      	str	r3, [r0, #0]
 8013d68:	f7fb ff62 	bl	800fc30 <GUI__RegisterExit>
 8013d6c:	2000      	movs	r0, #0
 8013d6e:	bd38      	pop	{r3, r4, r5, pc}
 8013d70:	2001      	movs	r0, #1
 8013d72:	bd38      	pop	{r3, r4, r5, pc}
 8013d74:	2001b49c 	.word	0x2001b49c
 8013d78:	2000036c 	.word	0x2000036c
 8013d7c:	20019704 	.word	0x20019704
 8013d80:	08013d39 	.word	0x08013d39

08013d84 <LCD_InitLUT>:
 8013d84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013d88:	f001 fcfc 	bl	8015784 <LCD_GetNumLayers>
 8013d8c:	2400      	movs	r4, #0
 8013d8e:	4680      	mov	r8, r0
 8013d90:	4544      	cmp	r4, r8
 8013d92:	da2c      	bge.n	8013dee <LCD_InitLUT+0x6a>
 8013d94:	4620      	mov	r0, r4
 8013d96:	f7fb fe11 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 8013d9a:	b330      	cbz	r0, 8013dea <LCD_InitLUT+0x66>
 8013d9c:	4e15      	ldr	r6, [pc, #84]	; (8013df4 <LCD_InitLUT+0x70>)
 8013d9e:	6833      	ldr	r3, [r6, #0]
 8013da0:	4620      	mov	r0, r4
 8013da2:	f893 9011 	ldrb.w	r9, [r3, #17]
 8013da6:	745c      	strb	r4, [r3, #17]
 8013da8:	f7f9 fb7c 	bl	800d4a4 <LCD_GetBitsPerPixelEx>
 8013dac:	2808      	cmp	r0, #8
 8013dae:	dd03      	ble.n	8013db8 <LCD_InitLUT+0x34>
 8013db0:	6833      	ldr	r3, [r6, #0]
 8013db2:	f883 9011 	strb.w	r9, [r3, #17]
 8013db6:	e018      	b.n	8013dea <LCD_InitLUT+0x66>
 8013db8:	4b0f      	ldr	r3, [pc, #60]	; (8013df8 <LCD_InitLUT+0x74>)
 8013dba:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8013dbe:	691a      	ldr	r2, [r3, #16]
 8013dc0:	4b0e      	ldr	r3, [pc, #56]	; (8013dfc <LCD_InitLUT+0x78>)
 8013dc2:	429a      	cmp	r2, r3
 8013dc4:	d0f4      	beq.n	8013db0 <LCD_InitLUT+0x2c>
 8013dc6:	4620      	mov	r0, r4
 8013dc8:	f7f9 fb6f 	bl	800d4aa <LCD_GetNumColorsEx>
 8013dcc:	2500      	movs	r5, #0
 8013dce:	4682      	mov	sl, r0
 8013dd0:	4555      	cmp	r5, sl
 8013dd2:	daed      	bge.n	8013db0 <LCD_InitLUT+0x2c>
 8013dd4:	b2ef      	uxtb	r7, r5
 8013dd6:	4638      	mov	r0, r7
 8013dd8:	f7f9 ff3a 	bl	800dc50 <LCD_Index2Color>
 8013ddc:	4639      	mov	r1, r7
 8013dde:	4602      	mov	r2, r0
 8013de0:	4620      	mov	r0, r4
 8013de2:	f7f9 fb03 	bl	800d3ec <LCD_SetLUTEntryEx>
 8013de6:	3501      	adds	r5, #1
 8013de8:	e7f2      	b.n	8013dd0 <LCD_InitLUT+0x4c>
 8013dea:	3401      	adds	r4, #1
 8013dec:	e7d0      	b.n	8013d90 <LCD_InitLUT+0xc>
 8013dee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013df2:	bf00      	nop
 8013df4:	20000254 	.word	0x20000254
 8013df8:	2001b39c 	.word	0x2001b39c
 8013dfc:	08018310 	.word	0x08018310

08013e00 <LCD_AA_SetAndMask>:
 8013e00:	4b02      	ldr	r3, [pc, #8]	; (8013e0c <LCD_AA_SetAndMask+0xc>)
 8013e02:	681a      	ldr	r2, [r3, #0]
 8013e04:	6018      	str	r0, [r3, #0]
 8013e06:	4610      	mov	r0, r2
 8013e08:	4770      	bx	lr
 8013e0a:	bf00      	nop
 8013e0c:	20000370 	.word	0x20000370

08013e10 <GUI__strlen>:
 8013e10:	f04f 33ff 	mov.w	r3, #4294967295
 8013e14:	b118      	cbz	r0, 8013e1e <GUI__strlen+0xe>
 8013e16:	3301      	adds	r3, #1
 8013e18:	5cc2      	ldrb	r2, [r0, r3]
 8013e1a:	2a00      	cmp	r2, #0
 8013e1c:	d1fb      	bne.n	8013e16 <GUI__strlen+0x6>
 8013e1e:	4618      	mov	r0, r3
 8013e20:	4770      	bx	lr
	...

08013e24 <GUI__strcmp>:
 8013e24:	b510      	push	{r4, lr}
 8013e26:	4b09      	ldr	r3, [pc, #36]	; (8013e4c <GUI__strcmp+0x28>)
 8013e28:	2800      	cmp	r0, #0
 8013e2a:	bf08      	it	eq
 8013e2c:	4618      	moveq	r0, r3
 8013e2e:	2900      	cmp	r1, #0
 8013e30:	bf08      	it	eq
 8013e32:	4619      	moveq	r1, r3
 8013e34:	2300      	movs	r3, #0
 8013e36:	5cc4      	ldrb	r4, [r0, r3]
 8013e38:	5cca      	ldrb	r2, [r1, r3]
 8013e3a:	42a2      	cmp	r2, r4
 8013e3c:	d104      	bne.n	8013e48 <GUI__strcmp+0x24>
 8013e3e:	3301      	adds	r3, #1
 8013e40:	2a00      	cmp	r2, #0
 8013e42:	d1f8      	bne.n	8013e36 <GUI__strcmp+0x12>
 8013e44:	4610      	mov	r0, r2
 8013e46:	bd10      	pop	{r4, pc}
 8013e48:	2001      	movs	r0, #1
 8013e4a:	bd10      	pop	{r4, pc}
 8013e4c:	0801809e 	.word	0x0801809e

08013e50 <GUI__strcmp_hp>:
 8013e50:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013e52:	460d      	mov	r5, r1
 8013e54:	b160      	cbz	r0, 8013e70 <GUI__strcmp_hp+0x20>
 8013e56:	f7fc faf3 	bl	8010440 <GUI_ALLOC_LockH>
 8013e5a:	ac02      	add	r4, sp, #8
 8013e5c:	4629      	mov	r1, r5
 8013e5e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8013e62:	f7ff ffdf 	bl	8013e24 <GUI__strcmp>
 8013e66:	4605      	mov	r5, r0
 8013e68:	4620      	mov	r0, r4
 8013e6a:	f7fc faf7 	bl	801045c <GUI_ALLOC_UnlockH>
 8013e6e:	e000      	b.n	8013e72 <GUI__strcmp_hp+0x22>
 8013e70:	2501      	movs	r5, #1
 8013e72:	4628      	mov	r0, r5
 8013e74:	b003      	add	sp, #12
 8013e76:	bd30      	pop	{r4, r5, pc}

08013e78 <_GetWordWrap>:
 8013e78:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8013e7c:	2500      	movs	r5, #0
 8013e7e:	9001      	str	r0, [sp, #4]
 8013e80:	468a      	mov	sl, r1
 8013e82:	4691      	mov	r9, r2
 8013e84:	46a8      	mov	r8, r5
 8013e86:	462e      	mov	r6, r5
 8013e88:	462c      	mov	r4, r5
 8013e8a:	462f      	mov	r7, r5
 8013e8c:	a801      	add	r0, sp, #4
 8013e8e:	f000 fc13 	bl	80146b8 <GUI_UC__GetCharCodeInc>
 8013e92:	2d00      	cmp	r5, #0
 8013e94:	bf08      	it	eq
 8013e96:	4605      	moveq	r5, r0
 8013e98:	b108      	cbz	r0, 8013e9e <_GetWordWrap+0x26>
 8013e9a:	280a      	cmp	r0, #10
 8013e9c:	d10b      	bne.n	8013eb6 <_GetWordWrap+0x3e>
 8013e9e:	4626      	mov	r6, r4
 8013ea0:	2e00      	cmp	r6, #0
 8013ea2:	bf18      	it	ne
 8013ea4:	4634      	movne	r4, r6
 8013ea6:	f1b9 0f00 	cmp.w	r9, #0
 8013eaa:	d016      	beq.n	8013eda <_GetWordWrap+0x62>
 8013eac:	ebc8 0707 	rsb	r7, r8, r7
 8013eb0:	f8c9 7000 	str.w	r7, [r9]
 8013eb4:	e011      	b.n	8013eda <_GetWordWrap+0x62>
 8013eb6:	2820      	cmp	r0, #32
 8013eb8:	d00d      	beq.n	8013ed6 <_GetWordWrap+0x5e>
 8013eba:	2d20      	cmp	r5, #32
 8013ebc:	bf04      	itt	eq
 8013ebe:	4626      	moveq	r6, r4
 8013ec0:	2500      	moveq	r5, #0
 8013ec2:	f7fc f9a9 	bl	8010218 <GUI_GetCharDistX>
 8013ec6:	4407      	add	r7, r0
 8013ec8:	4557      	cmp	r7, sl
 8013eca:	4680      	mov	r8, r0
 8013ecc:	dd01      	ble.n	8013ed2 <_GetWordWrap+0x5a>
 8013ece:	2c00      	cmp	r4, #0
 8013ed0:	d1e6      	bne.n	8013ea0 <_GetWordWrap+0x28>
 8013ed2:	3401      	adds	r4, #1
 8013ed4:	e7da      	b.n	8013e8c <_GetWordWrap+0x14>
 8013ed6:	4626      	mov	r6, r4
 8013ed8:	e7f3      	b.n	8013ec2 <_GetWordWrap+0x4a>
 8013eda:	4620      	mov	r0, r4
 8013edc:	b002      	add	sp, #8
 8013ede:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08013ee2 <_GetCharWrap>:
 8013ee2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013ee4:	2400      	movs	r4, #0
 8013ee6:	9001      	str	r0, [sp, #4]
 8013ee8:	460e      	mov	r6, r1
 8013eea:	4625      	mov	r5, r4
 8013eec:	a801      	add	r0, sp, #4
 8013eee:	f000 fbe3 	bl	80146b8 <GUI_UC__GetCharCodeInc>
 8013ef2:	4607      	mov	r7, r0
 8013ef4:	b148      	cbz	r0, 8013f0a <_GetCharWrap+0x28>
 8013ef6:	f7fc f98f 	bl	8010218 <GUI_GetCharDistX>
 8013efa:	4405      	add	r5, r0
 8013efc:	b10c      	cbz	r4, 8013f02 <_GetCharWrap+0x20>
 8013efe:	42b5      	cmp	r5, r6
 8013f00:	dc03      	bgt.n	8013f0a <_GetCharWrap+0x28>
 8013f02:	2f0a      	cmp	r7, #10
 8013f04:	d001      	beq.n	8013f0a <_GetCharWrap+0x28>
 8013f06:	3401      	adds	r4, #1
 8013f08:	e7f0      	b.n	8013eec <_GetCharWrap+0xa>
 8013f0a:	4620      	mov	r0, r4
 8013f0c:	b003      	add	sp, #12
 8013f0e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013f10 <_WrapGetNumCharsDisp>:
 8013f10:	2a01      	cmp	r2, #1
 8013f12:	b510      	push	{r4, lr}
 8013f14:	d005      	beq.n	8013f22 <_WrapGetNumCharsDisp+0x12>
 8013f16:	2a02      	cmp	r2, #2
 8013f18:	d108      	bne.n	8013f2c <_WrapGetNumCharsDisp+0x1c>
 8013f1a:	4b07      	ldr	r3, [pc, #28]	; (8013f38 <_WrapGetNumCharsDisp+0x28>)
 8013f1c:	681b      	ldr	r3, [r3, #0]
 8013f1e:	4798      	blx	r3
 8013f20:	bd10      	pop	{r4, pc}
 8013f22:	4a06      	ldr	r2, [pc, #24]	; (8013f3c <_WrapGetNumCharsDisp+0x2c>)
 8013f24:	6814      	ldr	r4, [r2, #0]
 8013f26:	461a      	mov	r2, r3
 8013f28:	47a0      	blx	r4
 8013f2a:	bd10      	pop	{r4, pc}
 8013f2c:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8013f30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013f34:	f7fc b8b6 	b.w	80100a4 <GUI__GetLineNumChars>
 8013f38:	20000374 	.word	0x20000374
 8013f3c:	20000378 	.word	0x20000378

08013f40 <GUI__WrapGetNumCharsDisp>:
 8013f40:	2300      	movs	r3, #0
 8013f42:	f7ff bfe5 	b.w	8013f10 <_WrapGetNumCharsDisp>

08013f46 <GUI__WrapGetNumCharsToNextLine>:
 8013f46:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f48:	b085      	sub	sp, #20
 8013f4a:	ab03      	add	r3, sp, #12
 8013f4c:	4617      	mov	r7, r2
 8013f4e:	460e      	mov	r6, r1
 8013f50:	9001      	str	r0, [sp, #4]
 8013f52:	f7ff ffdd 	bl	8013f10 <_WrapGetNumCharsDisp>
 8013f56:	9d01      	ldr	r5, [sp, #4]
 8013f58:	4604      	mov	r4, r0
 8013f5a:	4621      	mov	r1, r4
 8013f5c:	4628      	mov	r0, r5
 8013f5e:	f000 fbbf 	bl	80146e0 <GUI_UC__NumChars2NumBytes>
 8013f62:	4428      	add	r0, r5
 8013f64:	ad04      	add	r5, sp, #16
 8013f66:	f845 0d0c 	str.w	r0, [r5, #-12]!
 8013f6a:	4628      	mov	r0, r5
 8013f6c:	f000 fba4 	bl	80146b8 <GUI_UC__GetCharCodeInc>
 8013f70:	280a      	cmp	r0, #10
 8013f72:	d101      	bne.n	8013f78 <GUI__WrapGetNumCharsToNextLine+0x32>
 8013f74:	3401      	adds	r4, #1
 8013f76:	e012      	b.n	8013f9e <GUI__WrapGetNumCharsToNextLine+0x58>
 8013f78:	2f01      	cmp	r7, #1
 8013f7a:	d110      	bne.n	8013f9e <GUI__WrapGetNumCharsToNextLine+0x58>
 8013f7c:	2820      	cmp	r0, #32
 8013f7e:	d10e      	bne.n	8013f9e <GUI__WrapGetNumCharsToNextLine+0x58>
 8013f80:	f7fc f94a 	bl	8010218 <GUI_GetCharDistX>
 8013f84:	4607      	mov	r7, r0
 8013f86:	9b03      	ldr	r3, [sp, #12]
 8013f88:	429e      	cmp	r6, r3
 8013f8a:	db08      	blt.n	8013f9e <GUI__WrapGetNumCharsToNextLine+0x58>
 8013f8c:	443b      	add	r3, r7
 8013f8e:	4628      	mov	r0, r5
 8013f90:	9303      	str	r3, [sp, #12]
 8013f92:	f000 fb91 	bl	80146b8 <GUI_UC__GetCharCodeInc>
 8013f96:	2820      	cmp	r0, #32
 8013f98:	f104 0401 	add.w	r4, r4, #1
 8013f9c:	d0f3      	beq.n	8013f86 <GUI__WrapGetNumCharsToNextLine+0x40>
 8013f9e:	4620      	mov	r0, r4
 8013fa0:	b005      	add	sp, #20
 8013fa2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013fa4 <GUI__WrapGetNumBytesToNextLine>:
 8013fa4:	b510      	push	{r4, lr}
 8013fa6:	4604      	mov	r4, r0
 8013fa8:	f7ff ffcd 	bl	8013f46 <GUI__WrapGetNumCharsToNextLine>
 8013fac:	4601      	mov	r1, r0
 8013fae:	4620      	mov	r0, r4
 8013fb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013fb4:	f000 bb94 	b.w	80146e0 <GUI_UC__NumChars2NumBytes>

08013fb8 <GUI__ExpandPixelIndicesEx>:
 8013fb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013fbc:	1e0c      	subs	r4, r1, #0
 8013fbe:	4605      	mov	r5, r0
 8013fc0:	f340 80b3 	ble.w	801412a <GUI__ExpandPixelIndicesEx+0x172>
 8013fc4:	2a08      	cmp	r2, #8
 8013fc6:	685f      	ldr	r7, [r3, #4]
 8013fc8:	dd04      	ble.n	8013fd4 <GUI__ExpandPixelIndicesEx+0x1c>
 8013fca:	2a10      	cmp	r2, #16
 8013fcc:	f340 8098 	ble.w	8014100 <GUI__ExpandPixelIndicesEx+0x148>
 8013fd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013fd4:	3a01      	subs	r2, #1
 8013fd6:	2a07      	cmp	r2, #7
 8013fd8:	f200 80a7 	bhi.w	801412a <GUI__ExpandPixelIndicesEx+0x172>
 8013fdc:	e8df f002 	tbb	[pc, r2]
 8013fe0:	58a52d04 	.word	0x58a52d04
 8013fe4:	83a5a5a5 	.word	0x83a5a5a5
 8013fe8:	1e66      	subs	r6, r4, #1
 8013fea:	10f2      	asrs	r2, r6, #3
 8013fec:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 8013ff0:	3b01      	subs	r3, #1
 8013ff2:	eb05 0802 	add.w	r8, r5, r2
 8013ff6:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 8013ffa:	f006 0607 	and.w	r6, r6, #7
 8013ffe:	f815 a002 	ldrb.w	sl, [r5, r2]
 8014002:	2580      	movs	r5, #128	; 0x80
 8014004:	4135      	asrs	r5, r6
 8014006:	f108 38ff 	add.w	r8, r8, #4294967295
 801400a:	b2ed      	uxtb	r5, r5
 801400c:	f1c6 0307 	rsb	r3, r6, #7
 8014010:	ea0a 0005 	and.w	r0, sl, r5
 8014014:	4118      	asrs	r0, r3
 8014016:	47b8      	blx	r7
 8014018:	f849 0904 	str.w	r0, [r9], #-4
 801401c:	b936      	cbnz	r6, 801402c <GUI__ExpandPixelIndicesEx+0x74>
 801401e:	f898 a000 	ldrb.w	sl, [r8]
 8014022:	2501      	movs	r5, #1
 8014024:	f108 38ff 	add.w	r8, r8, #4294967295
 8014028:	2607      	movs	r6, #7
 801402a:	e002      	b.n	8014032 <GUI__ExpandPixelIndicesEx+0x7a>
 801402c:	006d      	lsls	r5, r5, #1
 801402e:	3e01      	subs	r6, #1
 8014030:	b2ed      	uxtb	r5, r5
 8014032:	3c01      	subs	r4, #1
 8014034:	d1ea      	bne.n	801400c <GUI__ExpandPixelIndicesEx+0x54>
 8014036:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801403a:	1e66      	subs	r6, r4, #1
 801403c:	10b2      	asrs	r2, r6, #2
 801403e:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 8014042:	3b01      	subs	r3, #1
 8014044:	f006 0603 	and.w	r6, r6, #3
 8014048:	eb05 0802 	add.w	r8, r5, r2
 801404c:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 8014050:	f815 a002 	ldrb.w	sl, [r5, r2]
 8014054:	0073      	lsls	r3, r6, #1
 8014056:	25c0      	movs	r5, #192	; 0xc0
 8014058:	411d      	asrs	r5, r3
 801405a:	f108 38ff 	add.w	r8, r8, #4294967295
 801405e:	b2ed      	uxtb	r5, r5
 8014060:	0073      	lsls	r3, r6, #1
 8014062:	f1c3 0306 	rsb	r3, r3, #6
 8014066:	ea0a 0005 	and.w	r0, sl, r5
 801406a:	4118      	asrs	r0, r3
 801406c:	47b8      	blx	r7
 801406e:	f849 0904 	str.w	r0, [r9], #-4
 8014072:	b936      	cbnz	r6, 8014082 <GUI__ExpandPixelIndicesEx+0xca>
 8014074:	2503      	movs	r5, #3
 8014076:	f898 a000 	ldrb.w	sl, [r8]
 801407a:	462e      	mov	r6, r5
 801407c:	f108 38ff 	add.w	r8, r8, #4294967295
 8014080:	e002      	b.n	8014088 <GUI__ExpandPixelIndicesEx+0xd0>
 8014082:	00ad      	lsls	r5, r5, #2
 8014084:	3e01      	subs	r6, #1
 8014086:	b2ed      	uxtb	r5, r5
 8014088:	3c01      	subs	r4, #1
 801408a:	d1e9      	bne.n	8014060 <GUI__ExpandPixelIndicesEx+0xa8>
 801408c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014090:	1e66      	subs	r6, r4, #1
 8014092:	1072      	asrs	r2, r6, #1
 8014094:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 8014098:	3b01      	subs	r3, #1
 801409a:	f006 0601 	and.w	r6, r6, #1
 801409e:	eb05 0802 	add.w	r8, r5, r2
 80140a2:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 80140a6:	f815 a002 	ldrb.w	sl, [r5, r2]
 80140aa:	00b3      	lsls	r3, r6, #2
 80140ac:	25f0      	movs	r5, #240	; 0xf0
 80140ae:	411d      	asrs	r5, r3
 80140b0:	f108 38ff 	add.w	r8, r8, #4294967295
 80140b4:	b2ed      	uxtb	r5, r5
 80140b6:	00b3      	lsls	r3, r6, #2
 80140b8:	f1c3 0304 	rsb	r3, r3, #4
 80140bc:	ea0a 0005 	and.w	r0, sl, r5
 80140c0:	4118      	asrs	r0, r3
 80140c2:	47b8      	blx	r7
 80140c4:	f849 0904 	str.w	r0, [r9], #-4
 80140c8:	b936      	cbnz	r6, 80140d8 <GUI__ExpandPixelIndicesEx+0x120>
 80140ca:	f898 a000 	ldrb.w	sl, [r8]
 80140ce:	250f      	movs	r5, #15
 80140d0:	f108 38ff 	add.w	r8, r8, #4294967295
 80140d4:	2601      	movs	r6, #1
 80140d6:	e002      	b.n	80140de <GUI__ExpandPixelIndicesEx+0x126>
 80140d8:	012d      	lsls	r5, r5, #4
 80140da:	b2ed      	uxtb	r5, r5
 80140dc:	2600      	movs	r6, #0
 80140de:	3c01      	subs	r4, #1
 80140e0:	d1e9      	bne.n	80140b6 <GUI__ExpandPixelIndicesEx+0xfe>
 80140e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80140e6:	192e      	adds	r6, r5, r4
 80140e8:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 80140ec:	1b34      	subs	r4, r6, r4
 80140ee:	f816 0d01 	ldrb.w	r0, [r6, #-1]!
 80140f2:	47b8      	blx	r7
 80140f4:	42a6      	cmp	r6, r4
 80140f6:	f845 0d04 	str.w	r0, [r5, #-4]!
 80140fa:	d1f8      	bne.n	80140ee <GUI__ExpandPixelIndicesEx+0x136>
 80140fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014100:	695e      	ldr	r6, [r3, #20]
 8014102:	b12e      	cbz	r6, 8014110 <GUI__ExpandPixelIndicesEx+0x158>
 8014104:	4629      	mov	r1, r5
 8014106:	4622      	mov	r2, r4
 8014108:	2302      	movs	r3, #2
 801410a:	47b0      	blx	r6
 801410c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014110:	0064      	lsls	r4, r4, #1
 8014112:	4425      	add	r5, r4
 8014114:	192e      	adds	r6, r5, r4
 8014116:	1b2c      	subs	r4, r5, r4
 8014118:	f835 0d02 	ldrh.w	r0, [r5, #-2]!
 801411c:	47b8      	blx	r7
 801411e:	42a5      	cmp	r5, r4
 8014120:	f846 0d04 	str.w	r0, [r6, #-4]!
 8014124:	d1f8      	bne.n	8014118 <GUI__ExpandPixelIndicesEx+0x160>
 8014126:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801412a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801412e <_GetTwinArcPara>:
 801412e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014132:	fb01 f901 	mul.w	r9, r1, r1
 8014136:	1e47      	subs	r7, r0, #1
 8014138:	4604      	mov	r4, r0
 801413a:	4340      	muls	r0, r0
 801413c:	ebc9 0000 	rsb	r0, r9, r0
 8014140:	460d      	mov	r5, r1
 8014142:	4692      	mov	sl, r2
 8014144:	4698      	mov	r8, r3
 8014146:	9e08      	ldr	r6, [sp, #32]
 8014148:	f001 fb3c 	bl	80157c4 <GUI__sqrt32>
 801414c:	42bd      	cmp	r5, r7
 801414e:	f8ca 0000 	str.w	r0, [sl]
 8014152:	da10      	bge.n	8014176 <_GetTwinArcPara+0x48>
 8014154:	fb07 f007 	mul.w	r0, r7, r7
 8014158:	ebc9 0000 	rsb	r0, r9, r0
 801415c:	f001 fb32 	bl	80157c4 <GUI__sqrt32>
 8014160:	3c02      	subs	r4, #2
 8014162:	42a5      	cmp	r5, r4
 8014164:	f8c8 0000 	str.w	r0, [r8]
 8014168:	da03      	bge.n	8014172 <_GetTwinArcPara+0x44>
 801416a:	3801      	subs	r0, #1
 801416c:	6030      	str	r0, [r6, #0]
 801416e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014172:	2300      	movs	r3, #0
 8014174:	e002      	b.n	801417c <_GetTwinArcPara+0x4e>
 8014176:	2300      	movs	r3, #0
 8014178:	f8c8 3000 	str.w	r3, [r8]
 801417c:	6033      	str	r3, [r6, #0]
 801417e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08014184 <GUI__DrawTwinArc4>:
 8014184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014188:	4d76      	ldr	r5, [pc, #472]	; (8014364 <GUI__DrawTwinArc4+0x1e0>)
 801418a:	682d      	ldr	r5, [r5, #0]
 801418c:	6cee      	ldr	r6, [r5, #76]	; 0x4c
 801418e:	6d2f      	ldr	r7, [r5, #80]	; 0x50
 8014190:	b08f      	sub	sp, #60	; 0x3c
 8014192:	4430      	add	r0, r6
 8014194:	4439      	add	r1, r7
 8014196:	9005      	str	r0, [sp, #20]
 8014198:	4416      	add	r6, r2
 801419a:	441f      	add	r7, r3
 801419c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 80141a0:	a80c      	add	r0, sp, #48	; 0x30
 80141a2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80141a4:	9106      	str	r1, [sp, #24]
 80141a6:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80141aa:	f8ad 6034 	strh.w	r6, [sp, #52]	; 0x34
 80141ae:	f8ad 7036 	strh.w	r7, [sp, #54]	; 0x36
 80141b2:	f7f6 fcf5 	bl	800aba0 <WM__InitIVRSearch>
 80141b6:	2800      	cmp	r0, #0
 80141b8:	f000 80d0 	beq.w	801435c <GUI__DrawTwinArc4+0x1d8>
 80141bc:	2c00      	cmp	r4, #0
 80141be:	dc02      	bgt.n	80141c6 <GUI__DrawTwinArc4+0x42>
 80141c0:	f7f6 fc2c 	bl	800aa1c <WM__GetNextIVR>
 80141c4:	e7f7      	b.n	80141b6 <GUI__DrawTwinArc4+0x32>
 80141c6:	9819      	ldr	r0, [sp, #100]	; 0x64
 80141c8:	f7fa fe72 	bl	800eeb0 <GUI_SetColor>
 80141cc:	9b06      	ldr	r3, [sp, #24]
 80141ce:	4423      	add	r3, r4
 80141d0:	9307      	str	r3, [sp, #28]
 80141d2:	9b06      	ldr	r3, [sp, #24]
 80141d4:	1e65      	subs	r5, r4, #1
 80141d6:	f103 0801 	add.w	r8, r3, #1
 80141da:	2d00      	cmp	r5, #0
 80141dc:	d037      	beq.n	801424e <GUI__DrawTwinArc4+0xca>
 80141de:	ab0b      	add	r3, sp, #44	; 0x2c
 80141e0:	4629      	mov	r1, r5
 80141e2:	9300      	str	r3, [sp, #0]
 80141e4:	4620      	mov	r0, r4
 80141e6:	aa09      	add	r2, sp, #36	; 0x24
 80141e8:	ab0a      	add	r3, sp, #40	; 0x28
 80141ea:	f7ff ffa0 	bl	801412e <_GetTwinArcPara>
 80141ee:	9b05      	ldr	r3, [sp, #20]
 80141f0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80141f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80141f4:	4423      	add	r3, r4
 80141f6:	ebc1 0c03 	rsb	ip, r1, r3
 80141fa:	ebc4 0b06 	rsb	fp, r4, r6
 80141fe:	1a9b      	subs	r3, r3, r2
 8014200:	3b01      	subs	r3, #1
 8014202:	eb0b 0901 	add.w	r9, fp, r1
 8014206:	4493      	add	fp, r2
 8014208:	4660      	mov	r0, ip
 801420a:	461a      	mov	r2, r3
 801420c:	4641      	mov	r1, r8
 801420e:	f10b 0b01 	add.w	fp, fp, #1
 8014212:	9303      	str	r3, [sp, #12]
 8014214:	f8cd c010 	str.w	ip, [sp, #16]
 8014218:	f7f9 fa50 	bl	800d6bc <LCD_DrawHLine>
 801421c:	4641      	mov	r1, r8
 801421e:	4658      	mov	r0, fp
 8014220:	464a      	mov	r2, r9
 8014222:	f7f9 fa4b 	bl	800d6bc <LCD_DrawHLine>
 8014226:	ebc4 0a07 	rsb	sl, r4, r7
 801422a:	f8dd c010 	ldr.w	ip, [sp, #16]
 801422e:	9b03      	ldr	r3, [sp, #12]
 8014230:	44aa      	add	sl, r5
 8014232:	4660      	mov	r0, ip
 8014234:	461a      	mov	r2, r3
 8014236:	4651      	mov	r1, sl
 8014238:	f7f9 fa40 	bl	800d6bc <LCD_DrawHLine>
 801423c:	4658      	mov	r0, fp
 801423e:	4651      	mov	r1, sl
 8014240:	464a      	mov	r2, r9
 8014242:	f7f9 fa3b 	bl	800d6bc <LCD_DrawHLine>
 8014246:	3d01      	subs	r5, #1
 8014248:	f108 0801 	add.w	r8, r8, #1
 801424c:	e7c5      	b.n	80141da <GUI__DrawTwinArc4+0x56>
 801424e:	2c01      	cmp	r4, #1
 8014250:	d0b6      	beq.n	80141c0 <GUI__DrawTwinArc4+0x3c>
 8014252:	981a      	ldr	r0, [sp, #104]	; 0x68
 8014254:	f7fa fe2c 	bl	800eeb0 <GUI_SetColor>
 8014258:	9b07      	ldr	r3, [sp, #28]
 801425a:	f1c4 0802 	rsb	r8, r4, #2
 801425e:	1ea5      	subs	r5, r4, #2
 8014260:	4498      	add	r8, r3
 8014262:	2d00      	cmp	r5, #0
 8014264:	d037      	beq.n	80142d6 <GUI__DrawTwinArc4+0x152>
 8014266:	ab0b      	add	r3, sp, #44	; 0x2c
 8014268:	4629      	mov	r1, r5
 801426a:	9300      	str	r3, [sp, #0]
 801426c:	4620      	mov	r0, r4
 801426e:	aa09      	add	r2, sp, #36	; 0x24
 8014270:	ab0a      	add	r3, sp, #40	; 0x28
 8014272:	f7ff ff5c 	bl	801412e <_GetTwinArcPara>
 8014276:	9b05      	ldr	r3, [sp, #20]
 8014278:	990a      	ldr	r1, [sp, #40]	; 0x28
 801427a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801427c:	4423      	add	r3, r4
 801427e:	ebc1 0c03 	rsb	ip, r1, r3
 8014282:	ebc4 0b06 	rsb	fp, r4, r6
 8014286:	1a9b      	subs	r3, r3, r2
 8014288:	3b01      	subs	r3, #1
 801428a:	eb0b 0901 	add.w	r9, fp, r1
 801428e:	4493      	add	fp, r2
 8014290:	4660      	mov	r0, ip
 8014292:	461a      	mov	r2, r3
 8014294:	4641      	mov	r1, r8
 8014296:	f10b 0b01 	add.w	fp, fp, #1
 801429a:	9303      	str	r3, [sp, #12]
 801429c:	f8cd c010 	str.w	ip, [sp, #16]
 80142a0:	f7f9 fa0c 	bl	800d6bc <LCD_DrawHLine>
 80142a4:	4641      	mov	r1, r8
 80142a6:	4658      	mov	r0, fp
 80142a8:	464a      	mov	r2, r9
 80142aa:	f7f9 fa07 	bl	800d6bc <LCD_DrawHLine>
 80142ae:	ebc4 0a07 	rsb	sl, r4, r7
 80142b2:	f8dd c010 	ldr.w	ip, [sp, #16]
 80142b6:	9b03      	ldr	r3, [sp, #12]
 80142b8:	44aa      	add	sl, r5
 80142ba:	4660      	mov	r0, ip
 80142bc:	461a      	mov	r2, r3
 80142be:	4651      	mov	r1, sl
 80142c0:	f7f9 f9fc 	bl	800d6bc <LCD_DrawHLine>
 80142c4:	4658      	mov	r0, fp
 80142c6:	4651      	mov	r1, sl
 80142c8:	464a      	mov	r2, r9
 80142ca:	f7f9 f9f7 	bl	800d6bc <LCD_DrawHLine>
 80142ce:	3d01      	subs	r5, #1
 80142d0:	f108 0801 	add.w	r8, r8, #1
 80142d4:	e7c5      	b.n	8014262 <GUI__DrawTwinArc4+0xde>
 80142d6:	2c02      	cmp	r4, #2
 80142d8:	f43f af72 	beq.w	80141c0 <GUI__DrawTwinArc4+0x3c>
 80142dc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80142de:	f7fa fde7 	bl	800eeb0 <GUI_SetColor>
 80142e2:	9b07      	ldr	r3, [sp, #28]
 80142e4:	f1c4 0803 	rsb	r8, r4, #3
 80142e8:	1ee5      	subs	r5, r4, #3
 80142ea:	4498      	add	r8, r3
 80142ec:	2d00      	cmp	r5, #0
 80142ee:	f43f af67 	beq.w	80141c0 <GUI__DrawTwinArc4+0x3c>
 80142f2:	ab0b      	add	r3, sp, #44	; 0x2c
 80142f4:	4629      	mov	r1, r5
 80142f6:	9300      	str	r3, [sp, #0]
 80142f8:	4620      	mov	r0, r4
 80142fa:	aa09      	add	r2, sp, #36	; 0x24
 80142fc:	ab0a      	add	r3, sp, #40	; 0x28
 80142fe:	f7ff ff16 	bl	801412e <_GetTwinArcPara>
 8014302:	9b05      	ldr	r3, [sp, #20]
 8014304:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014306:	4423      	add	r3, r4
 8014308:	ebc2 0c03 	rsb	ip, r2, r3
 801430c:	ebc4 0b06 	rsb	fp, r4, r6
 8014310:	3b01      	subs	r3, #1
 8014312:	eb0b 0902 	add.w	r9, fp, r2
 8014316:	4660      	mov	r0, ip
 8014318:	461a      	mov	r2, r3
 801431a:	4641      	mov	r1, r8
 801431c:	f10b 0b01 	add.w	fp, fp, #1
 8014320:	9303      	str	r3, [sp, #12]
 8014322:	f8cd c010 	str.w	ip, [sp, #16]
 8014326:	f7f9 f9c9 	bl	800d6bc <LCD_DrawHLine>
 801432a:	4641      	mov	r1, r8
 801432c:	4658      	mov	r0, fp
 801432e:	464a      	mov	r2, r9
 8014330:	f7f9 f9c4 	bl	800d6bc <LCD_DrawHLine>
 8014334:	ebc4 0a07 	rsb	sl, r4, r7
 8014338:	f8dd c010 	ldr.w	ip, [sp, #16]
 801433c:	9b03      	ldr	r3, [sp, #12]
 801433e:	44aa      	add	sl, r5
 8014340:	4660      	mov	r0, ip
 8014342:	461a      	mov	r2, r3
 8014344:	4651      	mov	r1, sl
 8014346:	f7f9 f9b9 	bl	800d6bc <LCD_DrawHLine>
 801434a:	4658      	mov	r0, fp
 801434c:	4651      	mov	r1, sl
 801434e:	464a      	mov	r2, r9
 8014350:	f7f9 f9b4 	bl	800d6bc <LCD_DrawHLine>
 8014354:	3d01      	subs	r5, #1
 8014356:	f108 0801 	add.w	r8, r8, #1
 801435a:	e7c7      	b.n	80142ec <GUI__DrawTwinArc4+0x168>
 801435c:	b00f      	add	sp, #60	; 0x3c
 801435e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014362:	bf00      	nop
 8014364:	20000254 	.word	0x20000254

08014368 <GUI__DivideRound32>:
 8014368:	b149      	cbz	r1, 801437e <GUI__DivideRound32+0x16>
 801436a:	2800      	cmp	r0, #0
 801436c:	ea4f 0361 	mov.w	r3, r1, asr #1
 8014370:	bfb4      	ite	lt
 8014372:	ebc3 0000 	rsblt	r0, r3, r0
 8014376:	18c0      	addge	r0, r0, r3
 8014378:	fb90 f0f1 	sdiv	r0, r0, r1
 801437c:	4770      	bx	lr
 801437e:	4608      	mov	r0, r1
 8014380:	4770      	bx	lr

08014382 <GUI__CompactPixelIndices>:
 8014382:	2a08      	cmp	r2, #8
 8014384:	b510      	push	{r4, lr}
 8014386:	dd0e      	ble.n	80143a6 <GUI__CompactPixelIndices+0x24>
 8014388:	2a10      	cmp	r2, #16
 801438a:	dc0a      	bgt.n	80143a2 <GUI__CompactPixelIndices+0x20>
 801438c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8014390:	4603      	mov	r3, r0
 8014392:	f850 2b04 	ldr.w	r2, [r0], #4
 8014396:	f823 2b02 	strh.w	r2, [r3], #2
 801439a:	428b      	cmp	r3, r1
 801439c:	d1f9      	bne.n	8014392 <GUI__CompactPixelIndices+0x10>
 801439e:	2001      	movs	r0, #1
 80143a0:	bd10      	pop	{r4, pc}
 80143a2:	2000      	movs	r0, #0
 80143a4:	bd10      	pop	{r4, pc}
 80143a6:	2a02      	cmp	r2, #2
 80143a8:	d06d      	beq.n	8014486 <GUI__CompactPixelIndices+0x104>
 80143aa:	2a04      	cmp	r2, #4
 80143ac:	d054      	beq.n	8014458 <GUI__CompactPixelIndices+0xd6>
 80143ae:	2a01      	cmp	r2, #1
 80143b0:	f040 8095 	bne.w	80144de <GUI__CompactPixelIndices+0x15c>
 80143b4:	4604      	mov	r4, r0
 80143b6:	6803      	ldr	r3, [r0, #0]
 80143b8:	2901      	cmp	r1, #1
 80143ba:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 80143be:	b2db      	uxtb	r3, r3
 80143c0:	d047      	beq.n	8014452 <GUI__CompactPixelIndices+0xd0>
 80143c2:	6842      	ldr	r2, [r0, #4]
 80143c4:	2902      	cmp	r1, #2
 80143c6:	f002 0201 	and.w	r2, r2, #1
 80143ca:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80143ce:	d102      	bne.n	80143d6 <GUI__CompactPixelIndices+0x54>
 80143d0:	f100 0208 	add.w	r2, r0, #8
 80143d4:	e03e      	b.n	8014454 <GUI__CompactPixelIndices+0xd2>
 80143d6:	6882      	ldr	r2, [r0, #8]
 80143d8:	2903      	cmp	r1, #3
 80143da:	f002 0201 	and.w	r2, r2, #1
 80143de:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80143e2:	d102      	bne.n	80143ea <GUI__CompactPixelIndices+0x68>
 80143e4:	f100 020c 	add.w	r2, r0, #12
 80143e8:	e034      	b.n	8014454 <GUI__CompactPixelIndices+0xd2>
 80143ea:	68c2      	ldr	r2, [r0, #12]
 80143ec:	2904      	cmp	r1, #4
 80143ee:	f002 0201 	and.w	r2, r2, #1
 80143f2:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 80143f6:	d102      	bne.n	80143fe <GUI__CompactPixelIndices+0x7c>
 80143f8:	f100 0210 	add.w	r2, r0, #16
 80143fc:	e02a      	b.n	8014454 <GUI__CompactPixelIndices+0xd2>
 80143fe:	6902      	ldr	r2, [r0, #16]
 8014400:	2905      	cmp	r1, #5
 8014402:	f002 0201 	and.w	r2, r2, #1
 8014406:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801440a:	d102      	bne.n	8014412 <GUI__CompactPixelIndices+0x90>
 801440c:	f100 0214 	add.w	r2, r0, #20
 8014410:	e020      	b.n	8014454 <GUI__CompactPixelIndices+0xd2>
 8014412:	6942      	ldr	r2, [r0, #20]
 8014414:	2906      	cmp	r1, #6
 8014416:	f002 0201 	and.w	r2, r2, #1
 801441a:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 801441e:	d102      	bne.n	8014426 <GUI__CompactPixelIndices+0xa4>
 8014420:	f100 0218 	add.w	r2, r0, #24
 8014424:	e016      	b.n	8014454 <GUI__CompactPixelIndices+0xd2>
 8014426:	6982      	ldr	r2, [r0, #24]
 8014428:	3907      	subs	r1, #7
 801442a:	f002 0201 	and.w	r2, r2, #1
 801442e:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 8014432:	d102      	bne.n	801443a <GUI__CompactPixelIndices+0xb8>
 8014434:	f100 021c 	add.w	r2, r0, #28
 8014438:	e005      	b.n	8014446 <GUI__CompactPixelIndices+0xc4>
 801443a:	f100 0220 	add.w	r2, r0, #32
 801443e:	69c0      	ldr	r0, [r0, #28]
 8014440:	f000 0001 	and.w	r0, r0, #1
 8014444:	4303      	orrs	r3, r0
 8014446:	f804 3b01 	strb.w	r3, [r4], #1
 801444a:	2900      	cmp	r1, #0
 801444c:	d0a7      	beq.n	801439e <GUI__CompactPixelIndices+0x1c>
 801444e:	4610      	mov	r0, r2
 8014450:	e7b1      	b.n	80143b6 <GUI__CompactPixelIndices+0x34>
 8014452:	1d02      	adds	r2, r0, #4
 8014454:	2100      	movs	r1, #0
 8014456:	e7f6      	b.n	8014446 <GUI__CompactPixelIndices+0xc4>
 8014458:	4602      	mov	r2, r0
 801445a:	6803      	ldr	r3, [r0, #0]
 801445c:	2901      	cmp	r1, #1
 801445e:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8014462:	b2db      	uxtb	r3, r3
 8014464:	d102      	bne.n	801446c <GUI__CompactPixelIndices+0xea>
 8014466:	1d04      	adds	r4, r0, #4
 8014468:	2100      	movs	r1, #0
 801446a:	e006      	b.n	801447a <GUI__CompactPixelIndices+0xf8>
 801446c:	f100 0408 	add.w	r4, r0, #8
 8014470:	6840      	ldr	r0, [r0, #4]
 8014472:	f000 000f 	and.w	r0, r0, #15
 8014476:	4303      	orrs	r3, r0
 8014478:	3902      	subs	r1, #2
 801447a:	f802 3b01 	strb.w	r3, [r2], #1
 801447e:	2900      	cmp	r1, #0
 8014480:	d08d      	beq.n	801439e <GUI__CompactPixelIndices+0x1c>
 8014482:	4620      	mov	r0, r4
 8014484:	e7e9      	b.n	801445a <GUI__CompactPixelIndices+0xd8>
 8014486:	4604      	mov	r4, r0
 8014488:	6803      	ldr	r3, [r0, #0]
 801448a:	2901      	cmp	r1, #1
 801448c:	ea4f 1383 	mov.w	r3, r3, lsl #6
 8014490:	b2db      	uxtb	r3, r3
 8014492:	d021      	beq.n	80144d8 <GUI__CompactPixelIndices+0x156>
 8014494:	6842      	ldr	r2, [r0, #4]
 8014496:	2902      	cmp	r1, #2
 8014498:	f002 0203 	and.w	r2, r2, #3
 801449c:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 80144a0:	d102      	bne.n	80144a8 <GUI__CompactPixelIndices+0x126>
 80144a2:	f100 0208 	add.w	r2, r0, #8
 80144a6:	e018      	b.n	80144da <GUI__CompactPixelIndices+0x158>
 80144a8:	6882      	ldr	r2, [r0, #8]
 80144aa:	2903      	cmp	r1, #3
 80144ac:	f002 0203 	and.w	r2, r2, #3
 80144b0:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 80144b4:	d102      	bne.n	80144bc <GUI__CompactPixelIndices+0x13a>
 80144b6:	f100 020c 	add.w	r2, r0, #12
 80144ba:	e00e      	b.n	80144da <GUI__CompactPixelIndices+0x158>
 80144bc:	f100 0210 	add.w	r2, r0, #16
 80144c0:	68c0      	ldr	r0, [r0, #12]
 80144c2:	f000 0003 	and.w	r0, r0, #3
 80144c6:	4303      	orrs	r3, r0
 80144c8:	3904      	subs	r1, #4
 80144ca:	f804 3b01 	strb.w	r3, [r4], #1
 80144ce:	2900      	cmp	r1, #0
 80144d0:	f43f af65 	beq.w	801439e <GUI__CompactPixelIndices+0x1c>
 80144d4:	4610      	mov	r0, r2
 80144d6:	e7d7      	b.n	8014488 <GUI__CompactPixelIndices+0x106>
 80144d8:	1d02      	adds	r2, r0, #4
 80144da:	2100      	movs	r1, #0
 80144dc:	e7f5      	b.n	80144ca <GUI__CompactPixelIndices+0x148>
 80144de:	2300      	movs	r3, #0
 80144e0:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 80144e4:	54c2      	strb	r2, [r0, r3]
 80144e6:	3301      	adds	r3, #1
 80144e8:	428b      	cmp	r3, r1
 80144ea:	d1f9      	bne.n	80144e0 <GUI__CompactPixelIndices+0x15e>
 80144ec:	e757      	b.n	801439e <GUI__CompactPixelIndices+0x1c>

080144ee <GUI__ConvertColor2Index>:
 80144ee:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80144f2:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80144f6:	681e      	ldr	r6, [r3, #0]
 80144f8:	f1b8 0f00 	cmp.w	r8, #0
 80144fc:	bf08      	it	eq
 80144fe:	4680      	moveq	r8, r0
 8014500:	2a08      	cmp	r2, #8
 8014502:	4604      	mov	r4, r0
 8014504:	460d      	mov	r5, r1
 8014506:	dd05      	ble.n	8014514 <GUI__ConvertColor2Index+0x26>
 8014508:	2a10      	cmp	r2, #16
 801450a:	f340 80b6 	ble.w	801467a <GUI__ConvertColor2Index+0x18c>
 801450e:	2000      	movs	r0, #0
 8014510:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014514:	3a01      	subs	r2, #1
 8014516:	2a07      	cmp	r2, #7
 8014518:	f200 80a4 	bhi.w	8014664 <GUI__ConvertColor2Index+0x176>
 801451c:	e8df f002 	tbb	[pc, r2]
 8014520:	87a26111 	.word	0x87a26111
 8014524:	92a2a2a2 	.word	0x92a2a2a2
 8014528:	69e0      	ldr	r0, [r4, #28]
 801452a:	47b0      	blx	r6
 801452c:	4338      	orrs	r0, r7
 801452e:	f104 0920 	add.w	r9, r4, #32
 8014532:	b2c7      	uxtb	r7, r0
 8014534:	3d08      	subs	r5, #8
 8014536:	f808 7b01 	strb.w	r7, [r8], #1
 801453a:	2d00      	cmp	r5, #0
 801453c:	f000 8092 	beq.w	8014664 <GUI__ConvertColor2Index+0x176>
 8014540:	464c      	mov	r4, r9
 8014542:	6820      	ldr	r0, [r4, #0]
 8014544:	47b0      	blx	r6
 8014546:	2d01      	cmp	r5, #1
 8014548:	ea4f 10c0 	mov.w	r0, r0, lsl #7
 801454c:	b2c7      	uxtb	r7, r0
 801454e:	f000 808c 	beq.w	801466a <GUI__ConvertColor2Index+0x17c>
 8014552:	6860      	ldr	r0, [r4, #4]
 8014554:	47b0      	blx	r6
 8014556:	2d02      	cmp	r5, #2
 8014558:	ea47 1080 	orr.w	r0, r7, r0, lsl #6
 801455c:	b2c7      	uxtb	r7, r0
 801455e:	d102      	bne.n	8014566 <GUI__ConvertColor2Index+0x78>
 8014560:	f104 0908 	add.w	r9, r4, #8
 8014564:	e083      	b.n	801466e <GUI__ConvertColor2Index+0x180>
 8014566:	68a0      	ldr	r0, [r4, #8]
 8014568:	47b0      	blx	r6
 801456a:	2d03      	cmp	r5, #3
 801456c:	ea47 1040 	orr.w	r0, r7, r0, lsl #5
 8014570:	b2c7      	uxtb	r7, r0
 8014572:	d102      	bne.n	801457a <GUI__ConvertColor2Index+0x8c>
 8014574:	f104 090c 	add.w	r9, r4, #12
 8014578:	e079      	b.n	801466e <GUI__ConvertColor2Index+0x180>
 801457a:	68e0      	ldr	r0, [r4, #12]
 801457c:	47b0      	blx	r6
 801457e:	2d04      	cmp	r5, #4
 8014580:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 8014584:	b2c7      	uxtb	r7, r0
 8014586:	d102      	bne.n	801458e <GUI__ConvertColor2Index+0xa0>
 8014588:	f104 0910 	add.w	r9, r4, #16
 801458c:	e06f      	b.n	801466e <GUI__ConvertColor2Index+0x180>
 801458e:	6920      	ldr	r0, [r4, #16]
 8014590:	47b0      	blx	r6
 8014592:	2d05      	cmp	r5, #5
 8014594:	ea47 00c0 	orr.w	r0, r7, r0, lsl #3
 8014598:	b2c7      	uxtb	r7, r0
 801459a:	d102      	bne.n	80145a2 <GUI__ConvertColor2Index+0xb4>
 801459c:	f104 0914 	add.w	r9, r4, #20
 80145a0:	e065      	b.n	801466e <GUI__ConvertColor2Index+0x180>
 80145a2:	6960      	ldr	r0, [r4, #20]
 80145a4:	47b0      	blx	r6
 80145a6:	2d06      	cmp	r5, #6
 80145a8:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 80145ac:	b2c7      	uxtb	r7, r0
 80145ae:	d102      	bne.n	80145b6 <GUI__ConvertColor2Index+0xc8>
 80145b0:	f104 0918 	add.w	r9, r4, #24
 80145b4:	e05b      	b.n	801466e <GUI__ConvertColor2Index+0x180>
 80145b6:	69a0      	ldr	r0, [r4, #24]
 80145b8:	47b0      	blx	r6
 80145ba:	2d07      	cmp	r5, #7
 80145bc:	ea47 0040 	orr.w	r0, r7, r0, lsl #1
 80145c0:	b2c7      	uxtb	r7, r0
 80145c2:	d1b1      	bne.n	8014528 <GUI__ConvertColor2Index+0x3a>
 80145c4:	f104 091c 	add.w	r9, r4, #28
 80145c8:	e051      	b.n	801466e <GUI__ConvertColor2Index+0x180>
 80145ca:	68e0      	ldr	r0, [r4, #12]
 80145cc:	47b0      	blx	r6
 80145ce:	4338      	orrs	r0, r7
 80145d0:	f104 0910 	add.w	r9, r4, #16
 80145d4:	b2c7      	uxtb	r7, r0
 80145d6:	3d04      	subs	r5, #4
 80145d8:	f808 7b01 	strb.w	r7, [r8], #1
 80145dc:	2d00      	cmp	r5, #0
 80145de:	d041      	beq.n	8014664 <GUI__ConvertColor2Index+0x176>
 80145e0:	464c      	mov	r4, r9
 80145e2:	6820      	ldr	r0, [r4, #0]
 80145e4:	47b0      	blx	r6
 80145e6:	2d01      	cmp	r5, #1
 80145e8:	ea4f 1080 	mov.w	r0, r0, lsl #6
 80145ec:	b2c7      	uxtb	r7, r0
 80145ee:	d040      	beq.n	8014672 <GUI__ConvertColor2Index+0x184>
 80145f0:	6860      	ldr	r0, [r4, #4]
 80145f2:	47b0      	blx	r6
 80145f4:	2d02      	cmp	r5, #2
 80145f6:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 80145fa:	b2c7      	uxtb	r7, r0
 80145fc:	d102      	bne.n	8014604 <GUI__ConvertColor2Index+0x116>
 80145fe:	f104 0908 	add.w	r9, r4, #8
 8014602:	e038      	b.n	8014676 <GUI__ConvertColor2Index+0x188>
 8014604:	68a0      	ldr	r0, [r4, #8]
 8014606:	47b0      	blx	r6
 8014608:	2d03      	cmp	r5, #3
 801460a:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 801460e:	b2c7      	uxtb	r7, r0
 8014610:	d1db      	bne.n	80145ca <GUI__ConvertColor2Index+0xdc>
 8014612:	f104 090c 	add.w	r9, r4, #12
 8014616:	e02e      	b.n	8014676 <GUI__ConvertColor2Index+0x188>
 8014618:	6860      	ldr	r0, [r4, #4]
 801461a:	47b0      	blx	r6
 801461c:	4338      	orrs	r0, r7
 801461e:	f104 0908 	add.w	r9, r4, #8
 8014622:	b2c7      	uxtb	r7, r0
 8014624:	3d02      	subs	r5, #2
 8014626:	f808 7b01 	strb.w	r7, [r8], #1
 801462a:	b1dd      	cbz	r5, 8014664 <GUI__ConvertColor2Index+0x176>
 801462c:	464c      	mov	r4, r9
 801462e:	6820      	ldr	r0, [r4, #0]
 8014630:	47b0      	blx	r6
 8014632:	2d01      	cmp	r5, #1
 8014634:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8014638:	b2c7      	uxtb	r7, r0
 801463a:	d1ed      	bne.n	8014618 <GUI__ConvertColor2Index+0x12a>
 801463c:	f104 0904 	add.w	r9, r4, #4
 8014640:	2500      	movs	r5, #0
 8014642:	e7f0      	b.n	8014626 <GUI__ConvertColor2Index+0x138>
 8014644:	691f      	ldr	r7, [r3, #16]
 8014646:	b12f      	cbz	r7, 8014654 <GUI__ConvertColor2Index+0x166>
 8014648:	4620      	mov	r0, r4
 801464a:	4641      	mov	r1, r8
 801464c:	462a      	mov	r2, r5
 801464e:	2301      	movs	r3, #1
 8014650:	47b8      	blx	r7
 8014652:	e007      	b.n	8014664 <GUI__ConvertColor2Index+0x176>
 8014654:	f854 0027 	ldr.w	r0, [r4, r7, lsl #2]
 8014658:	47b0      	blx	r6
 801465a:	f808 0007 	strb.w	r0, [r8, r7]
 801465e:	3701      	adds	r7, #1
 8014660:	42bd      	cmp	r5, r7
 8014662:	d1f7      	bne.n	8014654 <GUI__ConvertColor2Index+0x166>
 8014664:	2001      	movs	r0, #1
 8014666:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801466a:	f104 0904 	add.w	r9, r4, #4
 801466e:	2500      	movs	r5, #0
 8014670:	e761      	b.n	8014536 <GUI__ConvertColor2Index+0x48>
 8014672:	f104 0904 	add.w	r9, r4, #4
 8014676:	2500      	movs	r5, #0
 8014678:	e7ae      	b.n	80145d8 <GUI__ConvertColor2Index+0xea>
 801467a:	691f      	ldr	r7, [r3, #16]
 801467c:	b11f      	cbz	r7, 8014686 <GUI__ConvertColor2Index+0x198>
 801467e:	4641      	mov	r1, r8
 8014680:	462a      	mov	r2, r5
 8014682:	2302      	movs	r3, #2
 8014684:	e7e4      	b.n	8014650 <GUI__ConvertColor2Index+0x162>
 8014686:	f854 0b04 	ldr.w	r0, [r4], #4
 801468a:	47b0      	blx	r6
 801468c:	3d01      	subs	r5, #1
 801468e:	f828 0b02 	strh.w	r0, [r8], #2
 8014692:	d1f8      	bne.n	8014686 <GUI__ConvertColor2Index+0x198>
 8014694:	e7e6      	b.n	8014664 <GUI__ConvertColor2Index+0x176>

08014696 <GUI__CompactPixelIndicesEx>:
 8014696:	b513      	push	{r0, r1, r4, lr}
 8014698:	2400      	movs	r4, #0
 801469a:	9400      	str	r4, [sp, #0]
 801469c:	f7ff ff27 	bl	80144ee <GUI__ConvertColor2Index>
 80146a0:	b002      	add	sp, #8
 80146a2:	bd10      	pop	{r4, pc}

080146a4 <_GetCharCode>:
 80146a4:	7800      	ldrb	r0, [r0, #0]
 80146a6:	4770      	bx	lr

080146a8 <_GetCharSize>:
 80146a8:	2001      	movs	r0, #1
 80146aa:	4770      	bx	lr

080146ac <_CalcSizeOfChar>:
 80146ac:	2001      	movs	r0, #1
 80146ae:	4770      	bx	lr

080146b0 <_Encode>:
 80146b0:	7001      	strb	r1, [r0, #0]
 80146b2:	2001      	movs	r0, #1
 80146b4:	4770      	bx	lr
	...

080146b8 <GUI_UC__GetCharCodeInc>:
 80146b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80146ba:	4e08      	ldr	r6, [pc, #32]	; (80146dc <GUI_UC__GetCharCodeInc+0x24>)
 80146bc:	6804      	ldr	r4, [r0, #0]
 80146be:	6833      	ldr	r3, [r6, #0]
 80146c0:	4605      	mov	r5, r0
 80146c2:	681b      	ldr	r3, [r3, #0]
 80146c4:	4620      	mov	r0, r4
 80146c6:	4798      	blx	r3
 80146c8:	6833      	ldr	r3, [r6, #0]
 80146ca:	4607      	mov	r7, r0
 80146cc:	685b      	ldr	r3, [r3, #4]
 80146ce:	4620      	mov	r0, r4
 80146d0:	4798      	blx	r3
 80146d2:	4420      	add	r0, r4
 80146d4:	6028      	str	r0, [r5, #0]
 80146d6:	4638      	mov	r0, r7
 80146d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80146da:	bf00      	nop
 80146dc:	2001b394 	.word	0x2001b394

080146e0 <GUI_UC__NumChars2NumBytes>:
 80146e0:	b570      	push	{r4, r5, r6, lr}
 80146e2:	4604      	mov	r4, r0
 80146e4:	460e      	mov	r6, r1
 80146e6:	2500      	movs	r5, #0
 80146e8:	b146      	cbz	r6, 80146fc <GUI_UC__NumChars2NumBytes+0x1c>
 80146ea:	4b05      	ldr	r3, [pc, #20]	; (8014700 <GUI_UC__NumChars2NumBytes+0x20>)
 80146ec:	681b      	ldr	r3, [r3, #0]
 80146ee:	4620      	mov	r0, r4
 80146f0:	685b      	ldr	r3, [r3, #4]
 80146f2:	4798      	blx	r3
 80146f4:	3e01      	subs	r6, #1
 80146f6:	4404      	add	r4, r0
 80146f8:	4405      	add	r5, r0
 80146fa:	e7f5      	b.n	80146e8 <GUI_UC__NumChars2NumBytes+0x8>
 80146fc:	4628      	mov	r0, r5
 80146fe:	bd70      	pop	{r4, r5, r6, pc}
 8014700:	2001b394 	.word	0x2001b394

08014704 <GUI_TOUCH_GetLayer>:
 8014704:	4b01      	ldr	r3, [pc, #4]	; (801470c <GUI_TOUCH_GetLayer+0x8>)
 8014706:	7a58      	ldrb	r0, [r3, #9]
 8014708:	4770      	bx	lr
 801470a:	bf00      	nop
 801470c:	2001970c 	.word	0x2001970c

08014710 <GUI_SetTextAlign>:
 8014710:	4b03      	ldr	r3, [pc, #12]	; (8014720 <GUI_SetTextAlign+0x10>)
 8014712:	681b      	ldr	r3, [r3, #0]
 8014714:	f9b3 202c 	ldrsh.w	r2, [r3, #44]	; 0x2c
 8014718:	8598      	strh	r0, [r3, #44]	; 0x2c
 801471a:	4610      	mov	r0, r2
 801471c:	4770      	bx	lr
 801471e:	bf00      	nop
 8014720:	20000254 	.word	0x20000254

08014724 <GUI_SetOrg>:
 8014724:	460a      	mov	r2, r1
 8014726:	4908      	ldr	r1, [pc, #32]	; (8014748 <GUI_SetOrg+0x24>)
 8014728:	b510      	push	{r4, lr}
 801472a:	8008      	strh	r0, [r1, #0]
 801472c:	4907      	ldr	r1, [pc, #28]	; (801474c <GUI_SetOrg+0x28>)
 801472e:	800a      	strh	r2, [r1, #0]
 8014730:	4907      	ldr	r1, [pc, #28]	; (8014750 <GUI_SetOrg+0x2c>)
 8014732:	6809      	ldr	r1, [r1, #0]
 8014734:	4603      	mov	r3, r0
 8014736:	7c48      	ldrb	r0, [r1, #17]
 8014738:	4906      	ldr	r1, [pc, #24]	; (8014754 <GUI_SetOrg+0x30>)
 801473a:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 801473e:	68c1      	ldr	r1, [r0, #12]
 8014740:	6a0c      	ldr	r4, [r1, #32]
 8014742:	4619      	mov	r1, r3
 8014744:	47a0      	blx	r4
 8014746:	bd10      	pop	{r4, pc}
 8014748:	2001b384 	.word	0x2001b384
 801474c:	2001b378 	.word	0x2001b378
 8014750:	20000254 	.word	0x20000254
 8014754:	2001b39c 	.word	0x2001b39c

08014758 <GUI_ALLOC_Realloc>:
 8014758:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801475a:	4604      	mov	r4, r0
 801475c:	4608      	mov	r0, r1
 801475e:	460e      	mov	r6, r1
 8014760:	f7fc f8c2 	bl	80108e8 <GUI_ALLOC_AllocNoInit>
 8014764:	4605      	mov	r5, r0
 8014766:	b1f8      	cbz	r0, 80147a8 <GUI_ALLOC_Realloc+0x50>
 8014768:	b1f4      	cbz	r4, 80147a8 <GUI_ALLOC_Realloc+0x50>
 801476a:	4620      	mov	r0, r4
 801476c:	f7fb fe96 	bl	801049c <GUI_ALLOC_GetSize>
 8014770:	42b0      	cmp	r0, r6
 8014772:	bfb4      	ite	lt
 8014774:	4607      	movlt	r7, r0
 8014776:	4637      	movge	r7, r6
 8014778:	4628      	mov	r0, r5
 801477a:	f7fb fe61 	bl	8010440 <GUI_ALLOC_LockH>
 801477e:	9000      	str	r0, [sp, #0]
 8014780:	4620      	mov	r0, r4
 8014782:	f7fb fe5d 	bl	8010440 <GUI_ALLOC_LockH>
 8014786:	ae02      	add	r6, sp, #8
 8014788:	4601      	mov	r1, r0
 801478a:	463a      	mov	r2, r7
 801478c:	9001      	str	r0, [sp, #4]
 801478e:	f856 0d08 	ldr.w	r0, [r6, #-8]!
 8014792:	f001 fcf2 	bl	801617a <memcpy>
 8014796:	4668      	mov	r0, sp
 8014798:	f7fb fe60 	bl	801045c <GUI_ALLOC_UnlockH>
 801479c:	a801      	add	r0, sp, #4
 801479e:	f7fb fe5d 	bl	801045c <GUI_ALLOC_UnlockH>
 80147a2:	4620      	mov	r0, r4
 80147a4:	f7fb fe86 	bl	80104b4 <GUI_ALLOC_Free>
 80147a8:	4628      	mov	r0, r5
 80147aa:	b003      	add	sp, #12
 80147ac:	bdf0      	pop	{r4, r5, r6, r7, pc}

080147ae <GUI_GetBkColor>:
 80147ae:	b508      	push	{r3, lr}
 80147b0:	f000 fff8 	bl	80157a4 <LCD_GetBkColorIndex>
 80147b4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80147b8:	f7f9 ba4a 	b.w	800dc50 <LCD_Index2Color>

080147bc <GUI_GetColor>:
 80147bc:	b508      	push	{r3, lr}
 80147be:	f000 fff9 	bl	80157b4 <LCD_GetColorIndex>
 80147c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80147c6:	f7f9 ba43 	b.w	800dc50 <LCD_Index2Color>

080147ca <GUI_GetClientRect>:
 80147ca:	b108      	cbz	r0, 80147d0 <GUI_GetClientRect+0x6>
 80147cc:	f7f5 bab4 	b.w	8009d38 <WM_GetClientRect>
 80147d0:	4770      	bx	lr
	...

080147d4 <_Add>:
 80147d4:	4a0d      	ldr	r2, [pc, #52]	; (801480c <_Add+0x38>)
 80147d6:	6813      	ldr	r3, [r2, #0]
 80147d8:	2b0b      	cmp	r3, #11
 80147da:	b5f0      	push	{r4, r5, r6, r7, lr}
 80147dc:	4615      	mov	r5, r2
 80147de:	dc14      	bgt.n	801480a <_Add+0x36>
 80147e0:	4c0b      	ldr	r4, [pc, #44]	; (8014810 <_Add+0x3c>)
 80147e2:	461a      	mov	r2, r3
 80147e4:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 80147e8:	4626      	mov	r6, r4
 80147ea:	b152      	cbz	r2, 8014802 <_Add+0x2e>
 80147ec:	f831 4d02 	ldrh.w	r4, [r1, #-2]!
 80147f0:	fa0f fc84 	sxth.w	ip, r4
 80147f4:	4584      	cmp	ip, r0
 80147f6:	f102 37ff 	add.w	r7, r2, #4294967295
 80147fa:	db02      	blt.n	8014802 <_Add+0x2e>
 80147fc:	804c      	strh	r4, [r1, #2]
 80147fe:	463a      	mov	r2, r7
 8014800:	e7f3      	b.n	80147ea <_Add+0x16>
 8014802:	3301      	adds	r3, #1
 8014804:	f826 0012 	strh.w	r0, [r6, r2, lsl #1]
 8014808:	602b      	str	r3, [r5, #0]
 801480a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801480c:	20019718 	.word	0x20019718
 8014810:	2001971c 	.word	0x2001971c

08014814 <GL_FillPolygon>:
 8014814:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014818:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 80149d4 <GL_FillPolygon+0x1c0>
 801481c:	9101      	str	r1, [sp, #4]
 801481e:	4692      	mov	sl, r2
 8014820:	4606      	mov	r6, r0
 8014822:	f643 74ff 	movw	r4, #16383	; 0x3fff
 8014826:	2200      	movs	r2, #0
 8014828:	9901      	ldr	r1, [sp, #4]
 801482a:	428a      	cmp	r2, r1
 801482c:	da0b      	bge.n	8014846 <GL_FillPolygon+0x32>
 801482e:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 8014832:	3201      	adds	r2, #1
 8014834:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8014838:	428c      	cmp	r4, r1
 801483a:	bfa8      	it	ge
 801483c:	460c      	movge	r4, r1
 801483e:	4589      	cmp	r9, r1
 8014840:	bfb8      	it	lt
 8014842:	4689      	movlt	r9, r1
 8014844:	e7f0      	b.n	8014828 <GL_FillPolygon+0x14>
 8014846:	4960      	ldr	r1, [pc, #384]	; (80149c8 <GL_FillPolygon+0x1b4>)
 8014848:	680a      	ldr	r2, [r1, #0]
 801484a:	6952      	ldr	r2, [r2, #20]
 801484c:	468b      	mov	fp, r1
 801484e:	b15a      	cbz	r2, 8014868 <GL_FillPolygon+0x54>
 8014850:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 8014854:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 8014858:	1ac9      	subs	r1, r1, r3
 801485a:	1ad2      	subs	r2, r2, r3
 801485c:	4589      	cmp	r9, r1
 801485e:	bfa8      	it	ge
 8014860:	4689      	movge	r9, r1
 8014862:	4294      	cmp	r4, r2
 8014864:	bfb8      	it	lt
 8014866:	4614      	movlt	r4, r2
 8014868:	eb04 0803 	add.w	r8, r4, r3
 801486c:	454c      	cmp	r4, r9
 801486e:	f300 80a7 	bgt.w	80149c0 <GL_FillPolygon+0x1ac>
 8014872:	4b56      	ldr	r3, [pc, #344]	; (80149cc <GL_FillPolygon+0x1b8>)
 8014874:	2700      	movs	r7, #0
 8014876:	601f      	str	r7, [r3, #0]
 8014878:	4635      	mov	r5, r6
 801487a:	9901      	ldr	r1, [sp, #4]
 801487c:	428f      	cmp	r7, r1
 801487e:	da55      	bge.n	801492c <GL_FillPolygon+0x118>
 8014880:	9b01      	ldr	r3, [sp, #4]
 8014882:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014886:	1e59      	subs	r1, r3, #1
 8014888:	428f      	cmp	r7, r1
 801488a:	bfb4      	ite	lt
 801488c:	f107 0c01 	addlt.w	ip, r7, #1
 8014890:	f04f 0c00 	movge.w	ip, #0
 8014894:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8014898:	eb06 030c 	add.w	r3, r6, ip
 801489c:	42a2      	cmp	r2, r4
 801489e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80148a2:	d136      	bne.n	8014912 <GL_FillPolygon+0xfe>
 80148a4:	42a3      	cmp	r3, r4
 80148a6:	d002      	beq.n	80148ae <GL_FillPolygon+0x9a>
 80148a8:	463a      	mov	r2, r7
 80148aa:	2000      	movs	r0, #0
 80148ac:	e01b      	b.n	80148e6 <GL_FillPolygon+0xd2>
 80148ae:	f9b5 e000 	ldrsh.w	lr, [r5]
 80148b2:	f936 200c 	ldrsh.w	r2, [r6, ip]
 80148b6:	f8db 3000 	ldr.w	r3, [fp]
 80148ba:	44d6      	add	lr, sl
 80148bc:	4452      	add	r2, sl
 80148be:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80148c0:	4596      	cmp	lr, r2
 80148c2:	681b      	ldr	r3, [r3, #0]
 80148c4:	da02      	bge.n	80148cc <GL_FillPolygon+0xb8>
 80148c6:	4670      	mov	r0, lr
 80148c8:	4641      	mov	r1, r8
 80148ca:	e020      	b.n	801490e <GL_FillPolygon+0xfa>
 80148cc:	4610      	mov	r0, r2
 80148ce:	4641      	mov	r1, r8
 80148d0:	4672      	mov	r2, lr
 80148d2:	e01c      	b.n	801490e <GL_FillPolygon+0xfa>
 80148d4:	b152      	cbz	r2, 80148ec <GL_FillPolygon+0xd8>
 80148d6:	3a01      	subs	r2, #1
 80148d8:	eb06 0c82 	add.w	ip, r6, r2, lsl #2
 80148dc:	f9bc c002 	ldrsh.w	ip, [ip, #2]
 80148e0:	45a4      	cmp	ip, r4
 80148e2:	d105      	bne.n	80148f0 <GL_FillPolygon+0xdc>
 80148e4:	3001      	adds	r0, #1
 80148e6:	4288      	cmp	r0, r1
 80148e8:	dbf4      	blt.n	80148d4 <GL_FillPolygon+0xc0>
 80148ea:	e01c      	b.n	8014926 <GL_FillPolygon+0x112>
 80148ec:	460a      	mov	r2, r1
 80148ee:	e7f3      	b.n	80148d8 <GL_FillPolygon+0xc4>
 80148f0:	ebc4 0c0c 	rsb	ip, r4, ip
 80148f4:	1b1b      	subs	r3, r3, r4
 80148f6:	ea9c 0f03 	teq	ip, r3
 80148fa:	f9b5 0000 	ldrsh.w	r0, [r5]
 80148fe:	d44d      	bmi.n	801499c <GL_FillPolygon+0x188>
 8014900:	f8db 3000 	ldr.w	r3, [fp]
 8014904:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8014906:	4450      	add	r0, sl
 8014908:	681b      	ldr	r3, [r3, #0]
 801490a:	4641      	mov	r1, r8
 801490c:	4602      	mov	r2, r0
 801490e:	4798      	blx	r3
 8014910:	e009      	b.n	8014926 <GL_FillPolygon+0x112>
 8014912:	42a3      	cmp	r3, r4
 8014914:	d007      	beq.n	8014926 <GL_FillPolygon+0x112>
 8014916:	db44      	blt.n	80149a2 <GL_FillPolygon+0x18e>
 8014918:	42a2      	cmp	r2, r4
 801491a:	dd27      	ble.n	801496c <GL_FillPolygon+0x158>
 801491c:	42a3      	cmp	r3, r4
 801491e:	dd42      	ble.n	80149a6 <GL_FillPolygon+0x192>
 8014920:	e001      	b.n	8014926 <GL_FillPolygon+0x112>
 8014922:	42a3      	cmp	r3, r4
 8014924:	dd49      	ble.n	80149ba <GL_FillPolygon+0x1a6>
 8014926:	3701      	adds	r7, #1
 8014928:	3504      	adds	r5, #4
 801492a:	e7a6      	b.n	801487a <GL_FillPolygon+0x66>
 801492c:	2500      	movs	r5, #0
 801492e:	4628      	mov	r0, r5
 8014930:	462f      	mov	r7, r5
 8014932:	4b26      	ldr	r3, [pc, #152]	; (80149cc <GL_FillPolygon+0x1b8>)
 8014934:	681b      	ldr	r3, [r3, #0]
 8014936:	429f      	cmp	r7, r3
 8014938:	da14      	bge.n	8014964 <GL_FillPolygon+0x150>
 801493a:	4b25      	ldr	r3, [pc, #148]	; (80149d0 <GL_FillPolygon+0x1bc>)
 801493c:	f933 3017 	ldrsh.w	r3, [r3, r7, lsl #1]
 8014940:	b15d      	cbz	r5, 801495a <GL_FillPolygon+0x146>
 8014942:	f8db 2000 	ldr.w	r2, [fp]
 8014946:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8014948:	4450      	add	r0, sl
 801494a:	f8d2 c000 	ldr.w	ip, [r2]
 801494e:	9300      	str	r3, [sp, #0]
 8014950:	eb0a 0203 	add.w	r2, sl, r3
 8014954:	4641      	mov	r1, r8
 8014956:	47e0      	blx	ip
 8014958:	9b00      	ldr	r3, [sp, #0]
 801495a:	f085 0501 	eor.w	r5, r5, #1
 801495e:	3701      	adds	r7, #1
 8014960:	4618      	mov	r0, r3
 8014962:	e7e6      	b.n	8014932 <GL_FillPolygon+0x11e>
 8014964:	3401      	adds	r4, #1
 8014966:	f108 0801 	add.w	r8, r8, #1
 801496a:	e77f      	b.n	801486c <GL_FillPolygon+0x58>
 801496c:	429a      	cmp	r2, r3
 801496e:	dcd8      	bgt.n	8014922 <GL_FillPolygon+0x10e>
 8014970:	f9b5 1000 	ldrsh.w	r1, [r5]
 8014974:	f936 000c 	ldrsh.w	r0, [r6, ip]
 8014978:	ebc2 0e04 	rsb	lr, r2, r4
 801497c:	1a40      	subs	r0, r0, r1
 801497e:	fb0e f000 	mul.w	r0, lr, r0
 8014982:	2800      	cmp	r0, #0
 8014984:	ebc2 0303 	rsb	r3, r2, r3
 8014988:	bfdb      	ittet	le
 801498a:	105a      	asrle	r2, r3, #1
 801498c:	f1c2 0201 	rsble	r2, r2, #1
 8014990:	eb00 0063 	addgt.w	r0, r0, r3, asr #1
 8014994:	1880      	addle	r0, r0, r2
 8014996:	fb90 f0f3 	sdiv	r0, r0, r3
 801499a:	4408      	add	r0, r1
 801499c:	f7ff ff1a 	bl	80147d4 <_Add>
 80149a0:	e7c1      	b.n	8014926 <GL_FillPolygon+0x112>
 80149a2:	42a2      	cmp	r2, r4
 80149a4:	dbbf      	blt.n	8014926 <GL_FillPolygon+0x112>
 80149a6:	429a      	cmp	r2, r3
 80149a8:	ddbd      	ble.n	8014926 <GL_FillPolygon+0x112>
 80149aa:	4696      	mov	lr, r2
 80149ac:	f936 100c 	ldrsh.w	r1, [r6, ip]
 80149b0:	f9b5 0000 	ldrsh.w	r0, [r5]
 80149b4:	461a      	mov	r2, r3
 80149b6:	4673      	mov	r3, lr
 80149b8:	e7de      	b.n	8014978 <GL_FillPolygon+0x164>
 80149ba:	42a2      	cmp	r2, r4
 80149bc:	daf5      	bge.n	80149aa <GL_FillPolygon+0x196>
 80149be:	e7b2      	b.n	8014926 <GL_FillPolygon+0x112>
 80149c0:	b003      	add	sp, #12
 80149c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80149c6:	bf00      	nop
 80149c8:	20000254 	.word	0x20000254
 80149cc:	20019718 	.word	0x20019718
 80149d0:	2001971c 	.word	0x2001971c
 80149d4:	ffffc001 	.word	0xffffc001

080149d8 <GL_DrawPoint>:
 80149d8:	b508      	push	{r3, lr}
 80149da:	4b08      	ldr	r3, [pc, #32]	; (80149fc <GL_DrawPoint+0x24>)
 80149dc:	681b      	ldr	r3, [r3, #0]
 80149de:	7e1a      	ldrb	r2, [r3, #24]
 80149e0:	2a01      	cmp	r2, #1
 80149e2:	d103      	bne.n	80149ec <GL_DrawPoint+0x14>
 80149e4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80149e6:	685b      	ldr	r3, [r3, #4]
 80149e8:	4798      	blx	r3
 80149ea:	bd08      	pop	{r3, pc}
 80149ec:	2302      	movs	r3, #2
 80149ee:	3a01      	subs	r2, #1
 80149f0:	fb92 f2f3 	sdiv	r2, r2, r3
 80149f4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80149f8:	f000 ba56 	b.w	8014ea8 <GL_FillCircle>
 80149fc:	20000254 	.word	0x20000254

08014a00 <_DrawGradient>:
 8014a00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a04:	b091      	sub	sp, #68	; 0x44
 8014a06:	4605      	mov	r5, r0
 8014a08:	4689      	mov	r9, r1
 8014a0a:	981c      	ldr	r0, [sp, #112]	; 0x70
 8014a0c:	991d      	ldr	r1, [sp, #116]	; 0x74
 8014a0e:	f8dd 806c 	ldr.w	r8, [sp, #108]	; 0x6c
 8014a12:	9002      	str	r0, [sp, #8]
 8014a14:	4614      	mov	r4, r2
 8014a16:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8014a18:	9200      	str	r2, [sp, #0]
 8014a1a:	461e      	mov	r6, r3
 8014a1c:	9101      	str	r1, [sp, #4]
 8014a1e:	f7ff fecd 	bl	80147bc <GUI_GetColor>
 8014a22:	9a00      	ldr	r2, [sp, #0]
 8014a24:	900b      	str	r0, [sp, #44]	; 0x2c
 8014a26:	4542      	cmp	r2, r8
 8014a28:	d109      	bne.n	8014a3e <_DrawGradient+0x3e>
 8014a2a:	4610      	mov	r0, r2
 8014a2c:	f7f9 f960 	bl	800dcf0 <LCD_SetColor>
 8014a30:	9a01      	ldr	r2, [sp, #4]
 8014a32:	b112      	cbz	r2, 8014a3a <_DrawGradient+0x3a>
 8014a34:	4628      	mov	r0, r5
 8014a36:	4649      	mov	r1, r9
 8014a38:	e0b5      	b.n	8014ba6 <_DrawGradient+0x1a6>
 8014a3a:	4648      	mov	r0, r9
 8014a3c:	e0b9      	b.n	8014bb2 <_DrawGradient+0x1b2>
 8014a3e:	fa5f fc82 	uxtb.w	ip, r2
 8014a42:	f8cd c018 	str.w	ip, [sp, #24]
 8014a46:	f3c2 2c07 	ubfx	ip, r2, #8, #8
 8014a4a:	f8cd c01c 	str.w	ip, [sp, #28]
 8014a4e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8014a52:	f8cd c020 	str.w	ip, [sp, #32]
 8014a56:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8014a5a:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
 8014a5e:	f8dd c018 	ldr.w	ip, [sp, #24]
 8014a62:	fa5f f388 	uxtb.w	r3, r8
 8014a66:	ebcc 0303 	rsb	r3, ip, r3
 8014a6a:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8014a6e:	930d      	str	r3, [sp, #52]	; 0x34
 8014a70:	f3c8 2307 	ubfx	r3, r8, #8, #8
 8014a74:	ebcc 0303 	rsb	r3, ip, r3
 8014a78:	f8dd c020 	ldr.w	ip, [sp, #32]
 8014a7c:	930c      	str	r3, [sp, #48]	; 0x30
 8014a7e:	f3c8 4307 	ubfx	r3, r8, #16, #8
 8014a82:	ebcc 0303 	rsb	r3, ip, r3
 8014a86:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 8014a8a:	930e      	str	r3, [sp, #56]	; 0x38
 8014a8c:	ebcc 6818 	rsb	r8, ip, r8, lsr #24
 8014a90:	ebb6 0709 	subs.w	r7, r6, r9
 8014a94:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8014a98:	f04f 0800 	mov.w	r8, #0
 8014a9c:	bf08      	it	eq
 8014a9e:	2701      	moveq	r7, #1
 8014aa0:	f109 33ff 	add.w	r3, r9, #4294967295
 8014aa4:	f8cd 8010 	str.w	r8, [sp, #16]
 8014aa8:	f8cd 800c 	str.w	r8, [sp, #12]
 8014aac:	f8cd 8014 	str.w	r8, [sp, #20]
 8014ab0:	f04f 0a01 	mov.w	sl, #1
 8014ab4:	f103 0b01 	add.w	fp, r3, #1
 8014ab8:	45b3      	cmp	fp, r6
 8014aba:	dc68      	bgt.n	8014b8e <_DrawGradient+0x18e>
 8014abc:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 8014ac0:	fb98 f1f7 	sdiv	r1, r8, r7
 8014ac4:	4461      	add	r1, ip
 8014ac6:	f8dd c010 	ldr.w	ip, [sp, #16]
 8014aca:	fb9c f0f7 	sdiv	r0, ip, r7
 8014ace:	f8dd c020 	ldr.w	ip, [sp, #32]
 8014ad2:	4460      	add	r0, ip
 8014ad4:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8014ad8:	fb9c fef7 	sdiv	lr, ip, r7
 8014adc:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8014ae0:	b2c0      	uxtb	r0, r0
 8014ae2:	44e6      	add	lr, ip
 8014ae4:	f8dd c014 	ldr.w	ip, [sp, #20]
 8014ae8:	0400      	lsls	r0, r0, #16
 8014aea:	ea40 6001 	orr.w	r0, r0, r1, lsl #24
 8014aee:	fb9c f1f7 	sdiv	r1, ip, r7
 8014af2:	f8dd c018 	ldr.w	ip, [sp, #24]
 8014af6:	4461      	add	r1, ip
 8014af8:	fa5f fe8e 	uxtb.w	lr, lr
 8014afc:	b2c9      	uxtb	r1, r1
 8014afe:	ea41 210e 	orr.w	r1, r1, lr, lsl #8
 8014b02:	4301      	orrs	r1, r0
 8014b04:	45cb      	cmp	fp, r9
 8014b06:	910a      	str	r1, [sp, #40]	; 0x28
 8014b08:	dd26      	ble.n	8014b58 <_DrawGradient+0x158>
 8014b0a:	4291      	cmp	r1, r2
 8014b0c:	d102      	bne.n	8014b14 <_DrawGradient+0x114>
 8014b0e:	f10a 0a01 	add.w	sl, sl, #1
 8014b12:	e021      	b.n	8014b58 <_DrawGradient+0x158>
 8014b14:	4610      	mov	r0, r2
 8014b16:	9300      	str	r3, [sp, #0]
 8014b18:	f7f9 f8ea 	bl	800dcf0 <LCD_SetColor>
 8014b1c:	f1ba 0f01 	cmp.w	sl, #1
 8014b20:	9b00      	ldr	r3, [sp, #0]
 8014b22:	d00f      	beq.n	8014b44 <_DrawGradient+0x144>
 8014b24:	9801      	ldr	r0, [sp, #4]
 8014b26:	ebca 010b 	rsb	r1, sl, fp
 8014b2a:	b110      	cbz	r0, 8014b32 <_DrawGradient+0x132>
 8014b2c:	4628      	mov	r0, r5
 8014b2e:	4622      	mov	r2, r4
 8014b30:	e003      	b.n	8014b3a <_DrawGradient+0x13a>
 8014b32:	4608      	mov	r0, r1
 8014b34:	461a      	mov	r2, r3
 8014b36:	4629      	mov	r1, r5
 8014b38:	4623      	mov	r3, r4
 8014b3a:	f7f8 fe0b 	bl	800d754 <LCD_FillRect>
 8014b3e:	f04f 0a01 	mov.w	sl, #1
 8014b42:	e009      	b.n	8014b58 <_DrawGradient+0x158>
 8014b44:	9901      	ldr	r1, [sp, #4]
 8014b46:	b111      	cbz	r1, 8014b4e <_DrawGradient+0x14e>
 8014b48:	4628      	mov	r0, r5
 8014b4a:	4619      	mov	r1, r3
 8014b4c:	e001      	b.n	8014b52 <_DrawGradient+0x152>
 8014b4e:	4618      	mov	r0, r3
 8014b50:	4629      	mov	r1, r5
 8014b52:	4622      	mov	r2, r4
 8014b54:	9b02      	ldr	r3, [sp, #8]
 8014b56:	4798      	blx	r3
 8014b58:	f8dd c014 	ldr.w	ip, [sp, #20]
 8014b5c:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 8014b60:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014b62:	44f4      	add	ip, lr
 8014b64:	f8cd c014 	str.w	ip, [sp, #20]
 8014b68:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 8014b6c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8014b70:	44f4      	add	ip, lr
 8014b72:	f8cd c00c 	str.w	ip, [sp, #12]
 8014b76:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
 8014b7a:	f8dd c010 	ldr.w	ip, [sp, #16]
 8014b7e:	44f4      	add	ip, lr
 8014b80:	f8cd c010 	str.w	ip, [sp, #16]
 8014b84:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 8014b88:	465b      	mov	r3, fp
 8014b8a:	44e0      	add	r8, ip
 8014b8c:	e792      	b.n	8014ab4 <_DrawGradient+0xb4>
 8014b8e:	4610      	mov	r0, r2
 8014b90:	f7f9 f8ae 	bl	800dcf0 <LCD_SetColor>
 8014b94:	f1ba 0f01 	cmp.w	sl, #1
 8014b98:	d00f      	beq.n	8014bba <_DrawGradient+0x1ba>
 8014b9a:	9801      	ldr	r0, [sp, #4]
 8014b9c:	ebca 0106 	rsb	r1, sl, r6
 8014ba0:	b130      	cbz	r0, 8014bb0 <_DrawGradient+0x1b0>
 8014ba2:	4628      	mov	r0, r5
 8014ba4:	3101      	adds	r1, #1
 8014ba6:	4622      	mov	r2, r4
 8014ba8:	4633      	mov	r3, r6
 8014baa:	f7f8 fdd3 	bl	800d754 <LCD_FillRect>
 8014bae:	e00e      	b.n	8014bce <_DrawGradient+0x1ce>
 8014bb0:	1c48      	adds	r0, r1, #1
 8014bb2:	4629      	mov	r1, r5
 8014bb4:	4632      	mov	r2, r6
 8014bb6:	4623      	mov	r3, r4
 8014bb8:	e7f7      	b.n	8014baa <_DrawGradient+0x1aa>
 8014bba:	9901      	ldr	r1, [sp, #4]
 8014bbc:	b111      	cbz	r1, 8014bc4 <_DrawGradient+0x1c4>
 8014bbe:	4628      	mov	r0, r5
 8014bc0:	4631      	mov	r1, r6
 8014bc2:	e001      	b.n	8014bc8 <_DrawGradient+0x1c8>
 8014bc4:	4630      	mov	r0, r6
 8014bc6:	4629      	mov	r1, r5
 8014bc8:	4622      	mov	r2, r4
 8014bca:	9b02      	ldr	r3, [sp, #8]
 8014bcc:	4798      	blx	r3
 8014bce:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014bd0:	b011      	add	sp, #68	; 0x44
 8014bd2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bd6:	f7f9 b88b 	b.w	800dcf0 <LCD_SetColor>
	...

08014bdc <GUI_DrawGradientV>:
 8014bdc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014be0:	4c15      	ldr	r4, [pc, #84]	; (8014c38 <GUI_DrawGradientV+0x5c>)
 8014be2:	6824      	ldr	r4, [r4, #0]
 8014be4:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8014be6:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8014be8:	b087      	sub	sp, #28
 8014bea:	eb00 0905 	add.w	r9, r0, r5
 8014bee:	eb01 0804 	add.w	r8, r1, r4
 8014bf2:	4415      	add	r5, r2
 8014bf4:	441c      	add	r4, r3
 8014bf6:	a804      	add	r0, sp, #16
 8014bf8:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8014bfa:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8014bfc:	f8ad 9010 	strh.w	r9, [sp, #16]
 8014c00:	f8ad 5014 	strh.w	r5, [sp, #20]
 8014c04:	f8ad 8012 	strh.w	r8, [sp, #18]
 8014c08:	f8ad 4016 	strh.w	r4, [sp, #22]
 8014c0c:	f7f5 ffc8 	bl	800aba0 <WM__InitIVRSearch>
 8014c10:	b170      	cbz	r0, 8014c30 <GUI_DrawGradientV+0x54>
 8014c12:	4b0a      	ldr	r3, [pc, #40]	; (8014c3c <GUI_DrawGradientV+0x60>)
 8014c14:	9302      	str	r3, [sp, #8]
 8014c16:	2301      	movs	r3, #1
 8014c18:	9303      	str	r3, [sp, #12]
 8014c1a:	4648      	mov	r0, r9
 8014c1c:	4641      	mov	r1, r8
 8014c1e:	462a      	mov	r2, r5
 8014c20:	4623      	mov	r3, r4
 8014c22:	9700      	str	r7, [sp, #0]
 8014c24:	9601      	str	r6, [sp, #4]
 8014c26:	f7ff feeb 	bl	8014a00 <_DrawGradient>
 8014c2a:	f7f5 fef7 	bl	800aa1c <WM__GetNextIVR>
 8014c2e:	e7ef      	b.n	8014c10 <GUI_DrawGradientV+0x34>
 8014c30:	b007      	add	sp, #28
 8014c32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014c36:	bf00      	nop
 8014c38:	20000254 	.word	0x20000254
 8014c3c:	0800d6bd 	.word	0x0800d6bd

08014c40 <GUI_DrawGradientH>:
 8014c40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014c44:	4c15      	ldr	r4, [pc, #84]	; (8014c9c <GUI_DrawGradientH+0x5c>)
 8014c46:	6825      	ldr	r5, [r4, #0]
 8014c48:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 8014c4a:	6d2d      	ldr	r5, [r5, #80]	; 0x50
 8014c4c:	b087      	sub	sp, #28
 8014c4e:	eb00 0804 	add.w	r8, r0, r4
 8014c52:	eb01 0905 	add.w	r9, r1, r5
 8014c56:	4414      	add	r4, r2
 8014c58:	441d      	add	r5, r3
 8014c5a:	a804      	add	r0, sp, #16
 8014c5c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8014c5e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8014c60:	f8ad 8010 	strh.w	r8, [sp, #16]
 8014c64:	f8ad 4014 	strh.w	r4, [sp, #20]
 8014c68:	f8ad 9012 	strh.w	r9, [sp, #18]
 8014c6c:	f8ad 5016 	strh.w	r5, [sp, #22]
 8014c70:	f7f5 ff96 	bl	800aba0 <WM__InitIVRSearch>
 8014c74:	b170      	cbz	r0, 8014c94 <GUI_DrawGradientH+0x54>
 8014c76:	4b0a      	ldr	r3, [pc, #40]	; (8014ca0 <GUI_DrawGradientH+0x60>)
 8014c78:	9302      	str	r3, [sp, #8]
 8014c7a:	2300      	movs	r3, #0
 8014c7c:	9303      	str	r3, [sp, #12]
 8014c7e:	4648      	mov	r0, r9
 8014c80:	4641      	mov	r1, r8
 8014c82:	462a      	mov	r2, r5
 8014c84:	4623      	mov	r3, r4
 8014c86:	9700      	str	r7, [sp, #0]
 8014c88:	9601      	str	r6, [sp, #4]
 8014c8a:	f7ff feb9 	bl	8014a00 <_DrawGradient>
 8014c8e:	f7f5 fec5 	bl	800aa1c <WM__GetNextIVR>
 8014c92:	e7ef      	b.n	8014c74 <GUI_DrawGradientH+0x34>
 8014c94:	b007      	add	sp, #28
 8014c96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014c9a:	bf00      	nop
 8014c9c:	20000254 	.word	0x20000254
 8014ca0:	0800d709 	.word	0x0800d709

08014ca4 <GUI__DispStringInRect>:
 8014ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ca8:	b087      	sub	sp, #28
 8014caa:	460c      	mov	r4, r1
 8014cac:	9001      	str	r0, [sp, #4]
 8014cae:	4691      	mov	r9, r2
 8014cb0:	461d      	mov	r5, r3
 8014cb2:	f7fb faa9 	bl	8010208 <GUI_GetFontDistY>
 8014cb6:	9f01      	ldr	r7, [sp, #4]
 8014cb8:	4680      	mov	r8, r0
 8014cba:	b124      	cbz	r4, 8014cc6 <GUI__DispStringInRect+0x22>
 8014cbc:	6820      	ldr	r0, [r4, #0]
 8014cbe:	6861      	ldr	r1, [r4, #4]
 8014cc0:	ab04      	add	r3, sp, #16
 8014cc2:	c303      	stmia	r3!, {r0, r1}
 8014cc4:	e002      	b.n	8014ccc <GUI__DispStringInRect+0x28>
 8014cc6:	a804      	add	r0, sp, #16
 8014cc8:	f7ff fd7f 	bl	80147ca <GUI_GetClientRect>
 8014ccc:	f019 0a0c 	ands.w	sl, r9, #12
 8014cd0:	d002      	beq.n	8014cd8 <GUI__DispStringInRect+0x34>
 8014cd2:	462c      	mov	r4, r5
 8014cd4:	2600      	movs	r6, #0
 8014cd6:	e016      	b.n	8014d06 <GUI__DispStringInRect+0x62>
 8014cd8:	f9bd 4012 	ldrsh.w	r4, [sp, #18]
 8014cdc:	e032      	b.n	8014d44 <GUI__DispStringInRect+0xa0>
 8014cde:	4621      	mov	r1, r4
 8014ce0:	9801      	ldr	r0, [sp, #4]
 8014ce2:	f7fb f9df 	bl	80100a4 <GUI__GetLineNumChars>
 8014ce6:	f8dd b004 	ldr.w	fp, [sp, #4]
 8014cea:	4601      	mov	r1, r0
 8014cec:	1a24      	subs	r4, r4, r0
 8014cee:	4658      	mov	r0, fp
 8014cf0:	f7ff fcf6 	bl	80146e0 <GUI_UC__NumChars2NumBytes>
 8014cf4:	eb0b 0300 	add.w	r3, fp, r0
 8014cf8:	a806      	add	r0, sp, #24
 8014cfa:	3601      	adds	r6, #1
 8014cfc:	f840 3d14 	str.w	r3, [r0, #-20]!
 8014d00:	f000 fd73 	bl	80157ea <GUI__HandleEOLine>
 8014d04:	b908      	cbnz	r0, 8014d0a <GUI__DispStringInRect+0x66>
 8014d06:	2c00      	cmp	r4, #0
 8014d08:	d1e9      	bne.n	8014cde <GUI__DispStringInRect+0x3a>
 8014d0a:	f1ba 0f08 	cmp.w	sl, #8
 8014d0e:	d005      	beq.n	8014d1c <GUI__DispStringInRect+0x78>
 8014d10:	f1ba 0f0c 	cmp.w	sl, #12
 8014d14:	d008      	beq.n	8014d28 <GUI__DispStringInRect+0x84>
 8014d16:	f1ba 0f04 	cmp.w	sl, #4
 8014d1a:	d112      	bne.n	8014d42 <GUI__DispStringInRect+0x9e>
 8014d1c:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 8014d20:	fb08 4416 	mls	r4, r8, r6, r4
 8014d24:	3401      	adds	r4, #1
 8014d26:	e00d      	b.n	8014d44 <GUI__DispStringInRect+0xa0>
 8014d28:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014d2c:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 8014d30:	1ae4      	subs	r4, r4, r3
 8014d32:	3401      	adds	r4, #1
 8014d34:	fb08 4416 	mls	r4, r8, r6, r4
 8014d38:	2202      	movs	r2, #2
 8014d3a:	fb94 f4f2 	sdiv	r4, r4, r2
 8014d3e:	441c      	add	r4, r3
 8014d40:	e000      	b.n	8014d44 <GUI__DispStringInRect+0xa0>
 8014d42:	2400      	movs	r4, #0
 8014d44:	9701      	str	r7, [sp, #4]
 8014d46:	2600      	movs	r6, #0
 8014d48:	2d00      	cmp	r5, #0
 8014d4a:	d04b      	beq.n	8014de4 <GUI__DispStringInRect+0x140>
 8014d4c:	4629      	mov	r1, r5
 8014d4e:	9801      	ldr	r0, [sp, #4]
 8014d50:	f7fb f9a8 	bl	80100a4 <GUI__GetLineNumChars>
 8014d54:	4607      	mov	r7, r0
 8014d56:	1a2d      	subs	r5, r5, r0
 8014d58:	4639      	mov	r1, r7
 8014d5a:	9801      	ldr	r0, [sp, #4]
 8014d5c:	f7fb f9d0 	bl	8010100 <GUI__GetLineDistX>
 8014d60:	f009 0303 	and.w	r3, r9, #3
 8014d64:	2b01      	cmp	r3, #1
 8014d66:	d00f      	beq.n	8014d88 <GUI__DispStringInRect+0xe4>
 8014d68:	2b02      	cmp	r3, #2
 8014d6a:	d003      	beq.n	8014d74 <GUI__DispStringInRect+0xd0>
 8014d6c:	b983      	cbnz	r3, 8014d90 <GUI__DispStringInRect+0xec>
 8014d6e:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
 8014d72:	e00d      	b.n	8014d90 <GUI__DispStringInRect+0xec>
 8014d74:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014d78:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 8014d7c:	1ab6      	subs	r6, r6, r2
 8014d7e:	1a36      	subs	r6, r6, r0
 8014d80:	fb96 f6f3 	sdiv	r6, r6, r3
 8014d84:	4416      	add	r6, r2
 8014d86:	e003      	b.n	8014d90 <GUI__DispStringInRect+0xec>
 8014d88:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 8014d8c:	1a36      	subs	r6, r6, r0
 8014d8e:	3601      	adds	r6, #1
 8014d90:	4b16      	ldr	r3, [pc, #88]	; (8014dec <GUI__DispStringInRect+0x148>)
 8014d92:	6819      	ldr	r1, [r3, #0]
 8014d94:	3801      	subs	r0, #1
 8014d96:	b2a3      	uxth	r3, r4
 8014d98:	b2b2      	uxth	r2, r6
 8014d9a:	848b      	strh	r3, [r1, #36]	; 0x24
 8014d9c:	4430      	add	r0, r6
 8014d9e:	f8ad 300a 	strh.w	r3, [sp, #10]
 8014da2:	f108 33ff 	add.w	r3, r8, #4294967295
 8014da6:	4423      	add	r3, r4
 8014da8:	844a      	strh	r2, [r1, #34]	; 0x22
 8014daa:	f8ad 2008 	strh.w	r2, [sp, #8]
 8014dae:	4639      	mov	r1, r7
 8014db0:	aa02      	add	r2, sp, #8
 8014db2:	f8ad 000c 	strh.w	r0, [sp, #12]
 8014db6:	9801      	ldr	r0, [sp, #4]
 8014db8:	f8ad 300e 	strh.w	r3, [sp, #14]
 8014dbc:	f7fb f9d0 	bl	8010160 <GUI__DispLine>
 8014dc0:	f8dd a004 	ldr.w	sl, [sp, #4]
 8014dc4:	4639      	mov	r1, r7
 8014dc6:	4650      	mov	r0, sl
 8014dc8:	f7ff fc8a 	bl	80146e0 <GUI_UC__NumChars2NumBytes>
 8014dcc:	af06      	add	r7, sp, #24
 8014dce:	4450      	add	r0, sl
 8014dd0:	f847 0d14 	str.w	r0, [r7, #-20]!
 8014dd4:	f7fb fa18 	bl	8010208 <GUI_GetFontDistY>
 8014dd8:	4404      	add	r4, r0
 8014dda:	4638      	mov	r0, r7
 8014ddc:	f000 fd05 	bl	80157ea <GUI__HandleEOLine>
 8014de0:	2800      	cmp	r0, #0
 8014de2:	d0b1      	beq.n	8014d48 <GUI__DispStringInRect+0xa4>
 8014de4:	b007      	add	sp, #28
 8014de6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014dea:	bf00      	nop
 8014dec:	20000254 	.word	0x20000254

08014df0 <GUI_DispStringInRectMax>:
 8014df0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8014df4:	460c      	mov	r4, r1
 8014df6:	4690      	mov	r8, r2
 8014df8:	461f      	mov	r7, r3
 8014dfa:	4606      	mov	r6, r0
 8014dfc:	b1c0      	cbz	r0, 8014e30 <GUI_DispStringInRectMax+0x40>
 8014dfe:	b169      	cbz	r1, 8014e1c <GUI_DispStringInRectMax+0x2c>
 8014e00:	4608      	mov	r0, r1
 8014e02:	f7f4 fb7f 	bl	8009504 <WM_SetUserClipRect>
 8014e06:	4605      	mov	r5, r0
 8014e08:	b148      	cbz	r0, 8014e1e <GUI_DispStringInRectMax+0x2e>
 8014e0a:	4668      	mov	r0, sp
 8014e0c:	4621      	mov	r1, r4
 8014e0e:	462a      	mov	r2, r5
 8014e10:	f7f9 f894 	bl	800df3c <GUI__IntersectRects>
 8014e14:	4668      	mov	r0, sp
 8014e16:	f7f4 fb75 	bl	8009504 <WM_SetUserClipRect>
 8014e1a:	e000      	b.n	8014e1e <GUI_DispStringInRectMax+0x2e>
 8014e1c:	460d      	mov	r5, r1
 8014e1e:	4630      	mov	r0, r6
 8014e20:	4621      	mov	r1, r4
 8014e22:	4642      	mov	r2, r8
 8014e24:	463b      	mov	r3, r7
 8014e26:	f7ff ff3d 	bl	8014ca4 <GUI__DispStringInRect>
 8014e2a:	4628      	mov	r0, r5
 8014e2c:	f7f4 fb6a 	bl	8009504 <WM_SetUserClipRect>
 8014e30:	b002      	add	sp, #8
 8014e32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014e36 <GUI_DispStringInRect>:
 8014e36:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8014e3a:	f7ff bfd9 	b.w	8014df0 <GUI_DispStringInRectMax>
	...

08014e40 <GUI_CURSOR_SetPositionEx>:
 8014e40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014e42:	4606      	mov	r6, r0
 8014e44:	4610      	mov	r0, r2
 8014e46:	460d      	mov	r5, r1
 8014e48:	4614      	mov	r4, r2
 8014e4a:	f7fa f845 	bl	800eed8 <GUI_GetCursorLayer>
 8014e4e:	4f15      	ldr	r7, [pc, #84]	; (8014ea4 <GUI_CURSOR_SetPositionEx+0x64>)
 8014e50:	2314      	movs	r3, #20
 8014e52:	b148      	cbz	r0, 8014e68 <GUI_CURSOR_SetPositionEx+0x28>
 8014e54:	435c      	muls	r4, r3
 8014e56:	593b      	ldr	r3, [r7, r4]
 8014e58:	6859      	ldr	r1, [r3, #4]
 8014e5a:	689a      	ldr	r2, [r3, #8]
 8014e5c:	1a71      	subs	r1, r6, r1
 8014e5e:	1aaa      	subs	r2, r5, r2
 8014e60:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8014e64:	f7fa b862 	b.w	800ef2c <GUI_SetLayerPosEx>
 8014e68:	fb03 7304 	mla	r3, r3, r4, r7
 8014e6c:	f103 0208 	add.w	r2, r3, #8
 8014e70:	689b      	ldr	r3, [r3, #8]
 8014e72:	42b3      	cmp	r3, r6
 8014e74:	d102      	bne.n	8014e7c <GUI_CURSOR_SetPositionEx+0x3c>
 8014e76:	6853      	ldr	r3, [r2, #4]
 8014e78:	42ab      	cmp	r3, r5
 8014e7a:	d011      	beq.n	8014ea0 <GUI_CURSOR_SetPositionEx+0x60>
 8014e7c:	2314      	movs	r3, #20
 8014e7e:	4363      	muls	r3, r4
 8014e80:	18fa      	adds	r2, r7, r3
 8014e82:	6910      	ldr	r0, [r2, #16]
 8014e84:	b138      	cbz	r0, 8014e96 <GUI_CURSOR_SetPositionEx+0x56>
 8014e86:	4a07      	ldr	r2, [pc, #28]	; (8014ea4 <GUI_CURSOR_SetPositionEx+0x64>)
 8014e88:	58d3      	ldr	r3, [r2, r3]
 8014e8a:	6859      	ldr	r1, [r3, #4]
 8014e8c:	689a      	ldr	r2, [r3, #8]
 8014e8e:	1a71      	subs	r1, r6, r1
 8014e90:	1aaa      	subs	r2, r5, r2
 8014e92:	f000 fe0b 	bl	8015aac <GUI_SPRITE_SetPosition>
 8014e96:	2314      	movs	r3, #20
 8014e98:	fb03 7404 	mla	r4, r3, r4, r7
 8014e9c:	60a6      	str	r6, [r4, #8]
 8014e9e:	60e5      	str	r5, [r4, #12]
 8014ea0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014ea2:	bf00      	nop
 8014ea4:	20019734 	.word	0x20019734

08014ea8 <GL_FillCircle>:
 8014ea8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014eac:	f240 29c3 	movw	r9, #707	; 0x2c3
 8014eb0:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 8014f68 <GL_FillCircle+0xc0>
 8014eb4:	fb09 f902 	mul.w	r9, r9, r2
 8014eb8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014ebc:	fb99 f9f3 	sdiv	r9, r9, r3
 8014ec0:	f8d8 3000 	ldr.w	r3, [r8]
 8014ec4:	f04f 0b02 	mov.w	fp, #2
 8014ec8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8014eca:	4606      	mov	r6, r0
 8014ecc:	fb92 fbfb 	sdiv	fp, r2, fp
 8014ed0:	1a80      	subs	r0, r0, r2
 8014ed2:	4614      	mov	r4, r2
 8014ed4:	fb02 bb02 	mla	fp, r2, r2, fp
 8014ed8:	681b      	ldr	r3, [r3, #0]
 8014eda:	18b2      	adds	r2, r6, r2
 8014edc:	460f      	mov	r7, r1
 8014ede:	4798      	blx	r3
 8014ee0:	f109 0901 	add.w	r9, r9, #1
 8014ee4:	2501      	movs	r5, #1
 8014ee6:	454d      	cmp	r5, r9
 8014ee8:	dc3a      	bgt.n	8014f60 <GL_FillCircle+0xb8>
 8014eea:	fb04 f304 	mul.w	r3, r4, r4
 8014eee:	fb05 3305 	mla	r3, r5, r5, r3
 8014ef2:	455b      	cmp	r3, fp
 8014ef4:	dd1b      	ble.n	8014f2e <GL_FillCircle+0x86>
 8014ef6:	454c      	cmp	r4, r9
 8014ef8:	dd18      	ble.n	8014f2c <GL_FillCircle+0x84>
 8014efa:	f8d8 2000 	ldr.w	r2, [r8]
 8014efe:	1c73      	adds	r3, r6, #1
 8014f00:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8014f02:	f106 3aff 	add.w	sl, r6, #4294967295
 8014f06:	1b5b      	subs	r3, r3, r5
 8014f08:	44aa      	add	sl, r5
 8014f0a:	f8d2 c000 	ldr.w	ip, [r2]
 8014f0e:	9301      	str	r3, [sp, #4]
 8014f10:	4618      	mov	r0, r3
 8014f12:	1939      	adds	r1, r7, r4
 8014f14:	4652      	mov	r2, sl
 8014f16:	47e0      	blx	ip
 8014f18:	f8d8 2000 	ldr.w	r2, [r8]
 8014f1c:	9b01      	ldr	r3, [sp, #4]
 8014f1e:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8014f20:	4618      	mov	r0, r3
 8014f22:	f8d2 c000 	ldr.w	ip, [r2]
 8014f26:	1b39      	subs	r1, r7, r4
 8014f28:	4652      	mov	r2, sl
 8014f2a:	47e0      	blx	ip
 8014f2c:	3c01      	subs	r4, #1
 8014f2e:	f8d8 2000 	ldr.w	r2, [r8]
 8014f32:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8014f34:	1b33      	subs	r3, r6, r4
 8014f36:	eb06 0a04 	add.w	sl, r6, r4
 8014f3a:	f8d2 c000 	ldr.w	ip, [r2]
 8014f3e:	9301      	str	r3, [sp, #4]
 8014f40:	4618      	mov	r0, r3
 8014f42:	19e9      	adds	r1, r5, r7
 8014f44:	4652      	mov	r2, sl
 8014f46:	47e0      	blx	ip
 8014f48:	f8d8 2000 	ldr.w	r2, [r8]
 8014f4c:	9b01      	ldr	r3, [sp, #4]
 8014f4e:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8014f50:	1b79      	subs	r1, r7, r5
 8014f52:	f8d2 c000 	ldr.w	ip, [r2]
 8014f56:	4618      	mov	r0, r3
 8014f58:	4652      	mov	r2, sl
 8014f5a:	47e0      	blx	ip
 8014f5c:	3501      	adds	r5, #1
 8014f5e:	e7c2      	b.n	8014ee6 <GL_FillCircle+0x3e>
 8014f60:	b003      	add	sp, #12
 8014f62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f66:	bf00      	nop
 8014f68:	20000254 	.word	0x20000254

08014f6c <GUI_ALLOC_AllocInit>:
 8014f6c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014f6e:	4605      	mov	r5, r0
 8014f70:	460c      	mov	r4, r1
 8014f72:	b909      	cbnz	r1, 8014f78 <GUI_ALLOC_AllocInit+0xc>
 8014f74:	2000      	movs	r0, #0
 8014f76:	e014      	b.n	8014fa2 <GUI_ALLOC_AllocInit+0x36>
 8014f78:	4608      	mov	r0, r1
 8014f7a:	f7fb fcb5 	bl	80108e8 <GUI_ALLOC_AllocNoInit>
 8014f7e:	4606      	mov	r6, r0
 8014f80:	2800      	cmp	r0, #0
 8014f82:	d0f7      	beq.n	8014f74 <GUI_ALLOC_AllocInit+0x8>
 8014f84:	f7fb fa5c 	bl	8010440 <GUI_ALLOC_LockH>
 8014f88:	4629      	mov	r1, r5
 8014f8a:	9001      	str	r0, [sp, #4]
 8014f8c:	4622      	mov	r2, r4
 8014f8e:	b115      	cbz	r5, 8014f96 <GUI_ALLOC_AllocInit+0x2a>
 8014f90:	f001 f8f3 	bl	801617a <memcpy>
 8014f94:	e001      	b.n	8014f9a <GUI_ALLOC_AllocInit+0x2e>
 8014f96:	f7f8 fee1 	bl	800dd5c <GUI__memset>
 8014f9a:	a801      	add	r0, sp, #4
 8014f9c:	f7fb fa5e 	bl	801045c <GUI_ALLOC_UnlockH>
 8014fa0:	4630      	mov	r0, r6
 8014fa2:	b002      	add	sp, #8
 8014fa4:	bd70      	pop	{r4, r5, r6, pc}

08014fa6 <_GetIndexMask_0>:
 8014fa6:	b508      	push	{r3, lr}
 8014fa8:	f7f8 fa92 	bl	800d4d0 <LCD_GetNumColors>
 8014fac:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8014fb0:	d010      	beq.n	8014fd4 <_GetIndexMask_0+0x2e>
 8014fb2:	287f      	cmp	r0, #127	; 0x7f
 8014fb4:	d810      	bhi.n	8014fd8 <_GetIndexMask_0+0x32>
 8014fb6:	283f      	cmp	r0, #63	; 0x3f
 8014fb8:	d810      	bhi.n	8014fdc <_GetIndexMask_0+0x36>
 8014fba:	281f      	cmp	r0, #31
 8014fbc:	d810      	bhi.n	8014fe0 <_GetIndexMask_0+0x3a>
 8014fbe:	280f      	cmp	r0, #15
 8014fc0:	d810      	bhi.n	8014fe4 <_GetIndexMask_0+0x3e>
 8014fc2:	2807      	cmp	r0, #7
 8014fc4:	d810      	bhi.n	8014fe8 <_GetIndexMask_0+0x42>
 8014fc6:	2803      	cmp	r0, #3
 8014fc8:	d810      	bhi.n	8014fec <_GetIndexMask_0+0x46>
 8014fca:	2801      	cmp	r0, #1
 8014fcc:	bf94      	ite	ls
 8014fce:	2000      	movls	r0, #0
 8014fd0:	2001      	movhi	r0, #1
 8014fd2:	e00c      	b.n	8014fee <_GetIndexMask_0+0x48>
 8014fd4:	2008      	movs	r0, #8
 8014fd6:	e00a      	b.n	8014fee <_GetIndexMask_0+0x48>
 8014fd8:	2007      	movs	r0, #7
 8014fda:	e008      	b.n	8014fee <_GetIndexMask_0+0x48>
 8014fdc:	2006      	movs	r0, #6
 8014fde:	e006      	b.n	8014fee <_GetIndexMask_0+0x48>
 8014fe0:	2005      	movs	r0, #5
 8014fe2:	e004      	b.n	8014fee <_GetIndexMask_0+0x48>
 8014fe4:	2004      	movs	r0, #4
 8014fe6:	e002      	b.n	8014fee <_GetIndexMask_0+0x48>
 8014fe8:	2003      	movs	r0, #3
 8014fea:	e000      	b.n	8014fee <_GetIndexMask_0+0x48>
 8014fec:	2002      	movs	r0, #2
 8014fee:	2301      	movs	r3, #1
 8014ff0:	fa03 f000 	lsl.w	r0, r3, r0
 8014ff4:	3801      	subs	r0, #1
 8014ff6:	bd08      	pop	{r3, pc}

08014ff8 <_Index2Color_0>:
 8014ff8:	b538      	push	{r3, r4, r5, lr}
 8014ffa:	4604      	mov	r4, r0
 8014ffc:	f7f8 fa68 	bl	800d4d0 <LCD_GetNumColors>
 8015000:	4605      	mov	r5, r0
 8015002:	f7f8 fa83 	bl	800d50c <LCD_GetPalette>
 8015006:	42ac      	cmp	r4, r5
 8015008:	d203      	bcs.n	8015012 <_Index2Color_0+0x1a>
 801500a:	b118      	cbz	r0, 8015014 <_Index2Color_0+0x1c>
 801500c:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8015010:	bd38      	pop	{r3, r4, r5, pc}
 8015012:	2000      	movs	r0, #0
 8015014:	bd38      	pop	{r3, r4, r5, pc}

08015016 <_Color2Index_0>:
 8015016:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801501a:	4681      	mov	r9, r0
 801501c:	f7f8 fa58 	bl	800d4d0 <LCD_GetNumColors>
 8015020:	4680      	mov	r8, r0
 8015022:	f7f8 fa73 	bl	800d50c <LCD_GetPalette>
 8015026:	4606      	mov	r6, r0
 8015028:	b1d8      	cbz	r0, 8015062 <_Color2Index_0+0x4c>
 801502a:	2300      	movs	r3, #0
 801502c:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
 8015030:	4591      	cmp	r9, r2
 8015032:	d01a      	beq.n	801506a <_Color2Index_0+0x54>
 8015034:	3301      	adds	r3, #1
 8015036:	4543      	cmp	r3, r8
 8015038:	dbf8      	blt.n	801502c <_Color2Index_0+0x16>
 801503a:	2500      	movs	r5, #0
 801503c:	f06f 477f 	mvn.w	r7, #4278190080	; 0xff000000
 8015040:	462c      	mov	r4, r5
 8015042:	f856 1024 	ldr.w	r1, [r6, r4, lsl #2]
 8015046:	4648      	mov	r0, r9
 8015048:	f001 f826 	bl	8016098 <GUI_CalcColorDist>
 801504c:	42b8      	cmp	r0, r7
 801504e:	bf38      	it	cc
 8015050:	4625      	movcc	r5, r4
 8015052:	f104 0401 	add.w	r4, r4, #1
 8015056:	bf28      	it	cs
 8015058:	4638      	movcs	r0, r7
 801505a:	4544      	cmp	r4, r8
 801505c:	da02      	bge.n	8015064 <_Color2Index_0+0x4e>
 801505e:	4607      	mov	r7, r0
 8015060:	e7ef      	b.n	8015042 <_Color2Index_0+0x2c>
 8015062:	4605      	mov	r5, r0
 8015064:	4628      	mov	r0, r5
 8015066:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801506a:	4618      	mov	r0, r3
 801506c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08015070 <_GetArrowPara>:
 8015070:	b510      	push	{r4, lr}
 8015072:	b121      	cbz	r1, 801507e <_GetArrowPara+0xe>
 8015074:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8015078:	f9b0 1000 	ldrsh.w	r1, [r0]
 801507c:	e003      	b.n	8015086 <_GetArrowPara+0x16>
 801507e:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8015082:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015086:	1a61      	subs	r1, r4, r1
 8015088:	3101      	adds	r1, #1
 801508a:	1f0c      	subs	r4, r1, #4
 801508c:	2003      	movs	r0, #3
 801508e:	fb94 f0f0 	sdiv	r0, r4, r0
 8015092:	6010      	str	r0, [r2, #0]
 8015094:	1a08      	subs	r0, r1, r0
 8015096:	eba1 0160 	sub.w	r1, r1, r0, asr #1
 801509a:	3901      	subs	r1, #1
 801509c:	6019      	str	r1, [r3, #0]
 801509e:	bd10      	pop	{r4, pc}

080150a0 <_DrawGraspH>:
 80150a0:	b570      	push	{r4, r5, r6, lr}
 80150a2:	f9b0 3000 	ldrsh.w	r3, [r0]
 80150a6:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 80150aa:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 80150ae:	441e      	add	r6, r3
 80150b0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80150b4:	6a88      	ldr	r0, [r1, #40]	; 0x28
 80150b6:	1b5c      	subs	r4, r3, r5
 80150b8:	3403      	adds	r4, #3
 80150ba:	10a4      	asrs	r4, r4, #2
 80150bc:	4425      	add	r5, r4
 80150be:	1076      	asrs	r6, r6, #1
 80150c0:	1b1c      	subs	r4, r3, r4
 80150c2:	f7f9 fef5 	bl	800eeb0 <GUI_SetColor>
 80150c6:	4630      	mov	r0, r6
 80150c8:	4629      	mov	r1, r5
 80150ca:	4622      	mov	r2, r4
 80150cc:	f7fa f8c6 	bl	800f25c <GUI_DrawVLine>
 80150d0:	1cb0      	adds	r0, r6, #2
 80150d2:	4629      	mov	r1, r5
 80150d4:	4622      	mov	r2, r4
 80150d6:	f7fa f8c1 	bl	800f25c <GUI_DrawVLine>
 80150da:	1d30      	adds	r0, r6, #4
 80150dc:	4629      	mov	r1, r5
 80150de:	4622      	mov	r2, r4
 80150e0:	f7fa f8bc 	bl	800f25c <GUI_DrawVLine>
 80150e4:	1eb0      	subs	r0, r6, #2
 80150e6:	4629      	mov	r1, r5
 80150e8:	4622      	mov	r2, r4
 80150ea:	f7fa f8b7 	bl	800f25c <GUI_DrawVLine>
 80150ee:	1f30      	subs	r0, r6, #4
 80150f0:	4629      	mov	r1, r5
 80150f2:	4622      	mov	r2, r4
 80150f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80150f8:	f7fa b8b0 	b.w	800f25c <GUI_DrawVLine>

080150fc <_DrawGraspV>:
 80150fc:	b570      	push	{r4, r5, r6, lr}
 80150fe:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015102:	f9b0 6006 	ldrsh.w	r6, [r0, #6]
 8015106:	f9b0 5000 	ldrsh.w	r5, [r0]
 801510a:	441e      	add	r6, r3
 801510c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015110:	6a88      	ldr	r0, [r1, #40]	; 0x28
 8015112:	1b5c      	subs	r4, r3, r5
 8015114:	3403      	adds	r4, #3
 8015116:	10a4      	asrs	r4, r4, #2
 8015118:	4425      	add	r5, r4
 801511a:	1076      	asrs	r6, r6, #1
 801511c:	1b1c      	subs	r4, r3, r4
 801511e:	f7f9 fec7 	bl	800eeb0 <GUI_SetColor>
 8015122:	4630      	mov	r0, r6
 8015124:	4629      	mov	r1, r5
 8015126:	4622      	mov	r2, r4
 8015128:	f7fa fb26 	bl	800f778 <GUI_DrawHLine>
 801512c:	1cb0      	adds	r0, r6, #2
 801512e:	4629      	mov	r1, r5
 8015130:	4622      	mov	r2, r4
 8015132:	f7fa fb21 	bl	800f778 <GUI_DrawHLine>
 8015136:	1d30      	adds	r0, r6, #4
 8015138:	4629      	mov	r1, r5
 801513a:	4622      	mov	r2, r4
 801513c:	f7fa fb1c 	bl	800f778 <GUI_DrawHLine>
 8015140:	1eb0      	subs	r0, r6, #2
 8015142:	4629      	mov	r1, r5
 8015144:	4622      	mov	r2, r4
 8015146:	f7fa fb17 	bl	800f778 <GUI_DrawHLine>
 801514a:	1f30      	subs	r0, r6, #4
 801514c:	4629      	mov	r1, r5
 801514e:	4622      	mov	r2, r4
 8015150:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015154:	f7fa bb10 	b.w	800f778 <GUI_DrawHLine>

08015158 <_DrawFrame>:
 8015158:	b538      	push	{r3, r4, r5, lr}
 801515a:	4604      	mov	r4, r0
 801515c:	6808      	ldr	r0, [r1, #0]
 801515e:	460d      	mov	r5, r1
 8015160:	f7f9 fea6 	bl	800eeb0 <GUI_SetColor>
 8015164:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015168:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801516c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8015170:	3101      	adds	r1, #1
 8015172:	3a01      	subs	r2, #1
 8015174:	f7fa fb00 	bl	800f778 <GUI_DrawHLine>
 8015178:	f9b4 1000 	ldrsh.w	r1, [r4]
 801517c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8015180:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8015184:	3101      	adds	r1, #1
 8015186:	3a01      	subs	r2, #1
 8015188:	f7fa faf6 	bl	800f778 <GUI_DrawHLine>
 801518c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015190:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8015194:	f9b4 0000 	ldrsh.w	r0, [r4]
 8015198:	3101      	adds	r1, #1
 801519a:	3a01      	subs	r2, #1
 801519c:	f7fa f85e 	bl	800f25c <GUI_DrawVLine>
 80151a0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80151a4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80151a8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80151ac:	3101      	adds	r1, #1
 80151ae:	3a01      	subs	r2, #1
 80151b0:	f7fa f854 	bl	800f25c <GUI_DrawVLine>
 80151b4:	6868      	ldr	r0, [r5, #4]
 80151b6:	f7f9 fe7b 	bl	800eeb0 <GUI_SetColor>
 80151ba:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80151be:	f9b4 1000 	ldrsh.w	r1, [r4]
 80151c2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80151c6:	3001      	adds	r0, #1
 80151c8:	3101      	adds	r1, #1
 80151ca:	3a01      	subs	r2, #1
 80151cc:	f7fa fad4 	bl	800f778 <GUI_DrawHLine>
 80151d0:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80151d4:	f9b4 1000 	ldrsh.w	r1, [r4]
 80151d8:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80151dc:	3801      	subs	r0, #1
 80151de:	3101      	adds	r1, #1
 80151e0:	3a01      	subs	r2, #1
 80151e2:	f7fa fac9 	bl	800f778 <GUI_DrawHLine>
 80151e6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80151ea:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80151ee:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80151f2:	3001      	adds	r0, #1
 80151f4:	3102      	adds	r1, #2
 80151f6:	3a02      	subs	r2, #2
 80151f8:	f7fa f830 	bl	800f25c <GUI_DrawVLine>
 80151fc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015200:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015204:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8015208:	3102      	adds	r1, #2
 801520a:	3a02      	subs	r2, #2
 801520c:	3801      	subs	r0, #1
 801520e:	f7fa f825 	bl	800f25c <GUI_DrawVLine>
 8015212:	68a8      	ldr	r0, [r5, #8]
 8015214:	f7f9 fe4c 	bl	800eeb0 <GUI_SetColor>
 8015218:	f9b4 0000 	ldrsh.w	r0, [r4]
 801521c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015220:	f000 ff18 	bl	8016054 <GUI_DrawPixel>
 8015224:	f9b4 0000 	ldrsh.w	r0, [r4]
 8015228:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801522c:	f000 ff12 	bl	8016054 <GUI_DrawPixel>
 8015230:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015234:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015238:	f000 ff0c 	bl	8016054 <GUI_DrawPixel>
 801523c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015240:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8015244:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8015248:	f000 bf04 	b.w	8016054 <GUI_DrawPixel>

0801524c <_DrawBackgroundH>:
 801524c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801524e:	4604      	mov	r4, r0
 8015250:	460d      	mov	r5, r1
 8015252:	f7ff ff81 	bl	8015158 <_DrawFrame>
 8015256:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801525a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801525e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8015262:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8015266:	68ee      	ldr	r6, [r5, #12]
 8015268:	9600      	str	r6, [sp, #0]
 801526a:	440b      	add	r3, r1
 801526c:	692e      	ldr	r6, [r5, #16]
 801526e:	9601      	str	r6, [sp, #4]
 8015270:	3002      	adds	r0, #2
 8015272:	3102      	adds	r1, #2
 8015274:	3a02      	subs	r2, #2
 8015276:	105b      	asrs	r3, r3, #1
 8015278:	f7ff fcb0 	bl	8014bdc <GUI_DrawGradientV>
 801527c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8015280:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015284:	f9b4 0000 	ldrsh.w	r0, [r4]
 8015288:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801528c:	696c      	ldr	r4, [r5, #20]
 801528e:	9400      	str	r4, [sp, #0]
 8015290:	4419      	add	r1, r3
 8015292:	69ac      	ldr	r4, [r5, #24]
 8015294:	9401      	str	r4, [sp, #4]
 8015296:	1049      	asrs	r1, r1, #1
 8015298:	3002      	adds	r0, #2
 801529a:	3101      	adds	r1, #1
 801529c:	3a02      	subs	r2, #2
 801529e:	3b02      	subs	r3, #2
 80152a0:	f7ff fc9c 	bl	8014bdc <GUI_DrawGradientV>
 80152a4:	b002      	add	sp, #8
 80152a6:	bd70      	pop	{r4, r5, r6, pc}

080152a8 <_DrawBackgroundV>:
 80152a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80152aa:	4604      	mov	r4, r0
 80152ac:	460d      	mov	r5, r1
 80152ae:	f7ff ff53 	bl	8015158 <_DrawFrame>
 80152b2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80152b6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80152ba:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80152be:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80152c2:	68ee      	ldr	r6, [r5, #12]
 80152c4:	9600      	str	r6, [sp, #0]
 80152c6:	4402      	add	r2, r0
 80152c8:	692e      	ldr	r6, [r5, #16]
 80152ca:	9601      	str	r6, [sp, #4]
 80152cc:	3002      	adds	r0, #2
 80152ce:	3102      	adds	r1, #2
 80152d0:	1052      	asrs	r2, r2, #1
 80152d2:	3b02      	subs	r3, #2
 80152d4:	f7ff fcb4 	bl	8014c40 <GUI_DrawGradientH>
 80152d8:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80152dc:	f9b4 0000 	ldrsh.w	r0, [r4]
 80152e0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80152e4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80152e8:	696c      	ldr	r4, [r5, #20]
 80152ea:	9400      	str	r4, [sp, #0]
 80152ec:	4410      	add	r0, r2
 80152ee:	69ac      	ldr	r4, [r5, #24]
 80152f0:	9401      	str	r4, [sp, #4]
 80152f2:	1040      	asrs	r0, r0, #1
 80152f4:	3001      	adds	r0, #1
 80152f6:	3102      	adds	r1, #2
 80152f8:	3a02      	subs	r2, #2
 80152fa:	3b02      	subs	r3, #2
 80152fc:	f7ff fca0 	bl	8014c40 <GUI_DrawGradientH>
 8015300:	b002      	add	sp, #8
 8015302:	bd70      	pop	{r4, r5, r6, pc}

08015304 <SCROLLBAR_DrawSkinFlex>:
 8015304:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015308:	4604      	mov	r4, r0
 801530a:	b08b      	sub	sp, #44	; 0x2c
 801530c:	6800      	ldr	r0, [r0, #0]
 801530e:	f7fb f897 	bl	8010440 <GUI_ALLOC_LockH>
 8015312:	4607      	mov	r7, r0
 8015314:	a80a      	add	r0, sp, #40	; 0x28
 8015316:	ae06      	add	r6, sp, #24
 8015318:	f840 7d1c 	str.w	r7, [r0, #-28]!
 801531c:	f7fb f89e 	bl	801045c <GUI_ALLOC_UnlockH>
 8015320:	6923      	ldr	r3, [r4, #16]
 8015322:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015326:	6963      	ldr	r3, [r4, #20]
 8015328:	f8ad 301a 	strh.w	r3, [sp, #26]
 801532c:	69a3      	ldr	r3, [r4, #24]
 801532e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015332:	69e3      	ldr	r3, [r4, #28]
 8015334:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015338:	6a25      	ldr	r5, [r4, #32]
 801533a:	e896 0003 	ldmia.w	r6, {r0, r1}
 801533e:	682b      	ldr	r3, [r5, #0]
 8015340:	f10d 0820 	add.w	r8, sp, #32
 8015344:	e888 0003 	stmia.w	r8, {r0, r1}
 8015348:	b153      	cbz	r3, 8015360 <SCROLLBAR_DrawSkinFlex+0x5c>
 801534a:	4638      	mov	r0, r7
 801534c:	4631      	mov	r1, r6
 801534e:	4632      	mov	r2, r6
 8015350:	f7f2 fd9d 	bl	8007e8e <WIDGET__RotateRect90>
 8015354:	f8df 913c 	ldr.w	r9, [pc, #316]	; 8015494 <SCROLLBAR_DrawSkinFlex+0x190>
 8015358:	f8df c13c 	ldr.w	ip, [pc, #316]	; 8015498 <SCROLLBAR_DrawSkinFlex+0x194>
 801535c:	4b49      	ldr	r3, [pc, #292]	; (8015484 <SCROLLBAR_DrawSkinFlex+0x180>)
 801535e:	e004      	b.n	801536a <SCROLLBAR_DrawSkinFlex+0x66>
 8015360:	f8df 9138 	ldr.w	r9, [pc, #312]	; 801549c <SCROLLBAR_DrawSkinFlex+0x198>
 8015364:	f8df c138 	ldr.w	ip, [pc, #312]	; 80154a0 <SCROLLBAR_DrawSkinFlex+0x19c>
 8015368:	4b47      	ldr	r3, [pc, #284]	; (8015488 <SCROLLBAR_DrawSkinFlex+0x184>)
 801536a:	6862      	ldr	r2, [r4, #4]
 801536c:	3a08      	subs	r2, #8
 801536e:	2a11      	cmp	r2, #17
 8015370:	f200 8083 	bhi.w	801547a <SCROLLBAR_DrawSkinFlex+0x176>
 8015374:	e8df f002 	tbb	[pc, r2]
 8015378:	81815f13 	.word	0x81815f13
 801537c:	81818134 	.word	0x81818134
 8015380:	43813434 	.word	0x43813434
 8015384:	81818181 	.word	0x81818181
 8015388:	0981      	.short	0x0981
 801538a:	682b      	ldr	r3, [r5, #0]
 801538c:	b113      	cbz	r3, 8015394 <SCROLLBAR_DrawSkinFlex+0x90>
 801538e:	69a0      	ldr	r0, [r4, #24]
 8015390:	6923      	ldr	r3, [r4, #16]
 8015392:	e001      	b.n	8015398 <SCROLLBAR_DrawSkinFlex+0x94>
 8015394:	69e0      	ldr	r0, [r4, #28]
 8015396:	6963      	ldr	r3, [r4, #20]
 8015398:	1ac0      	subs	r0, r0, r3
 801539a:	3001      	adds	r0, #1
 801539c:	e06e      	b.n	801547c <SCROLLBAR_DrawSkinFlex+0x178>
 801539e:	686a      	ldr	r2, [r5, #4]
 80153a0:	493a      	ldr	r1, [pc, #232]	; (801548c <SCROLLBAR_DrawSkinFlex+0x188>)
 80153a2:	4c3b      	ldr	r4, [pc, #236]	; (8015490 <SCROLLBAR_DrawSkinFlex+0x18c>)
 80153a4:	2a02      	cmp	r2, #2
 80153a6:	bf08      	it	eq
 80153a8:	460c      	moveq	r4, r1
 80153aa:	4630      	mov	r0, r6
 80153ac:	4621      	mov	r1, r4
 80153ae:	4798      	blx	r3
 80153b0:	6829      	ldr	r1, [r5, #0]
 80153b2:	aa04      	add	r2, sp, #16
 80153b4:	ab05      	add	r3, sp, #20
 80153b6:	4640      	mov	r0, r8
 80153b8:	f7ff fe5a 	bl	8015070 <_GetArrowPara>
 80153bc:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80153be:	f7f9 fd77 	bl	800eeb0 <GUI_SetColor>
 80153c2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80153c6:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 80153ca:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80153ce:	1ad2      	subs	r2, r2, r3
 80153d0:	f04f 33ff 	mov.w	r3, #4294967295
 80153d4:	9300      	str	r3, [sp, #0]
 80153d6:	9b05      	ldr	r3, [sp, #20]
 80153d8:	3201      	adds	r2, #1
 80153da:	4638      	mov	r0, r7
 80153dc:	4419      	add	r1, r3
 80153de:	e048      	b.n	8015472 <SCROLLBAR_DrawSkinFlex+0x16e>
 80153e0:	4c2b      	ldr	r4, [pc, #172]	; (8015490 <SCROLLBAR_DrawSkinFlex+0x18c>)
 80153e2:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 80153e6:	69e5      	ldr	r5, [r4, #28]
 80153e8:	9500      	str	r5, [sp, #0]
 80153ea:	6a24      	ldr	r4, [r4, #32]
 80153ec:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 80153f0:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 80153f4:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80153f8:	9401      	str	r4, [sp, #4]
 80153fa:	47e0      	blx	ip
 80153fc:	e03d      	b.n	801547a <SCROLLBAR_DrawSkinFlex+0x176>
 80153fe:	686a      	ldr	r2, [r5, #4]
 8015400:	4922      	ldr	r1, [pc, #136]	; (801548c <SCROLLBAR_DrawSkinFlex+0x188>)
 8015402:	4c23      	ldr	r4, [pc, #140]	; (8015490 <SCROLLBAR_DrawSkinFlex+0x18c>)
 8015404:	2a03      	cmp	r2, #3
 8015406:	bf08      	it	eq
 8015408:	460c      	moveq	r4, r1
 801540a:	4630      	mov	r0, r6
 801540c:	4621      	mov	r1, r4
 801540e:	4798      	blx	r3
 8015410:	682b      	ldr	r3, [r5, #0]
 8015412:	b123      	cbz	r3, 801541e <SCROLLBAR_DrawSkinFlex+0x11a>
 8015414:	f9bd 201e 	ldrsh.w	r2, [sp, #30]
 8015418:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801541c:	e003      	b.n	8015426 <SCROLLBAR_DrawSkinFlex+0x122>
 801541e:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8015422:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015426:	1ad3      	subs	r3, r2, r3
 8015428:	3301      	adds	r3, #1
 801542a:	2b0e      	cmp	r3, #14
 801542c:	dd25      	ble.n	801547a <SCROLLBAR_DrawSkinFlex+0x176>
 801542e:	4630      	mov	r0, r6
 8015430:	4621      	mov	r1, r4
 8015432:	47c8      	blx	r9
 8015434:	e021      	b.n	801547a <SCROLLBAR_DrawSkinFlex+0x176>
 8015436:	686a      	ldr	r2, [r5, #4]
 8015438:	4914      	ldr	r1, [pc, #80]	; (801548c <SCROLLBAR_DrawSkinFlex+0x188>)
 801543a:	4c15      	ldr	r4, [pc, #84]	; (8015490 <SCROLLBAR_DrawSkinFlex+0x18c>)
 801543c:	2a01      	cmp	r2, #1
 801543e:	bf08      	it	eq
 8015440:	460c      	moveq	r4, r1
 8015442:	4630      	mov	r0, r6
 8015444:	4621      	mov	r1, r4
 8015446:	4798      	blx	r3
 8015448:	6829      	ldr	r1, [r5, #0]
 801544a:	aa04      	add	r2, sp, #16
 801544c:	ab05      	add	r3, sp, #20
 801544e:	4640      	mov	r0, r8
 8015450:	f7ff fe0e 	bl	8015070 <_GetArrowPara>
 8015454:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8015456:	f7f9 fd2b 	bl	800eeb0 <GUI_SetColor>
 801545a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801545e:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 8015462:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	; 0x24
 8015466:	1ad2      	subs	r2, r2, r3
 8015468:	2301      	movs	r3, #1
 801546a:	9300      	str	r3, [sp, #0]
 801546c:	9b05      	ldr	r3, [sp, #20]
 801546e:	4638      	mov	r0, r7
 8015470:	1ac9      	subs	r1, r1, r3
 8015472:	1052      	asrs	r2, r2, #1
 8015474:	9b04      	ldr	r3, [sp, #16]
 8015476:	f7f2 fe4e 	bl	8008116 <WIDGET__DrawTriangle>
 801547a:	2000      	movs	r0, #0
 801547c:	b00b      	add	sp, #44	; 0x2c
 801547e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015482:	bf00      	nop
 8015484:	080152a9 	.word	0x080152a9
 8015488:	0801524d 	.word	0x0801524d
 801548c:	2000037c 	.word	0x2000037c
 8015490:	200003a8 	.word	0x200003a8
 8015494:	080150fd 	.word	0x080150fd
 8015498:	08014c41 	.word	0x08014c41
 801549c:	080150a1 	.word	0x080150a1
 80154a0:	08014bdd 	.word	0x08014bdd

080154a4 <_Create>:
 80154a4:	b530      	push	{r4, r5, lr}
 80154a6:	b08d      	sub	sp, #52	; 0x34
 80154a8:	4605      	mov	r5, r0
 80154aa:	f7fa ffc9 	bl	8010440 <GUI_ALLOC_LockH>
 80154ae:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80154b0:	6c04      	ldr	r4, [r0, #64]	; 0x40
 80154b2:	9000      	str	r0, [sp, #0]
 80154b4:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 80154b8:	9301      	str	r3, [sp, #4]
 80154ba:	4b07      	ldr	r3, [pc, #28]	; (80154d8 <_Create+0x34>)
 80154bc:	6483      	str	r3, [r0, #72]	; 0x48
 80154be:	4668      	mov	r0, sp
 80154c0:	f7fa ffcc 	bl	801045c <GUI_ALLOC_UnlockH>
 80154c4:	2300      	movs	r3, #0
 80154c6:	9304      	str	r3, [sp, #16]
 80154c8:	ab01      	add	r3, sp, #4
 80154ca:	9503      	str	r5, [sp, #12]
 80154cc:	930b      	str	r3, [sp, #44]	; 0x2c
 80154ce:	a803      	add	r0, sp, #12
 80154d0:	47a0      	blx	r4
 80154d2:	b00d      	add	sp, #52	; 0x34
 80154d4:	bd30      	pop	{r4, r5, pc}
 80154d6:	bf00      	nop
 80154d8:	080154dd 	.word	0x080154dd

080154dc <_CalcPositions>:
 80154dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80154e0:	b090      	sub	sp, #64	; 0x40
 80154e2:	4605      	mov	r5, r0
 80154e4:	460c      	mov	r4, r1
 80154e6:	f7fa ffab 	bl	8010440 <GUI_ALLOC_LockH>
 80154ea:	4603      	mov	r3, r0
 80154ec:	9000      	str	r0, [sp, #0]
 80154ee:	c803      	ldmia	r0, {r0, r1}
 80154f0:	ae03      	add	r6, sp, #12
 80154f2:	e886 0003 	stmia.w	r6, {r0, r1}
 80154f6:	8e58      	ldrh	r0, [r3, #50]	; 0x32
 80154f8:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 80154fc:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 8015500:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8015504:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 8015508:	920e      	str	r2, [sp, #56]	; 0x38
 801550a:	f000 0008 	and.w	r0, r0, #8
 801550e:	2800      	cmp	r0, #0
 8015510:	bf0c      	ite	eq
 8015512:	4608      	moveq	r0, r1
 8015514:	4610      	movne	r0, r2
 8015516:	61a0      	str	r0, [r4, #24]
 8015518:	bf0c      	ite	eq
 801551a:	2000      	moveq	r0, #0
 801551c:	2001      	movne	r0, #1
 801551e:	aa01      	add	r2, sp, #4
 8015520:	9001      	str	r0, [sp, #4]
 8015522:	2019      	movs	r0, #25
 8015524:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015526:	9008      	str	r0, [sp, #32]
 8015528:	9507      	str	r5, [sp, #28]
 801552a:	920f      	str	r2, [sp, #60]	; 0x3c
 801552c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8015530:	970c      	str	r7, [sp, #48]	; 0x30
 8015532:	910d      	str	r1, [sp, #52]	; 0x34
 8015534:	a807      	add	r0, sp, #28
 8015536:	4798      	blx	r3
 8015538:	9b00      	ldr	r3, [sp, #0]
 801553a:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 801553e:	2aff      	cmp	r2, #255	; 0xff
 8015540:	4605      	mov	r5, r0
 8015542:	d111      	bne.n	8015568 <_CalcPositions+0x8c>
 8015544:	6998      	ldr	r0, [r3, #24]
 8015546:	f7f4 faf2 	bl	8009b2e <WM_GetScrollbarV>
 801554a:	b168      	cbz	r0, 8015568 <_CalcPositions+0x8c>
 801554c:	a905      	add	r1, sp, #20
 801554e:	f7fc ff1b 	bl	8012388 <WM_GetWindowRectEx>
 8015552:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8015556:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801555a:	429a      	cmp	r2, r3
 801555c:	d104      	bne.n	8015568 <_CalcPositions+0x8c>
 801555e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8015562:	3b01      	subs	r3, #1
 8015564:	f8ad 3010 	strh.w	r3, [sp, #16]
 8015568:	9b00      	ldr	r3, [sp, #0]
 801556a:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 801556e:	2afe      	cmp	r2, #254	; 0xfe
 8015570:	d111      	bne.n	8015596 <_CalcPositions+0xba>
 8015572:	6998      	ldr	r0, [r3, #24]
 8015574:	f7f4 fad6 	bl	8009b24 <WM_GetScrollbarH>
 8015578:	b168      	cbz	r0, 8015596 <_CalcPositions+0xba>
 801557a:	a905      	add	r1, sp, #20
 801557c:	f7fc ff04 	bl	8012388 <WM_GetWindowRectEx>
 8015580:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8015584:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8015588:	429a      	cmp	r2, r3
 801558a:	d104      	bne.n	8015596 <_CalcPositions+0xba>
 801558c:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8015590:	3b01      	subs	r3, #1
 8015592:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015596:	427a      	negs	r2, r7
 8015598:	4630      	mov	r0, r6
 801559a:	f1c8 0100 	rsb	r1, r8, #0
 801559e:	f7f9 fdbf 	bl	800f120 <GUI_MoveRect>
 80155a2:	9800      	ldr	r0, [sp, #0]
 80155a4:	4631      	mov	r1, r6
 80155a6:	f7fb fe14 	bl	80111d2 <SCROLLBAR__Rect2VRect>
 80155aa:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80155ae:	f9bd a010 	ldrsh.w	sl, [sp, #16]
 80155b2:	9b00      	ldr	r3, [sp, #0]
 80155b4:	ebc2 0a0a 	rsb	sl, r2, sl
 80155b8:	f8d3 904c 	ldr.w	r9, [r3, #76]	; 0x4c
 80155bc:	6d58      	ldr	r0, [r3, #84]	; 0x54
 80155be:	f10a 0601 	add.w	r6, sl, #1
 80155c2:	eba6 0645 	sub.w	r6, r6, r5, lsl #1
 80155c6:	4649      	mov	r1, r9
 80155c8:	4370      	muls	r0, r6
 80155ca:	f7fe fecd 	bl	8014368 <GUI__DivideRound32>
 80155ce:	4b17      	ldr	r3, [pc, #92]	; (801562c <_CalcPositions+0x150>)
 80155d0:	f8c4 a014 	str.w	sl, [r4, #20]
 80155d4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80155d8:	1c5a      	adds	r2, r3, #1
 80155da:	4282      	cmp	r2, r0
 80155dc:	bfa8      	it	ge
 80155de:	1c98      	addge	r0, r3, #2
 80155e0:	42b0      	cmp	r0, r6
 80155e2:	bfb4      	ite	lt
 80155e4:	4607      	movlt	r7, r0
 80155e6:	4637      	movge	r7, r6
 80155e8:	ebc7 0806 	rsb	r8, r7, r6
 80155ec:	442e      	add	r6, r5
 80155ee:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80155f2:	6126      	str	r6, [r4, #16]
 80155f4:	ae10      	add	r6, sp, #64	; 0x40
 80155f6:	6023      	str	r3, [r4, #0]
 80155f8:	1e6b      	subs	r3, r5, #1
 80155fa:	6063      	str	r3, [r4, #4]
 80155fc:	f856 3d40 	ldr.w	r3, [r6, #-64]!
 8015600:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8015602:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8015604:	fb00 f008 	mul.w	r0, r0, r8
 8015608:	ebc1 0109 	rsb	r1, r1, r9
 801560c:	f7fe feac 	bl	8014368 <GUI__DivideRound32>
 8015610:	4428      	add	r0, r5
 8015612:	19c5      	adds	r5, r0, r7
 8015614:	3d01      	subs	r5, #1
 8015616:	60a0      	str	r0, [r4, #8]
 8015618:	60e5      	str	r5, [r4, #12]
 801561a:	f8c4 801c 	str.w	r8, [r4, #28]
 801561e:	6227      	str	r7, [r4, #32]
 8015620:	4668      	mov	r0, sp
 8015622:	f7fa ff1b 	bl	801045c <GUI_ALLOC_UnlockH>
 8015626:	b010      	add	sp, #64	; 0x40
 8015628:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801562c:	200002da 	.word	0x200002da

08015630 <_Paint>:
 8015630:	b570      	push	{r4, r5, r6, lr}
 8015632:	b098      	sub	sp, #96	; 0x60
 8015634:	4606      	mov	r6, r0
 8015636:	f7fa ff03 	bl	8010440 <GUI_ALLOC_LockH>
 801563a:	6d83      	ldr	r3, [r0, #88]	; 0x58
 801563c:	9305      	str	r3, [sp, #20]
 801563e:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8015640:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8015642:	9001      	str	r0, [sp, #4]
 8015644:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8015648:	a906      	add	r1, sp, #24
 801564a:	4605      	mov	r5, r0
 801564c:	4630      	mov	r0, r6
 801564e:	9304      	str	r3, [sp, #16]
 8015650:	f7ff ff44 	bl	80154dc <_CalcPositions>
 8015654:	a801      	add	r0, sp, #4
 8015656:	f7fa ff01 	bl	801045c <GUI_ALLOC_UnlockH>
 801565a:	a902      	add	r1, sp, #8
 801565c:	4628      	mov	r0, r5
 801565e:	f7f2 fc28 	bl	8007eb2 <WIDGET__GetClientRect>
 8015662:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8015666:	9314      	str	r3, [sp, #80]	; 0x50
 8015668:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801566c:	9316      	str	r3, [sp, #88]	; 0x58
 801566e:	ab04      	add	r3, sp, #16
 8015670:	9317      	str	r3, [sp, #92]	; 0x5c
 8015672:	2308      	movs	r3, #8
 8015674:	9310      	str	r3, [sp, #64]	; 0x40
 8015676:	9b06      	ldr	r3, [sp, #24]
 8015678:	9313      	str	r3, [sp, #76]	; 0x4c
 801567a:	9b07      	ldr	r3, [sp, #28]
 801567c:	9315      	str	r3, [sp, #84]	; 0x54
 801567e:	960f      	str	r6, [sp, #60]	; 0x3c
 8015680:	a80f      	add	r0, sp, #60	; 0x3c
 8015682:	47a0      	blx	r4
 8015684:	2310      	movs	r3, #16
 8015686:	9310      	str	r3, [sp, #64]	; 0x40
 8015688:	9b07      	ldr	r3, [sp, #28]
 801568a:	3301      	adds	r3, #1
 801568c:	9313      	str	r3, [sp, #76]	; 0x4c
 801568e:	9b08      	ldr	r3, [sp, #32]
 8015690:	3b01      	subs	r3, #1
 8015692:	9315      	str	r3, [sp, #84]	; 0x54
 8015694:	a80f      	add	r0, sp, #60	; 0x3c
 8015696:	47a0      	blx	r4
 8015698:	2311      	movs	r3, #17
 801569a:	9310      	str	r3, [sp, #64]	; 0x40
 801569c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801569e:	3301      	adds	r3, #1
 80156a0:	9313      	str	r3, [sp, #76]	; 0x4c
 80156a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80156a4:	3b01      	subs	r3, #1
 80156a6:	9315      	str	r3, [sp, #84]	; 0x54
 80156a8:	a80f      	add	r0, sp, #60	; 0x3c
 80156aa:	47a0      	blx	r4
 80156ac:	2313      	movs	r3, #19
 80156ae:	9310      	str	r3, [sp, #64]	; 0x40
 80156b0:	9b08      	ldr	r3, [sp, #32]
 80156b2:	9313      	str	r3, [sp, #76]	; 0x4c
 80156b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80156b6:	9315      	str	r3, [sp, #84]	; 0x54
 80156b8:	a80f      	add	r0, sp, #60	; 0x3c
 80156ba:	47a0      	blx	r4
 80156bc:	2309      	movs	r3, #9
 80156be:	9310      	str	r3, [sp, #64]	; 0x40
 80156c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80156c2:	9313      	str	r3, [sp, #76]	; 0x4c
 80156c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80156c6:	9315      	str	r3, [sp, #84]	; 0x54
 80156c8:	a80f      	add	r0, sp, #60	; 0x3c
 80156ca:	47a0      	blx	r4
 80156cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80156ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80156d0:	429a      	cmp	r2, r3
 80156d2:	d006      	beq.n	80156e2 <_Paint+0xb2>
 80156d4:	210c      	movs	r1, #12
 80156d6:	3201      	adds	r2, #1
 80156d8:	9110      	str	r1, [sp, #64]	; 0x40
 80156da:	9213      	str	r2, [sp, #76]	; 0x4c
 80156dc:	9315      	str	r3, [sp, #84]	; 0x54
 80156de:	a80f      	add	r0, sp, #60	; 0x3c
 80156e0:	47a0      	blx	r4
 80156e2:	b018      	add	sp, #96	; 0x60
 80156e4:	bd70      	pop	{r4, r5, r6, pc}

080156e6 <GUI_DRAW__Draw>:
 80156e6:	e92d 43e3 	stmdb	sp!, {r0, r1, r5, r6, r7, r8, r9, lr}
 80156ea:	4688      	mov	r8, r1
 80156ec:	4617      	mov	r7, r2
 80156ee:	461e      	mov	r6, r3
 80156f0:	4681      	mov	r9, r0
 80156f2:	b170      	cbz	r0, 8015712 <GUI_DRAW__Draw+0x2c>
 80156f4:	f7fa fea4 	bl	8010440 <GUI_ALLOC_LockH>
 80156f8:	4605      	mov	r5, r0
 80156fa:	a802      	add	r0, sp, #8
 80156fc:	682b      	ldr	r3, [r5, #0]
 80156fe:	f840 5d04 	str.w	r5, [r0, #-4]!
 8015702:	681d      	ldr	r5, [r3, #0]
 8015704:	f7fa feaa 	bl	801045c <GUI_ALLOC_UnlockH>
 8015708:	4648      	mov	r0, r9
 801570a:	4641      	mov	r1, r8
 801570c:	463a      	mov	r2, r7
 801570e:	4633      	mov	r3, r6
 8015710:	47a8      	blx	r5
 8015712:	b002      	add	sp, #8
 8015714:	e8bd 83e0 	ldmia.w	sp!, {r5, r6, r7, r8, r9, pc}

08015718 <WM__SendMessageIfEnabled>:
 8015718:	b538      	push	{r3, r4, r5, lr}
 801571a:	4604      	mov	r4, r0
 801571c:	460d      	mov	r5, r1
 801571e:	f7fc fa65 	bl	8011bec <WM__IsEnabled>
 8015722:	b128      	cbz	r0, 8015730 <WM__SendMessageIfEnabled+0x18>
 8015724:	4620      	mov	r0, r4
 8015726:	4629      	mov	r1, r5
 8015728:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801572c:	f7fc ba40 	b.w	8011bb0 <WM__SendMessage>
 8015730:	bd38      	pop	{r3, r4, r5, pc}

08015732 <WM__IsChild>:
 8015732:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015734:	460d      	mov	r5, r1
 8015736:	4604      	mov	r4, r0
 8015738:	b160      	cbz	r0, 8015754 <WM__IsChild+0x22>
 801573a:	f7fa fe81 	bl	8010440 <GUI_ALLOC_LockH>
 801573e:	9001      	str	r0, [sp, #4]
 8015740:	b120      	cbz	r0, 801574c <WM__IsChild+0x1a>
 8015742:	6984      	ldr	r4, [r0, #24]
 8015744:	1b63      	subs	r3, r4, r5
 8015746:	425c      	negs	r4, r3
 8015748:	415c      	adcs	r4, r3
 801574a:	e000      	b.n	801574e <WM__IsChild+0x1c>
 801574c:	4604      	mov	r4, r0
 801574e:	a801      	add	r0, sp, #4
 8015750:	f7fa fe84 	bl	801045c <GUI_ALLOC_UnlockH>
 8015754:	4620      	mov	r0, r4
 8015756:	b003      	add	sp, #12
 8015758:	bd30      	pop	{r4, r5, pc}

0801575a <WM__ForEachDesc>:
 801575a:	b570      	push	{r4, r5, r6, lr}
 801575c:	460d      	mov	r5, r1
 801575e:	4616      	mov	r6, r2
 8015760:	f7fa fe64 	bl	801042c <GUI_ALLOC_h2p>
 8015764:	69c4      	ldr	r4, [r0, #28]
 8015766:	b164      	cbz	r4, 8015782 <WM__ForEachDesc+0x28>
 8015768:	4620      	mov	r0, r4
 801576a:	4631      	mov	r1, r6
 801576c:	47a8      	blx	r5
 801576e:	4620      	mov	r0, r4
 8015770:	4629      	mov	r1, r5
 8015772:	4632      	mov	r2, r6
 8015774:	f7ff fff1 	bl	801575a <WM__ForEachDesc>
 8015778:	4620      	mov	r0, r4
 801577a:	f7fa fe57 	bl	801042c <GUI_ALLOC_h2p>
 801577e:	6a04      	ldr	r4, [r0, #32]
 8015780:	e7f1      	b.n	8015766 <WM__ForEachDesc+0xc>
 8015782:	bd70      	pop	{r4, r5, r6, pc}

08015784 <LCD_GetNumLayers>:
 8015784:	b510      	push	{r4, lr}
 8015786:	2000      	movs	r0, #0
 8015788:	f7fa f918 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 801578c:	1c04      	adds	r4, r0, #0
 801578e:	f04f 0001 	mov.w	r0, #1
 8015792:	bf18      	it	ne
 8015794:	2401      	movne	r4, #1
 8015796:	f7fa f911 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 801579a:	b100      	cbz	r0, 801579e <LCD_GetNumLayers+0x1a>
 801579c:	3401      	adds	r4, #1
 801579e:	4620      	mov	r0, r4
 80157a0:	bd10      	pop	{r4, pc}
	...

080157a4 <LCD_GetBkColorIndex>:
 80157a4:	4b02      	ldr	r3, [pc, #8]	; (80157b0 <LCD_GetBkColorIndex+0xc>)
 80157a6:	681b      	ldr	r3, [r3, #0]
 80157a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80157aa:	6818      	ldr	r0, [r3, #0]
 80157ac:	4770      	bx	lr
 80157ae:	bf00      	nop
 80157b0:	20000254 	.word	0x20000254

080157b4 <LCD_GetColorIndex>:
 80157b4:	4b02      	ldr	r3, [pc, #8]	; (80157c0 <LCD_GetColorIndex+0xc>)
 80157b6:	681b      	ldr	r3, [r3, #0]
 80157b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80157ba:	6818      	ldr	r0, [r3, #0]
 80157bc:	4770      	bx	lr
 80157be:	bf00      	nop
 80157c0:	20000254 	.word	0x20000254

080157c4 <GUI__sqrt32>:
 80157c4:	b510      	push	{r4, lr}
 80157c6:	2110      	movs	r1, #16
 80157c8:	2300      	movs	r3, #0
 80157ca:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80157ce:	189c      	adds	r4, r3, r2
 80157d0:	4284      	cmp	r4, r0
 80157d2:	bf9c      	itt	ls
 80157d4:	18a3      	addls	r3, r4, r2
 80157d6:	ebc4 0000 	rsbls	r0, r4, r0
 80157da:	3901      	subs	r1, #1
 80157dc:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80157e0:	ea4f 0292 	mov.w	r2, r2, lsr #2
 80157e4:	d1f3      	bne.n	80157ce <GUI__sqrt32+0xa>
 80157e6:	4618      	mov	r0, r3
 80157e8:	bd10      	pop	{r4, pc}

080157ea <GUI__HandleEOLine>:
 80157ea:	6803      	ldr	r3, [r0, #0]
 80157ec:	781a      	ldrb	r2, [r3, #0]
 80157ee:	b122      	cbz	r2, 80157fa <GUI__HandleEOLine+0x10>
 80157f0:	2a0a      	cmp	r2, #10
 80157f2:	d104      	bne.n	80157fe <GUI__HandleEOLine+0x14>
 80157f4:	3301      	adds	r3, #1
 80157f6:	6003      	str	r3, [r0, #0]
 80157f8:	e001      	b.n	80157fe <GUI__HandleEOLine+0x14>
 80157fa:	2001      	movs	r0, #1
 80157fc:	4770      	bx	lr
 80157fe:	2000      	movs	r0, #0
 8015800:	4770      	bx	lr

08015802 <_CreateBuffer>:
 8015802:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015804:	6943      	ldr	r3, [r0, #20]
 8015806:	4605      	mov	r5, r0
 8015808:	8818      	ldrh	r0, [r3, #0]
 801580a:	300d      	adds	r0, #13
 801580c:	0080      	lsls	r0, r0, #2
 801580e:	460e      	mov	r6, r1
 8015810:	f7fb f86a 	bl	80108e8 <GUI_ALLOC_AllocNoInit>
 8015814:	4607      	mov	r7, r0
 8015816:	b908      	cbnz	r0, 801581c <_CreateBuffer+0x1a>
 8015818:	2000      	movs	r0, #0
 801581a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801581c:	f7fa fe10 	bl	8010440 <GUI_ALLOC_LockH>
 8015820:	682b      	ldr	r3, [r5, #0]
 8015822:	4604      	mov	r4, r0
 8015824:	6998      	ldr	r0, [r3, #24]
 8015826:	f7fa f8c9 	bl	800f9bc <GUI_DEVICE__GetpDriver>
 801582a:	2800      	cmp	r0, #0
 801582c:	d0f4      	beq.n	8015818 <_CreateBuffer+0x16>
 801582e:	68c3      	ldr	r3, [r0, #12]
 8015830:	2108      	movs	r1, #8
 8015832:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015834:	4798      	blx	r3
 8015836:	2802      	cmp	r0, #2
 8015838:	dd0b      	ble.n	8015852 <_CreateBuffer+0x50>
 801583a:	2804      	cmp	r0, #4
 801583c:	dd06      	ble.n	801584c <_CreateBuffer+0x4a>
 801583e:	2808      	cmp	r0, #8
 8015840:	dd06      	ble.n	8015850 <_CreateBuffer+0x4e>
 8015842:	2811      	cmp	r0, #17
 8015844:	bfb4      	ite	lt
 8015846:	2010      	movlt	r0, #16
 8015848:	2020      	movge	r0, #32
 801584a:	e002      	b.n	8015852 <_CreateBuffer+0x50>
 801584c:	2004      	movs	r0, #4
 801584e:	e000      	b.n	8015852 <_CreateBuffer+0x50>
 8015850:	2008      	movs	r0, #8
 8015852:	2808      	cmp	r0, #8
 8015854:	61a0      	str	r0, [r4, #24]
 8015856:	dd04      	ble.n	8015862 <_CreateBuffer+0x60>
 8015858:	2810      	cmp	r0, #16
 801585a:	bfcc      	ite	gt
 801585c:	2304      	movgt	r3, #4
 801585e:	2302      	movle	r3, #2
 8015860:	e000      	b.n	8015864 <_CreateBuffer+0x62>
 8015862:	2301      	movs	r3, #1
 8015864:	696a      	ldr	r2, [r5, #20]
 8015866:	6123      	str	r3, [r4, #16]
 8015868:	8812      	ldrh	r2, [r2, #0]
 801586a:	61e2      	str	r2, [r4, #28]
 801586c:	4353      	muls	r3, r2
 801586e:	6163      	str	r3, [r4, #20]
 8015870:	f7fa ff90 	bl	8010794 <GUI_ALLOC_GetMaxSize>
 8015874:	6963      	ldr	r3, [r4, #20]
 8015876:	f884 6030 	strb.w	r6, [r4, #48]	; 0x30
 801587a:	4283      	cmp	r3, r0
 801587c:	f04f 0200 	mov.w	r2, #0
 8015880:	bfc8      	it	gt
 8015882:	6160      	strgt	r0, [r4, #20]
 8015884:	2e01      	cmp	r6, #1
 8015886:	60e2      	str	r2, [r4, #12]
 8015888:	bf18      	it	ne
 801588a:	69e2      	ldrne	r2, [r4, #28]
 801588c:	60a7      	str	r7, [r4, #8]
 801588e:	bf18      	it	ne
 8015890:	f102 4280 	addne.w	r2, r2, #1073741824	; 0x40000000
 8015894:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8015898:	bf18      	it	ne
 801589a:	f102 32ff 	addne.w	r2, r2, #4294967295
 801589e:	6023      	str	r3, [r4, #0]
 80158a0:	bf18      	it	ne
 80158a2:	eb03 0382 	addne.w	r3, r3, r2, lsl #2
 80158a6:	6063      	str	r3, [r4, #4]
 80158a8:	4620      	mov	r0, r4
 80158aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080158ac <_GetBkIndex.isra.0>:
 80158ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80158b0:	f9b3 8004 	ldrsh.w	r8, [r3, #4]
 80158b4:	4540      	cmp	r0, r8
 80158b6:	4606      	mov	r6, r0
 80158b8:	460d      	mov	r5, r1
 80158ba:	4691      	mov	r9, r2
 80158bc:	461c      	mov	r4, r3
 80158be:	da04      	bge.n	80158ca <_GetBkIndex.isra.0+0x1e>
 80158c0:	f8d9 0000 	ldr.w	r0, [r9]
 80158c4:	bb28      	cbnz	r0, 8015912 <_GetBkIndex.isra.0+0x66>
 80158c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80158ca:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80158ce:	4298      	cmp	r0, r3
 80158d0:	dcf6      	bgt.n	80158c0 <_GetBkIndex.isra.0+0x14>
 80158d2:	f9b4 7006 	ldrsh.w	r7, [r4, #6]
 80158d6:	42b9      	cmp	r1, r7
 80158d8:	dbf2      	blt.n	80158c0 <_GetBkIndex.isra.0+0x14>
 80158da:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80158de:	4299      	cmp	r1, r3
 80158e0:	dcee      	bgt.n	80158c0 <_GetBkIndex.isra.0+0x14>
 80158e2:	ebc8 0800 	rsb	r8, r8, r0
 80158e6:	1bcf      	subs	r7, r1, r7
 80158e8:	6960      	ldr	r0, [r4, #20]
 80158ea:	4641      	mov	r1, r8
 80158ec:	463a      	mov	r2, r7
 80158ee:	f000 fba3 	bl	8016038 <GUI_GetBitmapPixelIndex>
 80158f2:	2800      	cmp	r0, #0
 80158f4:	d0e4      	beq.n	80158c0 <_GetBkIndex.isra.0+0x14>
 80158f6:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80158fa:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80158fe:	1a8a      	subs	r2, r1, r2
 8015900:	fb02 7707 	mla	r7, r2, r7, r7
 8015904:	f104 0320 	add.w	r3, r4, #32
 8015908:	44b8      	add	r8, r7
 801590a:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 801590e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015912:	68c3      	ldr	r3, [r0, #12]
 8015914:	4631      	mov	r1, r6
 8015916:	695b      	ldr	r3, [r3, #20]
 8015918:	462a      	mov	r2, r5
 801591a:	4798      	blx	r3
 801591c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08015920 <_GetBkIndexAlpha.isra.2>:
 8015920:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015924:	f9b3 6004 	ldrsh.w	r6, [r3, #4]
 8015928:	42b0      	cmp	r0, r6
 801592a:	4680      	mov	r8, r0
 801592c:	460f      	mov	r7, r1
 801592e:	4691      	mov	r9, r2
 8015930:	461d      	mov	r5, r3
 8015932:	db14      	blt.n	801595e <_GetBkIndexAlpha.isra.2+0x3e>
 8015934:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8015938:	4298      	cmp	r0, r3
 801593a:	dc10      	bgt.n	801595e <_GetBkIndexAlpha.isra.2+0x3e>
 801593c:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
 8015940:	42a1      	cmp	r1, r4
 8015942:	db0c      	blt.n	801595e <_GetBkIndexAlpha.isra.2+0x3e>
 8015944:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8015948:	4299      	cmp	r1, r3
 801594a:	dc08      	bgt.n	801595e <_GetBkIndexAlpha.isra.2+0x3e>
 801594c:	1b86      	subs	r6, r0, r6
 801594e:	6968      	ldr	r0, [r5, #20]
 8015950:	1b0c      	subs	r4, r1, r4
 8015952:	b130      	cbz	r0, 8015962 <_GetBkIndexAlpha.isra.2+0x42>
 8015954:	4631      	mov	r1, r6
 8015956:	4622      	mov	r2, r4
 8015958:	f000 fb6e 	bl	8016038 <GUI_GetBitmapPixelIndex>
 801595c:	e003      	b.n	8015966 <_GetBkIndexAlpha.isra.2+0x46>
 801595e:	2400      	movs	r4, #0
 8015960:	4626      	mov	r6, r4
 8015962:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8015966:	0e00      	lsrs	r0, r0, #24
 8015968:	28ff      	cmp	r0, #255	; 0xff
 801596a:	d109      	bne.n	8015980 <_GetBkIndexAlpha.isra.2+0x60>
 801596c:	f8d9 0000 	ldr.w	r0, [r9]
 8015970:	b190      	cbz	r0, 8015998 <_GetBkIndexAlpha.isra.2+0x78>
 8015972:	68c3      	ldr	r3, [r0, #12]
 8015974:	4641      	mov	r1, r8
 8015976:	695b      	ldr	r3, [r3, #20]
 8015978:	463a      	mov	r2, r7
 801597a:	4798      	blx	r3
 801597c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015980:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8015984:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8015988:	1a8a      	subs	r2, r1, r2
 801598a:	fb02 4404 	mla	r4, r2, r4, r4
 801598e:	f105 0320 	add.w	r3, r5, #32
 8015992:	4426      	add	r6, r4
 8015994:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8015998:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0801599c <_GetDeviceRect>:
 801599c:	b538      	push	{r3, r4, r5, lr}
 801599e:	4a0c      	ldr	r2, [pc, #48]	; (80159d0 <_GetDeviceRect+0x34>)
 80159a0:	6983      	ldr	r3, [r0, #24]
 80159a2:	56d2      	ldrsb	r2, [r2, r3]
 80159a4:	2a01      	cmp	r2, #1
 80159a6:	4605      	mov	r5, r0
 80159a8:	460c      	mov	r4, r1
 80159aa:	dd0d      	ble.n	80159c8 <_GetDeviceRect+0x2c>
 80159ac:	2200      	movs	r2, #0
 80159ae:	804a      	strh	r2, [r1, #2]
 80159b0:	800a      	strh	r2, [r1, #0]
 80159b2:	4618      	mov	r0, r3
 80159b4:	f7f7 fd6a 	bl	800d48c <LCD_GetXSizeEx>
 80159b8:	3801      	subs	r0, #1
 80159ba:	80a0      	strh	r0, [r4, #4]
 80159bc:	69a8      	ldr	r0, [r5, #24]
 80159be:	f7f7 fd68 	bl	800d492 <LCD_GetYSizeEx>
 80159c2:	3801      	subs	r0, #1
 80159c4:	80e0      	strh	r0, [r4, #6]
 80159c6:	bd38      	pop	{r3, r4, r5, pc}
 80159c8:	68c3      	ldr	r3, [r0, #12]
 80159ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80159cc:	4798      	blx	r3
 80159ce:	bd38      	pop	{r3, r4, r5, pc}
 80159d0:	2001b36c 	.word	0x2001b36c

080159d4 <_FlushBuffer.isra.5>:
 80159d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80159d6:	460c      	mov	r4, r1
 80159d8:	68c9      	ldr	r1, [r1, #12]
 80159da:	b087      	sub	sp, #28
 80159dc:	2900      	cmp	r1, #0
 80159de:	d030      	beq.n	8015a42 <_FlushBuffer.isra.5+0x6e>
 80159e0:	f994 3030 	ldrsb.w	r3, [r4, #48]	; 0x30
 80159e4:	6822      	ldr	r2, [r4, #0]
 80159e6:	2b01      	cmp	r3, #1
 80159e8:	d103      	bne.n	80159f2 <_FlushBuffer.isra.5+0x1e>
 80159ea:	4615      	mov	r5, r2
 80159ec:	6062      	str	r2, [r4, #4]
 80159ee:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 80159f0:	e009      	b.n	8015a06 <_FlushBuffer.isra.5+0x32>
 80159f2:	69e3      	ldr	r3, [r4, #28]
 80159f4:	6865      	ldr	r5, [r4, #4]
 80159f6:	6a27      	ldr	r7, [r4, #32]
 80159f8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80159fc:	3b01      	subs	r3, #1
 80159fe:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8015a02:	3504      	adds	r5, #4
 8015a04:	6063      	str	r3, [r4, #4]
 8015a06:	6806      	ldr	r6, [r0, #0]
 8015a08:	b1b6      	cbz	r6, 8015a38 <_FlushBuffer.isra.5+0x64>
 8015a0a:	69a2      	ldr	r2, [r4, #24]
 8015a0c:	4628      	mov	r0, r5
 8015a0e:	f7fe fcb8 	bl	8014382 <GUI__CompactPixelIndices>
 8015a12:	2301      	movs	r3, #1
 8015a14:	68f2      	ldr	r2, [r6, #12]
 8015a16:	9300      	str	r3, [sp, #0]
 8015a18:	69a3      	ldr	r3, [r4, #24]
 8015a1a:	9301      	str	r3, [sp, #4]
 8015a1c:	9503      	str	r5, [sp, #12]
 8015a1e:	6963      	ldr	r3, [r4, #20]
 8015a20:	9302      	str	r3, [sp, #8]
 8015a22:	2500      	movs	r5, #0
 8015a24:	9504      	str	r5, [sp, #16]
 8015a26:	9505      	str	r5, [sp, #20]
 8015a28:	f8d2 c004 	ldr.w	ip, [r2, #4]
 8015a2c:	68e3      	ldr	r3, [r4, #12]
 8015a2e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8015a30:	4630      	mov	r0, r6
 8015a32:	4639      	mov	r1, r7
 8015a34:	47e0      	blx	ip
 8015a36:	e000      	b.n	8015a3a <_FlushBuffer.isra.5+0x66>
 8015a38:	2501      	movs	r5, #1
 8015a3a:	2300      	movs	r3, #0
 8015a3c:	60e3      	str	r3, [r4, #12]
 8015a3e:	b2e8      	uxtb	r0, r5
 8015a40:	e000      	b.n	8015a44 <_FlushBuffer.isra.5+0x70>
 8015a42:	4608      	mov	r0, r1
 8015a44:	b007      	add	sp, #28
 8015a46:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015a48 <_SetBkIndexBuffered>:
 8015a48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015a4a:	9c06      	ldr	r4, [sp, #24]
 8015a4c:	460d      	mov	r5, r1
 8015a4e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8015a50:	428d      	cmp	r5, r1
 8015a52:	4606      	mov	r6, r0
 8015a54:	4617      	mov	r7, r2
 8015a56:	d105      	bne.n	8015a64 <_SetBkIndexBuffered+0x1c>
 8015a58:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 8015a5c:	6a21      	ldr	r1, [r4, #32]
 8015a5e:	4411      	add	r1, r2
 8015a60:	4288      	cmp	r0, r1
 8015a62:	d003      	beq.n	8015a6c <_SetBkIndexBuffered+0x24>
 8015a64:	4618      	mov	r0, r3
 8015a66:	4621      	mov	r1, r4
 8015a68:	f7ff ffb4 	bl	80159d4 <_FlushBuffer.isra.5>
 8015a6c:	6863      	ldr	r3, [r4, #4]
 8015a6e:	601f      	str	r7, [r3, #0]
 8015a70:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 8015a74:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8015a78:	6063      	str	r3, [r4, #4]
 8015a7a:	68e3      	ldr	r3, [r4, #12]
 8015a7c:	b90b      	cbnz	r3, 8015a82 <_SetBkIndexBuffered+0x3a>
 8015a7e:	62a6      	str	r6, [r4, #40]	; 0x28
 8015a80:	62e5      	str	r5, [r4, #44]	; 0x2c
 8015a82:	3301      	adds	r3, #1
 8015a84:	60e3      	str	r3, [r4, #12]
 8015a86:	6226      	str	r6, [r4, #32]
 8015a88:	6265      	str	r5, [r4, #36]	; 0x24
 8015a8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015a8c <_ReleaseBuffer.isra.6>:
 8015a8c:	b513      	push	{r0, r1, r4, lr}
 8015a8e:	9101      	str	r1, [sp, #4]
 8015a90:	f7ff ffa0 	bl	80159d4 <_FlushBuffer.isra.5>
 8015a94:	a802      	add	r0, sp, #8
 8015a96:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 8015a9a:	6894      	ldr	r4, [r2, #8]
 8015a9c:	f7fa fcde 	bl	801045c <GUI_ALLOC_UnlockH>
 8015aa0:	4620      	mov	r0, r4
 8015aa2:	f7fa fd07 	bl	80104b4 <GUI_ALLOC_Free>
 8015aa6:	b002      	add	sp, #8
 8015aa8:	bd10      	pop	{r4, pc}
	...

08015aac <GUI_SPRITE_SetPosition>:
 8015aac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ab0:	b0a7      	sub	sp, #156	; 0x9c
 8015ab2:	9116      	str	r1, [sp, #88]	; 0x58
 8015ab4:	9217      	str	r2, [sp, #92]	; 0x5c
 8015ab6:	2800      	cmp	r0, #0
 8015ab8:	f000 8275 	beq.w	8015fa6 <GUI_SPRITE_SetPosition+0x4fa>
 8015abc:	f7fa fcc0 	bl	8010440 <GUI_ALLOC_LockH>
 8015ac0:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8015ac2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015ac6:	6801      	ldr	r1, [r0, #0]
 8015ac8:	9023      	str	r0, [sp, #140]	; 0x8c
 8015aca:	429a      	cmp	r2, r3
 8015acc:	9106      	str	r1, [sp, #24]
 8015ace:	d106      	bne.n	8015ade <GUI_SPRITE_SetPosition+0x32>
 8015ad0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015ad4:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
 8015ad8:	459e      	cmp	lr, r3
 8015ada:	f000 8239 	beq.w	8015f50 <GUI_SPRITE_SetPosition+0x4a4>
 8015ade:	2000      	movs	r0, #0
 8015ae0:	f7f6 fb02 	bl	800c0e8 <GUI_MEMDEV_Select>
 8015ae4:	4ba0      	ldr	r3, [pc, #640]	; (8015d68 <GUI_SPRITE_SetPosition+0x2bc>)
 8015ae6:	9906      	ldr	r1, [sp, #24]
 8015ae8:	681b      	ldr	r3, [r3, #0]
 8015aea:	6989      	ldr	r1, [r1, #24]
 8015aec:	7c5a      	ldrb	r2, [r3, #17]
 8015aee:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 8015af0:	9108      	str	r1, [sp, #32]
 8015af2:	4291      	cmp	r1, r2
 8015af4:	bf18      	it	ne
 8015af6:	7459      	strbne	r1, [r3, #17]
 8015af8:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8015afc:	9310      	str	r3, [sp, #64]	; 0x40
 8015afe:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8015b02:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8015b06:	f9b5 6006 	ldrsh.w	r6, [r5, #6]
 8015b0a:	921a      	str	r2, [sp, #104]	; 0x68
 8015b0c:	ebce 0303 	rsb	r3, lr, r3
 8015b10:	1c59      	adds	r1, r3, #1
 8015b12:	9307      	str	r3, [sp, #28]
 8015b14:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8015b18:	901f      	str	r0, [sp, #124]	; 0x7c
 8015b1a:	1b9b      	subs	r3, r3, r6
 8015b1c:	1c5a      	adds	r2, r3, #1
 8015b1e:	930e      	str	r3, [sp, #56]	; 0x38
 8015b20:	8a2b      	ldrh	r3, [r5, #16]
 8015b22:	910d      	str	r1, [sp, #52]	; 0x34
 8015b24:	079b      	lsls	r3, r3, #30
 8015b26:	921e      	str	r2, [sp, #120]	; 0x78
 8015b28:	f140 81f7 	bpl.w	8015f1a <GUI_SPRITE_SetPosition+0x46e>
 8015b2c:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015b2e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8015b30:	696b      	ldr	r3, [r5, #20]
 8015b32:	9311      	str	r3, [sp, #68]	; 0x44
 8015b34:	ebce 0a01 	rsb	sl, lr, r1
 8015b38:	f1ba 0f00 	cmp.w	sl, #0
 8015b3c:	ebc6 0902 	rsb	r9, r6, r2
 8015b40:	dc0c      	bgt.n	8015b5c <GUI_SPRITE_SetPosition+0xb0>
 8015b42:	9b07      	ldr	r3, [sp, #28]
 8015b44:	930a      	str	r3, [sp, #40]	; 0x28
 8015b46:	469e      	mov	lr, r3
 8015b48:	f04f 32ff 	mov.w	r2, #4294967295
 8015b4c:	44d6      	add	lr, sl
 8015b4e:	2100      	movs	r1, #0
 8015b50:	f8cd e01c 	str.w	lr, [sp, #28]
 8015b54:	911c      	str	r1, [sp, #112]	; 0x70
 8015b56:	9214      	str	r2, [sp, #80]	; 0x50
 8015b58:	9204      	str	r2, [sp, #16]
 8015b5a:	e009      	b.n	8015b70 <GUI_SPRITE_SetPosition+0xc4>
 8015b5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015b5e:	f8cd a070 	str.w	sl, [sp, #112]	; 0x70
 8015b62:	f04f 0e01 	mov.w	lr, #1
 8015b66:	2100      	movs	r1, #0
 8015b68:	9314      	str	r3, [sp, #80]	; 0x50
 8015b6a:	f8cd e010 	str.w	lr, [sp, #16]
 8015b6e:	910a      	str	r1, [sp, #40]	; 0x28
 8015b70:	f1b9 0f00 	cmp.w	r9, #0
 8015b74:	dc0c      	bgt.n	8015b90 <GUI_SPRITE_SetPosition+0xe4>
 8015b76:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015b78:	4622      	mov	r2, r4
 8015b7a:	f04f 3eff 	mov.w	lr, #4294967295
 8015b7e:	444a      	add	r2, r9
 8015b80:	2300      	movs	r3, #0
 8015b82:	920e      	str	r2, [sp, #56]	; 0x38
 8015b84:	931b      	str	r3, [sp, #108]	; 0x6c
 8015b86:	f8cd e054 	str.w	lr, [sp, #84]	; 0x54
 8015b8a:	f8cd e024 	str.w	lr, [sp, #36]	; 0x24
 8015b8e:	e006      	b.n	8015b9e <GUI_SPRITE_SetPosition+0xf2>
 8015b90:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8015b92:	f8cd 906c 	str.w	r9, [sp, #108]	; 0x6c
 8015b96:	2301      	movs	r3, #1
 8015b98:	9215      	str	r2, [sp, #84]	; 0x54
 8015b9a:	9309      	str	r3, [sp, #36]	; 0x24
 8015b9c:	2400      	movs	r4, #0
 8015b9e:	9806      	ldr	r0, [sp, #24]
 8015ba0:	a924      	add	r1, sp, #144	; 0x90
 8015ba2:	f7ff fefb 	bl	801599c <_GetDeviceRect>
 8015ba6:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8015ba8:	9904      	ldr	r1, [sp, #16]
 8015baa:	f7ff fe2a 	bl	8015802 <_CreateBuffer>
 8015bae:	9012      	str	r0, [sp, #72]	; 0x48
 8015bb0:	2800      	cmp	r0, #0
 8015bb2:	f000 81b2 	beq.w	8015f1a <GUI_SPRITE_SetPosition+0x46e>
 8015bb6:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8015bb8:	9904      	ldr	r1, [sp, #16]
 8015bba:	f7ff fe22 	bl	8015802 <_CreateBuffer>
 8015bbe:	9013      	str	r0, [sp, #76]	; 0x4c
 8015bc0:	2800      	cmp	r0, #0
 8015bc2:	f000 81a5 	beq.w	8015f10 <GUI_SPRITE_SetPosition+0x464>
 8015bc6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015bc8:	68d8      	ldr	r0, [r3, #12]
 8015bca:	4426      	add	r6, r4
 8015bcc:	b990      	cbnz	r0, 8015bf4 <GUI_SPRITE_SetPosition+0x148>
 8015bce:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 8015bd2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8015bd4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015bd6:	9019      	str	r0, [sp, #100]	; 0x64
 8015bd8:	ea4f 038e 	mov.w	r3, lr, lsl #2
 8015bdc:	434b      	muls	r3, r1
 8015bde:	9321      	str	r3, [sp, #132]	; 0x84
 8015be0:	fb0e 2304 	mla	r3, lr, r4, r2
 8015be4:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8015be8:	930c      	str	r3, [sp, #48]	; 0x30
 8015bea:	9b04      	ldr	r3, [sp, #16]
 8015bec:	009b      	lsls	r3, r3, #2
 8015bee:	444e      	add	r6, r9
 8015bf0:	9320      	str	r3, [sp, #128]	; 0x80
 8015bf2:	e0db      	b.n	8015dac <GUI_SPRITE_SetPosition+0x300>
 8015bf4:	f7fa fc24 	bl	8010440 <GUI_ALLOC_LockH>
 8015bf8:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 8015bfc:	9909      	ldr	r1, [sp, #36]	; 0x24
 8015bfe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015c00:	9022      	str	r0, [sp, #136]	; 0x88
 8015c02:	ea4f 038e 	mov.w	r3, lr, lsl #2
 8015c06:	434b      	muls	r3, r1
 8015c08:	9319      	str	r3, [sp, #100]	; 0x64
 8015c0a:	fb0e 2304 	mla	r3, lr, r4, r2
 8015c0e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8015c12:	930b      	str	r3, [sp, #44]	; 0x2c
 8015c14:	9b04      	ldr	r3, [sp, #16]
 8015c16:	009b      	lsls	r3, r3, #2
 8015c18:	444e      	add	r6, r9
 8015c1a:	931d      	str	r3, [sp, #116]	; 0x74
 8015c1c:	9915      	ldr	r1, [sp, #84]	; 0x54
 8015c1e:	428c      	cmp	r4, r1
 8015c20:	f000 809e 	beq.w	8015d60 <GUI_SPRITE_SetPosition+0x2b4>
 8015c24:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8015c28:	4574      	cmp	r4, lr
 8015c2a:	db05      	blt.n	8015c38 <GUI_SPRITE_SetPosition+0x18c>
 8015c2c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015c2e:	428c      	cmp	r4, r1
 8015c30:	bfcc      	ite	gt
 8015c32:	2300      	movgt	r3, #0
 8015c34:	2301      	movle	r3, #1
 8015c36:	e000      	b.n	8015c3a <GUI_SPRITE_SetPosition+0x18e>
 8015c38:	2300      	movs	r3, #0
 8015c3a:	b2db      	uxtb	r3, r3
 8015c3c:	9318      	str	r3, [sp, #96]	; 0x60
 8015c3e:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8015c40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015c42:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8015c44:	9105      	str	r1, [sp, #20]
 8015c46:	ebc9 0206 	rsb	r2, r9, r6
 8015c4a:	441f      	add	r7, r3
 8015c4c:	920c      	str	r2, [sp, #48]	; 0x30
 8015c4e:	4457      	add	r7, sl
 8015c50:	461d      	mov	r5, r3
 8015c52:	9914      	ldr	r1, [sp, #80]	; 0x50
 8015c54:	428d      	cmp	r5, r1
 8015c56:	d07a      	beq.n	8015d4e <GUI_SPRITE_SetPosition+0x2a2>
 8015c58:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015c5a:	4629      	mov	r1, r5
 8015c5c:	4622      	mov	r2, r4
 8015c5e:	f000 f9eb 	bl	8016038 <GUI_GetBitmapPixelIndex>
 8015c62:	900f      	str	r0, [sp, #60]	; 0x3c
 8015c64:	2800      	cmp	r0, #0
 8015c66:	d069      	beq.n	8015d3c <GUI_SPRITE_SetPosition+0x290>
 8015c68:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015c6a:	4295      	cmp	r5, r2
 8015c6c:	ebca 0c07 	rsb	ip, sl, r7
 8015c70:	db07      	blt.n	8015c82 <GUI_SPRITE_SetPosition+0x1d6>
 8015c72:	9b07      	ldr	r3, [sp, #28]
 8015c74:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8015c78:	429d      	cmp	r5, r3
 8015c7a:	bfc8      	it	gt
 8015c7c:	f04f 0b00 	movgt.w	fp, #0
 8015c80:	e001      	b.n	8015c86 <GUI_SPRITE_SetPosition+0x1da>
 8015c82:	f04f 0b00 	mov.w	fp, #0
 8015c86:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8015c8a:	429f      	cmp	r7, r3
 8015c8c:	fa5f fb8b 	uxtb.w	fp, fp
 8015c90:	db17      	blt.n	8015cc2 <GUI_SPRITE_SetPosition+0x216>
 8015c92:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8015c96:	429e      	cmp	r6, r3
 8015c98:	db13      	blt.n	8015cc2 <GUI_SPRITE_SetPosition+0x216>
 8015c9a:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8015c9e:	429f      	cmp	r7, r3
 8015ca0:	dc0f      	bgt.n	8015cc2 <GUI_SPRITE_SetPosition+0x216>
 8015ca2:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8015ca6:	429e      	cmp	r6, r3
 8015ca8:	dc0b      	bgt.n	8015cc2 <GUI_SPRITE_SetPosition+0x216>
 8015caa:	4638      	mov	r0, r7
 8015cac:	4631      	mov	r1, r6
 8015cae:	9a06      	ldr	r2, [sp, #24]
 8015cb0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015cb2:	f8cd c00c 	str.w	ip, [sp, #12]
 8015cb6:	f7ff fdf9 	bl	80158ac <_GetBkIndex.isra.0>
 8015cba:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8015cbe:	4680      	mov	r8, r0
 8015cc0:	e001      	b.n	8015cc6 <GUI_SPRITE_SetPosition+0x21a>
 8015cc2:	f04f 0800 	mov.w	r8, #0
 8015cc6:	f1bb 0f00 	cmp.w	fp, #0
 8015cca:	d00d      	beq.n	8015ce8 <GUI_SPRITE_SetPosition+0x23c>
 8015ccc:	ebb5 010a 	subs.w	r1, r5, sl
 8015cd0:	d415      	bmi.n	8015cfe <GUI_SPRITE_SetPosition+0x252>
 8015cd2:	ebb4 0209 	subs.w	r2, r4, r9
 8015cd6:	d412      	bmi.n	8015cfe <GUI_SPRITE_SetPosition+0x252>
 8015cd8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015cda:	f8cd c00c 	str.w	ip, [sp, #12]
 8015cde:	f000 f9ab 	bl	8016038 <GUI_GetBitmapPixelIndex>
 8015ce2:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8015ce6:	b950      	cbnz	r0, 8015cfe <GUI_SPRITE_SetPosition+0x252>
 8015ce8:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8015cec:	459c      	cmp	ip, r3
 8015cee:	db06      	blt.n	8015cfe <GUI_SPRITE_SetPosition+0x252>
 8015cf0:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8015cf4:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 8015cf8:	459e      	cmp	lr, r3
 8015cfa:	f280 812d 	bge.w	8015f58 <GUI_SPRITE_SetPosition+0x4ac>
 8015cfe:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8015d02:	429f      	cmp	r7, r3
 8015d04:	db17      	blt.n	8015d36 <GUI_SPRITE_SetPosition+0x28a>
 8015d06:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8015d0a:	429e      	cmp	r6, r3
 8015d0c:	db13      	blt.n	8015d36 <GUI_SPRITE_SetPosition+0x28a>
 8015d0e:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8015d12:	429f      	cmp	r7, r3
 8015d14:	dc0f      	bgt.n	8015d36 <GUI_SPRITE_SetPosition+0x28a>
 8015d16:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8015d1a:	429e      	cmp	r6, r3
 8015d1c:	dc0b      	bgt.n	8015d36 <GUI_SPRITE_SetPosition+0x28a>
 8015d1e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015d20:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8015d22:	f8dd e03c 	ldr.w	lr, [sp, #60]	; 0x3c
 8015d26:	9100      	str	r1, [sp, #0]
 8015d28:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
 8015d2c:	9b06      	ldr	r3, [sp, #24]
 8015d2e:	4638      	mov	r0, r7
 8015d30:	4631      	mov	r1, r6
 8015d32:	f7ff fe89 	bl	8015a48 <_SetBkIndexBuffered>
 8015d36:	9905      	ldr	r1, [sp, #20]
 8015d38:	f8c1 8020 	str.w	r8, [r1, #32]
 8015d3c:	9b05      	ldr	r3, [sp, #20]
 8015d3e:	f8dd e074 	ldr.w	lr, [sp, #116]	; 0x74
 8015d42:	9a04      	ldr	r2, [sp, #16]
 8015d44:	4473      	add	r3, lr
 8015d46:	4415      	add	r5, r2
 8015d48:	9305      	str	r3, [sp, #20]
 8015d4a:	4417      	add	r7, r2
 8015d4c:	e781      	b.n	8015c52 <GUI_SPRITE_SetPosition+0x1a6>
 8015d4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015d50:	f8dd e064 	ldr.w	lr, [sp, #100]	; 0x64
 8015d54:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015d56:	4473      	add	r3, lr
 8015d58:	4414      	add	r4, r2
 8015d5a:	930b      	str	r3, [sp, #44]	; 0x2c
 8015d5c:	4416      	add	r6, r2
 8015d5e:	e75d      	b.n	8015c1c <GUI_SPRITE_SetPosition+0x170>
 8015d60:	a822      	add	r0, sp, #136	; 0x88
 8015d62:	f7fa fb7b 	bl	801045c <GUI_ALLOC_UnlockH>
 8015d66:	e0ce      	b.n	8015f06 <GUI_SPRITE_SetPosition+0x45a>
 8015d68:	20000254 	.word	0x20000254
 8015d6c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8015d6e:	4294      	cmp	r4, r2
 8015d70:	db20      	blt.n	8015db4 <GUI_SPRITE_SetPosition+0x308>
 8015d72:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
 8015d76:	4574      	cmp	r4, lr
 8015d78:	bfcc      	ite	gt
 8015d7a:	2300      	movgt	r3, #0
 8015d7c:	2301      	movle	r3, #1
 8015d7e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015d80:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8015d82:	b2db      	uxtb	r3, r3
 8015d84:	931d      	str	r3, [sp, #116]	; 0x74
 8015d86:	ebc9 0106 	rsb	r1, r9, r6
 8015d8a:	4417      	add	r7, r2
 8015d8c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015d8e:	910f      	str	r1, [sp, #60]	; 0x3c
 8015d90:	4457      	add	r7, sl
 8015d92:	9305      	str	r3, [sp, #20]
 8015d94:	4615      	mov	r5, r2
 8015d96:	9914      	ldr	r1, [sp, #80]	; 0x50
 8015d98:	428d      	cmp	r5, r1
 8015d9a:	d10d      	bne.n	8015db8 <GUI_SPRITE_SetPosition+0x30c>
 8015d9c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015d9e:	f8dd e084 	ldr.w	lr, [sp, #132]	; 0x84
 8015da2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015da4:	4473      	add	r3, lr
 8015da6:	4414      	add	r4, r2
 8015da8:	930c      	str	r3, [sp, #48]	; 0x30
 8015daa:	4416      	add	r6, r2
 8015dac:	9915      	ldr	r1, [sp, #84]	; 0x54
 8015dae:	428c      	cmp	r4, r1
 8015db0:	d1dc      	bne.n	8015d6c <GUI_SPRITE_SetPosition+0x2c0>
 8015db2:	e0a8      	b.n	8015f06 <GUI_SPRITE_SetPosition+0x45a>
 8015db4:	2300      	movs	r3, #0
 8015db6:	e7e2      	b.n	8015d7e <GUI_SPRITE_SetPosition+0x2d2>
 8015db8:	4629      	mov	r1, r5
 8015dba:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015dbc:	4622      	mov	r2, r4
 8015dbe:	f000 f93b 	bl	8016038 <GUI_GetBitmapPixelIndex>
 8015dc2:	0e01      	lsrs	r1, r0, #24
 8015dc4:	29ff      	cmp	r1, #255	; 0xff
 8015dc6:	9018      	str	r0, [sp, #96]	; 0x60
 8015dc8:	910b      	str	r1, [sp, #44]	; 0x2c
 8015dca:	f000 8093 	beq.w	8015ef4 <GUI_SPRITE_SetPosition+0x448>
 8015dce:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015dd0:	4295      	cmp	r5, r2
 8015dd2:	ebca 0c07 	rsb	ip, sl, r7
 8015dd6:	db07      	blt.n	8015de8 <GUI_SPRITE_SetPosition+0x33c>
 8015dd8:	9b07      	ldr	r3, [sp, #28]
 8015dda:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 8015dde:	429d      	cmp	r5, r3
 8015de0:	bfc8      	it	gt
 8015de2:	f04f 0b00 	movgt.w	fp, #0
 8015de6:	e001      	b.n	8015dec <GUI_SPRITE_SetPosition+0x340>
 8015de8:	f04f 0b00 	mov.w	fp, #0
 8015dec:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8015df0:	429f      	cmp	r7, r3
 8015df2:	fa5f fb8b 	uxtb.w	fp, fp
 8015df6:	db22      	blt.n	8015e3e <GUI_SPRITE_SetPosition+0x392>
 8015df8:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8015dfc:	429e      	cmp	r6, r3
 8015dfe:	db1e      	blt.n	8015e3e <GUI_SPRITE_SetPosition+0x392>
 8015e00:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8015e04:	429f      	cmp	r7, r3
 8015e06:	dc1a      	bgt.n	8015e3e <GUI_SPRITE_SetPosition+0x392>
 8015e08:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8015e0c:	429e      	cmp	r6, r3
 8015e0e:	dc16      	bgt.n	8015e3e <GUI_SPRITE_SetPosition+0x392>
 8015e10:	4631      	mov	r1, r6
 8015e12:	9a06      	ldr	r2, [sp, #24]
 8015e14:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015e16:	f8cd c00c 	str.w	ip, [sp, #12]
 8015e1a:	4638      	mov	r0, r7
 8015e1c:	f7ff fd80 	bl	8015920 <_GetBkIndexAlpha.isra.2>
 8015e20:	f8dd e020 	ldr.w	lr, [sp, #32]
 8015e24:	4b61      	ldr	r3, [pc, #388]	; (8015fac <GUI_SPRITE_SetPosition+0x500>)
 8015e26:	f853 302e 	ldr.w	r3, [r3, lr, lsl #2]
 8015e2a:	691b      	ldr	r3, [r3, #16]
 8015e2c:	4680      	mov	r8, r0
 8015e2e:	685b      	ldr	r3, [r3, #4]
 8015e30:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8015e34:	4798      	blx	r3
 8015e36:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8015e3a:	9019      	str	r0, [sp, #100]	; 0x64
 8015e3c:	e001      	b.n	8015e42 <GUI_SPRITE_SetPosition+0x396>
 8015e3e:	f04f 0800 	mov.w	r8, #0
 8015e42:	f1bb 0f00 	cmp.w	fp, #0
 8015e46:	d00f      	beq.n	8015e68 <GUI_SPRITE_SetPosition+0x3bc>
 8015e48:	ebb5 010a 	subs.w	r1, r5, sl
 8015e4c:	d416      	bmi.n	8015e7c <GUI_SPRITE_SetPosition+0x3d0>
 8015e4e:	ebb4 0209 	subs.w	r2, r4, r9
 8015e52:	d413      	bmi.n	8015e7c <GUI_SPRITE_SetPosition+0x3d0>
 8015e54:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015e56:	f8cd c00c 	str.w	ip, [sp, #12]
 8015e5a:	f000 f8ed 	bl	8016038 <GUI_GetBitmapPixelIndex>
 8015e5e:	0e00      	lsrs	r0, r0, #24
 8015e60:	28ff      	cmp	r0, #255	; 0xff
 8015e62:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8015e66:	d109      	bne.n	8015e7c <GUI_SPRITE_SetPosition+0x3d0>
 8015e68:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8015e6c:	459c      	cmp	ip, r3
 8015e6e:	db05      	blt.n	8015e7c <GUI_SPRITE_SetPosition+0x3d0>
 8015e70:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8015e74:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8015e76:	4299      	cmp	r1, r3
 8015e78:	f280 8082 	bge.w	8015f80 <GUI_SPRITE_SetPosition+0x4d4>
 8015e7c:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8015e80:	429f      	cmp	r7, r3
 8015e82:	db34      	blt.n	8015eee <GUI_SPRITE_SetPosition+0x442>
 8015e84:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8015e88:	429e      	cmp	r6, r3
 8015e8a:	db30      	blt.n	8015eee <GUI_SPRITE_SetPosition+0x442>
 8015e8c:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8015e90:	429f      	cmp	r7, r3
 8015e92:	dc2c      	bgt.n	8015eee <GUI_SPRITE_SetPosition+0x442>
 8015e94:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8015e98:	429e      	cmp	r6, r3
 8015e9a:	dc28      	bgt.n	8015eee <GUI_SPRITE_SetPosition+0x442>
 8015e9c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8015ea0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8015ea2:	f8df b108 	ldr.w	fp, [pc, #264]	; 8015fac <GUI_SPRITE_SetPosition+0x500>
 8015ea6:	f02e 407f 	bic.w	r0, lr, #4278190080	; 0xff000000
 8015eaa:	b191      	cbz	r1, 8015ed2 <GUI_SPRITE_SetPosition+0x426>
 8015eac:	9a08      	ldr	r2, [sp, #32]
 8015eae:	f85b 3022 	ldr.w	r3, [fp, r2, lsl #2]
 8015eb2:	691b      	ldr	r3, [r3, #16]
 8015eb4:	685b      	ldr	r3, [r3, #4]
 8015eb6:	4798      	blx	r3
 8015eb8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015eba:	9919      	ldr	r1, [sp, #100]	; 0x64
 8015ebc:	43da      	mvns	r2, r3
 8015ebe:	b2d2      	uxtb	r2, r2
 8015ec0:	f7f8 f88c 	bl	800dfdc <GUI__MixColors>
 8015ec4:	f8dd e020 	ldr.w	lr, [sp, #32]
 8015ec8:	f85b 302e 	ldr.w	r3, [fp, lr, lsl #2]
 8015ecc:	691b      	ldr	r3, [r3, #16]
 8015ece:	681b      	ldr	r3, [r3, #0]
 8015ed0:	e004      	b.n	8015edc <GUI_SPRITE_SetPosition+0x430>
 8015ed2:	9908      	ldr	r1, [sp, #32]
 8015ed4:	f85b 3021 	ldr.w	r3, [fp, r1, lsl #2]
 8015ed8:	691b      	ldr	r3, [r3, #16]
 8015eda:	685b      	ldr	r3, [r3, #4]
 8015edc:	4798      	blx	r3
 8015ede:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015ee0:	9300      	str	r3, [sp, #0]
 8015ee2:	4602      	mov	r2, r0
 8015ee4:	4631      	mov	r1, r6
 8015ee6:	4638      	mov	r0, r7
 8015ee8:	9b06      	ldr	r3, [sp, #24]
 8015eea:	f7ff fdad 	bl	8015a48 <_SetBkIndexBuffered>
 8015eee:	9905      	ldr	r1, [sp, #20]
 8015ef0:	f8c1 8020 	str.w	r8, [r1, #32]
 8015ef4:	9b05      	ldr	r3, [sp, #20]
 8015ef6:	f8dd e080 	ldr.w	lr, [sp, #128]	; 0x80
 8015efa:	9a04      	ldr	r2, [sp, #16]
 8015efc:	4473      	add	r3, lr
 8015efe:	4415      	add	r5, r2
 8015f00:	9305      	str	r3, [sp, #20]
 8015f02:	4417      	add	r7, r2
 8015f04:	e747      	b.n	8015d96 <GUI_SPRITE_SetPosition+0x2ea>
 8015f06:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015f08:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8015f0a:	6818      	ldr	r0, [r3, #0]
 8015f0c:	f7ff fdbe 	bl	8015a8c <_ReleaseBuffer.isra.6>
 8015f10:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015f12:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015f14:	6818      	ldr	r0, [r3, #0]
 8015f16:	f7ff fdb9 	bl	8015a8c <_ReleaseBuffer.isra.6>
 8015f1a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015f1c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8015f1e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015f20:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
 8015f24:	809a      	strh	r2, [r3, #4]
 8015f26:	440a      	add	r2, r1
 8015f28:	3a01      	subs	r2, #1
 8015f2a:	f8a3 e006 	strh.w	lr, [r3, #6]
 8015f2e:	811a      	strh	r2, [r3, #8]
 8015f30:	f10e 32ff 	add.w	r2, lr, #4294967295
 8015f34:	f8dd e078 	ldr.w	lr, [sp, #120]	; 0x78
 8015f38:	9908      	ldr	r1, [sp, #32]
 8015f3a:	4472      	add	r2, lr
 8015f3c:	815a      	strh	r2, [r3, #10]
 8015f3e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8015f40:	4291      	cmp	r1, r2
 8015f42:	d002      	beq.n	8015f4a <GUI_SPRITE_SetPosition+0x49e>
 8015f44:	4b1a      	ldr	r3, [pc, #104]	; (8015fb0 <GUI_SPRITE_SetPosition+0x504>)
 8015f46:	681b      	ldr	r3, [r3, #0]
 8015f48:	745a      	strb	r2, [r3, #17]
 8015f4a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8015f4c:	f7f6 f8cc 	bl	800c0e8 <GUI_MEMDEV_Select>
 8015f50:	a823      	add	r0, sp, #140	; 0x8c
 8015f52:	f7fa fa83 	bl	801045c <GUI_ALLOC_UnlockH>
 8015f56:	e026      	b.n	8015fa6 <GUI_SPRITE_SetPosition+0x4fa>
 8015f58:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8015f5c:	459c      	cmp	ip, r3
 8015f5e:	f73f aece 	bgt.w	8015cfe <GUI_SPRITE_SetPosition+0x252>
 8015f62:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8015f66:	459e      	cmp	lr, r3
 8015f68:	f73f aec9 	bgt.w	8015cfe <GUI_SPRITE_SetPosition+0x252>
 8015f6c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8015f6e:	9b05      	ldr	r3, [sp, #20]
 8015f70:	9100      	str	r1, [sp, #0]
 8015f72:	6a1a      	ldr	r2, [r3, #32]
 8015f74:	9b06      	ldr	r3, [sp, #24]
 8015f76:	4660      	mov	r0, ip
 8015f78:	4671      	mov	r1, lr
 8015f7a:	f7ff fd65 	bl	8015a48 <_SetBkIndexBuffered>
 8015f7e:	e6be      	b.n	8015cfe <GUI_SPRITE_SetPosition+0x252>
 8015f80:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8015f84:	459c      	cmp	ip, r3
 8015f86:	f73f af79 	bgt.w	8015e7c <GUI_SPRITE_SetPosition+0x3d0>
 8015f8a:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8015f8e:	4299      	cmp	r1, r3
 8015f90:	f73f af74 	bgt.w	8015e7c <GUI_SPRITE_SetPosition+0x3d0>
 8015f94:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015f96:	9b05      	ldr	r3, [sp, #20]
 8015f98:	9200      	str	r2, [sp, #0]
 8015f9a:	6a1a      	ldr	r2, [r3, #32]
 8015f9c:	9b06      	ldr	r3, [sp, #24]
 8015f9e:	4660      	mov	r0, ip
 8015fa0:	f7ff fd52 	bl	8015a48 <_SetBkIndexBuffered>
 8015fa4:	e76a      	b.n	8015e7c <GUI_SPRITE_SetPosition+0x3d0>
 8015fa6:	b027      	add	sp, #156	; 0x9c
 8015fa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015fac:	2001b39c 	.word	0x2001b39c
 8015fb0:	20000254 	.word	0x20000254

08015fb4 <GUI_GetBitmapPixelIndexEx>:
 8015fb4:	b510      	push	{r4, lr}
 8015fb6:	2804      	cmp	r0, #4
 8015fb8:	9c02      	ldr	r4, [sp, #8]
 8015fba:	d025      	beq.n	8016008 <GUI_GetBitmapPixelIndexEx+0x54>
 8015fbc:	dc0f      	bgt.n	8015fde <GUI_GetBitmapPixelIndexEx+0x2a>
 8015fbe:	2801      	cmp	r0, #1
 8015fc0:	d017      	beq.n	8015ff2 <GUI_GetBitmapPixelIndexEx+0x3e>
 8015fc2:	2802      	cmp	r0, #2
 8015fc4:	d136      	bne.n	8016034 <GUI_GetBitmapPixelIndexEx+0x80>
 8015fc6:	0898      	lsrs	r0, r3, #2
 8015fc8:	fb04 2101 	mla	r1, r4, r1, r2
 8015fcc:	ea6f 0343 	mvn.w	r3, r3, lsl #1
 8015fd0:	5c08      	ldrb	r0, [r1, r0]
 8015fd2:	f003 0306 	and.w	r3, r3, #6
 8015fd6:	40d8      	lsrs	r0, r3
 8015fd8:	f000 0003 	and.w	r0, r0, #3
 8015fdc:	bd10      	pop	{r4, pc}
 8015fde:	2810      	cmp	r0, #16
 8015fe0:	d01c      	beq.n	801601c <GUI_GetBitmapPixelIndexEx+0x68>
 8015fe2:	2820      	cmp	r0, #32
 8015fe4:	d020      	beq.n	8016028 <GUI_GetBitmapPixelIndexEx+0x74>
 8015fe6:	2808      	cmp	r0, #8
 8015fe8:	d124      	bne.n	8016034 <GUI_GetBitmapPixelIndexEx+0x80>
 8015fea:	fb04 2101 	mla	r1, r4, r1, r2
 8015fee:	5cc8      	ldrb	r0, [r1, r3]
 8015ff0:	bd10      	pop	{r4, pc}
 8015ff2:	08d8      	lsrs	r0, r3, #3
 8015ff4:	fb04 2101 	mla	r1, r4, r1, r2
 8015ff8:	43db      	mvns	r3, r3
 8015ffa:	5c08      	ldrb	r0, [r1, r0]
 8015ffc:	f003 0307 	and.w	r3, r3, #7
 8016000:	40d8      	lsrs	r0, r3
 8016002:	f000 0001 	and.w	r0, r0, #1
 8016006:	bd10      	pop	{r4, pc}
 8016008:	0858      	lsrs	r0, r3, #1
 801600a:	fb04 2101 	mla	r1, r4, r1, r2
 801600e:	07db      	lsls	r3, r3, #31
 8016010:	5c08      	ldrb	r0, [r1, r0]
 8016012:	bf4c      	ite	mi
 8016014:	f000 000f 	andmi.w	r0, r0, #15
 8016018:	0900      	lsrpl	r0, r0, #4
 801601a:	bd10      	pop	{r4, pc}
 801601c:	1049      	asrs	r1, r1, #1
 801601e:	fb04 3301 	mla	r3, r4, r1, r3
 8016022:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
 8016026:	bd10      	pop	{r4, pc}
 8016028:	1089      	asrs	r1, r1, #2
 801602a:	fb04 3301 	mla	r3, r4, r1, r3
 801602e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8016032:	bd10      	pop	{r4, pc}
 8016034:	2000      	movs	r0, #0
 8016036:	bd10      	pop	{r4, pc}

08016038 <GUI_GetBitmapPixelIndex>:
 8016038:	b513      	push	{r0, r1, r4, lr}
 801603a:	460b      	mov	r3, r1
 801603c:	4604      	mov	r4, r0
 801603e:	b130      	cbz	r0, 801604e <GUI_GetBitmapPixelIndex+0x16>
 8016040:	88c0      	ldrh	r0, [r0, #6]
 8016042:	88a1      	ldrh	r1, [r4, #4]
 8016044:	9200      	str	r2, [sp, #0]
 8016046:	68a2      	ldr	r2, [r4, #8]
 8016048:	f7ff ffb4 	bl	8015fb4 <GUI_GetBitmapPixelIndexEx>
 801604c:	e7ff      	b.n	801604e <GUI_GetBitmapPixelIndex+0x16>
 801604e:	b002      	add	sp, #8
 8016050:	bd10      	pop	{r4, pc}
	...

08016054 <GUI_DrawPixel>:
 8016054:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8016056:	4e0f      	ldr	r6, [pc, #60]	; (8016094 <GUI_DrawPixel+0x40>)
 8016058:	6833      	ldr	r3, [r6, #0]
 801605a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 801605c:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 801605e:	4405      	add	r5, r0
 8016060:	b2ab      	uxth	r3, r5
 8016062:	440c      	add	r4, r1
 8016064:	f8ad 3004 	strh.w	r3, [sp, #4]
 8016068:	f8ad 3000 	strh.w	r3, [sp]
 801606c:	4668      	mov	r0, sp
 801606e:	b2a3      	uxth	r3, r4
 8016070:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016074:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016078:	f7f4 fd92 	bl	800aba0 <WM__InitIVRSearch>
 801607c:	b140      	cbz	r0, 8016090 <GUI_DrawPixel+0x3c>
 801607e:	6833      	ldr	r3, [r6, #0]
 8016080:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8016082:	4628      	mov	r0, r5
 8016084:	685b      	ldr	r3, [r3, #4]
 8016086:	4621      	mov	r1, r4
 8016088:	4798      	blx	r3
 801608a:	f7f4 fcc7 	bl	800aa1c <WM__GetNextIVR>
 801608e:	e7f5      	b.n	801607c <GUI_DrawPixel+0x28>
 8016090:	b002      	add	sp, #8
 8016092:	bd70      	pop	{r4, r5, r6, pc}
 8016094:	20000254 	.word	0x20000254

08016098 <GUI_CalcColorDist>:
 8016098:	b2cb      	uxtb	r3, r1
 801609a:	b2c2      	uxtb	r2, r0
 801609c:	1ad2      	subs	r2, r2, r3
 801609e:	b292      	uxth	r2, r2
 80160a0:	b293      	uxth	r3, r2
 80160a2:	b530      	push	{r4, r5, lr}
 80160a4:	041c      	lsls	r4, r3, #16
 80160a6:	bf48      	it	mi
 80160a8:	4253      	negmi	r3, r2
 80160aa:	f3c1 2507 	ubfx	r5, r1, #8, #8
 80160ae:	f3c0 2207 	ubfx	r2, r0, #8, #8
 80160b2:	ebc5 0202 	rsb	r2, r5, r2
 80160b6:	bf48      	it	mi
 80160b8:	b29b      	uxthmi	r3, r3
 80160ba:	b292      	uxth	r2, r2
 80160bc:	0c09      	lsrs	r1, r1, #16
 80160be:	fb13 f403 	smulbb	r4, r3, r3
 80160c2:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
 80160c6:	b293      	uxth	r3, r2
 80160c8:	041d      	lsls	r5, r3, #16
 80160ca:	b289      	uxth	r1, r1
 80160cc:	b288      	uxth	r0, r1
 80160ce:	bf44      	itt	mi
 80160d0:	4253      	negmi	r3, r2
 80160d2:	b29b      	uxthmi	r3, r3
 80160d4:	0402      	lsls	r2, r0, #16
 80160d6:	bf48      	it	mi
 80160d8:	4248      	negmi	r0, r1
 80160da:	fb13 4303 	smlabb	r3, r3, r3, r4
 80160de:	bf48      	it	mi
 80160e0:	b280      	uxthmi	r0, r0
 80160e2:	fb00 3000 	mla	r0, r0, r0, r3
 80160e6:	bd30      	pop	{r4, r5, pc}

080160e8 <__errno>:
 80160e8:	4b01      	ldr	r3, [pc, #4]	; (80160f0 <__errno+0x8>)
 80160ea:	6818      	ldr	r0, [r3, #0]
 80160ec:	4770      	bx	lr
 80160ee:	bf00      	nop
 80160f0:	200003e0 	.word	0x200003e0

080160f4 <__libc_init_array>:
 80160f4:	b570      	push	{r4, r5, r6, lr}
 80160f6:	4e0d      	ldr	r6, [pc, #52]	; (801612c <__libc_init_array+0x38>)
 80160f8:	4c0d      	ldr	r4, [pc, #52]	; (8016130 <__libc_init_array+0x3c>)
 80160fa:	1ba4      	subs	r4, r4, r6
 80160fc:	10a4      	asrs	r4, r4, #2
 80160fe:	2500      	movs	r5, #0
 8016100:	42a5      	cmp	r5, r4
 8016102:	d109      	bne.n	8016118 <__libc_init_array+0x24>
 8016104:	4e0b      	ldr	r6, [pc, #44]	; (8016134 <__libc_init_array+0x40>)
 8016106:	4c0c      	ldr	r4, [pc, #48]	; (8016138 <__libc_init_array+0x44>)
 8016108:	f000 f926 	bl	8016358 <_init>
 801610c:	1ba4      	subs	r4, r4, r6
 801610e:	10a4      	asrs	r4, r4, #2
 8016110:	2500      	movs	r5, #0
 8016112:	42a5      	cmp	r5, r4
 8016114:	d105      	bne.n	8016122 <__libc_init_array+0x2e>
 8016116:	bd70      	pop	{r4, r5, r6, pc}
 8016118:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801611c:	4798      	blx	r3
 801611e:	3501      	adds	r5, #1
 8016120:	e7ee      	b.n	8016100 <__libc_init_array+0xc>
 8016122:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8016126:	4798      	blx	r3
 8016128:	3501      	adds	r5, #1
 801612a:	e7f2      	b.n	8016112 <__libc_init_array+0x1e>
 801612c:	08018330 	.word	0x08018330
 8016130:	08018330 	.word	0x08018330
 8016134:	08018330 	.word	0x08018330
 8016138:	08018334 	.word	0x08018334

0801613c <malloc>:
 801613c:	4b02      	ldr	r3, [pc, #8]	; (8016148 <malloc+0xc>)
 801613e:	4601      	mov	r1, r0
 8016140:	6818      	ldr	r0, [r3, #0]
 8016142:	f000 b895 	b.w	8016270 <_malloc_r>
 8016146:	bf00      	nop
 8016148:	200003e0 	.word	0x200003e0

0801614c <free>:
 801614c:	4b02      	ldr	r3, [pc, #8]	; (8016158 <free+0xc>)
 801614e:	4601      	mov	r1, r0
 8016150:	6818      	ldr	r0, [r3, #0]
 8016152:	f000 b83f 	b.w	80161d4 <_free_r>
 8016156:	bf00      	nop
 8016158:	200003e0 	.word	0x200003e0

0801615c <memcmp>:
 801615c:	b530      	push	{r4, r5, lr}
 801615e:	2400      	movs	r4, #0
 8016160:	42a2      	cmp	r2, r4
 8016162:	d101      	bne.n	8016168 <memcmp+0xc>
 8016164:	2000      	movs	r0, #0
 8016166:	e007      	b.n	8016178 <memcmp+0x1c>
 8016168:	5d03      	ldrb	r3, [r0, r4]
 801616a:	3401      	adds	r4, #1
 801616c:	190d      	adds	r5, r1, r4
 801616e:	f815 5c01 	ldrb.w	r5, [r5, #-1]
 8016172:	42ab      	cmp	r3, r5
 8016174:	d0f4      	beq.n	8016160 <memcmp+0x4>
 8016176:	1b58      	subs	r0, r3, r5
 8016178:	bd30      	pop	{r4, r5, pc}

0801617a <memcpy>:
 801617a:	b510      	push	{r4, lr}
 801617c:	1e43      	subs	r3, r0, #1
 801617e:	440a      	add	r2, r1
 8016180:	4291      	cmp	r1, r2
 8016182:	d100      	bne.n	8016186 <memcpy+0xc>
 8016184:	bd10      	pop	{r4, pc}
 8016186:	f811 4b01 	ldrb.w	r4, [r1], #1
 801618a:	f803 4f01 	strb.w	r4, [r3, #1]!
 801618e:	e7f7      	b.n	8016180 <memcpy+0x6>

08016190 <memmove>:
 8016190:	4288      	cmp	r0, r1
 8016192:	b510      	push	{r4, lr}
 8016194:	eb01 0302 	add.w	r3, r1, r2
 8016198:	d807      	bhi.n	80161aa <memmove+0x1a>
 801619a:	1e42      	subs	r2, r0, #1
 801619c:	4299      	cmp	r1, r3
 801619e:	d00a      	beq.n	80161b6 <memmove+0x26>
 80161a0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80161a4:	f802 4f01 	strb.w	r4, [r2, #1]!
 80161a8:	e7f8      	b.n	801619c <memmove+0xc>
 80161aa:	4283      	cmp	r3, r0
 80161ac:	d9f5      	bls.n	801619a <memmove+0xa>
 80161ae:	1881      	adds	r1, r0, r2
 80161b0:	1ad2      	subs	r2, r2, r3
 80161b2:	42d3      	cmn	r3, r2
 80161b4:	d100      	bne.n	80161b8 <memmove+0x28>
 80161b6:	bd10      	pop	{r4, pc}
 80161b8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80161bc:	f801 4d01 	strb.w	r4, [r1, #-1]!
 80161c0:	e7f7      	b.n	80161b2 <memmove+0x22>

080161c2 <memset>:
 80161c2:	4402      	add	r2, r0
 80161c4:	4603      	mov	r3, r0
 80161c6:	4293      	cmp	r3, r2
 80161c8:	d100      	bne.n	80161cc <memset+0xa>
 80161ca:	4770      	bx	lr
 80161cc:	f803 1b01 	strb.w	r1, [r3], #1
 80161d0:	e7f9      	b.n	80161c6 <memset+0x4>
	...

080161d4 <_free_r>:
 80161d4:	b538      	push	{r3, r4, r5, lr}
 80161d6:	4605      	mov	r5, r0
 80161d8:	2900      	cmp	r1, #0
 80161da:	d045      	beq.n	8016268 <_free_r+0x94>
 80161dc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80161e0:	1f0c      	subs	r4, r1, #4
 80161e2:	2b00      	cmp	r3, #0
 80161e4:	bfb8      	it	lt
 80161e6:	18e4      	addlt	r4, r4, r3
 80161e8:	f000 f8b4 	bl	8016354 <__malloc_lock>
 80161ec:	4a1f      	ldr	r2, [pc, #124]	; (801626c <_free_r+0x98>)
 80161ee:	6813      	ldr	r3, [r2, #0]
 80161f0:	4610      	mov	r0, r2
 80161f2:	b933      	cbnz	r3, 8016202 <_free_r+0x2e>
 80161f4:	6063      	str	r3, [r4, #4]
 80161f6:	6014      	str	r4, [r2, #0]
 80161f8:	4628      	mov	r0, r5
 80161fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80161fe:	f000 b8aa 	b.w	8016356 <__malloc_unlock>
 8016202:	42a3      	cmp	r3, r4
 8016204:	d90c      	bls.n	8016220 <_free_r+0x4c>
 8016206:	6821      	ldr	r1, [r4, #0]
 8016208:	1862      	adds	r2, r4, r1
 801620a:	4293      	cmp	r3, r2
 801620c:	bf04      	itt	eq
 801620e:	681a      	ldreq	r2, [r3, #0]
 8016210:	685b      	ldreq	r3, [r3, #4]
 8016212:	6063      	str	r3, [r4, #4]
 8016214:	bf04      	itt	eq
 8016216:	1852      	addeq	r2, r2, r1
 8016218:	6022      	streq	r2, [r4, #0]
 801621a:	6004      	str	r4, [r0, #0]
 801621c:	e7ec      	b.n	80161f8 <_free_r+0x24>
 801621e:	4613      	mov	r3, r2
 8016220:	685a      	ldr	r2, [r3, #4]
 8016222:	b10a      	cbz	r2, 8016228 <_free_r+0x54>
 8016224:	42a2      	cmp	r2, r4
 8016226:	d9fa      	bls.n	801621e <_free_r+0x4a>
 8016228:	6819      	ldr	r1, [r3, #0]
 801622a:	1858      	adds	r0, r3, r1
 801622c:	42a0      	cmp	r0, r4
 801622e:	d10b      	bne.n	8016248 <_free_r+0x74>
 8016230:	6820      	ldr	r0, [r4, #0]
 8016232:	4401      	add	r1, r0
 8016234:	1858      	adds	r0, r3, r1
 8016236:	4282      	cmp	r2, r0
 8016238:	6019      	str	r1, [r3, #0]
 801623a:	d1dd      	bne.n	80161f8 <_free_r+0x24>
 801623c:	6810      	ldr	r0, [r2, #0]
 801623e:	6852      	ldr	r2, [r2, #4]
 8016240:	605a      	str	r2, [r3, #4]
 8016242:	4401      	add	r1, r0
 8016244:	6019      	str	r1, [r3, #0]
 8016246:	e7d7      	b.n	80161f8 <_free_r+0x24>
 8016248:	d902      	bls.n	8016250 <_free_r+0x7c>
 801624a:	230c      	movs	r3, #12
 801624c:	602b      	str	r3, [r5, #0]
 801624e:	e7d3      	b.n	80161f8 <_free_r+0x24>
 8016250:	6820      	ldr	r0, [r4, #0]
 8016252:	1821      	adds	r1, r4, r0
 8016254:	428a      	cmp	r2, r1
 8016256:	bf04      	itt	eq
 8016258:	6811      	ldreq	r1, [r2, #0]
 801625a:	6852      	ldreq	r2, [r2, #4]
 801625c:	6062      	str	r2, [r4, #4]
 801625e:	bf04      	itt	eq
 8016260:	1809      	addeq	r1, r1, r0
 8016262:	6021      	streq	r1, [r4, #0]
 8016264:	605c      	str	r4, [r3, #4]
 8016266:	e7c7      	b.n	80161f8 <_free_r+0x24>
 8016268:	bd38      	pop	{r3, r4, r5, pc}
 801626a:	bf00      	nop
 801626c:	2001975c 	.word	0x2001975c

08016270 <_malloc_r>:
 8016270:	b570      	push	{r4, r5, r6, lr}
 8016272:	1ccd      	adds	r5, r1, #3
 8016274:	f025 0503 	bic.w	r5, r5, #3
 8016278:	3508      	adds	r5, #8
 801627a:	2d0c      	cmp	r5, #12
 801627c:	bf38      	it	cc
 801627e:	250c      	movcc	r5, #12
 8016280:	2d00      	cmp	r5, #0
 8016282:	4606      	mov	r6, r0
 8016284:	db01      	blt.n	801628a <_malloc_r+0x1a>
 8016286:	42a9      	cmp	r1, r5
 8016288:	d903      	bls.n	8016292 <_malloc_r+0x22>
 801628a:	230c      	movs	r3, #12
 801628c:	6033      	str	r3, [r6, #0]
 801628e:	2000      	movs	r0, #0
 8016290:	bd70      	pop	{r4, r5, r6, pc}
 8016292:	f000 f85f 	bl	8016354 <__malloc_lock>
 8016296:	4a21      	ldr	r2, [pc, #132]	; (801631c <_malloc_r+0xac>)
 8016298:	6814      	ldr	r4, [r2, #0]
 801629a:	4621      	mov	r1, r4
 801629c:	b991      	cbnz	r1, 80162c4 <_malloc_r+0x54>
 801629e:	4c20      	ldr	r4, [pc, #128]	; (8016320 <_malloc_r+0xb0>)
 80162a0:	6823      	ldr	r3, [r4, #0]
 80162a2:	b91b      	cbnz	r3, 80162ac <_malloc_r+0x3c>
 80162a4:	4630      	mov	r0, r6
 80162a6:	f000 f83d 	bl	8016324 <_sbrk_r>
 80162aa:	6020      	str	r0, [r4, #0]
 80162ac:	4629      	mov	r1, r5
 80162ae:	4630      	mov	r0, r6
 80162b0:	f000 f838 	bl	8016324 <_sbrk_r>
 80162b4:	1c43      	adds	r3, r0, #1
 80162b6:	d124      	bne.n	8016302 <_malloc_r+0x92>
 80162b8:	230c      	movs	r3, #12
 80162ba:	6033      	str	r3, [r6, #0]
 80162bc:	4630      	mov	r0, r6
 80162be:	f000 f84a 	bl	8016356 <__malloc_unlock>
 80162c2:	e7e4      	b.n	801628e <_malloc_r+0x1e>
 80162c4:	680b      	ldr	r3, [r1, #0]
 80162c6:	1b5b      	subs	r3, r3, r5
 80162c8:	d418      	bmi.n	80162fc <_malloc_r+0x8c>
 80162ca:	2b0b      	cmp	r3, #11
 80162cc:	d90f      	bls.n	80162ee <_malloc_r+0x7e>
 80162ce:	600b      	str	r3, [r1, #0]
 80162d0:	50cd      	str	r5, [r1, r3]
 80162d2:	18cc      	adds	r4, r1, r3
 80162d4:	4630      	mov	r0, r6
 80162d6:	f000 f83e 	bl	8016356 <__malloc_unlock>
 80162da:	f104 000b 	add.w	r0, r4, #11
 80162de:	1d23      	adds	r3, r4, #4
 80162e0:	f020 0007 	bic.w	r0, r0, #7
 80162e4:	1ac3      	subs	r3, r0, r3
 80162e6:	d0d3      	beq.n	8016290 <_malloc_r+0x20>
 80162e8:	425a      	negs	r2, r3
 80162ea:	50e2      	str	r2, [r4, r3]
 80162ec:	e7d0      	b.n	8016290 <_malloc_r+0x20>
 80162ee:	428c      	cmp	r4, r1
 80162f0:	684b      	ldr	r3, [r1, #4]
 80162f2:	bf16      	itet	ne
 80162f4:	6063      	strne	r3, [r4, #4]
 80162f6:	6013      	streq	r3, [r2, #0]
 80162f8:	460c      	movne	r4, r1
 80162fa:	e7eb      	b.n	80162d4 <_malloc_r+0x64>
 80162fc:	460c      	mov	r4, r1
 80162fe:	6849      	ldr	r1, [r1, #4]
 8016300:	e7cc      	b.n	801629c <_malloc_r+0x2c>
 8016302:	1cc4      	adds	r4, r0, #3
 8016304:	f024 0403 	bic.w	r4, r4, #3
 8016308:	42a0      	cmp	r0, r4
 801630a:	d005      	beq.n	8016318 <_malloc_r+0xa8>
 801630c:	1a21      	subs	r1, r4, r0
 801630e:	4630      	mov	r0, r6
 8016310:	f000 f808 	bl	8016324 <_sbrk_r>
 8016314:	3001      	adds	r0, #1
 8016316:	d0cf      	beq.n	80162b8 <_malloc_r+0x48>
 8016318:	6025      	str	r5, [r4, #0]
 801631a:	e7db      	b.n	80162d4 <_malloc_r+0x64>
 801631c:	2001975c 	.word	0x2001975c
 8016320:	20019760 	.word	0x20019760

08016324 <_sbrk_r>:
 8016324:	b538      	push	{r3, r4, r5, lr}
 8016326:	4c06      	ldr	r4, [pc, #24]	; (8016340 <_sbrk_r+0x1c>)
 8016328:	2300      	movs	r3, #0
 801632a:	4605      	mov	r5, r0
 801632c:	4608      	mov	r0, r1
 801632e:	6023      	str	r3, [r4, #0]
 8016330:	f7f1 f9b4 	bl	800769c <_sbrk>
 8016334:	1c43      	adds	r3, r0, #1
 8016336:	d102      	bne.n	801633e <_sbrk_r+0x1a>
 8016338:	6823      	ldr	r3, [r4, #0]
 801633a:	b103      	cbz	r3, 801633e <_sbrk_r+0x1a>
 801633c:	602b      	str	r3, [r5, #0]
 801633e:	bd38      	pop	{r3, r4, r5, pc}
 8016340:	2001b4a0 	.word	0x2001b4a0

08016344 <strcpy>:
 8016344:	4603      	mov	r3, r0
 8016346:	f811 2b01 	ldrb.w	r2, [r1], #1
 801634a:	f803 2b01 	strb.w	r2, [r3], #1
 801634e:	2a00      	cmp	r2, #0
 8016350:	d1f9      	bne.n	8016346 <strcpy+0x2>
 8016352:	4770      	bx	lr

08016354 <__malloc_lock>:
 8016354:	4770      	bx	lr

08016356 <__malloc_unlock>:
 8016356:	4770      	bx	lr

08016358 <_init>:
 8016358:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801635a:	bf00      	nop
 801635c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801635e:	bc08      	pop	{r3}
 8016360:	469e      	mov	lr, r3
 8016362:	4770      	bx	lr

08016364 <_fini>:
 8016364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016366:	bf00      	nop
 8016368:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801636a:	bc08      	pop	{r3}
 801636c:	469e      	mov	lr, r3
 801636e:	4770      	bx	lr
